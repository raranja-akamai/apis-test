{
  "components": {
    "parameters": {
      "contract-id-query": {
        "description": "The Akamai contract identifier for your Enterprise Application Access product.",
        "in": "query",
        "name": "contractId",
        "required": true,
        "schema": {
          "example": "K-0N7RAK7",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/contract-id-query.yaml"
        }
      },
      "expand-query": {
        "description": "When set to `true`, includes additional members in the request.",
        "in": "query",
        "name": "expand",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/expand-query.yaml"
        }
      },
      "idp-id-path": {
        "description": "A unique identifier for the IDP.",
        "in": "path",
        "name": "idp_id",
        "required": true,
        "schema": {
          "example": "ojxkXzwyQZiBkoRee0XcnA",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/idp-id-path.yaml"
        }
      },
      "idpdirectory-id-path": {
        "description": "A unique identifier for each IDP directory.",
        "in": "path",
        "name": "idpdirectory_id",
        "required": true,
        "schema": {
          "example": "xz_Hq325SNeSno6Wss9Phg",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/idpdirectory-id-path.yaml"
        }
      },
      "pageable-limit": {
        "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
        "in": "query",
        "name": "limit",
        "schema": {
          "example": 30,
          "maximum": 250,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/pageable-limit.yaml"
        }
      },
      "pageable-offset": {
        "description": "Used for pagination. The first member of the underlying object list for the response.",
        "in": "query",
        "name": "offset",
        "schema": {
          "example": 10,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/pageable-offset.yaml"
        }
      }
    },
    "responses": {
      "400": {
        "content": {
          "application/problem+json": {
            "example": {
              "code": "bad.request",
              "details": [
                {
                  "code": "bad.request",
                  "message": "The server cannot or will not process the request due to an apparent client error"
                }
              ],
              "status": 400,
              "title": "Bad Request"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                    "properties": {
                      "detail": {
                        "description": "Diagnostic instructions to locate and fix the problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "instance": {
                        "description": "Unique value generated with each API call.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The HTTP status code that categorizes this error case.",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                      },
                      "title": {
                        "description": "A summary of each error case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies each error case.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "status",
                      "detail",
                      "instance"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/problem-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
        "x-akamai": {
          "file-path": "errors/400.yaml"
        }
      },
      "401": {
        "content": {
          "application/problem+json": {
            "example": {
              "code": "unauthorized",
              "details": [
                {
                  "code": "invalid.data",
                  "message": "The request requires authentication"
                }
              ],
              "status": 401,
              "title": "Unauthorized"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                    "properties": {
                      "detail": {
                        "description": "Diagnostic instructions to locate and fix the problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "instance": {
                        "description": "Unique value generated with each API call.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The HTTP status code that categorizes this error case.",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                      },
                      "title": {
                        "description": "A summary of each error case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies each error case.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "status",
                      "detail",
                      "instance"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/problem-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
        "x-akamai": {
          "file-path": "errors/401.yaml"
        }
      },
      "403": {
        "content": {
          "application/problem+json": {
            "example": {
              "code": "forbidden",
              "details": [
                {
                  "code": "invalid.role",
                  "message": "User is not authorized"
                }
              ],
              "status": 403,
              "title": "Forbidden"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                    "properties": {
                      "detail": {
                        "description": "Diagnostic instructions to locate and fix the problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "instance": {
                        "description": "Unique value generated with each API call.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The HTTP status code that categorizes this error case.",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                      },
                      "title": {
                        "description": "A summary of each error case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies each error case.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "status",
                      "detail",
                      "instance"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/problem-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
        "x-akamai": {
          "file-path": "errors/403.yaml"
        }
      },
      "404": {
        "content": {
          "application/problem+json": {
            "example": {
              "code": "not.found",
              "details": [
                {
                  "code": "invalid.data",
                  "message": "The requested resource could not be found"
                }
              ],
              "status": 404,
              "title": "Not Found"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                    "properties": {
                      "detail": {
                        "description": "Diagnostic instructions to locate and fix the problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "instance": {
                        "description": "Unique value generated with each API call.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The HTTP status code that categorizes this error case.",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                      },
                      "title": {
                        "description": "A summary of each error case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies each error case.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "status",
                      "detail",
                      "instance"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/problem-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
        "x-akamai": {
          "file-path": "errors/404.yaml"
        }
      },
      "405": {
        "content": {
          "application/problem+json": {
            "example": {
              "code": "method.not.allowed",
              "details": [
                {
                  "code": "method.not.supported",
                  "message": "A request method is not supported for the requested resource"
                }
              ],
              "status": 405,
              "title": "Method Not Allowed"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                    "properties": {
                      "detail": {
                        "description": "Diagnostic instructions to locate and fix the problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "instance": {
                        "description": "Unique value generated with each API call.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The HTTP status code that categorizes this error case.",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                      },
                      "title": {
                        "description": "A summary of each error case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies each error case.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "status",
                      "detail",
                      "instance"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/problem-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
        "x-akamai": {
          "file-path": "errors/405.yaml"
        }
      },
      "415": {
        "content": {
          "application/problem+json": {
            "example": {
              "details": [
                {
                  "code": "unsupported.media.type",
                  "message": "The request entity has a media type which the server or resource doesn't support"
                }
              ],
              "status": 415,
              "title": "Unsupported Media Type"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                    "properties": {
                      "detail": {
                        "description": "Diagnostic instructions to locate and fix the problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "instance": {
                        "description": "Unique value generated with each API call.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The HTTP status code that categorizes this error case.",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                      },
                      "title": {
                        "description": "A summary of each error case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies each error case.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "status",
                      "detail",
                      "instance"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/problem-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "uniqueItems": true
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
        "x-akamai": {
          "file-path": "errors/415.yaml"
        }
      }
    },
    "schemas": {
      "create-idpdirectory-200": {
        "items": {
          "additionalProperties": false,
          "properties": {
            "directory": {
              "description": "The unique ID of the directory created.",
              "type": "string"
            },
            "resource": {
              "description": "The IDP directory resource name.",
              "minLength": 1,
              "type": "string"
            },
            "resource_uri": {
              "additionalProperties": false,
              "description": "Specifies the location of various IDP directory resources.",
              "properties": {
                "directory": {
                  "description": "The URL for the directory.",
                  "minLength": 1,
                  "type": "string"
                },
                "groups": {
                  "description": "The URL for group details.",
                  "minLength": 1,
                  "type": "string"
                },
                "href": {
                  "description": "The URL for IDP directory details.",
                  "minLength": 1,
                  "type": "string"
                },
                "idp": {
                  "description": "The URL for the IDP.",
                  "minLength": 1,
                  "type": "string"
                },
                "users": {
                  "description": "The URL for the list of users.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "directory",
                "href",
                "idp"
              ],
              "type": "object"
            },
            "uuid_url": {
              "description": "A unique identifier for the directory.",
              "minLength": 1,
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/create-idpdirectory-200.yaml"
        }
      },
      "g2o": {
        "additionalProperties": false,
        "description": "Ghost to Origin (G2O) credentials.",
        "properties": {
          "g2o_enabled": {
            "description": "Enables G2O on an application configuration. Either `true` or `false`.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "g2o_key": {
            "description": "The G2O key to share with your ION configuration.",
            "minLength": 1,
            "type": "string"
          },
          "g2o_nonce": {
            "description": "The G2O nonce to share with your ION configuration.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "g2o_enabled",
          "g2o_key",
          "g2o_nonce"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/g2o.yaml"
        }
      },
      "idp": {
        "additionalProperties": false,
        "description": "Identity provider (IDP) configuration settings.",
        "properties": {
          "app_count": {
            "description": "Count of applications associated with the IDP.",
            "type": "integer"
          },
          "attribute_map": {
            "additionalProperties": false,
            "description": "Additional attributes to include with the `access_token` response.",
            "properties": {
              "eaa.demo": {
                "description": "The user's EAA demo name.",
                "type": "string"
              },
              "eaa.test": {
                "description": "The user's EAA test name.",
                "type": "string"
              },
              "user.countryCode": {
                "description": "The user's country code.",
                "minLength": 1,
                "type": "string"
              },
              "user.email": {
                "description": "The user's email address.",
                "type": "string"
              },
              "user.firstName": {
                "description": "The user's first name.",
                "minLength": 1,
                "type": "string"
              },
              "user.groups": {
                "description": "The groups the user belongs to.",
                "type": "string"
              },
              "user.lastName": {
                "description": "The user's last name.",
                "minLength": 1,
                "type": "string"
              },
              "user.netbios": {
                "description": "The user's NetBIOS name.",
                "minLength": 0,
                "type": "string"
              },
              "user.persistentId": {
                "description": "The user persistent ID.",
                "minLength": 1,
                "type": "string"
              },
              "user.phoneNumber": {
                "description": "The user's phone number.",
                "minLength": 1,
                "type": "string"
              },
              "user.samAccountName": {
                "description": "The user's Security Account Manager (SAM) account name.",
                "minLength": 1,
                "type": "string"
              },
              "user.userName": {
                "description": "The username.",
                "type": "string"
              },
              "user.userPrincipleName": {
                "description": "The user's principle name.",
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "auth_request_signed": {
            "description": "Whether the authentication request is signed.",
            "type": "boolean"
          },
          "auth_response_encrypt": {
            "description": "Enables authentication response encryption.",
            "type": "boolean"
          },
          "background_image": {
            "description": "The name of the background image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "background_image_file_name": {
            "description": "The filename of the portal background image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "cert": {
            "description": "Body of the certificate.",
            "nullable": true,
            "type": "string"
          },
          "client_cert": {
            "description": "The client certificate.",
            "nullable": true,
            "type": "string"
          },
          "client_principle_name": {
            "description": "The principle name expected by the server in order to authenticate a client request.",
            "minLength": 1,
            "type": "string"
          },
          "company_id": {
            "description": "The company ID.",
            "minLength": 1,
            "type": "string"
          },
          "cookie_expiry": {
            "description": "The number of minutes the session cookie expires.",
            "minimum": 0,
            "type": "integer"
          },
          "created_at": {
            "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
            "type": "string"
          },
          "default_language": {
            "description": "The default language.",
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "description": "A description of the IDP configuration.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "directory_count": {
            "description": "The directory count.",
            "type": "integer"
          },
          "directory_list": {
            "description": "Directory IDs for the IDP.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_added": {
            "description": "Whether the authentication request includes the DNS information.",
            "type": "boolean"
          },
          "domain_suffix": {
            "description": "The domain suffix. For example, `.com`.",
            "minLength": 0,
            "type": "string"
          },
          "domains": {
            "description": "Domains for the IDP.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "enable_access_client": {
            "description": "Enables the access client.",
            "type": "boolean"
          },
          "enable_mfa": {
            "description": "Enables multifactor authentication.",
            "type": "boolean"
          },
          "favicon_image": {
            "description": "The filename of the portal favicon image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "helpdesk_email": {
            "description": "The email address for contacting helpdesk with issues.",
            "type": "string"
          },
          "idp_deployed": {
            "description": "Whether the IDP is deployed.",
            "type": "boolean"
          },
          "idp_operational": {
            "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "idp_status": {
            "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer"
          },
          "idp_type": {
            "default": 1,
            "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "type": "integer"
          },
          "iwa_keytab": {
            "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lockout_interval": {
            "default": 15,
            "description": "The number of minutes to lock out the user, `15` by default.",
            "minimum": 0,
            "type": "integer"
          },
          "login_cname": {
            "description": "The login cname URL.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_dialin_server": {
            "description": "The URL of the login dialin server.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_domain": {
            "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
            "enum": [
              1,
              2
            ],
            "nullable": true,
            "type": "integer"
          },
          "login_host": {
            "description": "The service provider login host.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_lockout": {
            "default": "off",
            "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
            "enum": [
              "on",
              "off"
            ],
            "type": "string"
          },
          "login_suffix": {
            "description": "The login suffix. For example, `.com`.",
            "minLength": 0,
            "type": "string"
          },
          "logo": {
            "description": "The name of the portal logo.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "logo_file_name": {
            "description": "The portal logo filename.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "logout_url": {
            "description": "The single logout URL for SSO.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "max_login_failures": {
            "default": 5,
            "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
            "minimum": 1,
            "type": "integer"
          },
          "metadata": {
            "description": "The metadata of the SAML type IDP.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "mfa_settings": {
            "additionalProperties": false,
            "description": "Multifactor authentication settings for the IDP configuration.",
            "properties": {
              "duo_akey": {
                "description": "The Duo authentication key.",
                "type": "string"
              },
              "duo_api_hostname": {
                "description": "The hostname of the Duo API to contact for authentication.",
                "type": "string"
              },
              "duo_integration_key": {
                "description": "The unique client ID to integrate with Duo Security's MFA service.",
                "type": "string"
              },
              "duo_secret_key": {
                "description": "The secret key for Duo MFA requests.",
                "type": "string"
              },
              "duo_umap": {
                "description": "The user email used by Duo to map authentication requests.",
                "type": "string"
              },
              "idp_notification_org_name": {
                "description": "The name of the IDP authentication organization to notify.",
                "type": "string"
              },
              "mfa_email_immutable": {
                "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_email_preset": {
                "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_duo": {
                "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_email": {
                "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_sms": {
                "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_totp": {
                "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_pci_dss": {
                "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_sms_immutable": {
                "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_sms_preset": {
                "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              }
            },
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/idp-mfa-settings.yaml"
            }
          },
          "modified_at": {
            "description": "The ISO 8601 timestamp marking the last modification.",
            "nullable": true,
            "type": "string"
          },
          "multilang_fields": {
            "description": "Multi language field for SAML message configuration.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the IDP configuration.",
            "minLength": 1,
            "type": "string"
          },
          "ocsp": {
            "description": "Unicode string data.",
            "nullable": true,
            "type": "string"
          },
          "oidcclients": {
            "description": "The unique ID of the OIDC client.",
            "type": "string"
          },
          "pop": {
            "description": "The pop resource URI.",
            "minLength": 1,
            "type": "string"
          },
          "popName": {
            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
            "type": "string"
          },
          "resource": {
            "description": "The IDP directory resource name.",
            "minLength": 1,
            "type": "string"
          },
          "resource_uri": {
            "additionalProperties": false,
            "description": "Specifies the location of various IDP resources.",
            "properties": {
              "directories": {
                "description": "The directories resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "groups": {
                "description": "The groups resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "href": {
                "description": "The href resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "idp": {
                "description": "The IDP resource URI.",
                "type": "string"
              },
              "pop": {
                "description": "The pop resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "services": {
                "description": "The services resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "sites": {
                "description": "The sites resource URI.",
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "saml_url": {
            "description": "The URL of the service provider SAML interface.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "settings": {
            "additionalProperties": false,
            "description": "Login portal settings for an IDP configuration.",
            "properties": {
              "client_cert_auth": {
                "description": "Enables client certificate authorization. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_auth_onboard_criteria": {
                "description": "The client onboarding criteria for the IDP.",
                "type": "string"
              },
              "client_cert_auth_onboard_url": {
                "description": "Enter the URL where the user is redirected if no certificate is provided.",
                "type": "string"
              },
              "client_cert_auth_validation_method": {
                "description": "The client certificate validation method. Either `none` or `ocsp`.",
                "enum": [
                  "none",
                  "ocsp"
                ],
                "nullable": true,
                "type": "string"
              },
              "client_cert_auth_validation_responder": {
                "description": "The URL of the OCSP validation responder. ",
                "type": "string"
              },
              "client_cert_exp_warn_interval": {
                "description": "The warning interval for certificate expiration in days.",
                "type": "integer"
              },
              "client_cert_identity_username": {
                "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_renewal": {
                "description": "Enables client certificate renewal. ",
                "type": "string"
              },
              "client_cert_user_param": {
                "description": "Relevant certificate parameters for client authentication.",
                "type": "string"
              },
              "eaac_bin_base_url": {
                "description": "The base URL to download the EAA client.",
                "type": "string"
              },
              "enable_authorization": {
                "description": "Enables authorization. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_device_posture": {
                "description": "Enables device posture. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_favrt": {
                "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_oidc_saml_bridging": {
                "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "force_login": {
                "description": "Forces user login. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "force_login_after": {
                "description": "The timeout after which the IDP forces a re-login, in seconds.",
                "type": "string"
              },
              "form_text": {
                "additionalProperties": false,
                "description": "Form placeholder text settings.",
                "properties": {
                  "user_placeholder": {
                    "description": "Placeholder text to display in the form.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "g2o_enabled": {
                "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "g2o_key": {
                "description": "The G2O key to share with your ION configuration.",
                "nullable": true,
                "type": "string"
              },
              "g2o_nonce": {
                "description": "The G2O nonce to share with your ION configuration.",
                "nullable": true,
                "type": "string"
              },
              "group_attr_name": {
                "description": "IDP group attribute names.",
                "type": "string"
              },
              "idp_iwa_check_cert": {
                "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_os": {
                "description": "A regex pattern applied to the user agent string to include user agents.",
                "type": "string"
              },
              "idp_iwa_check_prem": {
                "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_ua": {
                "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_krb5_spn": {
                "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                "type": "string"
              },
              "idp_iwa_mode": {
                "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                "enum": [
                  "always",
                  "if-capable",
                  "off"
                ],
                "type": "string"
              },
              "idp_iwa_onpremise_path": {
                "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "infra_prem_gateways": {
                "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "description": "The outbound gateways used by on-premise devices.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "login_terms": {
                "description": "The terms and conditions text to display in the login portal.",
                "nullable": true,
                "type": "string"
              },
              "login_title": {
                "description": "The text to display in the login portal tab.",
                "nullable": true,
                "type": "string"
              },
              "persistent_cookie": {
                "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                "type": "string"
              },
              "portal_background": {
                "description": "Sets the login portal's background image file.",
                "type": "string"
              },
              "portal_change_password_url": {
                "description": "The URL for the password reset link.",
                "type": "string"
              },
              "portal_logo_height": {
                "description": "The portal logo's width in pixels.",
                "type": "string"
              },
              "portal_logo_url": {
                "description": "The URL for the portal logo image file.",
                "type": "string"
              },
              "portal_logo_width": {
                "description": "The portal logo's width in pixels.",
                "type": "string"
              },
              "portal_new_user_signup_url": {
                "description": "The URL for the new user signup link.",
                "type": "string"
              },
              "portal_terms_box": {
                "description": "Enables the login portal terms box. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "portal_theme": {
                "description": "Sets the login portal theme name.",
                "type": "string"
              },
              "portal_title_box": {
                "description": "Enables the login portal's title box. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "single_logout_supported": {
                "description": "Enables single logout. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "xframe_options": {
                "description": "Enables xframe embedding. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "xframe_urls": {
                "description": "The URLs of the sites to embed in the portal using xframes.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "url": {
                      "description": "The URLs using xframe.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "type": "object"
          },
          "status": {
            "default": 1,
            "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer"
          },
          "trust_expiry": {
            "description": "The number of seconds to expire the authentication request.",
            "minimum": 0,
            "type": "integer"
          },
          "uuid_url": {
            "description": "The unique UUID URL of the IDP configuration.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "idp_type"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp.yaml"
        }
      },
      "idp-actions": {
        "additionalProperties": false,
        "properties": {
          "idp_deployed": {
            "description": "If `true`, the IDP deployed successfully.",
            "type": "boolean"
          },
          "login_cert_status": {
            "default": 1,
            "description": "Login certificate status. Either `1` for not added, `2` for expired, `3` for invalid CNAME, `4` for invalid CA, `5` for no private key), `6` for OK, `7` for invalid CA user parameter, or `8` for about to expire.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer"
          },
          "login_directories_status": {
            "default": 1,
            "description": "Login directories status. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for OK.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer"
          },
          "login_host_dns_status": {
            "default": 1,
            "description": "Login host DNS status. Either `1` for not configured, `2` for configured, `3` for ready, `4` for not resolved, `5` for not created, `6` for OK, or `7` for CNAME mismatch.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer"
          },
          "login_oidc_status": {
            "default": 1,
            "description": "Login OIDC status. Either `1` for not added or `2` for added.",
            "enum": [
              1,
              2
            ],
            "type": "integer"
          },
          "login_pop_status": {
            "default": 1,
            "description": "Login POP status. Either `1` for not configured or `2` for OK.",
            "enum": [
              1,
              2
            ],
            "type": "integer"
          },
          "login_saml_status": {
            "default": 1,
            "description": "Login SAML status. Either `1` for not added or `2` for added.",
            "enum": [
              1,
              2
            ],
            "type": "integer"
          },
          "manual_override": {
            "description": "Indicates a manual override of the IDP.",
            "type": "boolean"
          }
        },
        "required": [
          "idp_deployed",
          "login_cert_status",
          "login_directories_status",
          "login_host_dns_status",
          "login_oidc_status",
          "login_pop_status",
          "login_saml_status",
          "manual_override"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-actions.yaml"
        }
      },
      "idp-cmdid": {
        "description": "Commands for the task.",
        "items": {
          "additionalProperties": false,
          "description": "Command ID for the task.",
          "properties": {
            "cmdid": {
              "description": "A unique identifier to track command progress.",
              "minLength": 1,
              "type": "string"
            },
            "dir_status": {
              "description": "The directory status.",
              "type": "integer"
            },
            "status": {
              "description": "The request status.",
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "cmdid"
          ],
          "type": "object"
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/idp-cmdid.yaml"
        }
      },
      "idp-create-put-response": {
        "additionalProperties": false,
        "description": "Identity provider (IDP) configuration settings.",
        "properties": {
          "app_count": {
            "description": "Count of applications associated with the IDP.",
            "type": "integer"
          },
          "attribute_map": {
            "additionalProperties": false,
            "description": "Additional attributes to include with the `access_token` response.",
            "properties": {
              "eaa.demo": {
                "description": "The user's EAA demo name.",
                "type": "string"
              },
              "eaa.test": {
                "description": "The user's EAA test name.",
                "type": "string"
              },
              "user.countryCode": {
                "description": "The user's country code.",
                "minLength": 1,
                "type": "string"
              },
              "user.email": {
                "description": "The user's email address.",
                "type": "string"
              },
              "user.firstName": {
                "description": "The user's first name.",
                "minLength": 1,
                "type": "string"
              },
              "user.groups": {
                "description": "The groups the user belongs to.",
                "type": "string"
              },
              "user.lastName": {
                "description": "The user's last name.",
                "minLength": 1,
                "type": "string"
              },
              "user.netbios": {
                "description": "The user's NetBIOS name.",
                "minLength": 0,
                "type": "string"
              },
              "user.persistentId": {
                "description": "The user persistent ID.",
                "minLength": 1,
                "type": "string"
              },
              "user.phoneNumber": {
                "description": "The user's phone number.",
                "minLength": 1,
                "type": "string"
              },
              "user.samAccountName": {
                "description": "The user's Security Account Manager (SAM) account name.",
                "minLength": 1,
                "type": "string"
              },
              "user.userName": {
                "description": "The username.",
                "type": "string"
              },
              "user.userPrincipleName": {
                "description": "The user's principle name.",
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "auth_request_signed": {
            "description": "Whether the authentication request is signed.",
            "type": "boolean"
          },
          "auth_response_encrypt": {
            "description": "Enables authentication response encryption.",
            "type": "boolean"
          },
          "background_image": {
            "description": "The name of the background image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "background_image_file_name": {
            "description": "The filename of the portal background image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "cert": {
            "description": "Body of the certificate.",
            "nullable": true,
            "type": "string"
          },
          "client_cert": {
            "description": "The client certificate.",
            "nullable": true,
            "type": "string"
          },
          "client_principle_name": {
            "description": "The principle name expected by the server in order to authenticate a client request.",
            "minLength": 1,
            "type": "string"
          },
          "company_id": {
            "description": "The company ID.",
            "minLength": 1,
            "type": "string"
          },
          "cookie_expiry": {
            "description": "The number of minutes the session cookie expires.",
            "minimum": 0,
            "type": "integer"
          },
          "created_at": {
            "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
            "type": "string"
          },
          "default_language": {
            "description": "The default language.",
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "description": "A description of the IDP configuration.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "directory_count": {
            "description": "The directory count.",
            "type": "integer"
          },
          "directory_list": {
            "description": "Directory IDs for the IDP.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_added": {
            "description": "Whether the authentication request includes the DNS information.",
            "type": "boolean"
          },
          "domain_suffix": {
            "description": "The domain suffix. For example, `.com`.",
            "minLength": 0,
            "type": "string"
          },
          "domains": {
            "description": "Domains for the IDP.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "enable_access_client": {
            "description": "Enables the access client.",
            "type": "boolean"
          },
          "enable_mfa": {
            "description": "Enables multifactor authentication.",
            "type": "boolean"
          },
          "favicon_image": {
            "description": "The filename of the portal favicon image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "helpdesk_email": {
            "description": "The email address for contacting helpdesk with issues.",
            "type": "string"
          },
          "idp_deployed": {
            "description": "Whether the IDP is deployed.",
            "type": "boolean"
          },
          "idp_operational": {
            "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "idp_status": {
            "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer"
          },
          "idp_type": {
            "default": 1,
            "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "type": "integer"
          },
          "iwa_keytab": {
            "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lockout_interval": {
            "default": 15,
            "description": "The number of minutes to lock out the user, `15` by default.",
            "minimum": 0,
            "type": "integer"
          },
          "login_cname": {
            "description": "The login cname URL.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_dialin_server": {
            "description": "The URL of the login dialin server.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_domain": {
            "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
            "enum": [
              1,
              2
            ],
            "nullable": true,
            "type": "integer"
          },
          "login_host": {
            "description": "The service provider login host.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_lockout": {
            "default": "off",
            "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
            "enum": [
              "on",
              "off"
            ],
            "type": "string"
          },
          "login_suffix": {
            "description": "The login suffix. For example, `.com`.",
            "minLength": 0,
            "type": "string"
          },
          "logo": {
            "description": "The name of the portal logo.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "logo_file_name": {
            "description": "The portal logo filename.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "logout_url": {
            "description": "The single logout URL for SSO.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "max_login_failures": {
            "default": 5,
            "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
            "minimum": 1,
            "type": "integer"
          },
          "metadata": {
            "description": "The metadata of the SAML type IDP.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "mfa_settings": {
            "additionalProperties": false,
            "description": "Multifactor authentication settings for the IDP configuration.",
            "properties": {
              "duo_akey": {
                "description": "The Duo authentication key.",
                "type": "string"
              },
              "duo_api_hostname": {
                "description": "The hostname of the Duo API to contact for authentication.",
                "type": "string"
              },
              "duo_integration_key": {
                "description": "The unique client ID to integrate with Duo Security's MFA service.",
                "type": "string"
              },
              "duo_secret_key": {
                "description": "The secret key for Duo MFA requests.",
                "type": "string"
              },
              "duo_umap": {
                "description": "The user email used by Duo to map authentication requests.",
                "type": "string"
              },
              "idp_notification_org_name": {
                "description": "The name of the IDP authentication organization to notify.",
                "type": "string"
              },
              "mfa_email_immutable": {
                "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_email_preset": {
                "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_duo": {
                "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_email": {
                "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_sms": {
                "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_totp": {
                "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_pci_dss": {
                "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_sms_immutable": {
                "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_sms_preset": {
                "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              }
            },
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/idp-mfa-settings.yaml"
            }
          },
          "modified_at": {
            "description": "The ISO 8601 timestamp marking the last modification.",
            "nullable": true,
            "type": "string"
          },
          "multilang_fields": {
            "description": "Multi language field for SAML message configuration.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the IDP configuration.",
            "minLength": 1,
            "type": "string"
          },
          "ocsp": {
            "description": "Unicode string data.",
            "nullable": true,
            "type": "string"
          },
          "oidcclients": {
            "description": "The unique ID of the OIDC client.",
            "type": "string"
          },
          "pop": {
            "description": "The pop resource URI.",
            "minLength": 1,
            "type": "string"
          },
          "popName": {
            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
            "type": "string"
          },
          "resource": {
            "description": "The IDP directory resource name.",
            "minLength": 1,
            "type": "string"
          },
          "resource_uri": {
            "additionalProperties": false,
            "description": "Specifies the location of various IDP resources.",
            "properties": {
              "directories": {
                "description": "The directories resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "groups": {
                "description": "The groups resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "href": {
                "description": "The href resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "idp": {
                "description": "The IDP resource URI.",
                "type": "string"
              },
              "pop": {
                "description": "The pop resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "services": {
                "description": "The services resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "sites": {
                "description": "The sites resource URI.",
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "saml_url": {
            "description": "The URL of the service provider SAML interface.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "settings": {
            "additionalProperties": false,
            "description": "Login portal settings for an IDP configuration.",
            "properties": {
              "captive_portal": {
                "description": "Whether the IDP uses captive portal. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_auth": {
                "description": "Enables client certificate authorization. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_auth_onboard_criteria": {
                "description": "The client onboarding criteria for the IDP. ",
                "type": "string"
              },
              "client_cert_auth_onboard_url": {
                "description": "Enter the URL where the user is redirected if no certificate is provided.",
                "type": "string"
              },
              "client_cert_auth_validation_method": {
                "description": "The client certificate validation method. Either `none` or `ocsp`.",
                "enum": [
                  "none",
                  "ocsp"
                ],
                "nullable": true,
                "type": "string"
              },
              "client_cert_auth_validation_responder": {
                "description": "The URL of the OCSP validation responder. ",
                "type": "string"
              },
              "client_cert_exp_warn_interval": {
                "description": "The warning interval for certificate expiration in days.",
                "type": "integer"
              },
              "client_cert_identity_username": {
                "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_renewal": {
                "description": "Enables client certificate renewal. ",
                "type": "string"
              },
              "client_cert_user_param": {
                "description": "Relevant certificate parameters for client authentication.",
                "type": "string"
              },
              "eaac_bin_base_url": {
                "description": "The base URL to download the EAA client.",
                "type": "string"
              },
              "enable_authorization": {
                "description": "Enables authorization. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_device_posture": {
                "description": "Enables device posture. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_favrt": {
                "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_oidc_saml_bridging": {
                "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "force_login": {
                "description": "Forces user login. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "force_login_after": {
                "description": "The timeout after which the IDP forces a re-login, in seconds.",
                "type": "integer"
              },
              "form_text": {
                "additionalProperties": false,
                "description": "Form placeholder text settings.",
                "properties": {
                  "user_placeholder": {
                    "description": "Placeholder text to display in the form.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "g2o_enabled": {
                "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "g2o_key": {
                "description": "The G2O key to share with your ION configuration.",
                "nullable": true,
                "type": "string"
              },
              "g2o_nonce": {
                "description": "The G2O nonce to share with your ION configuration.",
                "nullable": true,
                "type": "string"
              },
              "group_attr_name": {
                "description": "IDP group attribute names.",
                "type": "string"
              },
              "idp_cdn_enabled": {
                "description": "Whether CDN is enabled for the IDP. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_cert": {
                "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_os": {
                "description": "A regex pattern applied to the user agent string to include user agents.",
                "type": "string"
              },
              "idp_iwa_check_prem": {
                "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_ua": {
                "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_krb5_spn": {
                "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                "type": "string"
              },
              "idp_iwa_mode": {
                "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                "enum": [
                  "always",
                  "if-capable",
                  "off"
                ],
                "type": "string"
              },
              "idp_iwa_onpremise_path": {
                "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "infra_prem_gateways": {
                "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "description": "The outbound gateways used by on-premise devices.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "login_terms": {
                "description": "The terms and conditions text to display in the login portal.",
                "nullable": true,
                "type": "string"
              },
              "login_title": {
                "description": "The text to display in the login portal tab.",
                "nullable": true,
                "type": "string"
              },
              "persistent_cookie": {
                "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                "type": "string"
              },
              "portal_background": {
                "description": "Sets the login portal's background image file.",
                "type": "string"
              },
              "portal_change_password_url": {
                "description": "The URL for the password reset link.",
                "type": "string"
              },
              "portal_logo_height": {
                "description": "The portal logo's height in pixels.",
                "type": "string"
              },
              "portal_logo_url": {
                "description": "The URL for the portal logo image file.",
                "type": "string"
              },
              "portal_logo_width": {
                "description": "The portal logo's width in pixels.",
                "type": "string"
              },
              "portal_new_user_signup_url": {
                "description": "The URL for the new user sign up link.",
                "type": "string"
              },
              "portal_terms_box": {
                "description": "Enables the login portal terms box. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "portal_theme": {
                "description": "Sets the login portal theme name.",
                "type": "string"
              },
              "portal_title_box": {
                "description": "Enables the login portal's title box. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "single_logout_supported": {
                "description": "Enables single logout. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "trusted_network_enable": {
                "description": "Whether the IDP has enabled trusted networks. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "trusted_network_hostname_ip": {
                "description": "The hostname or IP for the trusted networks.",
                "type": "string"
              },
              "trusted_network_searchdomain": {
                "description": "The search domain for the trusted networks.",
                "type": "string"
              },
              "xframe_options": {
                "description": "Enables xframe embedding. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "xframe_urls": {
                "description": "The URLs of the sites to embed in the portal using xframes.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "url": {
                      "description": "The URLs using xframe.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "type": "object"
          },
          "status": {
            "default": 1,
            "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer"
          },
          "trust_expiry": {
            "description": "The number of seconds to expire the authentication request.",
            "minimum": 0,
            "type": "integer"
          },
          "uuid_url": {
            "description": "The unique UUID URL of the IDP configuration.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "idp_type"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-create-put-response.yaml"
        }
      },
      "idp-directories-membership": {
        "additionalProperties": false,
        "description": "List of IDP associated directories.",
        "properties": {
          "directory": {
            "additionalProperties": false,
            "description": "IDP directory properties.",
            "properties": {
              "directory_uuid_url": {
                "description": "The directory's unique ID.",
                "type": "string"
              },
              "name": {
                "description": "The directory name.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "idp": {
            "additionalProperties": false,
            "description": "IDP properties.",
            "properties": {
              "idp_uuid_url": {
                "description": "The unique IDP ID.",
                "type": "string"
              },
              "name": {
                "description": "The IDP name.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "resource": {
            "description": "The resource name.",
            "type": "string"
          },
          "resource_uri": {
            "additionalProperties": false,
            "description": "Resource URIs for the IDP.",
            "properties": {
              "directory": {
                "description": "The directory's resource ID.",
                "type": "string"
              },
              "href": {
                "description": "The resource's URL.",
                "type": "string"
              },
              "idp": {
                "description": "The IDP's resource ID.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "uuid_url": {
            "description": "The resource ID.",
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-directories-membership.yaml"
        }
      },
      "idp-directories-memberships": {
        "additionalProperties": false,
        "description": "IDP directory memberships.",
        "properties": {
          "ListView": {
            "additionalProperties": false,
            "description": "List view properties.",
            "properties": {
              "meta": {
                "description": "Paging properties.",
                "type": "string"
              },
              "objects": {
                "description": "IDP directory properties.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "additionalProperties": false,
            "description": "Paging properties.",
            "properties": {
              "limit": {
                "description": "Used for pagination. The total number of list members after the offset in the request.",
                "type": "integer"
              },
              "next": {
                "description": "URI of the next page relative to the current page settings.",
                "nullable": true,
                "type": "string"
              },
              "offset": {
                "description": "Used for pagination. Indicates the first member of the underlying object list in the request.",
                "type": "integer"
              },
              "previous": {
                "description": "URI of the previous page relative to the current page settings.",
                "nullable": true,
                "type": "string"
              },
              "total_count": {
                "description": "Total item count for the collection.",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "objects": {
            "description": "Directory memberships.",
            "items": {
              "additionalProperties": false,
              "description": "List of IDP associated directories.",
              "properties": {
                "directory": {
                  "additionalProperties": false,
                  "description": "IDP directory properties.",
                  "properties": {
                    "directory_uuid_url": {
                      "description": "The directory's unique ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The directory name.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "idp": {
                  "additionalProperties": false,
                  "description": "IDP properties.",
                  "properties": {
                    "idp_uuid_url": {
                      "description": "The unique IDP ID.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The IDP name.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "resource": {
                  "description": "The resource name.",
                  "type": "string"
                },
                "resource_uri": {
                  "additionalProperties": false,
                  "description": "Resource URIs for the IDP.",
                  "properties": {
                    "directory": {
                      "description": "The directory's resource ID.",
                      "type": "string"
                    },
                    "href": {
                      "description": "The resource's URL.",
                      "type": "string"
                    },
                    "idp": {
                      "description": "The IDP's resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "uuid_url": {
                  "description": "The resource ID.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/idp-directories-membership.yaml"
              }
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-directories-memberships.yaml"
        }
      },
      "idp-get-response": {
        "additionalProperties": false,
        "description": "Identity provider (IDP) configuration settings.",
        "properties": {
          "app_count": {
            "description": "Count of applications associated with the IDP.",
            "type": "integer"
          },
          "attribute_map": {
            "additionalProperties": false,
            "description": "Additional attributes to include with the `access_token` response.",
            "properties": {
              "eaa.demo": {
                "description": "The user's EAA demo name.",
                "type": "string"
              },
              "eaa.test": {
                "description": "The user's EAA test name.",
                "type": "string"
              },
              "user.countryCode": {
                "description": "The user's country code.",
                "minLength": 1,
                "type": "string"
              },
              "user.email": {
                "description": "The user's email address.",
                "type": "string"
              },
              "user.firstName": {
                "description": "The user's first name.",
                "minLength": 1,
                "type": "string"
              },
              "user.groups": {
                "description": "The groups the user belongs to.",
                "type": "string"
              },
              "user.lastName": {
                "description": "The user's last name.",
                "minLength": 1,
                "type": "string"
              },
              "user.netbios": {
                "description": "The user's NetBIOS name.",
                "minLength": 0,
                "type": "string"
              },
              "user.persistentId": {
                "description": "The user persistent ID.",
                "minLength": 1,
                "type": "string"
              },
              "user.phoneNumber": {
                "description": "The user's phone number.",
                "minLength": 1,
                "type": "string"
              },
              "user.samAccountName": {
                "description": "The user's Security Account Manager (SAM) account name.",
                "minLength": 1,
                "type": "string"
              },
              "user.userName": {
                "description": "The username.",
                "type": "string"
              },
              "user.userPrincipleName": {
                "description": "The user's principle name.",
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "auth_request_signed": {
            "description": "Whether the authentication request is signed.",
            "type": "boolean"
          },
          "auth_response_encrypt": {
            "description": "Enables authentication response encryption.",
            "type": "boolean"
          },
          "background_image": {
            "description": "The name of the background image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "background_image_file_name": {
            "description": "The filename of the portal background image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "cert": {
            "description": "Body of the certificate.",
            "nullable": true,
            "type": "string"
          },
          "client_cert": {
            "description": "The client certificate.",
            "nullable": true,
            "type": "string"
          },
          "client_principle_name": {
            "description": "The principle name expected by the server in order to authenticate a client request.",
            "minLength": 1,
            "type": "string"
          },
          "company_id": {
            "description": "The company ID.",
            "minLength": 1,
            "type": "string"
          },
          "cookie_expiry": {
            "description": "The number of minutes the session cookie expires.",
            "minimum": 0,
            "type": "integer"
          },
          "created_at": {
            "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
            "type": "string"
          },
          "default_language": {
            "description": "The default language.",
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "description": "A description of the IDP configuration.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "directory_count": {
            "description": "The directory count.",
            "type": "integer"
          },
          "directory_list": {
            "description": "Directory IDs for the IDP.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_added": {
            "description": "Whether the authentication request includes the DNS information.",
            "type": "boolean"
          },
          "domain_suffix": {
            "description": "The domain suffix. For example, `.com`.",
            "minLength": 0,
            "type": "string"
          },
          "domains": {
            "description": "Domains for the IDP.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "enable_access_client": {
            "description": "Enables the access client.",
            "type": "boolean"
          },
          "enable_mfa": {
            "description": "Enables multifactor authentication.",
            "type": "boolean"
          },
          "favicon_image": {
            "description": "The filename of the portal favicon image.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "helpdesk_email": {
            "description": "The email address for contacting helpdesk with issues.",
            "type": "string"
          },
          "idp_deployed": {
            "description": "Whether the IDP is deployed.",
            "type": "boolean"
          },
          "idp_operational": {
            "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "idp_status": {
            "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer"
          },
          "idp_type": {
            "default": 1,
            "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "type": "integer"
          },
          "iwa_keytab": {
            "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lockout_interval": {
            "default": 15,
            "description": "The number of minutes to lock out the user, `15` by default.",
            "minimum": 0,
            "type": "integer"
          },
          "login_cname": {
            "description": "The login cname URL.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_dialin_server": {
            "description": "The URL of the login dialin server.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_domain": {
            "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
            "enum": [
              1,
              2
            ],
            "nullable": true,
            "type": "integer"
          },
          "login_host": {
            "description": "The service provider login host.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "login_lockout": {
            "default": "off",
            "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
            "enum": [
              "on",
              "off"
            ],
            "type": "string"
          },
          "login_suffix": {
            "description": "The login suffix. For example, `.com`.",
            "minLength": 0,
            "type": "string"
          },
          "logo": {
            "description": "The name of the portal logo.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "logo_file_name": {
            "description": "The portal logo filename.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "logout_url": {
            "description": "The single logout URL for SSO.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "max_login_failures": {
            "default": 5,
            "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
            "minimum": 1,
            "type": "integer"
          },
          "metadata": {
            "description": "The metadata of the SAML type IDP.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "mfa_settings": {
            "additionalProperties": false,
            "description": "Multifactor authentication settings for the IDP configuration.",
            "properties": {
              "duo_akey": {
                "description": "The Duo authentication key.",
                "type": "string"
              },
              "duo_api_hostname": {
                "description": "The hostname of the Duo API to contact for authentication.",
                "type": "string"
              },
              "duo_integration_key": {
                "description": "The unique client ID to integrate with Duo Security's MFA service.",
                "type": "string"
              },
              "duo_secret_key": {
                "description": "The secret key for Duo MFA requests.",
                "type": "string"
              },
              "duo_umap": {
                "description": "The user email used by Duo to map authentication requests.",
                "type": "string"
              },
              "idp_notification_org_name": {
                "description": "The name of the IDP authentication organization to notify.",
                "type": "string"
              },
              "mfa_email_immutable": {
                "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_email_preset": {
                "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_duo": {
                "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_email": {
                "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_sms": {
                "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_factor_totp": {
                "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_pci_dss": {
                "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_sms_immutable": {
                "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "mfa_sms_preset": {
                "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              }
            },
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/idp-mfa-settings.yaml"
            }
          },
          "modified_at": {
            "description": "The ISO 8601 timestamp marking the last modification.",
            "nullable": true,
            "type": "string"
          },
          "multilang_fields": {
            "description": "Multi language field for SAML message configuration.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the IDP configuration.",
            "minLength": 1,
            "type": "string"
          },
          "ocsp": {
            "description": "Unicode string data.",
            "nullable": true,
            "type": "string"
          },
          "oidcclients": {
            "description": "The unique ID of the OIDC client.",
            "type": "string"
          },
          "pop": {
            "description": "The pop resource URI.",
            "minLength": 1,
            "type": "string"
          },
          "popName": {
            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
            "type": "string"
          },
          "resource": {
            "description": "The IDP directory resource name.",
            "minLength": 1,
            "type": "string"
          },
          "resource_uri": {
            "additionalProperties": false,
            "description": "Specifies the location of various IDP resources.",
            "properties": {
              "directories": {
                "description": "The directories resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "groups": {
                "description": "The groups resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "href": {
                "description": "The href resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "idp": {
                "description": "The IDP resource URI.",
                "type": "string"
              },
              "pop": {
                "description": "The pop resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "services": {
                "description": "The services resource URI.",
                "minLength": 1,
                "type": "string"
              },
              "sites": {
                "description": "The sites resource URI.",
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "saml_url": {
            "description": "The URL of the service provider SAML interface.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "settings": {
            "additionalProperties": false,
            "description": "Login portal settings for an IDP configuration.",
            "properties": {
              "client_cert_auth": {
                "description": "Enables client certificate authorization. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_auth_onboard_criteria": {
                "description": "The client onboarding criteria for the IDP. ",
                "type": "string"
              },
              "client_cert_auth_onboard_url": {
                "description": "Enter the URL where the user is redirected if no certificate is provided.",
                "type": "string"
              },
              "client_cert_auth_validation_method": {
                "description": "The client certificate validation method. Either `none` or `ocsp`.",
                "enum": [
                  "none",
                  "ocsp"
                ],
                "nullable": true,
                "type": "string"
              },
              "client_cert_auth_validation_responder": {
                "description": "The URL of the OCSP validation responder. ",
                "type": "string"
              },
              "client_cert_exp_warn_interval": {
                "description": "The warning interval for certificate expiration in days.",
                "type": "integer"
              },
              "client_cert_identity_username": {
                "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "client_cert_renewal": {
                "description": "Enables client certificate renewal. ",
                "type": "string"
              },
              "client_cert_user_param": {
                "description": "Relevant certificate parameters for client authentication.",
                "type": "string"
              },
              "eaac_bin_base_url": {
                "description": "The base URL to download the EAA client.",
                "type": "string"
              },
              "enable_authorization": {
                "description": "Enables authorization. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_device_posture": {
                "description": "Enables device posture. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_favrt": {
                "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "enable_oidc_saml_bridging": {
                "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "force_login": {
                "description": "Forces user login. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "force_login_after": {
                "description": "The timeout after which the IDP forces a re-login, in seconds.",
                "type": "string"
              },
              "form_text": {
                "additionalProperties": false,
                "description": "Form placeholder text settings.",
                "properties": {
                  "user_placeholder": {
                    "description": "Placeholder text to display in the form.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "g2o_enabled": {
                "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "g2o_key": {
                "description": "The G2O key to share with your ION configuration.",
                "nullable": true,
                "type": "string"
              },
              "g2o_nonce": {
                "description": "The G2O nonce to share with your ION configuration.",
                "nullable": true,
                "type": "string"
              },
              "group_attr_name": {
                "description": "IDP group attribute names.",
                "type": "string"
              },
              "idp_iwa_check_cert": {
                "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_os": {
                "description": "A regex pattern applied to the user agent string to include user agents.",
                "type": "string"
              },
              "idp_iwa_check_prem": {
                "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_check_ua": {
                "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "idp_iwa_krb5_spn": {
                "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                "type": "string"
              },
              "idp_iwa_mode": {
                "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                "enum": [
                  "always",
                  "if-capable",
                  "off"
                ],
                "type": "string"
              },
              "idp_iwa_onpremise_path": {
                "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "infra_prem_gateways": {
                "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "description": "The outbound gateways used by on-premise devices.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "login_terms": {
                "description": "The terms and conditions text to display in the login portal.",
                "nullable": true,
                "type": "string"
              },
              "login_title": {
                "description": "The text to display in the login portal tab.",
                "nullable": true,
                "type": "string"
              },
              "persistent_cookie": {
                "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                "type": "string"
              },
              "portal_background": {
                "description": "Sets the login portal's background image file.",
                "type": "string"
              },
              "portal_change_password_url": {
                "description": "The URL for the password reset link.",
                "type": "string"
              },
              "portal_logo_height": {
                "description": "The portal logo's width in pixels.",
                "type": "string"
              },
              "portal_logo_url": {
                "description": "The URL for the portal logo image file.",
                "type": "string"
              },
              "portal_logo_width": {
                "description": "The portal logo's width in pixels.",
                "type": "string"
              },
              "portal_new_user_signup_url": {
                "description": "The URL for the new user sign up link.",
                "type": "string"
              },
              "portal_terms_box": {
                "description": "Enables the login portal terms box. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "portal_theme": {
                "description": "Sets the login portal theme name.",
                "type": "string"
              },
              "portal_title_box": {
                "description": "Enables the login portal's title box. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "single_logout_supported": {
                "description": "Enables single logout. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "xframe_options": {
                "description": "Enables xframe embedding. Either `true` or `false`.",
                "enum": [
                  "true",
                  "false"
                ],
                "type": "string"
              },
              "xframe_urls": {
                "description": "The URLs of the sites to embed in the portal using xframes.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "url": {
                      "description": "The URLs using xframe.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "type": "object"
          },
          "status": {
            "default": 1,
            "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type": "integer"
          },
          "trust_expiry": {
            "description": "The number of seconds to expire the authentication request.",
            "minimum": 0,
            "type": "integer"
          },
          "uuid_url": {
            "description": "The unique UUID URL of the IDP configuration.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "idp_type"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-get-response.yaml"
        }
      },
      "idp-list": {
        "additionalProperties": false,
        "description": "List of Enterprise Access IDPs.",
        "properties": {
          "meta": {
            "additionalProperties": false,
            "description": "Paging settings for requested data.",
            "properties": {
              "limit": {
                "description": "The number of items requested, maximum of 250.",
                "maximum": 250,
                "minimum": 0,
                "type": "integer"
              },
              "next": {
                "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "offset": {
                "description": "The offset from the beginning of the underlying object list, starting at 0.",
                "minimum": 0,
                "type": "integer"
              },
              "previous": {
                "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "total_count": {
                "description": "The total count of resources that are in the underlying object list.",
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "total_count",
              "next",
              "limit",
              "offset",
              "previous"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/pageable.yaml"
            }
          },
          "objects": {
            "description": "IDPs.",
            "items": {
              "additionalProperties": false,
              "description": "Identity provider (IDP) configuration settings.",
              "properties": {
                "app_count": {
                  "description": "Count of applications associated with the IDP.",
                  "type": "integer"
                },
                "attribute_map": {
                  "additionalProperties": false,
                  "description": "Additional attributes to include with the `access_token` response.",
                  "properties": {
                    "eaa.demo": {
                      "description": "The user's EAA demo name.",
                      "type": "string"
                    },
                    "eaa.test": {
                      "description": "The user's EAA test name.",
                      "type": "string"
                    },
                    "user.countryCode": {
                      "description": "The user's country code.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.email": {
                      "description": "The user's email address.",
                      "type": "string"
                    },
                    "user.firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.groups": {
                      "description": "The groups the user belongs to.",
                      "type": "string"
                    },
                    "user.lastName": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.netbios": {
                      "description": "The user's NetBIOS name.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "user.persistentId": {
                      "description": "The user persistent ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.phoneNumber": {
                      "description": "The user's phone number.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.samAccountName": {
                      "description": "The user's Security Account Manager (SAM) account name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.userName": {
                      "description": "The username.",
                      "type": "string"
                    },
                    "user.userPrincipleName": {
                      "description": "The user's principle name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "auth_request_signed": {
                  "description": "Whether the authentication request is signed.",
                  "type": "boolean"
                },
                "auth_response_encrypt": {
                  "description": "Enables authentication response encryption.",
                  "type": "boolean"
                },
                "background_image": {
                  "description": "The name of the background image.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "background_image_file_name": {
                  "description": "The filename of the portal background image.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "cert": {
                  "description": "Body of the certificate.",
                  "nullable": true,
                  "type": "string"
                },
                "client_cert": {
                  "description": "The client certificate.",
                  "nullable": true,
                  "type": "string"
                },
                "client_principle_name": {
                  "description": "The principle name expected by the server in order to authenticate a client request.",
                  "minLength": 1,
                  "type": "string"
                },
                "company_id": {
                  "description": "The company ID.",
                  "minLength": 1,
                  "type": "string"
                },
                "cookie_expiry": {
                  "description": "The number of minutes the session cookie expires.",
                  "minimum": 0,
                  "type": "integer"
                },
                "created_at": {
                  "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
                  "type": "string"
                },
                "default_language": {
                  "description": "The default language.",
                  "minLength": 1,
                  "type": "string"
                },
                "description": {
                  "description": "A description of the IDP configuration.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "directory_count": {
                  "description": "The directory count.",
                  "type": "integer"
                },
                "directory_list": {
                  "description": "Directory IDs for the IDP.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "dns_added": {
                  "description": "Whether the authentication request includes the DNS information.",
                  "type": "boolean"
                },
                "domain_suffix": {
                  "description": "The domain suffix. For example, `.com`.",
                  "minLength": 0,
                  "type": "string"
                },
                "domains": {
                  "description": "Domains for the IDP.",
                  "items": {
                    "nullable": true,
                    "type": "string"
                  },
                  "type": "array"
                },
                "enable_access_client": {
                  "description": "Enables the access client.",
                  "type": "boolean"
                },
                "enable_mfa": {
                  "description": "Enables multifactor authentication.",
                  "type": "boolean"
                },
                "favicon_image": {
                  "description": "The filename of the portal favicon image.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "helpdesk_email": {
                  "description": "The email address for contacting helpdesk with issues.",
                  "type": "string"
                },
                "idp_deployed": {
                  "description": "Whether the IDP is deployed.",
                  "type": "boolean"
                },
                "idp_operational": {
                  "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
                  "enum": [
                    0,
                    1
                  ],
                  "type": "integer"
                },
                "idp_status": {
                  "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5
                  ],
                  "type": "integer"
                },
                "idp_type": {
                  "default": 1,
                  "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                  ],
                  "type": "integer"
                },
                "iwa_keytab": {
                  "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "lockout_interval": {
                  "default": 15,
                  "description": "The number of minutes to lock out the user, `15` by default.",
                  "minimum": 0,
                  "type": "integer"
                },
                "login_cname": {
                  "description": "The login cname URL.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "login_dialin_server": {
                  "description": "The URL of the login dialin server.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "login_domain": {
                  "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                  "enum": [
                    1,
                    2
                  ],
                  "nullable": true,
                  "type": "integer"
                },
                "login_host": {
                  "description": "The service provider login host.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "login_lockout": {
                  "default": "off",
                  "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
                  "enum": [
                    "on",
                    "off"
                  ],
                  "type": "string"
                },
                "login_suffix": {
                  "description": "The login suffix. For example, `.com`.",
                  "minLength": 0,
                  "type": "string"
                },
                "logo": {
                  "description": "The name of the portal logo.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "logo_file_name": {
                  "description": "The portal logo filename.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "logout_url": {
                  "description": "The single logout URL for SSO.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "max_login_failures": {
                  "default": 5,
                  "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                  "minimum": 1,
                  "type": "integer"
                },
                "metadata": {
                  "description": "The metadata of the SAML type IDP.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "mfa_settings": {
                  "additionalProperties": false,
                  "description": "Multifactor authentication settings for the IDP configuration.",
                  "properties": {
                    "duo_akey": {
                      "description": "The Duo authentication key.",
                      "type": "string"
                    },
                    "duo_api_hostname": {
                      "description": "The hostname of the Duo API to contact for authentication.",
                      "type": "string"
                    },
                    "duo_integration_key": {
                      "description": "The unique client ID to integrate with Duo Security's MFA service.",
                      "type": "string"
                    },
                    "duo_secret_key": {
                      "description": "The secret key for Duo MFA requests.",
                      "type": "string"
                    },
                    "duo_umap": {
                      "description": "The user email used by Duo to map authentication requests.",
                      "type": "string"
                    },
                    "idp_notification_org_name": {
                      "description": "The name of the IDP authentication organization to notify.",
                      "type": "string"
                    },
                    "mfa_email_immutable": {
                      "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_email_preset": {
                      "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_factor_duo": {
                      "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_factor_email": {
                      "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_factor_sms": {
                      "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_factor_totp": {
                      "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_pci_dss": {
                      "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_sms_immutable": {
                      "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "mfa_sms_preset": {
                      "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-mfa-settings.yaml"
                  }
                },
                "modified_at": {
                  "description": "The ISO 8601 timestamp marking the last modification.",
                  "nullable": true,
                  "type": "string"
                },
                "multilang_fields": {
                  "description": "Multi language field for SAML message configuration.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the IDP configuration.",
                  "minLength": 1,
                  "type": "string"
                },
                "ocsp": {
                  "description": "Unicode string data.",
                  "nullable": true,
                  "type": "string"
                },
                "oidcclients": {
                  "description": "The unique ID of the OIDC client.",
                  "type": "string"
                },
                "pop": {
                  "description": "The pop resource URI.",
                  "minLength": 1,
                  "type": "string"
                },
                "popName": {
                  "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                  "type": "string"
                },
                "resource": {
                  "description": "The IDP directory resource name.",
                  "minLength": 1,
                  "type": "string"
                },
                "resource_uri": {
                  "additionalProperties": false,
                  "description": "Specifies the location of various IDP resources.",
                  "properties": {
                    "directories": {
                      "description": "The directories resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "groups": {
                      "description": "The groups resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "href": {
                      "description": "The href resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The IDP resource URI.",
                      "type": "string"
                    },
                    "pop": {
                      "description": "The pop resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "services": {
                      "description": "The services resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sites": {
                      "description": "The sites resource URI.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "saml_url": {
                  "description": "The URL of the service provider SAML interface.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "settings": {
                  "additionalProperties": false,
                  "description": "Login portal settings for an IDP configuration.",
                  "properties": {
                    "captive_portal": {
                      "description": "Whether the IDP uses captive portal. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "client_cert_auth": {
                      "description": "Enables client certificate authorization. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "client_cert_auth_onboard_criteria": {
                      "description": "The client onboarding criteria for the IDP. ",
                      "type": "string"
                    },
                    "client_cert_auth_onboard_url": {
                      "description": "Enter the URL where the user is redirected if no certificate is provided.",
                      "type": "string"
                    },
                    "client_cert_auth_validation_method": {
                      "description": "The client certificate validation method. Either `none` or `ocsp`.",
                      "enum": [
                        "none",
                        "ocsp"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "client_cert_auth_validation_responder": {
                      "description": "The URL of the OCSP validation responder. ",
                      "type": "string"
                    },
                    "client_cert_exp_warn_interval": {
                      "description": "The warning interval for certificate expiration in days.",
                      "type": "integer"
                    },
                    "client_cert_identity_username": {
                      "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "client_cert_renewal": {
                      "description": "Enables client certificate renewal. ",
                      "type": "string"
                    },
                    "client_cert_user_param": {
                      "description": "Relevant certificate parameters for client authentication.",
                      "type": "string"
                    },
                    "eaac_bin_base_url": {
                      "description": "The base URL to download the EAA client.",
                      "type": "string"
                    },
                    "enable_authorization": {
                      "description": "Enables authorization. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "enable_device_posture": {
                      "description": "Enables device posture. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "enable_favrt": {
                      "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "enable_oidc_saml_bridging": {
                      "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "force_login": {
                      "description": "Forces user login. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "force_login_after": {
                      "description": "The timeout after which the IDP forces a re-login, in seconds.",
                      "type": "integer"
                    },
                    "form_text": {
                      "additionalProperties": false,
                      "description": "Form placeholder text settings.",
                      "properties": {
                        "user_placeholder": {
                          "description": "Placeholder text to display in the form.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "g2o_enabled": {
                      "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "g2o_key": {
                      "description": "The G2O key to share with your ION configuration.",
                      "nullable": true,
                      "type": "string"
                    },
                    "g2o_nonce": {
                      "description": "The G2O nonce to share with your ION configuration.",
                      "nullable": true,
                      "type": "string"
                    },
                    "group_attr_name": {
                      "description": "IDP group attribute names.",
                      "type": "string"
                    },
                    "idp_cdn_enabled": {
                      "description": "Whether CDN is enabled for the IDP. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "idp_iwa_check_cert": {
                      "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "idp_iwa_check_os": {
                      "description": "A regex pattern applied to the user agent string to include user agents.",
                      "type": "string"
                    },
                    "idp_iwa_check_prem": {
                      "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "idp_iwa_check_ua": {
                      "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "idp_iwa_krb5_spn": {
                      "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                      "type": "string"
                    },
                    "idp_iwa_mode": {
                      "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                      "enum": [
                        "always",
                        "if-capable",
                        "off"
                      ],
                      "type": "string"
                    },
                    "idp_iwa_onpremise_path": {
                      "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "infra_prem_gateways": {
                      "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "description": "The outbound gateways used by on-premise devices.",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "login_terms": {
                      "description": "The terms and conditions text to display in the login portal.",
                      "nullable": true,
                      "type": "string"
                    },
                    "login_title": {
                      "description": "The text to display in the login portal tab.",
                      "nullable": true,
                      "type": "string"
                    },
                    "persistent_cookie": {
                      "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                      "type": "string"
                    },
                    "portal_background": {
                      "description": "Sets the login portal's background image file.",
                      "type": "string"
                    },
                    "portal_change_password_url": {
                      "description": "The URL for the password reset link.",
                      "type": "string"
                    },
                    "portal_logo_height": {
                      "description": "The portal logo's height in pixels.",
                      "type": "string"
                    },
                    "portal_logo_url": {
                      "description": "The URL for the portal logo image file.",
                      "type": "string"
                    },
                    "portal_logo_width": {
                      "description": "The portal logo's width in pixels.",
                      "type": "string"
                    },
                    "portal_new_user_signup_url": {
                      "description": "The URL for the new user sign up link.",
                      "type": "string"
                    },
                    "portal_terms_box": {
                      "description": "Enables the login portal terms box. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "portal_theme": {
                      "description": "Sets the login portal theme name.",
                      "type": "string"
                    },
                    "portal_title_box": {
                      "description": "Enables the login portal's title box. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "single_logout_supported": {
                      "description": "Enables single logout. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "trusted_network_enable": {
                      "description": "Whether the IDP has enabled trusted networks. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "trusted_network_hostname_ip": {
                      "description": "The hostname or IP for the trusted networks.",
                      "type": "string"
                    },
                    "trusted_network_searchdomain": {
                      "description": "The search domain for the trusted networks.",
                      "type": "string"
                    },
                    "xframe_options": {
                      "description": "Enables xframe embedding. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "xframe_urls": {
                      "description": "The URLs of the sites to embed in the portal using xframes.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "url": {
                            "description": "The URLs using xframe.",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "default": 1,
                  "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                  ],
                  "type": "integer"
                },
                "trust_expiry": {
                  "description": "The number of seconds to expire the authentication request.",
                  "minimum": 0,
                  "type": "integer"
                },
                "uuid_url": {
                  "description": "The unique UUID URL of the IDP configuration.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "name",
                "idp_type"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/idp-create-put-response.yaml"
              }
            },
            "type": "array"
          }
        },
        "required": [
          "meta",
          "objects"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-list.yaml"
        }
      },
      "idp-metadata": {
        "additionalProperties": false,
        "description": "IDP metadata.",
        "properties": {
          "metadata": {
            "description": "IDP metadata.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-metadata.yaml"
        }
      },
      "idp-mfa-settings": {
        "additionalProperties": false,
        "description": "Multifactor authentication settings for the IDP configuration.",
        "properties": {
          "duo_akey": {
            "description": "The Duo authentication key.",
            "type": "string"
          },
          "duo_api_hostname": {
            "description": "The hostname of the Duo API to contact for authentication.",
            "type": "string"
          },
          "duo_integration_key": {
            "description": "The unique client ID to integrate with Duo Security's MFA service.",
            "type": "string"
          },
          "duo_secret_key": {
            "description": "The secret key for Duo MFA requests.",
            "type": "string"
          },
          "duo_umap": {
            "description": "The user email used by Duo to map authentication requests.",
            "type": "string"
          },
          "idp_notification_org_name": {
            "description": "The name of the IDP authentication organization to notify.",
            "type": "string"
          },
          "mfa_email_immutable": {
            "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_email_preset": {
            "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_factor_duo": {
            "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_factor_email": {
            "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_factor_sms": {
            "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_factor_totp": {
            "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_pci_dss": {
            "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_sms_immutable": {
            "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          },
          "mfa_sms_preset": {
            "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idp-mfa-settings.yaml"
        }
      },
      "idpdirectories": {
        "additionalProperties": false,
        "description": "Enterprise Access IDP directory data.",
        "properties": {
          "meta": {
            "additionalProperties": false,
            "description": "Paging settings for requested data.",
            "properties": {
              "limit": {
                "description": "The number of items requested, maximum of 250.",
                "maximum": 250,
                "minimum": 0,
                "type": "integer"
              },
              "next": {
                "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "offset": {
                "description": "The offset from the beginning of the underlying object list, starting at 0.",
                "minimum": 0,
                "type": "integer"
              },
              "previous": {
                "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "total_count": {
                "description": "The total count of resources that are in the underlying object list.",
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "total_count",
              "next",
              "limit",
              "offset",
              "previous"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/pageable.yaml"
            }
          },
          "objects": {
            "description": "IDP directory data.",
            "items": {
              "additionalProperties": false,
              "description": "Enterprise Access IDP directory information.",
              "properties": {
                "admin_pwd": {
                  "description": "The administrator user password for the IDP directory.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "admin_user": {
                  "description": "The administrator user account for the IDP directory.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "agents": {
                  "description": "Connectors assigned to this IDP directory.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "description": "The name of the connector.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uuid_url": {
                        "description": "A unique identifier for the connector.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "uuid_url"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array"
                },
                "api_key": {
                  "description": "The API key of the IDP directory.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "attribute_map": {
                  "additionalProperties": false,
                  "description": "The attribute mapping for the IDP directory.",
                  "properties": {
                    "eaa.demo": {
                      "description": "The user's EAA demo name.",
                      "type": "string"
                    },
                    "eaa.test": {
                      "description": "The user's EAA test name.",
                      "type": "string"
                    },
                    "user.countryCode": {
                      "description": "The user's country code.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.email": {
                      "description": "The user's email address.",
                      "type": "string"
                    },
                    "user.firstName": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.groups": {
                      "description": "The groups the user belongs to.",
                      "type": "string"
                    },
                    "user.lastName": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.netbios": {
                      "description": "The user's NetBIOS name.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "user.persistentId": {
                      "description": "The user persistent ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.phoneNumber": {
                      "description": "The user's phone number.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.samAccountName": {
                      "description": "The user's Security Account Manager (SAM) account name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user.userName": {
                      "description": "The username.",
                      "type": "string"
                    },
                    "user.userPrincipleName": {
                      "description": "The user's principle name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "user.countryCode",
                    "user.email",
                    "user.firstName",
                    "user.lastName",
                    "user.netbios",
                    "user.persistentId",
                    "user.phoneNumber",
                    "user.samAccountName",
                    "user.userPrincipleName"
                  ],
                  "type": "object"
                },
                "auth_request_signed": {
                  "description": "Indicates a signed authentication request.",
                  "type": "boolean"
                },
                "auth_response_encrypt": {
                  "description": "Enables authentication response encryption.",
                  "type": "boolean"
                },
                "chase_referral": {
                  "description": "Enables referral chasing.",
                  "type": "boolean"
                },
                "cname": {
                  "description": "The IDP directory cname.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "company_id": {
                  "description": "The company ID of the IDP directory.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "conf_state": {
                  "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                  "enum": [
                    0,
                    1
                  ],
                  "type": "integer"
                },
                "created_at": {
                  "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                  "nullable": true,
                  "type": "string"
                },
                "description": {
                  "description": "A description of the directory object.",
                  "nullable": true,
                  "type": "string"
                },
                "dialin_sni": {
                  "description": "The dial-in SNI for the IDP directory.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "directories": {
                  "description": "The unique IDs of the directories for the IDP.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "directory_status": {
                  "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ],
                  "type": "integer"
                },
                "directory_type": {
                  "default": 2,
                  "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5
                  ],
                  "type": "integer"
                },
                "domains": {
                  "description": "The directory's domains.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "description": "The domain name.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "global_catalog": {
                  "description": "Enables global catalog.",
                  "type": "boolean"
                },
                "group_base_dn": {
                  "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "group_count": {
                  "description": "The number of groups for the IDP directory.",
                  "minimum": 0,
                  "type": "integer"
                },
                "group_members": {
                  "description": "The members of the group.",
                  "minLength": 1,
                  "type": "string"
                },
                "group_name": {
                  "description": "The name of the group.",
                  "minLength": 1,
                  "type": "string"
                },
                "group_object_classes": {
                  "description": "Group object classes that define custom LDAP mappings of users and groups.",
                  "items": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "type": "array"
                },
                "group_search_filter": {
                  "description": "The search filter for the group, such as `(objectClass=group)`.",
                  "minLength": 1,
                  "type": "string"
                },
                "group_token": {
                  "description": "The primary group token.",
                  "minLength": 1,
                  "type": "string"
                },
                "host": {
                  "description": "The IDP directory host.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "idp": {
                  "description": "The unique ID of the IDP to assign to the directory.",
                  "type": "string"
                },
                "kerb_realms": {
                  "description": "Kerberos realms for the IDP directory.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "kdclist": {
                        "additionalProperties": false,
                        "description": "Kerberos Key Distribution Centers (KDC) information.",
                        "properties": {
                          "ip": {
                            "description": "The IP address of the KDC.",
                            "type": "string"
                          },
                          "port": {
                            "description": "The port number of the KDC.",
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "ip",
                          "port"
                        ],
                        "type": "object"
                      },
                      "realm": {
                        "description": "The kerberos realm.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "kdclist",
                      "realm"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array"
                },
                "last_sync": {
                  "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                  "type": "string"
                },
                "logout_url": {
                  "description": "The logout URL for the directory.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "metadata": {
                  "description": "The IDP directory metadata.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "mfa": {
                  "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                  "enum": [
                    "on",
                    "off"
                  ],
                  "type": "string"
                },
                "modified_at": {
                  "description": "ISO 8601 timestamp marking the directory's last modification.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the IDP directory.",
                  "minLength": 1,
                  "type": "string"
                },
                "nameidformat": {
                  "description": "The name ID format.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "ou_attr": {
                  "description": "The organization unit's attributes.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "ou_filter": {
                  "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "ou_object_classes": {
                  "description": "The organization unit's object classes.",
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "password_change_allow": {
                  "description": "Allows password changes.",
                  "type": "boolean"
                },
                "password_change_threshold": {
                  "description": "The password change threshold in seconds.",
                  "minimum": 0,
                  "type": "integer"
                },
                "password_complexity_message": {
                  "description": "The password complexity message.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "password_expire_warn_threshold": {
                  "description": "The password expiration warning threshold in seconds.",
                  "minimum": 0,
                  "type": "integer"
                },
                "password_filter": {
                  "additionalProperties": false,
                  "description": "The password format requirement filters.",
                  "properties": {
                    "min-char-groups": {
                      "description": "Minimum number of character groups for the password.",
                      "minimum": 2,
                      "type": "integer"
                    },
                    "min-lower": {
                      "description": "Minimum number of lowercase characters for the password.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "min-num": {
                      "description": "Minimum number of digits for the password.",
                      "minimum": 2,
                      "type": "integer"
                    },
                    "min-other": {
                      "description": "Minimum number of other characters for the password.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "min-special": {
                      "description": "Minimum number of special characters for the password.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "min-upper": {
                      "description": "Minimum number of uppercase characters for the password.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "name-check": {
                      "description": "Checks whether the password contains the user's name.",
                      "type": "boolean"
                    },
                    "uid-check": {
                      "description": "Checks whether the password contains the user ID.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "password_policy_default": {
                  "description": "The default password policy for the IDP directory.",
                  "minLength": 0,
                  "type": "string"
                },
                "password_reset_allow": {
                  "description": "Whether to allow password reset.",
                  "type": "boolean"
                },
                "port": {
                  "description": "The port number of the IDP directory.",
                  "minimum": 0,
                  "type": "integer"
                },
                "resource": {
                  "description": "The IDP directory resource name.",
                  "minLength": 1,
                  "type": "string"
                },
                "resource_uri": {
                  "additionalProperties": false,
                  "description": "Specifies the location of various IDP directory resources.",
                  "properties": {
                    "groups": {
                      "description": "The URL for group details.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "href": {
                      "description": "The URL for IDP directory details.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The URL for the IDP.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "users": {
                      "description": "The URL for the list of users.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "groups",
                    "href",
                    "users"
                  ],
                  "type": "object"
                },
                "root_dn": {
                  "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "schema_attributes": {
                  "description": "The directory schema attributes.",
                  "minLength": 1,
                  "type": "string"
                },
                "server_cert_validate": {
                  "description": "Whether to validate server certificates.",
                  "type": "boolean"
                },
                "service": {
                  "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                  ],
                  "type": "integer"
                },
                "signed_request": {
                  "description": "Whether the request is signed.",
                  "type": "boolean"
                },
                "ssl": {
                  "description": "Enables SSL.",
                  "type": "boolean"
                },
                "status": {
                  "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                  "enum": [
                    0,
                    1
                  ],
                  "type": "integer"
                },
                "sync_interval": {
                  "description": "The synchronization interval of the IDP directory in seconds.",
                  "minimum": 0,
                  "type": "integer"
                },
                "sync_state": {
                  "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ],
                  "type": "integer"
                },
                "user_base_dn": {
                  "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                  "minLength": 0,
                  "nullable": true,
                  "type": "string"
                },
                "user_count": {
                  "description": "The total count of users in the IDP directory.",
                  "minimum": 0,
                  "type": "integer"
                },
                "user_display_name": {
                  "description": "The display name of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_email": {
                  "description": "The email of a user.",
                  "type": "string"
                },
                "user_fname": {
                  "description": "The first name of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_lname": {
                  "description": "The last name of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_memberof": {
                  "description": "The member status of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_memberuid": {
                  "description": "The member UID of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_object_classes": {
                  "description": "The user's object class.",
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "user_phone_num": {
                  "description": "The phone number of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_principal": {
                  "description": "The login of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_samaccountname": {
                  "description": "The kerberos client principal name.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_search_filter": {
                  "description": "The search filter for a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "user_upn": {
                  "description": "The principal name of a user.",
                  "minLength": 1,
                  "type": "string"
                },
                "uuid_url": {
                  "description": "A unique identifier for the directory.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/idpdirectory.yaml"
              }
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "meta",
          "objects"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idpdirectories.yaml"
        }
      },
      "idpdirectory": {
        "additionalProperties": false,
        "description": "Enterprise Access IDP directory information.",
        "properties": {
          "admin_pwd": {
            "description": "The administrator user password for the IDP directory.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "admin_user": {
            "description": "The administrator user account for the IDP directory.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "agents": {
            "description": "Connectors assigned to this IDP directory.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "The name of the connector.",
                  "minLength": 1,
                  "type": "string"
                },
                "uuid_url": {
                  "description": "A unique identifier for the connector.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "name",
                "uuid_url"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "api_key": {
            "description": "The API key of the IDP directory.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "attribute_map": {
            "additionalProperties": false,
            "description": "The attribute mapping for the IDP directory.",
            "properties": {
              "eaa.demo": {
                "description": "The user's EAA demo name.",
                "type": "string"
              },
              "eaa.test": {
                "description": "The user's EAA test name.",
                "type": "string"
              },
              "user.countryCode": {
                "description": "The user's country code.",
                "minLength": 1,
                "type": "string"
              },
              "user.email": {
                "description": "The user's email address.",
                "type": "string"
              },
              "user.firstName": {
                "description": "The user's first name.",
                "minLength": 1,
                "type": "string"
              },
              "user.groups": {
                "description": "The groups the user belongs to.",
                "type": "string"
              },
              "user.lastName": {
                "description": "The user's last name.",
                "minLength": 1,
                "type": "string"
              },
              "user.netbios": {
                "description": "The user's NetBIOS name.",
                "minLength": 0,
                "type": "string"
              },
              "user.persistentId": {
                "description": "The user persistent ID.",
                "minLength": 1,
                "type": "string"
              },
              "user.phoneNumber": {
                "description": "The user's phone number.",
                "minLength": 1,
                "type": "string"
              },
              "user.samAccountName": {
                "description": "The user's Security Account Manager (SAM) account name.",
                "minLength": 1,
                "type": "string"
              },
              "user.userName": {
                "description": "The username.",
                "type": "string"
              },
              "user.userPrincipleName": {
                "description": "The user's principle name.",
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "user.countryCode",
              "user.email",
              "user.firstName",
              "user.lastName",
              "user.netbios",
              "user.persistentId",
              "user.phoneNumber",
              "user.samAccountName",
              "user.userPrincipleName"
            ],
            "type": "object"
          },
          "auth_request_signed": {
            "description": "Indicates a signed authentication request.",
            "type": "boolean"
          },
          "auth_response_encrypt": {
            "description": "Enables authentication response encryption.",
            "type": "boolean"
          },
          "chase_referral": {
            "description": "Enables referral chasing.",
            "type": "boolean"
          },
          "cname": {
            "description": "The IDP directory cname.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "company_id": {
            "description": "The company ID of the IDP directory.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "conf_state": {
            "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "created_at": {
            "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the directory object.",
            "nullable": true,
            "type": "string"
          },
          "dialin_sni": {
            "description": "The dial-in SNI for the IDP directory.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "directories": {
            "description": "The unique IDs of the directories for the IDP.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "directory_status": {
            "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer"
          },
          "directory_type": {
            "default": 2,
            "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "integer"
          },
          "domains": {
            "description": "The directory's domains.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "The domain name.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "global_catalog": {
            "description": "Enables global catalog.",
            "type": "boolean"
          },
          "group_base_dn": {
            "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "group_count": {
            "description": "The number of groups for the IDP directory.",
            "minimum": 0,
            "type": "integer"
          },
          "group_members": {
            "description": "The members of the group.",
            "minLength": 1,
            "type": "string"
          },
          "group_name": {
            "description": "The name of the group.",
            "minLength": 1,
            "type": "string"
          },
          "group_object_classes": {
            "description": "Group object classes that define custom LDAP mappings of users and groups.",
            "items": {
              "minLength": 0,
              "type": "string"
            },
            "type": "array"
          },
          "group_search_filter": {
            "description": "The search filter for the group, such as `(objectClass=group)`.",
            "minLength": 1,
            "type": "string"
          },
          "group_token": {
            "description": "The primary group token.",
            "minLength": 1,
            "type": "string"
          },
          "host": {
            "description": "The IDP directory host.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "idp": {
            "description": "The unique ID of the IDP to assign to the directory.",
            "type": "string"
          },
          "kerb_realms": {
            "description": "Kerberos realms for the IDP directory.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "kdclist": {
                  "additionalProperties": false,
                  "description": "Kerberos Key Distribution Centers (KDC) information.",
                  "properties": {
                    "ip": {
                      "description": "The IP address of the KDC.",
                      "type": "string"
                    },
                    "port": {
                      "description": "The port number of the KDC.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "ip",
                    "port"
                  ],
                  "type": "object"
                },
                "realm": {
                  "description": "The kerberos realm.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "kdclist",
                "realm"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "last_sync": {
            "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
            "type": "string"
          },
          "logout_url": {
            "description": "The logout URL for the directory.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "description": "The IDP directory metadata.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "mfa": {
            "description": "Enables multifactor authentication. Either an `on` or `off` string.",
            "enum": [
              "on",
              "off"
            ],
            "type": "string"
          },
          "modified_at": {
            "description": "ISO 8601 timestamp marking the directory's last modification.",
            "type": "string"
          },
          "name": {
            "description": "The name of the IDP directory.",
            "minLength": 1,
            "type": "string"
          },
          "nameidformat": {
            "description": "The name ID format.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "ou_attr": {
            "description": "The organization unit's attributes.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "ou_filter": {
            "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "ou_object_classes": {
            "description": "The organization unit's object classes.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "password_change_allow": {
            "description": "Allows password changes.",
            "type": "boolean"
          },
          "password_change_threshold": {
            "description": "The password change threshold in seconds.",
            "minimum": 0,
            "type": "integer"
          },
          "password_complexity_message": {
            "description": "The password complexity message.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "password_expire_warn_threshold": {
            "description": "The password expiration warning threshold in seconds.",
            "minimum": 0,
            "type": "integer"
          },
          "password_filter": {
            "additionalProperties": false,
            "description": "The password format requirement filters.",
            "properties": {
              "min-char-groups": {
                "description": "Minimum number of character groups for the password.",
                "minimum": 2,
                "type": "integer"
              },
              "min-lower": {
                "description": "Minimum number of lowercase characters for the password.",
                "minimum": 1,
                "type": "integer"
              },
              "min-num": {
                "description": "Minimum number of digits for the password.",
                "minimum": 2,
                "type": "integer"
              },
              "min-other": {
                "description": "Minimum number of other characters for the password.",
                "minimum": 0,
                "type": "integer"
              },
              "min-special": {
                "description": "Minimum number of special characters for the password.",
                "minimum": 1,
                "type": "integer"
              },
              "min-upper": {
                "description": "Minimum number of uppercase characters for the password.",
                "minimum": 1,
                "type": "integer"
              },
              "name-check": {
                "description": "Checks whether the password contains the user's name.",
                "type": "boolean"
              },
              "uid-check": {
                "description": "Checks whether the password contains the user ID.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "password_policy_default": {
            "description": "The default password policy for the IDP directory.",
            "minLength": 0,
            "type": "string"
          },
          "password_reset_allow": {
            "description": "Whether to allow password reset.",
            "type": "boolean"
          },
          "port": {
            "description": "The port number of the IDP directory.",
            "minimum": 0,
            "type": "integer"
          },
          "resource": {
            "description": "The IDP directory resource name.",
            "minLength": 1,
            "type": "string"
          },
          "resource_uri": {
            "additionalProperties": false,
            "description": "Specifies the location of various IDP directory resources.",
            "properties": {
              "groups": {
                "description": "The URL for group details.",
                "minLength": 1,
                "type": "string"
              },
              "href": {
                "description": "The URL for IDP directory details.",
                "minLength": 1,
                "type": "string"
              },
              "idp": {
                "description": "The URL for the IDP.",
                "minLength": 1,
                "type": "string"
              },
              "users": {
                "description": "The URL for the list of users.",
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "groups",
              "href",
              "users"
            ],
            "type": "object"
          },
          "root_dn": {
            "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "schema_attributes": {
            "description": "The directory schema attributes.",
            "minLength": 1,
            "type": "string"
          },
          "server_cert_validate": {
            "description": "Whether to validate server certificates.",
            "type": "boolean"
          },
          "service": {
            "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ],
            "type": "integer"
          },
          "signed_request": {
            "description": "Whether the request is signed.",
            "type": "boolean"
          },
          "ssl": {
            "description": "Enables SSL.",
            "type": "boolean"
          },
          "status": {
            "description": "The directory status. Either `0` for disabled or `1` for enabled.",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "sync_interval": {
            "description": "The synchronization interval of the IDP directory in seconds.",
            "minimum": 0,
            "type": "integer"
          },
          "sync_state": {
            "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "integer"
          },
          "user_base_dn": {
            "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "user_count": {
            "description": "The total count of users in the IDP directory.",
            "minimum": 0,
            "type": "integer"
          },
          "user_display_name": {
            "description": "The display name of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_email": {
            "description": "The email of a user.",
            "type": "string"
          },
          "user_fname": {
            "description": "The first name of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_lname": {
            "description": "The last name of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_memberof": {
            "description": "The member status of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_memberuid": {
            "description": "The member UID of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_object_classes": {
            "description": "The user's object class.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "user_phone_num": {
            "description": "The phone number of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_principal": {
            "description": "The login of a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_samaccountname": {
            "description": "The kerberos client principal name.",
            "minLength": 1,
            "type": "string"
          },
          "user_search_filter": {
            "description": "The search filter for a user.",
            "minLength": 1,
            "type": "string"
          },
          "user_upn": {
            "description": "The principal name of a user.",
            "minLength": 1,
            "type": "string"
          },
          "uuid_url": {
            "description": "A unique identifier for the directory.",
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/idpdirectory.yaml"
        }
      },
      "pageable": {
        "additionalProperties": false,
        "description": "Paging settings for requested data.",
        "properties": {
          "limit": {
            "description": "The number of items requested, maximum of 250.",
            "maximum": 250,
            "minimum": 0,
            "type": "integer"
          },
          "next": {
            "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "offset": {
            "description": "The offset from the beginning of the underlying object list, starting at 0.",
            "minimum": 0,
            "type": "integer"
          },
          "previous": {
            "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "total_count": {
            "description": "The total count of resources that are in the underlying object list.",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "total_count",
          "next",
          "limit",
          "offset",
          "previous"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/pageable.yaml"
        }
      },
      "problem": {
        "additionalProperties": true,
        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
        "properties": {
          "detail": {
            "description": "Diagnostic instructions to locate and fix the problem.",
            "minLength": 1,
            "type": "string"
          },
          "errors": {
            "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
            "items": {
              "additionalProperties": false,
              "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
              "properties": {
                "detail": {
                  "description": "Diagnostic instructions to locate and fix the problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "instance": {
                  "description": "Unique value generated with each API call.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The HTTP status code that categorizes this error case.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "A summary of each error case.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies each error case.",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem-nested.yaml"
              }
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "instance": {
            "description": "Unique value generated with each API call.",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code that categorizes this error case.",
            "maximum": 600,
            "minimum": 100,
            "type": "integer"
          },
          "title": {
            "description": "A summary of each error case.",
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "description": "Identifies each error case.",
            "type": "string"
          }
        },
        "required": [
          "title",
          "status"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/problem.yaml"
        }
      },
      "problem-nested": {
        "additionalProperties": false,
        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
        "properties": {
          "detail": {
            "description": "Diagnostic instructions to locate and fix the problem.",
            "minLength": 1,
            "type": "string"
          },
          "instance": {
            "description": "Unique value generated with each API call.",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code that categorizes this error case.",
            "maximum": 600,
            "minimum": 100,
            "type": "integer"
          },
          "title": {
            "description": "A summary of each error case.",
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "description": "Identifies each error case.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "title",
          "status",
          "detail",
          "instance"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/problem-nested.yaml"
        }
      }
    }
  },
  "externalDocs": {
    "description": "See documentation for Akamai's Enterprise Application Access API",
    "url": "https://techdocs.akamai.com/eaa-api/reference"
  },
  "info": {
    "description": "Manage and control remote access to your applications.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Akamai: Enterprise Application Access API",
    "version": "v1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/device-posture/inventory/device-history/{deviceId}": {
      "get": {
        "description": "Lists device history for a particular device.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-history"
        },
        "operationId": "get-device-history",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 2
                  },
                  "objects": [
                    {
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": true
                        }
                      ],
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise",
                        "CrowdStrike Falcon Sensor"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware EMEA",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Edge",
                          "version": "44.18362.1.0"
                        },
                        {
                          "name": "Chrome",
                          "version": "77.0.3865.120"
                        },
                        {
                          "name": "Internet Explorer",
                          "version": "11.0.135"
                        }
                      ],
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-10-09T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-16T16:52:47.116999+00:00",
                      "system_disk_encryption": false,
                      "user_id": "Administrator"
                    },
                    {
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 1",
                          "passed": false
                        },
                        {
                          "name": "Anti-Malware Profile Example 2",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 3",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Edge",
                          "version": "44.18362.1.0"
                        },
                        {
                          "name": "Firefox",
                          "version": "60.9.0"
                        },
                        {
                          "name": "Internet Explorer",
                          "version": "11.0.135"
                        }
                      ],
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-10-09T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-15T20:38:28.981016+00:00",
                      "system_disk_encryption": false,
                      "user_id": "Administrator"
                    },
                    {
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 3",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Edge",
                          "version": "44.18362.1.0"
                        },
                        {
                          "name": "Chrome",
                          "version": "77.0.3865.90"
                        }
                      ],
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "not-installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-09-12T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-09T01:18:41.082591+00:00",
                      "system_disk_encryption": false,
                      "user_id": "Administrator"
                    },
                    {
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 3",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Firefox",
                          "version": "60.9.0"
                        },
                        {
                          "name": "Internet Explorer",
                          "version": "11.0.135"
                        }
                      ],
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-09-12T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-03T21:27:20.510988+00:00",
                      "system_disk_encryption": false,
                      "user_id": ""
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Device anti-malware history.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "anti_malware_info": {
                            "description": "Anti-malware name and status for a device.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware software.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "Whether the device passed anti-malware checks. ",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "anti_malware_running": {
                            "description": "Names of anti-malware software active on the device.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "anti_malware_status": {
                            "description": "The anti-malware profile name and status for a device.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware software.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "Whether the device passed anti-malware checks. ",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "browsers": {
                            "description": "Browsers active on the device.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The browser name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "version": {
                                  "description": "The browser version.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "client_version": {
                            "description": "The version of the client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "device_name": {
                            "description": "The name of the device.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "etp_client_status": {
                            "description": "Whether ETP client is `installed` or `not-installed`.",
                            "enum": [
                              "installed",
                              "not-installed"
                            ],
                            "type": "string"
                          },
                          "firewall_status": {
                            "description": "The status of the firewall. Either `poor` or `good`.",
                            "enum": [
                              "poor",
                              "good"
                            ],
                            "type": "string"
                          },
                          "idp_username": {
                            "description": "A unique identifier for the IDP username.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_auto_update": {
                            "description": "Enables the device's operating system automatic updates feature.",
                            "nullable": true,
                            "type": "boolean"
                          },
                          "os_name": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_update_timestamp": {
                            "description": "ISO 8601 timestamp marking when the last operating system update occurred.",
                            "nullable": true,
                            "type": "string"
                          },
                          "os_version": {
                            "description": "The version of the Operating System.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "signal_timestamp": {
                            "description": "ISO 8601 timestamp of the latest signal received from the device.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "system_disk_encryption": {
                            "description": "Whether the device's disk is encrypted.",
                            "type": "boolean"
                          },
                          "user_id": {
                            "description": "The user for the device.",
                            "minLength": 0,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/device-history.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get device history",
        "tags": [
          "Device history"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a particular device.",
          "example": "{{deviceId}}",
          "in": "path",
          "name": "deviceId",
          "required": true,
          "schema": {
            "example": 134,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/device-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/device.yaml",
        "path-info": "/device-posture/inventory/device-history/{deviceId}"
      }
    },
    "/device-posture/inventory/device/{deviceId}/op/clear": {
      "put": {
        "description": "Marks a device as safe and clear from ETP threats.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-device-clear"
        },
        "operationId": "put-device-clear",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Update device status to clear",
        "tags": [
          "Device"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a particular device.",
          "example": "{{deviceId}}",
          "in": "path",
          "name": "deviceId",
          "required": true,
          "schema": {
            "example": 134,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/device-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/clear.yaml",
        "path-info": "/device-posture/inventory/device/{deviceId}/op/clear"
      }
    },
    "/device-posture/inventory/list": {
      "get": {
        "description": "Lists device inventories.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-posture-inventory"
        },
        "operationId": "get-device-posture-inventory",
        "parameters": [
          {
            "description": "Filter records by device ID.",
            "example": "{{deviceId}}",
            "in": "query",
            "name": "deviceId",
            "schema": {
              "example": 134,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/device-id-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by operating system. Either `mac`, `windows`, `ios`, or `android`.",
            "example": "{{os}}",
            "in": "query",
            "name": "os",
            "schema": {
              "enum": [
                "mac",
                "windows",
                "ios",
                "android"
              ],
              "example": "mac",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/os-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by browser. Either `edge`, `firefox`, `chrome`, or `safari`.",
            "example": "{{browser}}",
            "in": "query",
            "name": "browser",
            "schema": {
              "enum": [
                "edge",
                "firefox",
                "chrome",
                "safari"
              ],
              "example": "chrome",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/browser-query.yaml"
            }
          },
          {
            "description": "Filter records by risk rule ID.",
            "example": "{{riskRule}}",
            "in": "query",
            "name": "riskRule",
            "schema": {
              "example": 12345678,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/risk-rule-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by firewall status. Either `good` or `poor`.",
            "example": "{{firewall}}",
            "in": "query",
            "name": "firewall",
            "schema": {
              "enum": [
                "good",
                "poor"
              ],
              "example": "good",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/firewall-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by anti-malware status. Either `good` or `poor`.",
            "example": "{{antiMalware}}",
            "in": "query",
            "name": "antiMalware",
            "schema": {
              "enum": [
                "good",
                "poor"
              ],
              "example": "good",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/anti-malware-query.yaml"
            }
          },
          {
            "description": "Filter records by client version.",
            "example": "{{clientVersion}}",
            "in": "query",
            "name": "clientVersion",
            "schema": {
              "example": "0.3.0",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/client-version-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only mobile device records in the response.",
            "example": "{{mobile}}",
            "in": "query",
            "name": "mobile",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/mobile-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with screen lock enabled in the response.",
            "example": "{{screenlock}}",
            "in": "query",
            "name": "screenlock",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/screenlock-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with biometrics enabled in the response.",
            "example": "{{biometric}}",
            "in": "query",
            "name": "biometric",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/biometric-query.yaml"
            }
          },
          {
            "description": "When enabled, the response returns only jailbroken devices.",
            "example": "{{jailbroken}}",
            "in": "query",
            "name": "jailbroken",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/jailbroken-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with disk encryption in the response.",
            "example": "{{diskEncryption}}",
            "in": "query",
            "name": "diskEncryption",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/disk-encryption-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with ETP threats in the response.",
            "example": "{{etpThreatDetected}}",
            "in": "query",
            "name": "etpThreatDetected",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/etp-threat-detected-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with Carbon Black running in the response.",
            "example": "{{cbHealthy}}",
            "in": "query",
            "name": "cbHealthy",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/cb-healthy-query.yaml"
            }
          },
          {
            "description": "Filter records by Carbon Black policy.",
            "example": "{{cbPolicy}}",
            "in": "query",
            "name": "cbPolicy",
            "schema": {
              "example": "default_policy",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/cb-policy-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with CrowdStrike running in the response.",
            "example": "{{crowdstrikeHealthy}}",
            "in": "query",
            "name": "crowdstrikeHealthy",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/crowdstrike-healthy-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by ETP client installation status. Either `installed` or `not-installed`.",
            "example": "{{etpClientStatus}}",
            "in": "query",
            "name": "etpClientStatus",
            "schema": {
              "enum": [
                "installed",
                "not-installed"
              ],
              "example": "not-installed",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/etp-client-status-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filters records by certificate profiles. Values are a comma separated list of IDs of the certificate profiles configured like `<Cert profile id 1>`, `<Cert profile id 2>`, `<Cert profile id 3>`.",
            "example": "{{certProfile}}",
            "in": "query",
            "name": "certProfile",
            "schema": {
              "enum": [
                "<Cert profile id 1>",
                "<Cert profile id 2>",
                "<Cert profile id 3>"
              ],
              "example": "<Cert profile id 1>",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/cert-profile-query.yaml"
            }
          },
          {
            "description": "Filter records by anti-malware profiles. Use a comma-separated list of IDs of anti-malware profiles.",
            "example": "{{antiMalwareProfile}}",
            "explode": false,
            "in": "query",
            "name": "antiMalwareProfile",
            "schema": {
              "example": "<AM profile id 2>,<AM profile id 3>",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/anti-malware-profile-query.yaml"
            }
          },
          {
            "description": "Filter records by a user specified value.",
            "example": "{{search}}",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "device_name",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/search-query.yaml"
            }
          },
          {
            "description": "__Enum__ Column name to sort the record set by. Either `deviceName`, `deviceId`, `userName`, `os`, `timestamp`, `idpUserName`, or `id`.",
            "example": "{{sortBy}}",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "enum": [
                "deviceName",
                "deviceId",
                "userName",
                "os",
                "timestamp",
                "id"
              ],
              "example": "timestamp",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/sort-by-query.yaml"
            }
          },
          {
            "description": "__Enum__ The sort direction for the column. Either `ASC` or `DESC`.",
            "example": "{{sortOrder}}",
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "example": "DESC",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/sort-order-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=40",
                    "offset": 20,
                    "previous": "?limit=20&offset=0",
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "anti_malware_info": [
                        {
                          "name": "Carbon Black",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": true
                        }
                      ],
                      "anti_malware_running": [
                        "Carbon Black",
                        "CrowdStrike Falcon Sensor"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Safari",
                          "version": "11.1.1"
                        }
                      ],
                      "carbon_black": {
                        "last_contact": null,
                        "policy_id": "N/A",
                        "policy_name": "policyA",
                        "sensor_version": "version123",
                        "status": "Active"
                      },
                      "certificate_profile": [
                        {
                          "name": "Certificate Profile 1",
                          "passed": false
                        },
                        {
                          "name": "Certificate Profile 2",
                          "passed": false
                        },
                        {
                          "name": "Certificate Profile 3",
                          "passed": true
                        }
                      ],
                      "client_version": "0.3.0",
                      "crowdstrike": {
                        "agent_status": "Healthy",
                        "aid": "7445e54fef9f49059c1b08c72skdhfjk",
                        "cid": "b8d9a8c2c8734cf8ab68c0a9rehfuegf",
                        "last_contact": "2020-08-26T03:10:46+00:00",
                        "sensor_version": "5.34.11501.0",
                        "validity": "Valid"
                      },
                      "device_id": "472d4ebbf2a9e9b05c6b1c366fb7df801d0fe59d18cf74e3a15476ba42549c6f",
                      "device_name": "mac-device-1",
                      "etp_client_status": "not-installed",
                      "etp_signals": {
                        "threat_detected": false
                      },
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "mobile_device": false,
                      "os_auto_update": true,
                      "os_name": "Mac OS X",
                      "os_update_timestamp": "2018-07-30T16:08:42Z",
                      "os_version": "10.13.5",
                      "risk_posture_tags": [
                        {
                          "id": 412,
                          "name": "WindowsOS_Preferred",
                          "passed": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ],
                          "tier": false
                        },
                        {
                          "id": 410,
                          "name": "MacOS_ONLY",
                          "passed": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ],
                          "tier": false
                        }
                      ],
                      "signal_timestamp": "2019-07-11T13:11:39.552703+00:00",
                      "system_disk_encryption": false,
                      "user_id": "test_user"
                    },
                    {
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "MS Defender",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Chrome",
                          "version": "75.0.3770.100"
                        },
                        {
                          "name": "Safari",
                          "version": "12.1.1"
                        }
                      ],
                      "carbon_black": {
                        "last_contact": null,
                        "policy_id": "N/A",
                        "policy_name": "policyA",
                        "sensor_version": "version123",
                        "status": "Active"
                      },
                      "certificate_profile": [
                        {
                          "name": "Certificate Profile 1",
                          "passed": true
                        },
                        {
                          "name": "Certificate Profile 2",
                          "passed": true
                        },
                        {
                          "name": "Certificate Profile 3",
                          "passed": true
                        }
                      ],
                      "client_version": "0.3.0",
                      "crowdstrike": {
                        "agent_status": "Unhealthy",
                        "aid": "7445e54fef9f49059c1b08c72skdhfjk",
                        "cid": "b8d9a8c2c8734cf8ab68c0a9rehfuegf",
                        "last_contact": null,
                        "sensor_version": "N/A",
                        "validity": "Invalid"
                      },
                      "device_id": "1c962e601cf36b2874ac1112117ccb6d179b3f5d0da7bf4d880d1a3707e0e761",
                      "device_name": "mac-device-2",
                      "etp_client_status": "installed",
                      "etp_signals": {
                        "threat_detected": false
                      },
                      "firewall_status": "good",
                      "idp_username": "username@akamai.com",
                      "mobile_device": false,
                      "os_auto_update": true,
                      "os_name": "Mac OS X",
                      "os_update_timestamp": "2018-10-30T19:28:50Z",
                      "os_version": "10.13.6",
                      "risk_posture_tags": [
                        {
                          "id": 395,
                          "name": "Finance Tag",
                          "passed": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ],
                          "tier": false
                        },
                        {
                          "id": 412,
                          "name": "WindowsOS_Preferred",
                          "passed": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ],
                          "tier": false
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ],
                          "tier": true
                        },
                        {
                          "id": 429,
                          "name": "Medium",
                          "passed": true,
                          "tier": true
                        }
                      ],
                      "signal_timestamp": "2019-07-11T13:30:59.907087+00:00",
                      "system_disk_encryption": true,
                      "user_id": "test_user"
                    },
                    {
                      "anti_malware_info": [
                        {
                          "name": "Carbon Black",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_running": [
                        "Carbon Black"
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "McAfee",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Chrome",
                          "version": "75.0.3770.90"
                        },
                        {
                          "name": "Safari",
                          "version": "12.1.1"
                        }
                      ],
                      "carbon_black": {
                        "last_contact": null,
                        "policy_id": "N/A",
                        "policy_name": "policyA",
                        "sensor_version": "version123",
                        "status": "Active"
                      },
                      "certificate_profile": [
                        {
                          "name": "Certificate Profile 1",
                          "passed": false
                        },
                        {
                          "name": "Certificate Profile 2",
                          "passed": true
                        },
                        {
                          "name": "Certificate Profile 3",
                          "passed": true
                        }
                      ],
                      "client_version": "0.3.0",
                      "crowdstrike": {
                        "agent_status": "Unhealthy",
                        "aid": "N/A",
                        "cid": "N/A",
                        "last_contact": null,
                        "sensor_version": "N/A",
                        "validity": "Invalid"
                      },
                      "device_id": "369b5c8a97e0085f813720f7cbc9753e8b667d8112e49e656713fbaa0dbe5115",
                      "device_name": "mac-device-3",
                      "etp_client_status": "installed",
                      "etp_signals": {
                        "threat_detected": false
                      },
                      "firewall_status": "good",
                      "idp_username": "username@akamai.com",
                      "mobile_device": false,
                      "os_auto_update": true,
                      "os_name": "Mac OS X",
                      "os_update_timestamp": "2019-05-23T03:13:44Z",
                      "os_version": "10.14.5",
                      "risk_posture_tags": [
                        {
                          "id": 411,
                          "name": "WindowsOS_only",
                          "passed": false,
                          "remediations": [
                            "Unsupported operating system."
                          ],
                          "tier": false
                        },
                        {
                          "id": 396,
                          "name": "Win_server_east",
                          "passed": true,
                          "tier": false
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": false,
                          "remediations": [
                            "Safari is out of date or not supported. Update your version of Safari browser or use a supported browser."
                          ],
                          "tier": true
                        },
                        {
                          "id": 429,
                          "name": "Medium",
                          "passed": true,
                          "tier": true
                        }
                      ],
                      "signal_timestamp": "2019-07-11T13:36:42.587985+00:00",
                      "system_disk_encryption": true,
                      "user_id": "test_user"
                    },
                    {
                      "browsers": [],
                      "client_version": "0.9",
                      "device_biometric": true,
                      "device_id": "4B1CF385-01F3-4711-96B7-3A3DD7E354F9",
                      "device_jailbroken": false,
                      "device_name": "iPhone",
                      "device_screen_lock": true,
                      "idp_username": "username@akamai.com",
                      "mobile_device": true,
                      "os_auto_update": null,
                      "os_build": "16F203",
                      "os_name": "iOS",
                      "os_update_timestamp": null,
                      "os_version": "12.3.1",
                      "risk_posture_tags": [
                        {
                          "id": 410,
                          "name": "MacOS_ONLY",
                          "passed": false,
                          "remediations": [
                            "Unsupported operating system."
                          ],
                          "tier": false
                        },
                        {
                          "id": 451,
                          "name": "mobile",
                          "passed": true,
                          "tier": false
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": true,
                          "tier": true
                        }
                      ],
                      "signal_timestamp": "2019-07-12T18:55:04.240586+00:00",
                      "user_id": "245c5c846caad74f21e2e44f5df2a49d"
                    },
                    {
                      "browsers": [],
                      "client_version": "0.9",
                      "device_biometric": true,
                      "device_id": "128DCDE5-ACB0-411A-8428-5BEAAD983D0C",
                      "device_jailbroken": false,
                      "device_name": "iPhone",
                      "device_screen_lock": true,
                      "idp_username": "username@akamai.com",
                      "mobile_device": true,
                      "os_auto_update": null,
                      "os_build": "16F203",
                      "os_name": "iOS",
                      "os_update_timestamp": null,
                      "os_version": "12.3.1",
                      "risk_posture_tags": [
                        {
                          "id": 382,
                          "name": "E2E-tag",
                          "passed": false,
                          "remediations": [
                            "Unsupported operating system."
                          ],
                          "tier": false
                        },
                        {
                          "id": 411,
                          "name": "WindowsOS_only",
                          "passed": false,
                          "remediations": [
                            "Unsupported operating system."
                          ],
                          "tier": false
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": true,
                          "tier": true
                        }
                      ],
                      "signal_timestamp": "2019-07-12T00:07:04.899075+00:00",
                      "user_id": "245c5c846caad74f21e2e44f5df2a49d"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Device inventory data.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Device inventory anti-malware information.",
                        "properties": {
                          "anti_malware_info": {
                            "description": "The device's set of anti-malware software.",
                            "items": {
                              "additionalProperties": false,
                              "description": "The anti-malware name and status for a device.",
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware software.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "Whether the device passed anti-malware checks. ",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "anti_malware_running": {
                            "description": "The devices currently active set of anti-malware software.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "anti_malware_status": {
                            "description": "Names and status of anti-malware software currently active on the device.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware profile.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "Whether the device passed anti-malware checks. ",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "browsers": {
                            "description": "Browsers active on the device.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the browser.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "version": {
                                  "description": "The version of the browser.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "carbon_black": {
                            "additionalProperties": false,
                            "description": "Carbon Black anti-malware data for a device.",
                            "properties": {
                              "last_contact": {
                                "description": "ISO 8601 timestamp marking the last communication between the device's Carbon Black client and the Carbon Black server.",
                                "nullable": true,
                                "type": "string"
                              },
                              "policy_id": {
                                "description": "Identifies the Carbon Black policy assigned to the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "policy_name": {
                                "description": "The name of the Carbon Black policy assigned to the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sensor_version": {
                                "description": "The version of Carbon Black installed on the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the Carbon Black client as returned by the Carbon Black server. Either `Active` or `Inactive`.",
                                "enum": [
                                  "Active",
                                  "Inactive"
                                ],
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "certificate_profile": {
                            "description": "The certificate profile name and status for a device.",
                            "items": {
                              "additionalProperties": false,
                              "description": "The certificate profile name and status for a device.",
                              "properties": {
                                "name": {
                                  "description": "The name of the certificate profile.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "The status of the device for the certificate profile.",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "client_version": {
                            "description": "The version of the client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "crowdstrike": {
                            "additionalProperties": false,
                            "description": "CrowdStrike anti-malware sensor data for a device.",
                            "properties": {
                              "agent_status": {
                                "description": "The health status of the Crowdstrike Falcon Sensor as assessed by the Device Posture Service. Either `Healthy` or `Unhealthy`.",
                                "enum": [
                                  "Healthy",
                                  "Unhealthy"
                                ],
                                "type": "string"
                              },
                              "aid": {
                                "description": "The connector ID of the unique CrowdStrike Falcon Sensor for every device of that organization.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "cid": {
                                "description": "The Customer ID of the CrowdStrike Falcon Sensor used by all devices in an organization.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "last_contact": {
                                "description": "ISO 8601 timestamp marking the last communication between the CrowdStrike Falcon Sensor and the CrowdStrike server.",
                                "nullable": true,
                                "type": "string"
                              },
                              "sensor_version": {
                                "description": "The version of CrowdStrike Falcon Sensor installed on the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "validity": {
                                "description": "The validity of the agent ID and customer ID.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "device_biometric": {
                            "description": "Enables biometrics on the device.",
                            "type": "boolean"
                          },
                          "device_id": {
                            "description": "A unique identifier for the device.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "device_jailbroken": {
                            "description": "Whether the device is running a modified or unauthorized version of the operating system.",
                            "type": "boolean"
                          },
                          "device_name": {
                            "description": "The name of the device.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "device_screen_lock": {
                            "description": "Enables the device's screen lock functionality.",
                            "type": "boolean"
                          },
                          "etp_client_status": {
                            "description": "Whether ETP client is `installed` or `not-installed`.",
                            "enum": [
                              "installed",
                              "not-installed"
                            ],
                            "type": "string"
                          },
                          "etp_signals": {
                            "additionalProperties": false,
                            "description": "Signal data from Secure Internet Access, formerly Enterprise Threat Protector.",
                            "properties": {
                              "threat_detected": {
                                "description": "Whether ETP threats have been detected for the device.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "firewall_status": {
                            "description": "The status of the firewall. Either `good` or `poor`.",
                            "enum": [
                              "poor",
                              "good"
                            ],
                            "type": "string"
                          },
                          "idp_username": {
                            "description": "A unique identifier for the IDP username.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "mobile_device": {
                            "description": "Whether the device is a mobile device.",
                            "type": "boolean"
                          },
                          "os_auto_update": {
                            "description": "Enables the device's operating system Auto Update feature.",
                            "nullable": true,
                            "type": "boolean"
                          },
                          "os_build": {
                            "description": "The build of the operating system version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_name": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_update_timestamp": {
                            "description": "ISO 8601 timestamp marking when the last operating system update occurred.",
                            "nullable": true,
                            "type": "string"
                          },
                          "os_version": {
                            "description": "The version of the operating system.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "risk_posture_tags": {
                            "description": "The device's pass or fail status and the available risk tags for the configuration.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Device risk assessment tag information.",
                              "properties": {
                                "count": {
                                  "description": "The number of devices passing the criteria specified for this risk assessment rule.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "A unique identifier for this risk assessment rule.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the risk assessment rule.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "Whether the device passed the risk assessement.",
                                  "type": "boolean"
                                },
                                "remediations": {
                                  "description": "Details about the risk and nstructions to remediate the risk.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "tier": {
                                  "description": "Whether the rule is a tier.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "tier",
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/device-summary-risk-assessment.yaml"
                              }
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "risk_posture_tiers": {
                            "description": "The device's pass or fail status and the available risk tiers for the configuration.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Device risk assessment tag information.",
                              "properties": {
                                "count": {
                                  "description": "The number of devices passing the criteria specified for this risk assessment rule.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "A unique identifier for this risk assessment rule.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the risk assessment rule.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "Whether the device passed the risk assessement.",
                                  "type": "boolean"
                                },
                                "remediations": {
                                  "description": "Details about the risk and nstructions to remediate the risk.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "tier": {
                                  "description": "Whether the rule is a tier.",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "tier",
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/device-summary-risk-assessment.yaml"
                              }
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "signal_timestamp": {
                            "description": "ISO 8601 timestamp marking the latest signal received from the device.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "system_disk_encryption": {
                            "description": "Whether the device's disk is encrypted.",
                            "type": "boolean"
                          },
                          "user_id": {
                            "description": "The user for the device.",
                            "minLength": 0,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/device-inventory.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List device inventory",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/list.yaml",
        "path-info": "/device-posture/inventory/list"
      }
    },
    "/device-posture/inventory/summary/anti-malware-status": {
      "get": {
        "description": "Lists anti-malware status signals metrics acquired from device application access. The response groups statuses by `value` and sums by `count`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-anti-malware-status"
        },
        "operationId": "get-anti-malware-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ],
                "schema": {
                  "description": "Device signal information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "count",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-summary.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "x-akamai": {
              "file-path": "errors/signal-summary-request-200.yaml"
            }
          }
        },
        "summary": "List anti-malware status",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/anti-malware-status.yaml",
        "path-info": "/device-posture/inventory/summary/anti-malware-status"
      }
    },
    "/device-posture/inventory/summary/browsers": {
      "get": {
        "description": "Lists installed browser activity metrics for devices connecting to your applications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-summary-browsers"
        },
        "operationId": "get-summary-browsers",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "custom": 12,
                    "latest": 11100,
                    "name": "Chrome",
                    "outdated": 124
                  },
                  {
                    "custom": 3594,
                    "latest": 36,
                    "name": "Edge",
                    "outdated": 6143
                  },
                  {
                    "custom": 42,
                    "latest": 1349,
                    "name": "Firefox",
                    "outdated": 1483
                  },
                  {
                    "custom": 0,
                    "latest": 11525,
                    "name": "Internet Explorer",
                    "outdated": 180
                  },
                  {
                    "custom": 7,
                    "latest": 72,
                    "name": "Opera",
                    "outdated": 0
                  },
                  {
                    "custom": 2,
                    "latest": 18,
                    "name": "Safari",
                    "outdated": 0
                  }
                ],
                "schema": {
                  "description": "Device activity information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "custom": {
                        "description": "The number of browsers running custom versions.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "latest": {
                        "description": "The total number of browsers running the latest version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the browser.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "outdated": {
                        "description": "The total number of browsers running an outdated version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name",
                      "latest",
                      "custom",
                      "outdated"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/browsers.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List browser activity",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/browsers.yaml",
        "path-info": "/device-posture/inventory/summary/browsers"
      }
    },
    "/device-posture/inventory/summary/device-biometric": {
      "get": {
        "description": "Lists activity metrics for biometrics signals acquired from devices accessing your applications. The response groups statuses by `value` and sums by `count`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-biometric"
        },
        "operationId": "get-device-biometric",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ],
                "schema": {
                  "description": "Device signal information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "count",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-summary.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "x-akamai": {
              "file-path": "errors/signal-summary-request-200.yaml"
            }
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "List devices with biometrics",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/device-biometric.yaml",
        "path-info": "/device-posture/inventory/summary/device-biometric"
      }
    },
    "/device-posture/inventory/summary/device-jailbroken": {
      "get": {
        "description": "Lists jailbroken device signal metrics acquired from device application access. The response groups statuses by `value` and sums by `count`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-jailbroken"
        },
        "operationId": "get-device-jailbroken",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ],
                "schema": {
                  "description": "Device signal information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "count",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-summary.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "x-akamai": {
              "file-path": "errors/signal-summary-request-200.yaml"
            }
          }
        },
        "summary": "List jailbroken devices",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/device-jailbroken.yaml",
        "path-info": "/device-posture/inventory/summary/device-jailbroken"
      }
    },
    "/device-posture/inventory/summary/device-roll-ups": {
      "get": {
        "description": "Lists activity metrics of devices connecting  to your applications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-roll-ups"
        },
        "operationId": "get-device-roll-ups",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "check_in_count": 40,
                    "device_count": 250,
                    "timestamp": "2019-03-19T21:00:00+00:00"
                  },
                  {
                    "check_in_count": 45,
                    "device_count": 250,
                    "timestamp": "2019-03-20T00:00:00+00:00"
                  },
                  {
                    "check_in_count": 50,
                    "device_count": 250,
                    "timestamp": "2019-03-20T13:00:00+00:00"
                  }
                ],
                "schema": {
                  "description": "Device activity information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "check_in_count": {
                        "description": "The number of device check-ins.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "device_count": {
                        "description": "The number of unique devices.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "timestamp": {
                        "description": "ISO 8601 timestamp marking the signal's acquisition.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "check_in_count",
                      "device_count",
                      "timestamp"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/roll-ups.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List device activity",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/device-roll-ups.yaml",
        "path-info": "/device-posture/inventory/summary/device-roll-ups"
      }
    },
    "/device-posture/inventory/summary/device-screen-lock": {
      "get": {
        "description": "Lists device screen lock signal metrics acquired from device application access. The response groups statuses by `value` and sums by `count`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-screen-lock"
        },
        "operationId": "get-device-screen-lock",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ],
                "schema": {
                  "description": "Device signal information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "count",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-summary.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "x-akamai": {
              "file-path": "errors/signal-summary-request-200.yaml"
            }
          }
        },
        "summary": "List device screen lock",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/device-screen-lock.yaml",
        "path-info": "/device-posture/inventory/summary/device-screen-lock"
      }
    },
    "/device-posture/inventory/summary/firewall-status": {
      "get": {
        "description": "Lists activity metrics for firewall status signals acquired from devices accessing your applications. The response groups statuses by `value` and sums by `count`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-firewall-status"
        },
        "operationId": "get-firewall-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ],
                "schema": {
                  "description": "Device signal information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "count",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-summary.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "x-akamai": {
              "file-path": "errors/signal-summary-request-200.yaml"
            }
          }
        },
        "summary": "List firewall status",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/firewall-status.yaml",
        "path-info": "/device-posture/inventory/summary/firewall-status"
      }
    },
    "/device-posture/inventory/summary/os": {
      "get": {
        "description": "Lists activity metrics for installed operating  systems of devices connecting to your applications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-summary-os"
        },
        "operationId": "get-summary-os",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "custom": 191,
                    "latest": 33,
                    "name": "Mac OS X",
                    "outdated": 65,
                    "updated": 26
                  },
                  {
                    "custom": 0,
                    "latest": 61,
                    "name": "Windows 10",
                    "outdated": 0,
                    "updated": 3
                  },
                  {
                    "custom": 5,
                    "latest": 63,
                    "name": "iOS",
                    "outdated": 0,
                    "updated": 0
                  }
                ],
                "schema": {
                  "description": "Device operating system (OS) information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "custom": {
                        "description": "The number of devices with a custom OS on a valid version as set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "latest": {
                        "description": "The number of devices with the latest OS version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the operating system.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "outdated": {
                        "description": "The number of devices with an outdated OS version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "updated": {
                        "description": "The number of devices with an updated OSversion set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "custom",
                      "name",
                      "latest",
                      "outdated",
                      "updated"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/operating-systems.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List operating system activity",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/os.yaml",
        "path-info": "/device-posture/inventory/summary/os"
      }
    },
    "/device-posture/inventory/summary/risk-assessment": {
      "get": {
        "description": "Lists activity metrics for risk assessment rules of devices connected to your applications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-risk-assessment"
        },
        "operationId": "get-risk-assessment",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 19,
                    "id": 298,
                    "name": "Finance Tag",
                    "tier": false
                  },
                  {
                    "count": 57,
                    "id": 299,
                    "name": "Engineering Tag",
                    "tier": false
                  },
                  {
                    "count": 86,
                    "id": 255,
                    "name": "Low",
                    "tier": true
                  },
                  {
                    "count": 15,
                    "id": 256,
                    "name": "Medium",
                    "tier": true
                  },
                  {
                    "count": 150,
                    "id": 257,
                    "name": "High",
                    "tier": true
                  }
                ],
                "schema": {
                  "description": "Device risk assessment rule information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The total number of devices that pass the criteria specified for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "A unique identifier for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk assessment rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tier": {
                        "description": "Whether the rule is a tier.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "count",
                      "name",
                      "tier"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/risk-assessment.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List device risk assessment",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/risk-assessment.yaml",
        "path-info": "/device-posture/inventory/summary/risk-assessment"
      }
    },
    "/device-posture/inventory/summary/system-disk-encryption": {
      "get": {
        "description": "Lists activity metrics for disk encryption signals acquired from devices accessing your applications. The response groups statuses by `value` and sums by `count`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-disk-encryption"
        },
        "operationId": "get-disk-encryption",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ],
                "schema": {
                  "description": "Device signal information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "count",
                      "value"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-summary.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "x-akamai": {
              "file-path": "errors/signal-summary-request-200.yaml"
            }
          }
        },
        "summary": "List system disk encryption",
        "tags": [
          "Device inventory"
        ]
      },
      "x-akamai": {
        "file-path": "paths/system-disk-encryption.yaml",
        "path-info": "/device-posture/inventory/summary/system-disk-encryption"
      }
    },
    "/device-posture/risk-assessment/available-browsers": {
      "get": {
        "description": "Lists supported browser versions for risk assessment. Unlisted browsers aren't supported for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-available-browsers"
        },
        "operationId": "get-available-browsers",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "date": "2020-04-27",
                    "latest": "81.0.4044.129",
                    "name": "Chrome"
                  },
                  {
                    "date": "2020-04-06",
                    "latest": "75.0",
                    "name": "Firefox"
                  },
                  {
                    "date": "2020-04-29",
                    "latest": "68.0.3618.63",
                    "name": "Opera"
                  },
                  {
                    "date": "2020-03-24",
                    "latest": "13.1",
                    "name": "Safari"
                  },
                  {
                    "date": "2020-01-16",
                    "latest": "79.0.309.68",
                    "name": "Edge"
                  },
                  {
                    "date": "2020-04-14",
                    "latest": "11.0.185",
                    "name": "Internet Explorer"
                  }
                ],
                "schema": {
                  "description": "Web browsers available for the version.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "date": {
                        "description": "ISO 8601 timestamp marking the browser version's release date.",
                        "type": "string"
                      },
                      "latest": {
                        "description": "Newest major version of the web browser.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the web browser.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "latest",
                      "name",
                      "date"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/available-browser-ver.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List available browser versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/available-browsers.yaml",
        "path-info": "/device-posture/risk-assessment/available-browsers"
      }
    },
    "/device-posture/risk-assessment/available-client-ver": {
      "get": {
        "description": "Lists supported client versions for risk assessment. Unlisted client versions aren't supported for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-client-versions"
        },
        "operationId": "get-client-versions",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "date": "2020-11-10",
                  "latest": "2.1.1",
                  "perOSVersions": [
                    {
                      "date": "2020-11-12",
                      "latest": "2.1.2",
                      "platform": "macOS",
                      "upToDate": [
                        {
                          "date": "2020-11-05",
                          "version": "2.1.1"
                        },
                        {
                          "date": "2019-10-29",
                          "version": "2.0.4"
                        }
                      ]
                    },
                    {
                      "date": "2020-11-10",
                      "latest": "2.1.2",
                      "platform": "Windows",
                      "upToDate": [
                        {
                          "date": "2020-11-10",
                          "version": "2.0.4"
                        },
                        {
                          "date": "2020-11-10",
                          "version": "1.4.0"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Available client versions for configuration.",
                  "properties": {
                    "date": {
                      "description": "The date of release of latest available version of the client that's supported by the product.",
                      "format": "date",
                      "type": "string"
                    },
                    "latest": {
                      "description": "The latest available version of the client that's supported by the product.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "perOSVersions": {
                      "description": "Available client versions for each platform.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "date": {
                            "description": "The date of release of latest available version of the client.",
                            "format": "date",
                            "type": "string"
                          },
                          "latest": {
                            "description": "The latest available version of the client that's supported by the product for the platform.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "platform": {
                            "description": "The platform of the client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "upToDate": {
                            "description": "Information on fully patched releases of all major versions supported by the OS vendor. Required only for macOS or Windows platforms.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "date": {
                                  "description": "The release date of the version number.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Up-to-date version number.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "required": [
                          "date"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "latest",
                    "date",
                    "perOSVersions"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/available-client-ver.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List available client versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/available-client-ver.yaml",
        "path-info": "/device-posture/risk-assessment/available-client-ver"
      }
    },
    "/device-posture/risk-assessment/available-os-ver": {
      "get": {
        "description": "Lists supported operating system versions  for risk assessment. Unlisted versions aren't supported for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-os-versions"
        },
        "operationId": "get-os-versions",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "date": "2019-09-03",
                    "latest": "10",
                    "name": "Android",
                    "upToDate": [
                      {
                        "date": "2018-08-06",
                        "version": "9.0"
                      }
                    ]
                  },
                  {
                    "date": "2020-04-07",
                    "latest": "13.4.1 (17E262)",
                    "name": "iOS",
                    "upToDate": [
                      {
                        "date": "2019-09-26",
                        "version": "12.4.2 (16G114)"
                      },
                      {
                        "date": "2018-05-29",
                        "version": "11.4 (15F79)"
                      }
                    ]
                  },
                  {
                    "date": "2021-02-01",
                    "latest": "Big Sur 11.2 (20D64)",
                    "name": "macOS",
                    "upToDate": [
                      {
                        "date": "2021-02-01",
                        "version": "Catalina 10.15.7 (19H512)"
                      },
                      {
                        "date": "2021-02-01",
                        "version": "Mojave 10.14.6 (18G8012)"
                      }
                    ]
                  },
                  {
                    "date": "2020-04-21",
                    "latest": "1909 (18363.815)",
                    "name": "Windows",
                    "upToDate": [
                      {
                        "date": "2020-04-21",
                        "version": "1903 (18362.815)"
                      },
                      {
                        "date": "2020-04-21",
                        "version": "1809 (17763.1192)"
                      }
                    ]
                  }
                ],
                "schema": {
                  "description": "Operating system versions available for the version.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "date": {
                        "description": "The date of the operating system version's last update.",
                        "type": "string"
                      },
                      "latest": {
                        "description": "The operating system's latest supported version.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "mobile": {
                        "description": "Indicates a mobile device operating system.",
                        "nullable": true,
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the operating system.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "upToDate": {
                        "description": "Fully patched releases of all major versions supported by the OS vendor.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "date": {
                              "description": "ISO 8601 timestamp marking the version's release.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The operating system version.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "version",
                            "date"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "required": [
                      "latest",
                      "name",
                      "upToDate"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/available-os-ver.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List available operating system versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/available-os-ver.yaml",
        "path-info": "/device-posture/risk-assessment/available-os-ver"
      }
    },
    "/device-posture/risk-assessment/ca-ocsp": {
      "get": {
        "description": "Get CA and OCSP information for use in certificate profiles.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-ca-ocsp"
        },
        "operationId": "get-ca-ocsp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "ca": [
                    {
                      "id": "BQWK7x1cdaiTKC-9cfEANu",
                      "name": "primary CA"
                    },
                    {
                      "id": "glq7Av4Vq2TT--3tDp9Mej",
                      "name": "CA 2"
                    }
                  ],
                  "ocsp": [
                    {
                      "id": "rOe8GyLtRuWSRkPWqHz6AA",
                      "name": "OCSP 1"
                    },
                    {
                      "id": "wp9edkDYWrruqRULe71ALg",
                      "name": "OCSP 2"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The configuration's Certificate Authority and Online Certificate Status Protocol information.",
                  "properties": {
                    "ca": {
                      "description": "Certificate authority information.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the CA.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the CA.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "ocsp": {
                      "description": "OCSP server information.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the OCSP server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the OCSP server.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "ca",
                    "ocsp"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/all-ca-ocsp.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get CA and OCSP information",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/ca-ocsp.yaml",
        "path-info": "/device-posture/risk-assessment/ca-ocsp"
      }
    },
    "/device-posture/risk-assessment/certificate-profiles": {
      "post": {
        "description": "Creates a new Certificate profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-certificate-profile"
        },
        "operationId": "post-certificate-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                "name": "Certificate Profile Example",
                "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                "revocationStatus": true,
                "tpmAttested": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "A certificate profile.",
                "properties": {
                  "caId": {
                    "description": "The ID of the CA used with the certificate profile.",
                    "example": "{{caId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the certificate profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspId": {
                    "description": "The ID of the OCSP used with the certificate profile.",
                    "example": "{{ocspId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "revocationStatus": {
                    "description": "Enable or disable the OCSP check.",
                    "example": "{{revocationStatus}}",
                    "type": "boolean"
                  },
                  "tpmAttested": {
                    "description": "Enables the trusted platform module (TPM) check.",
                    "example": "{{tpmAttested}}",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "caId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-profile.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "id": 1
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The ID of the certificate profile created.",
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the created certificate profile.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-profile-id.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "headers": {
              "Location": {
                "description": "The unique identifier for the newly created resource. Append this ID to a subsequent GET call to view the resource details.",
                "schema": {
                  "example": 1100,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/location-header.yaml"
                }
              }
            }
          }
        },
        "summary": "Create certificate profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "get": {
        "description": "Lists the existing certificate profiles.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-profiles"
        },
        "operationId": "get-certificate-profiles",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                    "id": 1,
                    "name": "Certificate Profile Example 1",
                    "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                    "revocationStatus": true,
                    "tpmAttested": false
                  },
                  {
                    "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                    "id": 2,
                    "name": "Certificate Profile Example 2",
                    "ocspId": "llwoyIHyEQ7IRQPo-5LrA3w",
                    "revocationStatus": true,
                    "tpmAttested": true
                  }
                ],
                "schema": {
                  "description": "A list of certificate profiles for the contract ID.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "caId": {
                        "description": "Unique identifier of the CA.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "id": {
                        "description": "Unique identifier of the certificate profile.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "Name of the certificate profile.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "ocspId": {
                        "description": "Unique identifier of the OCSP server.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "revocationStatus": {
                        "description": "Enables the OCSP check.",
                        "type": "boolean"
                      },
                      "tpmAttested": {
                        "description": "Enables the trusted platform module (TPM) check.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/certificate-profile-list.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List certificate profiles",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/certificate-profiles.yaml",
        "path-info": "/device-posture/risk-assessment/certificate-profiles"
      }
    },
    "/device-posture/risk-assessment/certificate-profiles/{certificateProfileId}": {
      "get": {
        "description": "Get a certificate profile by its id.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-profile"
        },
        "operationId": "get-certificate-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "caId": "BQWK7x1cdaiTKC-9cfEANu",
                  "id": 1,
                  "name": "Certificate Profile Example",
                  "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                  "revocationStatus": true,
                  "tpmAttested": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Certificate profile information.",
                  "properties": {
                    "caId": {
                      "description": "The ID of the CA used with the certificate profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier of the created certificate profile.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the certificate profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ocspId": {
                      "description": "The ID of the OCSP used with the certificate profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "revocationStatus": {
                      "description": "Enable or disable the OCSP check.",
                      "type": "boolean"
                    },
                    "tpmAttested": {
                      "description": "Enables the trusted platform module (TPM) check.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "caId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-profile-with-id.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get certificate profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Update a certificate profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-certificate-profile"
        },
        "operationId": "put-certificate-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                "name": "Certificate Profile Example",
                "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                "revocationStatus": true,
                "tpmAttested": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "A certificate profile.",
                "properties": {
                  "caId": {
                    "description": "The ID of the CA used with the certificate profile.",
                    "example": "{{caId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the certificate profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspId": {
                    "description": "The ID of the OCSP used with the certificate profile.",
                    "example": "{{ocspId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "revocationStatus": {
                    "description": "Enable or disable the OCSP check.",
                    "example": "{{revocationStatus}}",
                    "type": "boolean"
                  },
                  "tpmAttested": {
                    "description": "Enables the trusted platform module (TPM) check.",
                    "example": "{{tpmAttested}}",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "caId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-profile.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Update certificate profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "delete": {
        "description": "Delete a certificate profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-certificate-profile"
        },
        "operationId": "delete-certificate-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete certificate profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the certificate profile.",
          "example": "{{certificateProfileId}}",
          "in": "path",
          "name": "certificateProfileId",
          "required": true,
          "schema": {
            "example": 123,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/certificate-profile-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/certificate-profile.yaml",
        "path-info": "/device-posture/risk-assessment/certificate-profiles/{certificateProfileId}"
      }
    },
    "/device-posture/risk-assessment/certificate-usage/anti-malware-profiles": {
      "post": {
        "description": "Creates a new anti-malware profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-anti-malware-profile"
        },
        "operationId": "post-anti-malware-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "mac": "Avast",
                "name": "Anti-Malware Profile 1",
                "windows": "Avast"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Anti-malware profile information.",
                "properties": {
                  "mac": {
                    "description": "Name of the anti-malware vendor on macOS devices.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the anti-malware profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "windows": {
                    "description": "Name of the anti-malware vendor on Windows devices.",
                    "example": "{{windows}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/anti-malware-profile.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "id": 2
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "ID of the anti-malware profile created.",
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the created anti-malware profile.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/anti-malware-profile-id.yaml"
                  }
                }
              }
            },
            "description": "Successful response.",
            "headers": {
              "Location": {
                "description": "The unique identifier for the newly created resource. Append this ID to a subsequent GET call to view the resource details.",
                "schema": {
                  "example": 1100,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/location-header.yaml"
                }
              }
            }
          }
        },
        "summary": "Create an anti-malware profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "get": {
        "description": "Lists the existing anti-malware profiles.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-anti-malware-profiles"
        },
        "operationId": "get-anti-malware-profiles",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "mac": "Any Vendor",
                    "name": "Any Vendor",
                    "windows": "Any Vendor"
                  },
                  {
                    "id": 2,
                    "mac": "Avast",
                    "name": "Anti-Malware Profile Example 1",
                    "windows": "Avast"
                  },
                  {
                    "id": 3,
                    "mac": "N/A",
                    "name": "Anti-Malware Profile Example 2",
                    "windows": "McAfee"
                  }
                ],
                "schema": {
                  "description": "Anti-malware profiles for your account.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "description": "Unique identifier of the anti-malware profile.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "mac": {
                        "description": "Name of the anti-malware vendor on macOS devices.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the anti-malware profile.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "windows": {
                        "description": "Name of the anti-malware vendor on Windows devices.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/anti-malware-profile-list.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List anti-malware profiles",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/anti-malware-profiles.yaml",
        "path-info": "/device-posture/risk-assessment/certificate-usage/anti-malware-profiles"
      }
    },
    "/device-posture/risk-assessment/certificate-usage/anti-malware-profiles/{antiMalwareProfileId}": {
      "get": {
        "description": "Get an anti-malware profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-anti-malware-profile"
        },
        "operationId": "get-anti-malware-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "mac": "Avast",
                  "name": "Anti-Malware Profile Example 1",
                  "windows": "Avast"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Anti-malware profile information.",
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the created anti-malware profile.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "mac": {
                      "description": "Name of the anti-malware vendor on macOS devices.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the anti-malware profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "windows": {
                      "description": "Name of the anti-malware vendor on Windows devices.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/anti-malware-profile-with-id.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an anti-malware profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Update an Anti-Malware profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-anti-malware-profile"
        },
        "operationId": "put-anti-malware-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "mac": "Avast",
                "name": "Anti-Malware Profile 1",
                "windows": "Avast"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Anti-malware profile information.",
                "properties": {
                  "mac": {
                    "description": "Name of the anti-malware vendor on macOS devices.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the anti-malware profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "windows": {
                    "description": "Name of the anti-malware vendor on Windows devices.",
                    "example": "{{windows}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/anti-malware-profile.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Update an anti-malware profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "delete": {
        "description": "Delete an anti-malware profile.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-anti-malware-profile"
        },
        "operationId": "delete-anti-malware-profile",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete an anti-malware profile",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier of the anti-malware profile.",
          "example": "{{antiMalwareProfileId}}",
          "in": "path",
          "name": "antiMalwareProfileId",
          "required": true,
          "schema": {
            "example": 352,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/anti-malware-profile-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/anti-malware-profile.yaml",
        "path-info": "/device-posture/risk-assessment/certificate-usage/anti-malware-profiles/{antiMalwareProfileId}"
      }
    },
    "/device-posture/risk-assessment/certificate-usage/ca": {
      "get": {
        "description": "Lists CA usage information.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-usage-ca"
        },
        "operationId": "get-certificate-usage-ca",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "EMEA CA risk cert",
                  "in_use": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "CA usage information.",
                  "properties": {
                    "description": {
                      "description": "Certificate profiles that use the CA.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "in_use": {
                      "description": "The in-user property of the configured CA.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/ca-usage.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get CA information",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/ca.yaml",
        "path-info": "/device-posture/risk-assessment/certificate-usage/ca"
      }
    },
    "/device-posture/risk-assessment/certificate-usage/ocsp": {
      "get": {
        "description": "Lists OCSP usage information.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-usage-ocsp"
        },
        "operationId": "get-certificate-usage-ocsp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Prod OCSP risk cert",
                  "in_use": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "OCSP usage information.",
                  "properties": {
                    "description": {
                      "description": "Certificate profiles that use the OCSP server.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "in_use": {
                      "description": "The in-user property of the configured OCSP server.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/ocsp-usage.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get OCSP information",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/ocsp.yaml",
        "path-info": "/device-posture/risk-assessment/certificate-usage/ocsp"
      }
    },
    "/device-posture/risk-assessment/chosen-versions": {
      "get": {
        "description": "Lists the chosen versions of different risk assessment dimensions.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-chosen-versions"
        },
        "operationId": "get-chosen-versions",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "browsers": [
                    {
                      "custom": [
                        "11.0.155"
                      ],
                      "gracePeriod": 180,
                      "name": "Internet Explorer"
                    },
                    {
                      "custom": [],
                      "gracePeriod": 180,
                      "name": "Opera"
                    }
                  ],
                  "client": {
                    "gracePeriod": 1,
                    "name": "EAA Client"
                  },
                  "eaaclient": [
                    {
                      "custom": [],
                      "gracePeriod": 180,
                      "platform": "Android"
                    },
                    {
                      "custom": [],
                      "gracePeriod": 180,
                      "platform": "macOS",
                      "upToDate": [
                        "10.13.7"
                      ]
                    },
                    {
                      "custom": [],
                      "gracePeriod": 180,
                      "platform": "windows",
                      "upToDate": [
                        "2.1.1"
                      ]
                    }
                  ],
                  "os": [
                    {
                      "custom": [],
                      "gracePeriod": 180,
                      "name": "Android"
                    },
                    {
                      "custom": [
                        "17F77",
                        "18A391",
                        "18G1012",
                        "18G84",
                        "18G95",
                        "18G103"
                      ],
                      "gracePeriod": 180,
                      "name": "macOS",
                      "upToDate": [
                        "Catalina 10.15.7 (19H15)",
                        "Mojave 10.14.6 (18G1012)"
                      ]
                    },
                    {
                      "custom": [
                        "18362.239",
                        "7601.24511",
                        "18362.295",
                        "18362.356"
                      ],
                      "gracePeriod": 180,
                      "name": "Windows",
                      "upToDate": [
                        "2004 (19041.630)",
                        "1909 (18363.1198)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The versions selected for different dimensions of device risk assessment.",
                  "properties": {
                    "browsers": {
                      "description": "The browser version details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "custom": {
                            "description": "Custom combinations of different browser versions.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "gracePeriod": {
                            "description": "The number of days the previous version is valid until it's deprecated.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the web browser.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "custom",
                          "gracePeriod",
                          "name"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "client": {
                      "additionalProperties": false,
                      "description": "The selected client versions.",
                      "properties": {
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the client.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "gracePeriod",
                        "name"
                      ],
                      "type": "object"
                    },
                    "eaaclient": {
                      "description": "The per-OS version selections for EAA clients.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "custom": {
                            "description": "Custom combinations of different OS versions.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "gracePeriod": {
                            "description": "The number of days the previous version is valid.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "platform": {
                            "description": "The platform on which the EAA client runs.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "upToDate": {
                            "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "os": {
                      "description": "The selected operating system version details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "custom": {
                            "description": "The OS version. For macOS this is the build number, such as `19H15` for macOS Catalina 10.15.7.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "gracePeriod": {
                            "description": "The number of days the previous version is valid until it's deprecated.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "upToDate": {
                            "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "required": [
                          "custom",
                          "gracePeriod",
                          "name"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "browsers",
                    "client",
                    "os",
                    "eaaclient"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/chosen-versions.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List chosen versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Updates the chosen versions selection of different risk assessment dimensions.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-chosen-versions"
        },
        "operationId": "put-chosen-versions",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "browsers": [
                  {
                    "custom": [
                      "11.0.155"
                    ],
                    "gracePeriod": 180,
                    "name": "Internet Explorer"
                  },
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "name": "Opera"
                  }
                ],
                "client": {
                  "gracePeriod": 1,
                  "name": "EAA Client"
                },
                "eaaclient": [
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "platform": "Android"
                  },
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "platform": "macOS",
                    "upToDate": [
                      "10.13.7"
                    ]
                  },
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "platform": "windows",
                    "upToDate": [
                      "2.1.1"
                    ]
                  }
                ],
                "os": [
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "name": "Android"
                  },
                  {
                    "custom": [
                      "17F77",
                      "18A391",
                      "18G1012",
                      "18G84",
                      "18G95",
                      "18G103"
                    ],
                    "gracePeriod": 180,
                    "name": "macOS",
                    "upToDate": [
                      "Catalina 10.15.7 (19H15)",
                      "Mojave 10.14.6 (18G1012)"
                    ]
                  },
                  {
                    "custom": [
                      "18362.239",
                      "7601.24511",
                      "18362.295",
                      "18362.356"
                    ],
                    "gracePeriod": 180,
                    "name": "Windows",
                    "upToDate": [
                      "2004 (19041.630)",
                      "1909 (18363.1198)"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "The versions selected for different dimensions of device risk assessment.",
                "properties": {
                  "browsers": {
                    "description": "The browser version details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different browser versions.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the web browser.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "client": {
                    "additionalProperties": false,
                    "description": "The selected client versions.",
                    "properties": {
                      "gracePeriod": {
                        "description": "The number of days the previous version is valid until it's deprecated.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the client.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "gracePeriod",
                      "name"
                    ],
                    "type": "object"
                  },
                  "eaaclient": {
                    "description": "The per-OS version selections for EAA clients.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different OS versions.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "platform": {
                          "description": "The platform on which the EAA client runs.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "upToDate": {
                          "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "os": {
                    "description": "The selected operating system version details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "The OS version. For macOS this is the build number, such as `19H15` for macOS Catalina 10.15.7.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the operating system.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "upToDate": {
                          "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "browsers",
                  "client",
                  "os",
                  "eaaclient"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/chosen-versions.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Modify chosen versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/chosen-versions.yaml",
        "path-info": "/device-posture/risk-assessment/chosen-versions"
      }
    },
    "/device-posture/risk-assessment/chosen-versions/test": {
      "post": {
        "description": "Tests the selected versions against the existing risk assessment rules.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-chosen-versions-test"
        },
        "operationId": "post-chosen-versions-test",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "browsers": [
                  {
                    "custom": [
                      "11.0.155"
                    ],
                    "gracePeriod": 180,
                    "name": "Internet Explorer"
                  },
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "name": "Opera"
                  }
                ],
                "client": {
                  "gracePeriod": 1,
                  "name": "EAA Client"
                },
                "eaaclient": [
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "platform": "Android"
                  },
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "platform": "macOS",
                    "upToDate": [
                      "10.13.7"
                    ]
                  },
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "platform": "windows",
                    "upToDate": [
                      "2.1.1"
                    ]
                  }
                ],
                "os": [
                  {
                    "custom": [],
                    "gracePeriod": 180,
                    "name": "Android"
                  },
                  {
                    "custom": [
                      "17F77",
                      "18A391",
                      "18G1012",
                      "18G84",
                      "18G95",
                      "18G103"
                    ],
                    "gracePeriod": 180,
                    "name": "macOS",
                    "upToDate": [
                      "Catalina 10.15.7 (19H15)",
                      "Mojave 10.14.6 (18G1012)"
                    ]
                  },
                  {
                    "custom": [
                      "18362.239",
                      "7601.24511",
                      "18362.295",
                      "18362.356"
                    ],
                    "gracePeriod": 180,
                    "name": "Windows",
                    "upToDate": [
                      "2004 (19041.630)",
                      "1909 (18363.1198)"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "The versions selected for different dimensions of device risk assessment.",
                "properties": {
                  "browsers": {
                    "description": "The browser version details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different browser versions.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the web browser.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "client": {
                    "additionalProperties": false,
                    "description": "The selected client versions.",
                    "properties": {
                      "gracePeriod": {
                        "description": "The number of days the previous version is valid until it's deprecated.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the client.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "gracePeriod",
                      "name"
                    ],
                    "type": "object"
                  },
                  "eaaclient": {
                    "description": "The per-OS version selections for EAA clients.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different OS versions.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "platform": {
                          "description": "The platform on which the EAA client runs.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "upToDate": {
                          "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "os": {
                    "description": "The selected operating system version details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "The OS version. For macOS this is the build number, such as `19H15` for macOS Catalina 10.15.7.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the operating system.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "upToDate": {
                          "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "browsers",
                  "client",
                  "os",
                  "eaaclient"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/chosen-versions.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 19,
                    "id": 298,
                    "name": "Finance Tag",
                    "tier": false
                  },
                  {
                    "count": 57,
                    "id": 299,
                    "name": "Engineering Tag",
                    "tier": false
                  },
                  {
                    "count": 86,
                    "id": 255,
                    "name": "Low",
                    "tier": true
                  },
                  {
                    "count": 15,
                    "id": 256,
                    "name": "Medium",
                    "tier": true
                  },
                  {
                    "count": 150,
                    "id": 257,
                    "name": "High",
                    "tier": true
                  }
                ],
                "schema": {
                  "description": "Device risk assessment rule information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The total number of devices that pass the criteria specified for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "A unique identifier for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk assessment rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tier": {
                        "description": "Whether the rule is a tier.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "count",
                      "name",
                      "tier"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/risk-assessment.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Test chosen versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/test-chosen-versions.yaml",
        "path-info": "/device-posture/risk-assessment/chosen-versions/test"
      }
    },
    "/device-posture/risk-assessment/os-names": {
      "get": {
        "description": "Lists supported operating systems for risk assessment. Unlisted operating systems aren't supported for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-os-names"
        },
        "operationId": "get-os-names",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "mobile": false,
                    "name": "Mac OS X"
                  },
                  {
                    "mobile": false,
                    "name": "Windows"
                  },
                  {
                    "mobile": true,
                    "name": "iOS"
                  }
                ],
                "schema": {
                  "description": "Operating systems that are available for the product.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "mobile": {
                        "description": "Indicates a mobile device operating system.",
                        "nullable": true,
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the operating system.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "mobile",
                      "name"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/available-os.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List available operating systems",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/os-names.yaml",
        "path-info": "/device-posture/risk-assessment/os-names"
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black": {
      "post": {
        "description": "Adds a new Carbon Black integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-carbon-black"
        },
        "operationId": "post-partner-carbon-black",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "DEF"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ],
              "schema": {
                "description": "Carbon Black integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `api-key`, `api-id`, or `org-key`.",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/carbon-black-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Create a new Carbon Black integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "get": {
        "description": "Lists the details of existing Carbon Black integration entries.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-carbon-black"
        },
        "operationId": "get-partner-carbon-black",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CarbonBlack Integration"
                    },
                    {
                      "name": "api-id",
                      "value": "ABC"
                    },
                    {
                      "name": "api-key",
                      "value": "******"
                    },
                    {
                      "name": "org-key",
                      "value": "PQR"
                    },
                    {
                      "name": "integration-id",
                      "value": "15690021"
                    }
                  ],
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CarbonBlack Integration II"
                    },
                    {
                      "name": "api-id",
                      "value": "ABC"
                    },
                    {
                      "name": "api-key",
                      "value": "******"
                    },
                    {
                      "name": "org-key",
                      "value": "PQR"
                    },
                    {
                      "name": "integration-id",
                      "value": "28932400"
                    }
                  ]
                ],
                "schema": {
                  "description": "Information about all Carbon Black integration entries present.",
                  "items": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The integration property type. Either `name`, `host`, `api-key`, `api-id`, `org-key`, or `integration-id`.",
                          "enum": [
                            "name",
                            "host",
                            "api-key",
                            "api-id",
                            "org-key",
                            "integration-id"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the integration property.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/carbon-black-get-integrations.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List Carbon Black integrations",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/carbon-black.yaml",
        "path-info": "/device-posture/risk-assessment/partner/carbon-black"
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/status": {
      "get": {
        "description": "Get current status of Carbon Black integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-carbon-black-status"
        },
        "operationId": "get-partner-carbon-black-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "enabled": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Partner status updates.",
                  "properties": {
                    "enabled": {
                      "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/partner-integration-status.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get Carbon Black integration status",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Update current status of Carbon Black integration to either enabled or disabled.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-carbon-black-status"
        },
        "operationId": "put-partner-carbon-black-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Partner status updates.",
                "properties": {
                  "enabled": {
                    "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/partner-integration-status.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Update Carbon Black integration status",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/status-carbon-black.yaml",
        "path-info": "/device-posture/risk-assessment/partner/carbon-black/status"
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/test": {
      "post": {
        "description": "Creates a Carbon Black integration to test against your Device Posture configuration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-carbon-black-test"
        },
        "operationId": "post-partner-carbon-black-test",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "DEF"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ],
              "schema": {
                "description": "Carbon Black integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `api-key`, `api-id`, or `org-key`.",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/carbon-black-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Create a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/test-carbon-black.yaml",
        "path-info": "/device-posture/risk-assessment/partner/carbon-black/test"
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/test/{integration_id}": {
      "put": {
        "description": "Tests an existing Carbon Black integration against your device posture configuration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-carbon-black-test"
        },
        "operationId": "put-partner-carbon-black-test",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://prod05.deployme.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "******"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ],
              "schema": {
                "description": "Carbon Black integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `api-key`, `api-id`, or `org-key`.",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/carbon-black-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Creates a Carbon Black integration for testing",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integration-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/integration-carbon-black-test.yaml",
        "path-info": "/device-posture/risk-assessment/partner/carbon-black/test/{integration_id}"
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/{integration_id}": {
      "get": {
        "description": "Lists the details a specific Carbon Black integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-carbon-black-integration"
        },
        "operationId": "get-partner-carbon-black-integration",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "host",
                    "value": "https://api-url.akam-integration.net"
                  },
                  {
                    "name": "name",
                    "value": "CarbonBlack Integration"
                  },
                  {
                    "name": "api-id",
                    "value": "ABC"
                  },
                  {
                    "name": "api-key",
                    "value": "******"
                  },
                  {
                    "name": "org-key",
                    "value": "PQR"
                  }
                ],
                "schema": {
                  "description": "Carbon Black integration information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "description": "The integration property type. Either `name`, `host`, `api-key`, `api-id`, or `org-key`.",
                        "enum": [
                          "name",
                          "host",
                          "api-key",
                          "api-id",
                          "org-key"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the integration property.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/carbon-black-integration.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Updates details for a specific Carbon Black integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-carbon-black-integration"
        },
        "operationId": "put-partner-carbon-black-integration",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://prod05.deployme.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "******"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ],
              "schema": {
                "description": "Carbon Black integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `api-key`, `api-id`, or `org-key`.",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/carbon-black-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Modify a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "delete": {
        "description": "Deletes a specific Carbon Black integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-partner-carbon-black-integration"
        },
        "operationId": "delete-partner-carbon-black-integration",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integration-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/integration-carbon-black.yaml",
        "path-info": "/device-posture/risk-assessment/partner/carbon-black/{integration_id}"
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike": {
      "post": {
        "description": "Adds a new CrowdStrike integration entry.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-crowdstrike"
        },
        "operationId": "post-partner-crowdstrike",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "ABC"
                },
                {
                  "name": "client-secret",
                  "value": "PQR"
                }
              ],
              "schema": {
                "description": "CrowdStrike integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/crowdstrike-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Create a new CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "get": {
        "description": "Lists details of existing CrowdStrike integrations.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-crowdstrike"
        },
        "operationId": "get-partner-crowdstrike",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CS SANDBOX ONE"
                    },
                    {
                      "name": "client-id",
                      "value": "ABC"
                    },
                    {
                      "name": "client-secret",
                      "value": "******"
                    },
                    {
                      "name": "integration-id",
                      "value": "912933"
                    }
                  ],
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CS SANDBOX TWO"
                    },
                    {
                      "name": "client-id",
                      "value": "PQR"
                    },
                    {
                      "name": "client-secret",
                      "value": "******"
                    },
                    {
                      "name": "integration-id",
                      "value": "274703"
                    }
                  ],
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CS SANDBOX THREE"
                    },
                    {
                      "name": "client-id",
                      "value": "ABC"
                    },
                    {
                      "name": "client-secret",
                      "value": "******"
                    },
                    {
                      "name": "integration-id",
                      "value": "285089"
                    }
                  ]
                ],
                "schema": {
                  "description": "CrowdStrike integration entries.",
                  "items": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The integration property type. Either `name`, `host`, `client-id`, `client-secret`, or `integration-id`.",
                          "enum": [
                            "name",
                            "host",
                            "client-id",
                            "client-secret",
                            "integration-id"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the integration property.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/crowdstrike-get-integrations.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List CrowdStrike integrations",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/crowdstrike.yaml",
        "path-info": "/device-posture/risk-assessment/partner/crowdstrike"
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/status": {
      "get": {
        "description": "Get current status of CrowdStrike integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-crowdstrike-status"
        },
        "operationId": "get-partner-crowdstrike-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "enabled": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Partner status updates.",
                  "properties": {
                    "enabled": {
                      "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/partner-integration-status.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get CrowdStrike integration status",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Updates current status of CrowdStrike integration to either enabled or disabled.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-crowdstrike-status"
        },
        "operationId": "put-partner-crowdstrike-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Partner status updates.",
                "properties": {
                  "enabled": {
                    "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/partner-integration-status.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Update CrowdStrike integration status",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/status-crowdstrike.yaml",
        "path-info": "/device-posture/risk-assessment/partner/crowdstrike/status"
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/test": {
      "post": {
        "description": "Create a CrowdStrike integration to test against your device posture configuration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-crowdstrike-test"
        },
        "operationId": "post-partner-crowdstrike-test",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "ABC"
                },
                {
                  "name": "client-secret",
                  "value": "PQR"
                }
              ],
              "schema": {
                "description": "CrowdStrike integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/crowdstrike-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Create a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/test-crowdstrike.yaml",
        "path-info": "/device-posture/risk-assessment/partner/crowdstrike/test"
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/test/{integration_id}": {
      "put": {
        "description": "Test an existing CrowdStrike integration against your device posture configuration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-crowdstrike-test"
        },
        "operationId": "put-partner-crowdstrike-test",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "h2ef5e3ecdf5400c990d7ba37d17drs2"
                },
                {
                  "name": "client-secret",
                  "value": "******"
                }
              ],
              "schema": {
                "description": "CrowdStrike integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/crowdstrike-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Creates a CrowdStrike integration for testing",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integration-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/integration-crowdstrike-test.yaml",
        "path-info": "/device-posture/risk-assessment/partner/crowdstrike/test/{integration_id}"
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/{integration_id}": {
      "get": {
        "description": "Lists details a specific CrowdStrike integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-crowdstrike-integration"
        },
        "operationId": "get-partner-crowdstrike-integration",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "host",
                    "value": "https://api-url.akam-integration.net"
                  },
                  {
                    "name": "name",
                    "value": "CrowdStrike Integration 1"
                  },
                  {
                    "name": "client-id",
                    "value": "PQR"
                  },
                  {
                    "name": "client-secret",
                    "value": "******"
                  }
                ],
                "schema": {
                  "description": "CrowdStrike integration information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "description": "The integration property type. Either `name`, `host`, `client-id`, or `client-secret`.",
                        "enum": [
                          "name",
                          "host",
                          "client-id",
                          "client-secret"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the integration property.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/crowdstrike-integration.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Updates details for a specific integration entry.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-crowdstrike-integration"
        },
        "operationId": "put-partner-crowdstrike-integration",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "h2ef5e3ecdf5400c990d7ba37d17drs2"
                },
                {
                  "name": "client-secret",
                  "value": "******"
                }
              ],
              "schema": {
                "description": "CrowdStrike integration information.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "description": "The integration property type. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/crowdstrike-integration.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Modify a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "delete": {
        "description": "Deletes a specific CrowdStrike integration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-partner-crowdstrike-integration"
        },
        "operationId": "delete-partner-crowdstrike-integration",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integration-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/integration-crowdstrike.yaml",
        "path-info": "/device-posture/risk-assessment/partner/crowdstrike/{integration_id}"
      }
    },
    "/device-posture/risk-assessment/signal-names": {
      "get": {
        "description": "Lists supported signal names for risk assessment. Unlisted signals aren't supported for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-signal-names"
        },
        "operationId": "get-signal-names",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "options": [],
                    "mobile": false,
                    "name": "anti-malware",
                    "type": "select"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": false,
                    "name": "disk-encryption",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": false,
                    "name": "firewall",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": null,
                    "name": "dp-client-healthy",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "name": "Latest",
                        "value": "latest"
                      },
                      {
                        "name": "Custom",
                        "value": "custom"
                      }
                    ],
                    "mobile": false,
                    "name": "browser-version",
                    "type": "mselect"
                  },
                  {
                    "options": [
                      {
                        "name": "Latest",
                        "value": "latest"
                      }
                    ],
                    "mobile": false,
                    "name": "client-version",
                    "type": "select"
                  },
                  {
                    "options": [
                      {
                        "name": "Up to date",
                        "value": "up-to-date"
                      },
                      {
                        "name": "Custom",
                        "value": "custom"
                      }
                    ],
                    "mobile": null,
                    "name": "os-version",
                    "type": "mselect"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": true,
                    "name": "biometrics",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "value": false
                      }
                    ],
                    "mobile": true,
                    "name": "jailbroken",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": true,
                    "name": "screen-lock",
                    "type": "boolean"
                  },
                  {
                    "options": [],
                    "mobile": false,
                    "name": "certificate-profiles",
                    "type": "mselect"
                  },
                  {
                    "options": [
                      {
                        "value": false
                      }
                    ],
                    "mobile": false,
                    "name": "etp-threat",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": false,
                    "name": "crowdstrike-healthy",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "name": "Custom",
                        "value": "custom"
                      }
                    ],
                    "mobile": true,
                    "name": "mobile-client-version",
                    "type": "mselect"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": false,
                    "name": "etp-client-status",
                    "type": "boolean"
                  },
                  {
                    "options": [
                      {
                        "value": true
                      }
                    ],
                    "mobile": false,
                    "name": "cb-healthy",
                    "type": "boolean"
                  },
                  {
                    "options": [],
                    "mobile": false,
                    "name": "cb-policy",
                    "type": "input"
                  }
                ],
                "schema": {
                  "description": "Signal definitions available in the product.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "options": {
                        "description": "Available signal value options.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "description": "Option name (label).",
                              "minLength": 1,
                              "type": "string"
                            },
                            "value": {
                              "description": "Option value.",
                              "oneOf": [
                                {
                                  "minLength": 1,
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Boolean",
                                  "type": "boolean"
                                }
                              ]
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "mobile": {
                        "description": "Indicates a mobile operating system.",
                        "nullable": true,
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The signal name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Signal type. Either `boolean`, `age_lte`, `input`, `mselect`, or `select`.",
                        "enum": [
                          "boolean",
                          "age_lte",
                          "input",
                          "mselect",
                          "select"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "mobile",
                      "name",
                      "options"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/signal-names.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List signal names",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/signal-names.yaml",
        "path-info": "/device-posture/risk-assessment/signal-names"
      }
    },
    "/device-posture/risk-assessment/tags": {
      "post": {
        "description": "Creates a new risk tag.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-tag"
        },
        "operationId": "post-tag",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": 12345678,
                "name": "Stash",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      }
                    ]
                  }
                ],
                "version": "2018-12"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "os",
                        "signals"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/risk-rule.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {},
            "description": "Successful response.",
            "headers": {
              "Location": {
                "description": "The unique identifier for the newly created resource. Append this ID to a subsequent GET call to view the resource details.",
                "schema": {
                  "example": 1100,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/location-header.yaml"
                }
              }
            }
          }
        },
        "summary": "Create risk tag",
        "tags": [
          "Risk assessment"
        ]
      },
      "get": {
        "description": "Lists supported risk tags for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tags"
        },
        "operationId": "get-tags",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 159,
                    "name": "Low",
                    "rank": 0,
                    "rules": [
                      {
                        "os": [
                          "Mac OS X",
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": 1
                          },
                          {
                            "name": "firewall",
                            "value": true
                          },
                          {
                            "name": "browser-version",
                            "value": [
                              "latest",
                              "custom",
                              "latest+"
                            ]
                          },
                          {
                            "name": "os-version",
                            "value": [
                              "latest",
                              "custom"
                            ]
                          },
                          {
                            "name": "dp-client-healthy",
                            "value": true
                          },
                          {
                            "name": "client-version",
                            "value": "latest"
                          },
                          {
                            "name": "disk-encryption",
                            "value": true
                          }
                        ]
                      }
                    ],
                    "version": "2019"
                  },
                  {
                    "id": 160,
                    "name": "Medium",
                    "rank": 50,
                    "rules": [
                      {
                        "os": [
                          "Mac OS X"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": 1
                          },
                          {
                            "name": "os-version",
                            "value": [
                              "up-to-date",
                              "up-to-date+",
                              "custom"
                            ]
                          },
                          {
                            "name": "dp-client-healthy",
                            "value": true
                          },
                          {
                            "name": "firewall",
                            "value": true
                          }
                        ]
                      },
                      {
                        "os": [
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": 1
                          },
                          {
                            "name": "os-version",
                            "value": [
                              "up-to-date",
                              "up-to-date+",
                              "custom"
                            ]
                          },
                          {
                            "name": "dp-client-healthy",
                            "value": true
                          },
                          {
                            "name": "firewall",
                            "value": true
                          }
                        ]
                      }
                    ],
                    "version": "2019"
                  },
                  {
                    "id": 161,
                    "name": "High",
                    "rank": 100,
                    "rules": [],
                    "version": "2019"
                  }
                ],
                "schema": {
                  "description": "Encapsulated information about Risk Rules that are available in the product.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Configurable risk rule information.",
                    "properties": {
                      "id": {
                        "description": "A unique identifier for this risk rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "rank": {
                        "description": "The rank of the risk rule. Present only in tiers.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "rules": {
                        "description": "Available risk assessment criteria rules.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Available criteria rules.",
                          "properties": {
                            "os": {
                              "description": "Operating systems.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "signals": {
                              "description": "Available risk assessment signals.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Available signal values.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the signal.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The signal values. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                    "oneOf": [
                                      {
                                        "minLength": 1,
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Boolean",
                                        "type": "boolean"
                                      },
                                      {
                                        "minimum": 0,
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "minLength": 1,
                                              "title": "Strings",
                                              "type": "string"
                                            },
                                            {
                                              "title": "Booleans",
                                              "type": "boolean"
                                            },
                                            {
                                              "title": "Integers",
                                              "type": "integer"
                                            }
                                          ]
                                        },
                                        "minItems": 0,
                                        "title": "Array",
                                        "type": "array"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "signals",
                            "os"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "version": {
                        "description": "Risk rule schema version.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "rules",
                      "version",
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/risk-assessment-rule.yaml"
                    }
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/risk-rules.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List risk tags",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/tags.yaml",
        "path-info": "/device-posture/risk-assessment/tags"
      }
    },
    "/device-posture/risk-assessment/tags/{ruleId}": {
      "get": {
        "description": "Lists details for a specific risk tag.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tag"
        },
        "operationId": "get-tag",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": 12345678,
                  "name": "Stash",
                  "rules": [
                    {
                      "os": [
                        "Mac OS X"
                      ],
                      "signals": [
                        {
                          "name": "anti_malware",
                          "value": 1
                        }
                      ]
                    },
                    {
                      "os": [
                        "Windows"
                      ],
                      "signals": [
                        {
                          "name": "firewall",
                          "value": true
                        }
                      ]
                    }
                  ],
                  "version": "2018-12"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configurable risk rules.",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this risk rule.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the risk rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rank": {
                      "description": "The rank of the risk rule. Present only in tiers.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "rules": {
                      "description": "Available risk assessment criteria rules.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "os": {
                            "description": "Operating systems.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "signals": {
                            "description": "Available risk assessment signals.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the signal.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                  "oneOf": [
                                    {
                                      "minLength": 1,
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Boolean",
                                      "type": "boolean"
                                    },
                                    {
                                      "minimum": 0,
                                      "title": "Integer",
                                      "type": "integer"
                                    },
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "minLength": 1,
                                            "title": "String",
                                            "type": "string"
                                          },
                                          {
                                            "title": "Boolean",
                                            "type": "boolean"
                                          },
                                          {
                                            "title": "Integer",
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "minItems": 0,
                                      "title": "Array",
                                      "type": "array"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "required": [
                          "os",
                          "signals"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "version": {
                      "description": "Risk rule schema version.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "rules",
                    "version"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/risk-rule.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a risk tag",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Updates the details for a specific risk tag.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-tag"
        },
        "operationId": "put-tag",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": 12345678,
                "name": "Stash",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      }
                    ]
                  }
                ],
                "version": "2018-12"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "os",
                        "signals"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/risk-rule.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Modify a risk tag",
        "tags": [
          "Risk assessment"
        ]
      },
      "delete": {
        "description": "Removes a risk tag from your device posture configuration.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-tag"
        },
        "operationId": "delete-tag",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete a tag",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for this risk tier.",
          "example": "{{ruleId}}",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/rule-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/rule-tags.yaml",
        "path-info": "/device-posture/risk-assessment/tags/{ruleId}"
      }
    },
    "/device-posture/risk-assessment/test/{ruleId}": {
      "put": {
        "description": "Tests the specified risk rule against existing devices.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-test-ruleid"
        },
        "operationId": "put-test-ruleid",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": 12345678,
                "name": "Stash",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      }
                    ]
                  }
                ],
                "version": "2018-12"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "os",
                        "signals"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/risk-rule.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "count": 19,
                    "id": 298,
                    "name": "Finance Tag",
                    "tier": false
                  },
                  {
                    "count": 57,
                    "id": 299,
                    "name": "Engineering Tag",
                    "tier": false
                  },
                  {
                    "count": 86,
                    "id": 255,
                    "name": "Low",
                    "tier": true
                  },
                  {
                    "count": 15,
                    "id": 256,
                    "name": "Medium",
                    "tier": true
                  },
                  {
                    "count": 150,
                    "id": 257,
                    "name": "High",
                    "tier": true
                  }
                ],
                "schema": {
                  "description": "Device risk assessment rule information.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "count": {
                        "description": "The total number of devices that pass the criteria specified for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "A unique identifier for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk assessment rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tier": {
                        "description": "Whether the rule is a tier.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "count",
                      "name",
                      "tier"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/risk-assessment.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Test risk rule",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for this risk tier.",
          "example": "{{ruleId}}",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/rule-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/rule-test.yaml",
        "path-info": "/device-posture/risk-assessment/test/{ruleId}"
      }
    },
    "/device-posture/risk-assessment/tiers": {
      "get": {
        "description": "Lists supported risk tiers for risk assessment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tiers"
        },
        "operationId": "get-tiers",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1515,
                    "name": "Anti-malware",
                    "rules": [
                      {
                        "os": [
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": true
                          }
                        ]
                      }
                    ],
                    "version": "2018-12"
                  },
                  {
                    "id": 1516,
                    "name": "Firewall",
                    "rules": [
                      {
                        "os": [
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "firewall",
                            "value": true
                          }
                        ]
                      }
                    ],
                    "version": "2018-12"
                  },
                  {
                    "id": 1888,
                    "name": "EAAClient-latest",
                    "rules": [
                      {
                        "os": [
                          "Mac OS X",
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "client-version",
                            "value": "latest"
                          }
                        ]
                      }
                    ],
                    "version": "2018-12"
                  }
                ],
                "schema": {
                  "description": "Encapsulated information about Risk Rules that are available in the product.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Configurable risk rule information.",
                    "properties": {
                      "id": {
                        "description": "A unique identifier for this risk rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "rank": {
                        "description": "The rank of the risk rule. Present only in tiers.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "rules": {
                        "description": "Available risk assessment criteria rules.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Available criteria rules.",
                          "properties": {
                            "os": {
                              "description": "Operating systems.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "signals": {
                              "description": "Available risk assessment signals.",
                              "items": {
                                "additionalProperties": false,
                                "description": "Available signal values.",
                                "properties": {
                                  "name": {
                                    "description": "The name of the signal.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The signal values. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                    "oneOf": [
                                      {
                                        "minLength": 1,
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Boolean",
                                        "type": "boolean"
                                      },
                                      {
                                        "minimum": 0,
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "items": {
                                          "oneOf": [
                                            {
                                              "minLength": 1,
                                              "title": "Strings",
                                              "type": "string"
                                            },
                                            {
                                              "title": "Booleans",
                                              "type": "boolean"
                                            },
                                            {
                                              "title": "Integers",
                                              "type": "integer"
                                            }
                                          ]
                                        },
                                        "minItems": 0,
                                        "title": "Array",
                                        "type": "array"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "signals",
                            "os"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "version": {
                        "description": "Risk rule schema version.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "rules",
                      "version",
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/risk-assessment-rule.yaml"
                    }
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/risk-rules.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List risk tiers",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/tiers.yaml",
        "path-info": "/device-posture/risk-assessment/tiers"
      }
    },
    "/device-posture/risk-assessment/tiers/{ruleId}": {
      "get": {
        "description": "Lists details for a specific risk tier.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tier"
        },
        "operationId": "get-tier",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": 12345,
                  "name": "Low",
                  "rank": 0,
                  "rules": [
                    {
                      "os": [
                        "Mac OS X"
                      ],
                      "signals": [
                        {
                          "name": "anti_malware",
                          "value": 1
                        },
                        {
                          "name": "browser_version",
                          "value": [
                            "Latest",
                            "Custom"
                          ]
                        }
                      ]
                    },
                    {
                      "os": [
                        "Windows"
                      ],
                      "signals": [
                        {
                          "name": "firewall",
                          "value": true
                        },
                        {
                          "name": "os_version",
                          "value": [
                            "Latest",
                            "Custom"
                          ]
                        }
                      ]
                    }
                  ],
                  "version": "2018-12"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configurable risk rules.",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this risk rule.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the risk rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rank": {
                      "description": "The rank of the risk rule. Present only in tiers.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "rules": {
                      "description": "Available risk assessment criteria rules.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "os": {
                            "description": "Operating systems.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "signals": {
                            "description": "Available risk assessment signals.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the signal.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                  "oneOf": [
                                    {
                                      "minLength": 1,
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Boolean",
                                      "type": "boolean"
                                    },
                                    {
                                      "minimum": 0,
                                      "title": "Integer",
                                      "type": "integer"
                                    },
                                    {
                                      "items": {
                                        "oneOf": [
                                          {
                                            "minLength": 1,
                                            "title": "String",
                                            "type": "string"
                                          },
                                          {
                                            "title": "Boolean",
                                            "type": "boolean"
                                          },
                                          {
                                            "title": "Integer",
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "minItems": 0,
                                      "title": "Array",
                                      "type": "array"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          }
                        },
                        "required": [
                          "os",
                          "signals"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "version": {
                      "description": "Risk rule schema version.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "rules",
                    "version"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/risk-rule.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a risk tier",
        "tags": [
          "Risk assessment"
        ]
      },
      "put": {
        "description": "Updates details for a specific risk tier.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-tier"
        },
        "operationId": "put-tier",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "id": 12345,
                "name": "Low",
                "rank": 0,
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      },
                      {
                        "name": "browser_version",
                        "value": [
                          "Latest",
                          "Custom"
                        ]
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      },
                      {
                        "name": "os_version",
                        "value": [
                          "Latest",
                          "Custom"
                        ]
                      }
                    ]
                  }
                ],
                "version": "2018-12"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    },
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "os",
                        "signals"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/risk-rule.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Modify risk tier",
        "tags": [
          "Risk assessment"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for this risk tier.",
          "example": "{{ruleId}}",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/rule-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/rule-tiers.yaml",
        "path-info": "/device-posture/risk-assessment/tiers/{ruleId}"
      }
    },
    "/device-posture/risk-assessment/versions/client_version": {
      "get": {
        "description": "Lists supported client versions for risk assessment. Risk assessment doesn't support unlisted client versions.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-client-version"
        },
        "operationId": "get-client-version",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optional-contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "date": "2019-09-03",
                    "latest": "10",
                    "name": "Android",
                    "upToDate": [
                      {
                        "date": "2018-08-06",
                        "version": "9.0"
                      }
                    ]
                  },
                  {
                    "date": "2020-04-07",
                    "latest": "13.4.1 (17E262)",
                    "name": "iOS",
                    "upToDate": [
                      {
                        "date": "2019-09-26",
                        "version": "12.4.2 (16G114)"
                      },
                      {
                        "date": "2018-05-29",
                        "version": "11.4 (15F79)"
                      }
                    ]
                  },
                  {
                    "date": "2021-02-01",
                    "latest": "Big Sur 11.2 (20D64)",
                    "name": "macOS",
                    "upToDate": [
                      {
                        "date": "2021-02-01",
                        "version": "Catalina 10.15.7 (19H512)"
                      },
                      {
                        "date": "2021-02-01",
                        "version": "Mojave 10.14.6 (18G8012)"
                      }
                    ]
                  },
                  {
                    "date": "2020-04-21",
                    "latest": "1909 (18363.815)",
                    "name": "Windows",
                    "upToDate": [
                      {
                        "date": "2020-04-21",
                        "version": "1903 (18362.815)"
                      },
                      {
                        "date": "2020-04-21",
                        "version": "1809 (17763.1192)"
                      }
                    ]
                  }
                ],
                "schema": {
                  "description": "Client versions that are available in the product.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "date": {
                        "description": "Date when this browser version became available.",
                        "type": "string"
                      },
                      "latest": {
                        "description": "The latest client version number.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Client OS name.",
                        "type": "string"
                      },
                      "upToDate": {
                        "description": "Up to date version properties.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "date": {
                              "description": "The release date of the up to date version number.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "version": {
                              "description": "Up to date version number.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/client-versions.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List client versions",
        "tags": [
          "Risk assessment"
        ]
      },
      "x-akamai": {
        "file-path": "paths/client-version.yaml",
        "path-info": "/device-posture/risk-assessment/versions/client_version"
      }
    },
    "/mgmt-pop/adminevents-reports/ops/reports": {
      "get": {
        "description": "Lists admin event reports with optional custom filters.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-adminevents-reports"
        },
        "operationId": "get-adminevents-reports",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{sts}}",
            "in": "query",
            "name": "sts",
            "required": true,
            "schema": {
              "example": 1563129000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/sts-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{ets}}",
            "in": "query",
            "name": "ets",
            "required": true,
            "schema": {
              "example": 1563355505606,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/ets-query.yaml"
            }
          },
          {
            "description": "__Enum__ Name of the event type. Either `login`, `config`, or `system`.",
            "example": "{{event_type}}",
            "in": "query",
            "name": "event_type",
            "required": true,
            "schema": {
              "enum": [
                "config",
                "login",
                "system"
              ],
              "example": "login",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/event-type-query.yaml"
            }
          },
          {
            "description": "__Enum__ Name of the resource type. Either `user`, `application`, or `group`.",
            "example": "{{res_type}}",
            "in": "query",
            "name": "res_type",
            "required": true,
            "schema": {
              "enum": [
                "user",
                "application",
                "group"
              ],
              "example": "user",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/res-type-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "0": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608214229086,
                      "uid": "user7@example.com"
                    },
                    "1": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608195749063,
                      "uid": "user7@example.com"
                    },
                    "2": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608192618254,
                      "uid": "user7@example.com"
                    },
                    "3": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608182790422,
                      "uid": "user7@example.com"
                    },
                    "4": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608181757056,
                      "uid": "user7@example.com"
                    },
                    "count": 5
                  }
                ],
                "schema": {
                  "description": "Admin report details.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "additionalProperties": {
                        "additionalProperties": false,
                        "description": "Incrementing string-formatted integer values for each admin event report.",
                        "properties": {
                          "event": {
                            "description": "A description of the event type.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "event_ty": {
                            "description": "The event type.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "res_id": {
                            "description": "The unique ID of the resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "res_name": {
                            "description": "The username.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "res_ty": {
                            "description": "The resource type.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "tnid": {
                            "description": "The tenant's username.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "ts": {
                            "description": "The epoch timestamp of the report.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "uid": {
                            "description": "The user's email address.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "uid"
                        ],
                        "type": "string",
                        "x-akamai": {
                          "file-path": "schemas/admin-events-nested.yaml"
                        }
                      },
                      "count": {
                        "description": "The number of entries in the admin event report set.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/admin-events.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "List admin event reports",
        "tags": [
          "Admin events reports"
        ]
      },
      "x-akamai": {
        "file-path": "paths/reports.yaml",
        "path-info": "/mgmt-pop/adminevents-reports/ops/reports"
      }
    },
    "/mgmt-pop/agents": {
      "post": {
        "description": "Creates a new connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-connector"
        },
        "operationId": "post-connector",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "advanced_settings": {
                  "network_info": [
                    "192.0.2.121/24"
                  ]
                },
                "auth_service": true,
                "data_service": true,
                "debug_channel_permitted": true,
                "description": "OPEN API",
                "name": "VM_OPEN_API",
                "package": 1,
                "status": 1
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise connector data.",
                "properties": {
                  "advanced_settings": {
                    "additionalProperties": false,
                    "description": "Advanced settings for the connnector.",
                    "properties": {
                      "network_info": {
                        "description": "The network subnets for the connector, with a CIDR netmask, such as `192.168.0.0/24`.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      }
                    },
                    "required": [
                      "network_info"
                    ],
                    "type": "object"
                  },
                  "auth_service": {
                    "description": "Enables authorization service.",
                    "example": "{{auth_service}}",
                    "type": "boolean"
                  },
                  "data_service": {
                    "description": "Enables the data service.",
                    "example": "{{data_service}}",
                    "type": "boolean"
                  },
                  "debug_channel_permitted": {
                    "default": false,
                    "description": "Enables Akamai Support to run commands on the connector through the debug channel. Set to `false` by default.",
                    "example": "{{debug_channel_permitted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "A description for the connector.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the connector. For example, `VMConnector1`.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "package": {
                    "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types)",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ],
                    "example": "{{package}}",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  }
                },
                "required": [
                  "auth_service",
                  "data_service",
                  "description",
                  "name",
                  "package"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/agent-create.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.237/24"
                    ]
                  },
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2021-05-25T14:22:44.194287",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": "OPEN API",
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": null,
                  "gateway": null,
                  "geo_location": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "load_status": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2021-05-25T14:22:44.229816",
                  "name": "VM_OPEN_API",
                  "os_upgrades_up_to_date": true,
                  "os_version": null,
                  "package": 1,
                  "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "resource_uri": {
                    "href": "/api/v1/agents/5CA1blgXRqmxlMzHC4UCCA"
                  },
                  "setpwd_attempt": 1,
                  "state": 0,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "5CA1blgXRqmxlMzHC4UCCA"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Connector advanced network settings. ",
                      "properties": {
                        "network_info": {
                          "description": "Network subnets for the connector. ",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "agent_upgrade_enabled": {
                      "description": "Enables upgrades for the connector.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "additionalProperties": false,
                      "description": "Connector capacity data.",
                      "properties": {
                        "capacity-multipliers": {
                          "additionalProperties": false,
                          "description": "Multipliers applied to capacity calculations.",
                          "properties": {
                            "rdp": {
                              "description": "Remote desktop protocol connections.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "remaining-capacity": {
                          "description": "Connector capacity remaining.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "down_apps_count": {
                      "description": "Count of down applications.",
                      "type": "integer"
                    },
                    "down_dir_count": {
                      "description": "Count of down directories.",
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "geo_location": {
                      "description": "Geo-location of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "load_status": {
                      "description": "The connector load percentage status. 70% or more is `High`, 50 - 70% is `Medium`, and less than 50% is `Low``.",
                      "enum": [
                        "High",
                        "Medium",
                        "Low"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON-formatted logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_upgrades_up_to_date": {
                      "description": "Whether the connector OS packages are up to date.",
                      "type": "boolean"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "enum": [
                        "Success",
                        "Failed"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "pwdsyncflag": {
                      "description": "Enables sync of the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource locations for the connector.",
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ],
                      "type": "integer"
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "up_apps_count": {
                      "description": "Count of up applications.",
                      "type": "integer"
                    },
                    "up_dir_count": {
                      "description": "Count of up directories.",
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a connector",
        "tags": [
          "Connectors"
        ]
      },
      "get": {
        "description": "Lists connectors.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connectors"
        },
        "operationId": "get-connectors",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 10,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 9
                  },
                  "objects": [
                    {
                      "advanced_settings": {
                        "network_info": [
                          "192.0.2.206/24"
                        ]
                      },
                      "agent_type": 1,
                      "agent_upgrade_enabled": true,
                      "agent_upgrade_suspended": false,
                      "agent_version": null,
                      "auth_service": true,
                      "capacity": {
                        "capacity-multipliers": {
                          "rdp": 2
                        },
                        "remaining-capacity": 999
                      },
                      "cpu": null,
                      "created_at": "2020-04-27T10:59:52.751874",
                      "data_service": true,
                      "debug_channel_permitted": true,
                      "description": "IDP connector",
                      "dhcp": "enabled",
                      "disk_size": null,
                      "dns_server": null,
                      "down_apps_count": 0,
                      "down_dir_count": 0,
                      "download_url": "https://s3.amazonaws.com/soha-agents-prod/11f77d70-eccb-4ae3-ab3a-e1aab9dda8f0.template?Signature=vLZbtqay15UYxcluMQz%2FASMrnjo%3D&Expires=1590577193&AWSAccessKeyId=AKIAJ6H33WWAXIOUBCNQ",
                      "gateway": null,
                      "geo_location": null,
                      "hostname": null,
                      "ip_addr": null,
                      "last_checkin": null,
                      "load_status": null,
                      "logging_settings": "[]",
                      "mac": null,
                      "manual_override": false,
                      "modified_at": "2020-04-27T10:59:53.143317",
                      "name": "IDP_connector",
                      "os_upgrades_up_to_date": true,
                      "os_version": null,
                      "package": 3,
                      "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                      "private_ip": null,
                      "public_ip": null,
                      "pwd_comments": null,
                      "pwdsyncflag": false,
                      "ram_size": null,
                      "reach": 0,
                      "region": null,
                      "resource_uri": {
                        "href": "/api/v1/agents/0ghE7BU_Q9uSVR0ZPxP7Fg"
                      },
                      "setpwd_attempt": 1,
                      "state": 1,
                      "status": 1,
                      "subnet": null,
                      "tz": null,
                      "up_apps_count": 0,
                      "up_dir_count": 0,
                      "uuid_url": "0ghE7BU_Q9uSVR0ZPxP7Fg"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Connectors.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Connector data.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise connector data.",
                        "properties": {
                          "admin_pwd": {
                            "description": "Hash of the admin password.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "advanced_settings": {
                            "additionalProperties": false,
                            "description": "Connector advanced network settings. ",
                            "properties": {
                              "network_info": {
                                "description": "Network subnets for the connector. ",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "agent_type": {
                            "default": 1,
                            "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "agent_upgrade_enabled": {
                            "description": "Enables upgrades for the connector.",
                            "type": "boolean"
                          },
                          "agent_upgrade_suspended": {
                            "description": "Suspends upgrades for a connector.",
                            "type": "boolean"
                          },
                          "agent_version": {
                            "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "auth_service": {
                            "description": "Enables the authorization service.",
                            "type": "boolean"
                          },
                          "capacity": {
                            "additionalProperties": false,
                            "description": "Connector capacity data.",
                            "properties": {
                              "capacity-multipliers": {
                                "additionalProperties": false,
                                "description": "Multipliers applied to capacity calculations.",
                                "properties": {
                                  "rdp": {
                                    "description": "Remote desktop protocol connections.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "remaining-capacity": {
                                "description": "Connector capacity remaining.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "cpu": {
                            "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the connector's creation.",
                            "type": "string"
                          },
                          "data_service": {
                            "description": "Enables the data service.",
                            "type": "boolean"
                          },
                          "debug_channel_permitted": {
                            "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                            "type": "boolean"
                          },
                          "description": {
                            "description": "A description for the connector.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "dhcp": {
                            "description": "Enables DHCP for the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "disk_size": {
                            "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "dns_server": {
                            "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "down_apps_count": {
                            "description": "Count of down applications.",
                            "type": "integer"
                          },
                          "down_dir_count": {
                            "description": "Count of down directories.",
                            "type": "integer"
                          },
                          "download_url": {
                            "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "gateway": {
                            "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "geo_location": {
                            "description": "Geo-location of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "hostname": {
                            "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "ip_addr": {
                            "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "last_checkin": {
                            "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                            "nullable": true,
                            "type": "string"
                          },
                          "last_stage_status": {
                            "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                            "enum": [
                              1,
                              4
                            ],
                            "type": "integer"
                          },
                          "last_upgrade_failed_date": {
                            "description": "ISO 8601 timestamp marking the last upgrade failure.",
                            "type": "string"
                          },
                          "last_upgrade_failed_in": {
                            "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4",
                              "5",
                              "6",
                              "7",
                              "8",
                              "9"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "last_upgrade_status": {
                            "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                            "enum": [
                              1,
                              4
                            ],
                            "type": "integer"
                          },
                          "last_upgrade_success_date": {
                            "description": "ISO 8601 timestamp marking the last successful upgrade.",
                            "type": "string"
                          },
                          "last_upgrade_success_version": {
                            "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "latest_stage_attempt_date": {
                            "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                            "nullable": true,
                            "type": "string"
                          },
                          "latest_stage_attempt_version": {
                            "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "latest_upgrade_attempt_date": {
                            "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                            "type": "string"
                          },
                          "latest_upgrade_attempt_state": {
                            "description": "Status of the last upgrade attempt on the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "latest_upgrade_attempt_version": {
                            "description": "Last version of connector software attempted on the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "load_status": {
                            "description": "The connector load percentage status. 70% or more is `High`, 50 - 70% is `Medium`, and less than 50% is `Low``.",
                            "enum": [
                              "High",
                              "Medium",
                              "Low"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "logging_settings": {
                            "description": "JSON-formatted logging settings.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "mac": {
                            "description": "MAC address of the connector. Specify `null` if not applicable.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "manual_override": {
                            "description": "When `true`, the connector cannot be upgraded.",
                            "type": "boolean"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_upgrades_up_to_date": {
                            "description": "Whether the connector OS packages are up to date.",
                            "type": "boolean"
                          },
                          "os_version": {
                            "description": "OS version of the connector.",
                            "nullable": true,
                            "type": "string"
                          },
                          "package": {
                            "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11
                            ],
                            "type": "integer"
                          },
                          "policy": {
                            "description": "The schedule policy ID for the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "private_ip": {
                            "description": "Private IP address of the connector.",
                            "nullable": true,
                            "type": "string"
                          },
                          "public_ip": {
                            "description": "Public IP address of the connector.",
                            "nullable": true,
                            "type": "string"
                          },
                          "pwd_comments": {
                            "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                            "enum": [
                              "Success",
                              "Failed"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "pwdsyncflag": {
                            "description": "Enables sync of the connector password with the back-end database.",
                            "type": "boolean"
                          },
                          "ram_size": {
                            "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "reach": {
                            "default": 1,
                            "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "region": {
                            "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Resource locations for the connector.",
                            "properties": {
                              "href": {
                                "description": "The location of connector details.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "setpwd_attempt": {
                            "description": "The number of unique password setting attempts.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "state": {
                            "default": 0,
                            "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8
                            ],
                            "type": "integer"
                          },
                          "status": {
                            "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "subnet": {
                            "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "tz": {
                            "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "up_apps_count": {
                            "description": "Count of up applications.",
                            "type": "integer"
                          },
                          "up_dir_count": {
                            "description": "Count of up directories.",
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/agent.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agents.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List connectors",
        "tags": [
          "Connectors"
        ]
      },
      "x-akamai": {
        "file-path": "paths/agents.yaml",
        "path-info": "/mgmt-pop/agents"
      }
    },
    "/mgmt-pop/agents/{agentId}/app-metrics": {
      "get": {
        "description": "Lists application metrics for the specified connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connector-app-metrics"
        },
        "operationId": "get-connector-app-metrics",
        "parameters": [
          {
            "description": "A unique identifier of an application.",
            "example": "{{app_uuid_url}}",
            "in": "query",
            "name": "app_uuid_url",
            "required": true,
            "schema": {
              "example": "501E-o63SaWua1GUk7W2ow",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/app-uuid-url-query.yaml"
            }
          },
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": 1633067800000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": 1633068000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_host": "edi-client.stage.akamai-access.com",
                  "app_uuid_url": "501E-o63SaWua1GUk7W2ow",
                  "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                  "end_timestamp": "1633068000000",
                  "results": [
                    {
                      "active_connections": 0,
                      "dialin_version": "V1",
                      "idle_dialouts": 4,
                      "timestamp": "2021-10-01T05:57:50.939Z",
                      "total_dialouts": 4
                    },
                    {
                      "active_connections": 0,
                      "dialin_version": "V1",
                      "idle_dialouts": 4,
                      "timestamp": "2021-10-01T05:59:50.940Z",
                      "total_dialouts": 4
                    }
                  ],
                  "start_timestamp": "1633067800000"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Connector application metrics.",
                  "properties": {
                    "app_host": {
                      "description": "Name of the application host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "connector_uuid_url": {
                      "description": "A unique identifier for a connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "end_timestamp": {
                      "description": "ISO 8601 timestamp indicating the end time of the report.",
                      "type": "string"
                    },
                    "results": {
                      "description": "Connection result details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Connector application metrics data.",
                        "properties": {
                          "active_connections": {
                            "description": "The active connections count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "dialin_version": {
                            "description": "The name of dialin version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "idle_dialouts": {
                            "description": "The idle dialout count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "timestamp": {
                            "description": "ISO 8601 timestamp marking when logs last processed.",
                            "type": "string"
                          },
                          "total_dialouts": {
                            "description": "The total number of dialouts at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "idle_dialouts",
                          "active_connections",
                          "total_dialouts",
                          "dialin_version",
                          "timestamp"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "start_timestamp": {
                      "description": "ISO 8601 timestamp indicating the start time of the report.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "connector_uuid_url",
                    "app_uuid_url",
                    "app_host",
                    "start_timestamp",
                    "end_timestamp",
                    "results"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agentsappmetrics.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "List application metrics for connector",
        "tags": [
          "Connectors"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agent-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app-metrics.yaml",
        "path-info": "/mgmt-pop/agents/{agentId}/app-metrics"
      }
    },
    "/mgmt-pop/agents/{uuid_url}": {
      "get": {
        "description": "Retrieves a single connector by ID.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connector"
        },
        "operationId": "get-connector",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.237/24"
                    ]
                  },
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2021-05-25T14:22:44.194287",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": "OPEN API",
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": null,
                  "gateway": null,
                  "geo_location": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "load_status": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2021-05-25T14:22:44.229816",
                  "name": "VM_OPEN_API",
                  "os_upgrades_up_to_date": true,
                  "os_version": null,
                  "package": 1,
                  "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "resource_uri": {
                    "href": "/api/v1/agents/5CA1blgXRqmxlMzHC4UCCA"
                  },
                  "setpwd_attempt": 1,
                  "state": 0,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "5CA1blgXRqmxlMzHC4UCCA"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Connector advanced network settings. ",
                      "properties": {
                        "network_info": {
                          "description": "Network subnets for the connector. ",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "agent_upgrade_enabled": {
                      "description": "Enables upgrades for the connector.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "additionalProperties": false,
                      "description": "Connector capacity data.",
                      "properties": {
                        "capacity-multipliers": {
                          "additionalProperties": false,
                          "description": "Multipliers applied to capacity calculations.",
                          "properties": {
                            "rdp": {
                              "description": "Remote desktop protocol connections.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "remaining-capacity": {
                          "description": "Connector capacity remaining.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "down_apps_count": {
                      "description": "Count of down applications.",
                      "type": "integer"
                    },
                    "down_dir_count": {
                      "description": "Count of down directories.",
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "geo_location": {
                      "description": "Geo-location of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "load_status": {
                      "description": "The connector load percentage status. 70% or more is `High`, 50 - 70% is `Medium`, and less than 50% is `Low``.",
                      "enum": [
                        "High",
                        "Medium",
                        "Low"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON-formatted logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_upgrades_up_to_date": {
                      "description": "Whether the connector OS packages are up to date.",
                      "type": "boolean"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "enum": [
                        "Success",
                        "Failed"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "pwdsyncflag": {
                      "description": "Enables sync of the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource locations for the connector.",
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ],
                      "type": "integer"
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "up_apps_count": {
                      "description": "Count of up applications.",
                      "type": "integer"
                    },
                    "up_dir_count": {
                      "description": "Count of up directories.",
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Get a connector",
        "tags": [
          "Connectors"
        ]
      },
      "put": {
        "description": "Updates an existing connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-connector"
        },
        "operationId": "put-connector",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "advanced_settings": {
                  "network_info": [
                    "192.0.2.29/24"
                  ]
                },
                "agent_type": 1,
                "agent_upgrade_enabled": true,
                "agent_upgrade_suspended": false,
                "agent_version": null,
                "auth_service": true,
                "cpu": null,
                "created_at": "2021-05-25T14:22:44.194287",
                "data_service": true,
                "debug_channel_permitted": true,
                "description": "amz geo connector",
                "dhcp": "enabled",
                "disk_size": null,
                "dns_server": null,
                "download_url": "https://s3.amazonaws.com/soha-agents/087aa887-6165-4b3a-926a-93aa909ea293.tar.gz?AWSAccessKeyId=AKIAYK2DOW62XBWAXG3E&Signature=HWzSfaSH7DirZ2BwvnlTE8I1Ezs%3D&Expires=1624545180",
                "gateway": null,
                "geo_location": null,
                "hostname": null,
                "ip_addr": null,
                "last_checkin": null,
                "load_status": null,
                "logging_settings": "[]",
                "mac": null,
                "manual_override": false,
                "modified_at": "2021-05-25T14:33:05.523871",
                "name": "amz_geos",
                "os_upgrades_up_to_date": true,
                "os_version": null,
                "package": 1,
                "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                "private_ip": null,
                "public_ip": null,
                "pwd_comments": null,
                "pwdsyncflag": false,
                "ram_size": null,
                "reach": 0,
                "region": null,
                "setpwd_attempt": 1,
                "state": 1,
                "status": 1,
                "subnet": null,
                "tz": null
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise connector data.",
                "properties": {
                  "admin_pwd": {
                    "description": "Hash of the admin password.",
                    "example": "{{admin_pwd}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "advanced_settings": {
                    "additionalProperties": false,
                    "description": "Connector advanced network settings. ",
                    "properties": {
                      "network_info": {
                        "description": "Network subnets for the connector. ",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "agent_type": {
                    "default": 1,
                    "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "example": "{{agent_type}}",
                    "type": "integer"
                  },
                  "agent_upgrade_enabled": {
                    "description": "Enables upgrades for the connector.",
                    "example": "{{agent_upgrade_enabled}}",
                    "type": "boolean"
                  },
                  "agent_upgrade_suspended": {
                    "description": "Suspends upgrades for a connector.",
                    "example": "{{agent_upgrade_suspended}}",
                    "type": "boolean"
                  },
                  "agent_version": {
                    "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                    "example": "{{agent_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "auth_service": {
                    "description": "Enables the authorization service.",
                    "example": "{{auth_service}}",
                    "type": "boolean"
                  },
                  "capacity": {
                    "additionalProperties": false,
                    "description": "Connector capacity data.",
                    "properties": {
                      "capacity-multipliers": {
                        "additionalProperties": false,
                        "description": "Multipliers applied to capacity calculations.",
                        "properties": {
                          "rdp": {
                            "description": "Remote desktop protocol connections.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "remaining-capacity": {
                        "description": "Connector capacity remaining.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "cpu": {
                    "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{cpu}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the connector's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "data_service": {
                    "description": "Enables the data service.",
                    "example": "{{data_service}}",
                    "type": "boolean"
                  },
                  "debug_channel_permitted": {
                    "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                    "example": "{{debug_channel_permitted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "A description for the connector.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "dhcp": {
                    "description": "Enables DHCP for the connector.",
                    "example": "{{dhcp}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "disk_size": {
                    "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{disk_size}}",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "dns_server": {
                    "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{dns_server}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "down_apps_count": {
                    "description": "Count of down applications.",
                    "example": "{{down_apps_count}}",
                    "type": "integer"
                  },
                  "down_dir_count": {
                    "description": "Count of down directories.",
                    "example": "{{down_dir_count}}",
                    "type": "integer"
                  },
                  "download_url": {
                    "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                    "example": "{{download_url}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "gateway": {
                    "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{gateway}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "geo_location": {
                    "description": "Geo-location of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{geo_location}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "hostname": {
                    "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{hostname}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "ip_addr": {
                    "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{ip_addr}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "last_checkin": {
                    "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                    "example": "{{last_checkin}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "last_stage_status": {
                    "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                    "enum": [
                      1,
                      4
                    ],
                    "example": "{{last_stage_status}}",
                    "type": "integer"
                  },
                  "last_upgrade_failed_date": {
                    "description": "ISO 8601 timestamp marking the last upgrade failure.",
                    "example": "{{last_upgrade_failed_date}}",
                    "type": "string"
                  },
                  "last_upgrade_failed_in": {
                    "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9"
                    ],
                    "example": "{{last_upgrade_failed_in}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "last_upgrade_status": {
                    "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                    "enum": [
                      1,
                      4
                    ],
                    "example": "{{last_upgrade_status}}",
                    "type": "integer"
                  },
                  "last_upgrade_success_date": {
                    "description": "ISO 8601 timestamp marking the last successful upgrade.",
                    "example": "{{last_upgrade_success_date}}",
                    "type": "string"
                  },
                  "last_upgrade_success_version": {
                    "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                    "example": "{{last_upgrade_success_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_stage_attempt_date": {
                    "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                    "example": "{{latest_stage_attempt_date}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_stage_attempt_version": {
                    "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                    "example": "{{latest_stage_attempt_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_upgrade_attempt_date": {
                    "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                    "example": "{{latest_upgrade_attempt_date}}",
                    "type": "string"
                  },
                  "latest_upgrade_attempt_state": {
                    "description": "Status of the last upgrade attempt on the connector.",
                    "example": "{{latest_upgrade_attempt_state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "latest_upgrade_attempt_version": {
                    "description": "Last version of connector software attempted on the connector.",
                    "example": "{{latest_upgrade_attempt_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "load_status": {
                    "description": "The connector load percentage status. 70% or more is `High`, 50 - 70% is `Medium`, and less than 50% is `Low``.",
                    "enum": [
                      "High",
                      "Medium",
                      "Low"
                    ],
                    "example": "{{load_status}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "logging_settings": {
                    "description": "JSON-formatted logging settings.",
                    "example": "{{logging_settings}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mac": {
                    "description": "MAC address of the connector. Specify `null` if not applicable.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "manual_override": {
                    "description": "When `true`, the connector cannot be upgraded.",
                    "example": "{{manual_override}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the connector.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "os_upgrades_up_to_date": {
                    "description": "Whether the connector OS packages are up to date.",
                    "example": "{{os_upgrades_up_to_date}}",
                    "type": "boolean"
                  },
                  "os_version": {
                    "description": "OS version of the connector.",
                    "example": "{{os_version}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "package": {
                    "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ],
                    "example": "{{package}}",
                    "type": "integer"
                  },
                  "policy": {
                    "description": "The schedule policy ID for the connector.",
                    "example": "{{policy}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_ip": {
                    "description": "Private IP address of the connector.",
                    "example": "{{private_ip}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "public_ip": {
                    "description": "Public IP address of the connector.",
                    "example": "{{public_ip}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "pwd_comments": {
                    "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                    "enum": [
                      "Success",
                      "Failed"
                    ],
                    "example": "{{pwd_comments}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "pwdsyncflag": {
                    "description": "Enables sync of the connector password with the back-end database.",
                    "example": "{{pwdsyncflag}}",
                    "type": "boolean"
                  },
                  "ram_size": {
                    "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{ram_size}}",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "reach": {
                    "default": 1,
                    "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{reach}}",
                    "type": "integer"
                  },
                  "region": {
                    "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                    "example": "{{region}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Resource locations for the connector.",
                    "properties": {
                      "href": {
                        "description": "The location of connector details.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "setpwd_attempt": {
                    "description": "The number of unique password setting attempts.",
                    "example": "{{setpwd_attempt}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "default": 0,
                    "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8
                    ],
                    "example": "{{state}}",
                    "type": "integer"
                  },
                  "status": {
                    "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "subnet": {
                    "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{subnet}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "tz": {
                    "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                    "example": "{{tz}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "up_apps_count": {
                    "description": "Count of up applications.",
                    "example": "{{up_apps_count}}",
                    "type": "integer"
                  },
                  "up_dir_count": {
                    "description": "Count of up directories.",
                    "example": "{{up_dir_count}}",
                    "type": "integer"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the connector.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/agent.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.22/24"
                    ]
                  },
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2021-05-25T14:22:44.194287",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": "amz geo connector",
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": "https://s3.amazonaws.com/soha-agents/087aa887-6165-4b3a-926a-93aa909ea293.tar.gz?AWSAccessKeyId=AKIAYK2DOW62XBWAXG3E&Signature=HWzSfaSH7DirZ2BwvnlTE8I1Ezs%3D&Expires=1624545180",
                  "gateway": null,
                  "geo_location": "Smithfield (US)",
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "load_status": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2021-05-25T14:35:17.816611",
                  "name": "amz_geos",
                  "os_upgrades_up_to_date": true,
                  "os_version": null,
                  "package": 1,
                  "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "resource_uri": {
                    "href": "/api/v1/agents/5CA1blgXRqmxlMzHC4UCCA"
                  },
                  "setpwd_attempt": 1,
                  "state": 1,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "5CA1blgXRqmxlMzHC4UCCA"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Connector advanced network settings. ",
                      "properties": {
                        "network_info": {
                          "description": "Network subnets for the connector. ",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "agent_upgrade_enabled": {
                      "description": "Enables upgrades for the connector.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "additionalProperties": false,
                      "description": "Connector capacity data.",
                      "properties": {
                        "capacity-multipliers": {
                          "additionalProperties": false,
                          "description": "Multipliers applied to capacity calculations.",
                          "properties": {
                            "rdp": {
                              "description": "Remote desktop protocol connections.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "remaining-capacity": {
                          "description": "Connector capacity remaining.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "down_apps_count": {
                      "description": "Count of down applications.",
                      "type": "integer"
                    },
                    "down_dir_count": {
                      "description": "Count of down directories.",
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "geo_location": {
                      "description": "Geo-location of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "load_status": {
                      "description": "The connector load percentage status. 70% or more is `High`, 50 - 70% is `Medium`, and less than 50% is `Low``.",
                      "enum": [
                        "High",
                        "Medium",
                        "Low"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON-formatted logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_upgrades_up_to_date": {
                      "description": "Whether the connector OS packages are up to date.",
                      "type": "boolean"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "enum": [
                        "Success",
                        "Failed"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "pwdsyncflag": {
                      "description": "Enables sync of the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource locations for the connector.",
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ],
                      "type": "integer"
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "up_apps_count": {
                      "description": "Count of up applications.",
                      "type": "integer"
                    },
                    "up_dir_count": {
                      "description": "Count of up directories.",
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Modify a connector",
        "tags": [
          "Connectors"
        ]
      },
      "delete": {
        "description": "Deletes an existing connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-connector"
        },
        "operationId": "delete-connector",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Delete a connector",
        "tags": [
          "Connectors"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{uuid_url}}",
          "in": "path",
          "name": "uuid_url",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uuid-url-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/uuid-url.yaml",
        "path-info": "/mgmt-pop/agents/{uuid_url}"
      }
    },
    "/mgmt-pop/agents/{uuid_url}/approve": {
      "post": {
        "description": "Approves a connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-connector-approve"
        },
        "operationId": "post-connector-approve",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Connector approved"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "A connector approval message.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agent-approve.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Approve a connector",
        "tags": [
          "Connectors"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{uuid_url}}",
          "in": "path",
          "name": "uuid_url",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uuid-url-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/approve.yaml",
        "path-info": "/mgmt-pop/agents/{uuid_url}/approve"
      }
    },
    "/mgmt-pop/agents/{uuid_url}/system-metrics": {
      "get": {
        "description": "Lists system metrics for the specified connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connector-system-metrics"
        },
        "operationId": "get-connector-system-metrics",
        "parameters": [
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": 1633067800000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": 1633068000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                  "end_timestamp": "1633068000000",
                  "results": [
                    {
                      "active_dialout_count": 0,
                      "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                      "cpu_pct": 0.4,
                      "dialout_idle": 47,
                      "dialout_total": 47,
                      "disk_pct": 48.8,
                      "mem_pct": 82.3,
                      "network_traffic_mbps": 0,
                      "timestamp": "2021-10-01T05:57:50.939Z"
                    },
                    {
                      "active_dialout_count": 0,
                      "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                      "cpu_pct": 0.6,
                      "dialout_idle": 50,
                      "dialout_total": 50,
                      "disk_pct": 48.8,
                      "mem_pct": 82.4,
                      "network_traffic_mbps": 0.01,
                      "timestamp": "2021-10-01T05:59:50.940Z"
                    }
                  ],
                  "start_timestamp": "1633067800000"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Connector system metrics.",
                  "properties": {
                    "connector_uuid_url": {
                      "description": "A unique identifier for a connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "end_timestamp": {
                      "description": "ISO 8601 timestamp indicating the end time of the report.",
                      "type": "string"
                    },
                    "results": {
                      "description": "Connection system metric results.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "active_dialout_count": {
                            "description": "The active dialout connections count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "connector_uuid_url": {
                            "description": "A unique identifier for a connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "cpu_pct": {
                            "description": "Actual percentage of CPU usage.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "dialout_idle": {
                            "description": "The idle dialout count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "dialout_total": {
                            "description": "The total number of dialouts at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "disk_pct": {
                            "description": "Actual percentage of disk usage.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "mem_pct": {
                            "description": "Actual percentage of memory usage.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "network_traffic_mbps": {
                            "description": "Network traffic sent in mbps.",
                            "minimum": 0,
                            "type": "number"
                          },
                          "timestamp": {
                            "description": "ISO 8601 timestamp marking log processing.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "disk_pct",
                          "timestamp",
                          "cpu_pct",
                          "mem_pct",
                          "network_traffic_mbps",
                          "active_dialout_count",
                          "dialout_total",
                          "dialout_idle",
                          "connector_uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "start_timestamp": {
                      "description": "ISO 8601 timestamp indicating the start time of the report.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "connector_uuid_url",
                    "start_timestamp",
                    "end_timestamp",
                    "results"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agentsystemmetrics.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List connector system metrics",
        "tags": [
          "System metrics"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{uuid_url}}",
          "in": "path",
          "name": "uuid_url",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uuid-url-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/system-metrics.yaml",
        "path-info": "/mgmt-pop/agents/{uuid_url}/system-metrics"
      }
    },
    "/mgmt-pop/agents/{uuid_url}/upgrade-os-pkgs": {
      "post": {
        "description": "Upgrades an existing connector.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-upgrade-connector"
        },
        "operationId": "post-upgrade-connector",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "uuid_url": "Dleb-n-KSZKiZ-JVF6xGsQ"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Upgrades the OS packages on an existing connector.",
                "properties": {
                  "uuid_url": {
                    "description": "The unique ID of the agent.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "uuid_url"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/upgrade-agent-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "status": "Accepted the upgrade request."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "OS packages upgrade status on an existing connector.",
                  "properties": {
                    "status": {
                      "description": "The acceptance status of the upgrade request.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/upgrade-agent-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Upgrade OS packages on a connector",
        "tags": [
          "Connectors"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{uuid_url}}",
          "in": "path",
          "name": "uuid_url",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uuid-url-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/upgrade-os-pkgs.yaml",
        "path-info": "/mgmt-pop/agents/{uuid_url}/upgrade-os-pkgs"
      }
    },
    "/mgmt-pop/appbundle": {
      "post": {
        "description": "Creates a new application bundle.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-appbundle"
        },
        "operationId": "post-appbundle",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "HTTP application group",
                "name": "HTTP_GROUP"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an Application Bundle.",
                "properties": {
                  "app_details": {
                    "description": "Detailed application data for the this application bundle.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Application information in the application bundle details.",
                      "properties": {
                        "app_deployed": {
                          "description": "Whether the application configuration is deployed.",
                          "type": "boolean"
                        },
                        "app_operational": {
                          "description": "The application's operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "type": "integer"
                        },
                        "app_profile": {
                          "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ],
                          "type": "integer"
                        },
                        "app_status": {
                          "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "app_type": {
                          "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the application.",
                          "type": "string"
                        },
                        "single_host_content_rw": {
                          "description": "Enables single host content rewrite.",
                          "type": "boolean"
                        },
                        "single_host_path": {
                          "description": "The single host path to route to a specific application.",
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-bundle-details.yaml"
                      }
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application bundle.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_apps": {
                    "description": "The applications assigned to the application bundle resource.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application bundle.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Location information for the application bundle.",
                    "properties": {
                      "href": {
                        "description": "Specifies the location for the application bundle.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "single_host_enable": {
                    "description": "Enables single host FQDN for the application bundle.",
                    "example": "{{single_host_enable}}",
                    "type": "boolean"
                  },
                  "single_host_fqdn": {
                    "description": "The single host fully qualified domain name used to host multiple applications.",
                    "example": "{{single_host_fqdn}}",
                    "type": "string"
                  },
                  "status": {
                    "default": 0,
                    "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application bundle.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "description",
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/app-bundle.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_details": [
                    {
                      "app_deployed": false,
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 1,
                      "app_type": 1,
                      "name": "Custom  IDP change",
                      "single_host_content_rw": false,
                      "single_host_path": "",
                      "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                    }
                  ],
                  "created_at": "2021-05-25T15:22:59.221288",
                  "description": "DB Application group",
                  "group_apps": [
                    "Ht-jz4FJRg2D13m7DfCZ5Q"
                  ],
                  "modified_at": "2021-05-25T15:25:38.434715",
                  "name": "DB_GROUP",
                  "resource_uri": {
                    "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                  },
                  "single_host_enable": false,
                  "single_host_fqdn": "web.xyz.com",
                  "status": 1,
                  "uuid_url": "LmWWytH-TMutd6P9G0Ts7A"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an Application Bundle.",
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application bundle.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application information in the application bundle details.",
                        "properties": {
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_operational": {
                            "description": "The application's operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "app_profile": {
                            "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ],
                            "type": "integer"
                          },
                          "app_status": {
                            "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "app_type": {
                            "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the application.",
                            "type": "string"
                          },
                          "single_host_content_rw": {
                            "description": "Enables single host content rewrite.",
                            "type": "boolean"
                          },
                          "single_host_path": {
                            "description": "The single host path to route to a specific application.",
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-bundle-details.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_apps": {
                      "description": "The applications assigned to the application bundle resource.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application bundle.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Location information for the application bundle.",
                      "properties": {
                        "href": {
                          "description": "Specifies the location for the application bundle.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "single_host_enable": {
                      "description": "Enables single host FQDN for the application bundle.",
                      "type": "boolean"
                    },
                    "single_host_fqdn": {
                      "description": "The single host fully qualified domain name used to host multiple applications.",
                      "type": "string"
                    },
                    "status": {
                      "default": 0,
                      "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-bundle.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create an application bundle",
        "tags": [
          "Application bundles"
        ]
      },
      "get": {
        "description": "Lists your application bundles.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-appbundles"
        },
        "operationId": "get-appbundles",
        "parameters": [
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 12
                  },
                  "objects": [
                    {
                      "app_details": [
                        {
                          "app_deployed": true,
                          "app_operational": 3,
                          "app_profile": 1,
                          "app_status": 4,
                          "name": "",
                          "uuid_url": "8rwIWzWuSt-2dnGJ3rbqQA"
                        },
                        {
                          "app_deployed": true,
                          "app_operational": 3,
                          "app_profile": 1,
                          "app_status": 2,
                          "name": "MS-Office-365",
                          "uuid_url": "A92i-3VZRd23SCnL7mno8A"
                        }
                      ],
                      "created_at": "2017-11-16T22:32:10.602218",
                      "description": "Apps East",
                      "group_apps": [
                        "8rwIWzWuSt-2dnGJ3rbqQA",
                        "A92i-3VZRd23SCnL7mno8A"
                      ],
                      "modified_at": "2017-12-04T19:33:32.427605",
                      "name": "east_apps",
                      "resource_uri": {
                        "href": "/api/v1/appbundle/xjfw56YkTiWLRC4HL9Ycbg"
                      },
                      "status": 1,
                      "uuid_url": "xjfw56YkTiWLRC4HL9Ycbg"
                    },
                    {
                      "app_details": [
                        {
                          "app_deployed": false,
                          "app_operational": 3,
                          "app_profile": 1,
                          "app_status": 1,
                          "app_type": 1,
                          "name": "Custom IDP change",
                          "single_host_content_rw": false,
                          "single_host_path": "",
                          "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                        }
                      ],
                      "created_at": "2021-05-25T15:22:59.221288",
                      "description": "TEST Application group",
                      "group_apps": [
                        "Ht-jz4FJRg2D13m7DfCZ5Q"
                      ],
                      "modified_at": "2021-05-25T15:25:38.434715",
                      "name": "lab_east",
                      "resource_uri": {
                        "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                      },
                      "single_host_enable": false,
                      "single_host_fqdn": "",
                      "status": 1,
                      "uuid_url": "LmWWytH-TMutd6P9G0Ts7A"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application bundles.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "The application bundles.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an Application Bundle.",
                        "properties": {
                          "app_details": {
                            "description": "Detailed application data for the this application bundle.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Application information in the application bundle details.",
                              "properties": {
                                "app_deployed": {
                                  "description": "Whether the application configuration is deployed.",
                                  "type": "boolean"
                                },
                                "app_operational": {
                                  "description": "The application's operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ],
                                  "type": "integer"
                                },
                                "app_profile": {
                                  "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9
                                  ],
                                  "type": "integer"
                                },
                                "app_status": {
                                  "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                  ],
                                  "type": "integer"
                                },
                                "app_type": {
                                  "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                  ],
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the application.",
                                  "type": "string"
                                },
                                "single_host_content_rw": {
                                  "description": "Enables single host content rewrite.",
                                  "type": "boolean"
                                },
                                "single_host_path": {
                                  "description": "The single host path to route to a specific application.",
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the application.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/app-bundle-details.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking this object's creation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application bundle.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_apps": {
                            "description": "The applications assigned to the application bundle resource.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                            "type": "string"
                          },
                          "name": {
                            "description": "A display label for the application bundle.",
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Location information for the application bundle.",
                            "properties": {
                              "href": {
                                "description": "Specifies the location for the application bundle.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "href"
                            ],
                            "type": "object"
                          },
                          "single_host_enable": {
                            "description": "Enables single host FQDN for the application bundle.",
                            "type": "boolean"
                          },
                          "single_host_fqdn": {
                            "description": "The single host fully qualified domain name used to host multiple applications.",
                            "type": "string"
                          },
                          "status": {
                            "default": 0,
                            "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application bundle.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "name"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-bundle.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-bundles.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application bundles",
        "tags": [
          "Application bundles"
        ]
      },
      "x-akamai": {
        "file-path": "paths/app-bundles.yaml",
        "path-info": "/mgmt-pop/appbundle"
      }
    },
    "/mgmt-pop/appbundle/{appBundleId}": {
      "get": {
        "description": "Lists details for a specific application bundle by ID.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-appbundle"
        },
        "operationId": "get-appbundle",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_details": [
                    {
                      "app_deployed": false,
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 1,
                      "app_type": 1,
                      "name": "Custom  IDP change",
                      "single_host_content_rw": false,
                      "single_host_path": "",
                      "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                    }
                  ],
                  "created_at": "2021-05-25T15:22:59.221288",
                  "description": "DB Application group",
                  "group_apps": [
                    "Ht-jz4FJRg2D13m7DfCZ5Q"
                  ],
                  "modified_at": "2021-05-25T15:25:38.434715",
                  "name": "DB_GROUP",
                  "resource_uri": {
                    "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                  },
                  "single_host_enable": false,
                  "single_host_fqdn": "web.xyz.com",
                  "status": 1,
                  "uuid_url": "LmWWytH-TMutd6P9G0Ts7A"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an Application Bundle.",
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application bundle.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application information in the application bundle details.",
                        "properties": {
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_operational": {
                            "description": "The application's operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "app_profile": {
                            "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ],
                            "type": "integer"
                          },
                          "app_status": {
                            "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "app_type": {
                            "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the application.",
                            "type": "string"
                          },
                          "single_host_content_rw": {
                            "description": "Enables single host content rewrite.",
                            "type": "boolean"
                          },
                          "single_host_path": {
                            "description": "The single host path to route to a specific application.",
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-bundle-details.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_apps": {
                      "description": "The applications assigned to the application bundle resource.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application bundle.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Location information for the application bundle.",
                      "properties": {
                        "href": {
                          "description": "Specifies the location for the application bundle.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "single_host_enable": {
                      "description": "Enables single host FQDN for the application bundle.",
                      "type": "boolean"
                    },
                    "single_host_fqdn": {
                      "description": "The single host fully qualified domain name used to host multiple applications.",
                      "type": "string"
                    },
                    "status": {
                      "default": 0,
                      "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-bundle.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application bundle",
        "tags": [
          "Application bundles"
        ]
      },
      "put": {
        "description": "Modifies an existing application bundle.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-appbundle"
        },
        "operationId": "put-appbundle",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "app_details": [
                  {
                    "app_deployed": false,
                    "app_operational": 3,
                    "app_profile": 1,
                    "app_status": 1,
                    "app_type": 1,
                    "name": "Custom  IDP change",
                    "single_host_content_rw": false,
                    "single_host_path": "",
                    "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                  }
                ],
                "created_at": "2021-05-25T15:22:59.221288",
                "description": "TEST Application group",
                "group_apps": [
                  "Ht-jz4FJRg2D13m7DfCZ5Q"
                ],
                "modified_at": "2021-05-25T15:25:38.434715",
                "name": "TEST_GROUP",
                "single_host_enable": false,
                "single_host_fqdn": "",
                "status": 1
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an Application Bundle.",
                "properties": {
                  "app_details": {
                    "description": "Detailed application data for the this application bundle.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Application information in the application bundle details.",
                      "properties": {
                        "app_deployed": {
                          "description": "Whether the application configuration is deployed.",
                          "type": "boolean"
                        },
                        "app_operational": {
                          "description": "The application's operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                          "enum": [
                            1,
                            2,
                            3
                          ],
                          "type": "integer"
                        },
                        "app_profile": {
                          "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ],
                          "type": "integer"
                        },
                        "app_status": {
                          "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "app_type": {
                          "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "name": {
                          "description": "Name of the application.",
                          "type": "string"
                        },
                        "single_host_content_rw": {
                          "description": "Enables single host content rewrite.",
                          "type": "boolean"
                        },
                        "single_host_path": {
                          "description": "The single host path to route to a specific application.",
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-bundle-details.yaml"
                      }
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application bundle.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_apps": {
                    "description": "The applications assigned to the application bundle resource.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application bundle.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Location information for the application bundle.",
                    "properties": {
                      "href": {
                        "description": "Specifies the location for the application bundle.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "href"
                    ],
                    "type": "object"
                  },
                  "single_host_enable": {
                    "description": "Enables single host FQDN for the application bundle.",
                    "example": "{{single_host_enable}}",
                    "type": "boolean"
                  },
                  "single_host_fqdn": {
                    "description": "The single host fully qualified domain name used to host multiple applications.",
                    "example": "{{single_host_fqdn}}",
                    "type": "string"
                  },
                  "status": {
                    "default": 0,
                    "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application bundle.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "description",
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/app-bundle.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_details": [
                    {
                      "app_deployed": false,
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 1,
                      "app_type": 1,
                      "name": "Custom  IDP change",
                      "single_host_content_rw": false,
                      "single_host_path": "",
                      "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                    }
                  ],
                  "created_at": "2021-05-25T15:22:59.221288",
                  "description": "DB Application group",
                  "group_apps": [
                    "Ht-jz4FJRg2D13m7DfCZ5Q"
                  ],
                  "modified_at": "2021-05-25T15:25:38.434715",
                  "name": "DB_GROUP",
                  "resource_uri": {
                    "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                  },
                  "single_host_enable": false,
                  "single_host_fqdn": "web.xyz.com",
                  "status": 1,
                  "uuid_url": "LmWWytH-TMutd6P9G0Ts7A"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an Application Bundle.",
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application bundle.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application information in the application bundle details.",
                        "properties": {
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_operational": {
                            "description": "The application's operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "app_profile": {
                            "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ],
                            "type": "integer"
                          },
                          "app_status": {
                            "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "app_type": {
                            "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the application.",
                            "type": "string"
                          },
                          "single_host_content_rw": {
                            "description": "Enables single host content rewrite.",
                            "type": "boolean"
                          },
                          "single_host_path": {
                            "description": "The single host path to route to a specific application.",
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-bundle-details.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_apps": {
                      "description": "The applications assigned to the application bundle resource.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application bundle.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Location information for the application bundle.",
                      "properties": {
                        "href": {
                          "description": "Specifies the location for the application bundle.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "single_host_enable": {
                      "description": "Enables single host FQDN for the application bundle.",
                      "type": "boolean"
                    },
                    "single_host_fqdn": {
                      "description": "The single host fully qualified domain name used to host multiple applications.",
                      "type": "string"
                    },
                    "status": {
                      "default": 0,
                      "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-bundle.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify an application bundle",
        "tags": [
          "Application bundles"
        ]
      },
      "delete": {
        "description": "Removes an application bundle.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-appbundle"
        },
        "operationId": "delete-appbundle",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Successful"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "Deletion message.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/message.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Delete an application bundle",
        "tags": [
          "Application bundles"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application bundle.",
          "example": "{{appBundleId}}",
          "in": "path",
          "name": "appBundleId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/app-bundle-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app-bundle.yaml",
        "path-info": "/mgmt-pop/appbundle/{appBundleId}"
      }
    },
    "/mgmt-pop/appbundle/{appBundleId}/deploy": {
      "post": {
        "description": "Deploys the specified application bundle.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-appbundle-deploy"
        },
        "operationId": "post-appbundle-deploy",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "app_id": "YqQlGzjYRzuSX04c8CECtw",
                    "cmdid": 9564781812219316
                  },
                  {
                    "app_id": "9m6LGDHhTWubkb4gU6O9NA",
                    "cmdid": 4371139853414614
                  },
                  {
                    "app_id": "rNWsDCSSQGSUn9gNHQ89NQ",
                    "cmdid": 5651681481824975
                  }
                ],
                "schema": {
                  "description": "Enterprise Access Application deployment data.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "app_id": {
                        "description": "The unique application to deploy.",
                        "type": "string"
                      },
                      "cmdid": {
                        "description": "A unique identifier for the command to track progress.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "cmdid"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/deploy-bundle.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Deploy an application bundle",
        "tags": [
          "Application bundles"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application bundle.",
          "example": "{{appBundleId}}",
          "in": "path",
          "name": "appBundleId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/app-bundle-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/deploy-app-bundle.yaml",
        "path-info": "/mgmt-pop/appbundle/{appBundleId}/deploy"
      }
    },
    "/mgmt-pop/appcategories": {
      "post": {
        "description": "Create a new application category.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-category"
        },
        "operationId": "post-app-category",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "staging category",
                "name": "cat-staging"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an application category.",
                "properties": {
                  "color_hex_code": {
                    "description": "__Read-only__ The display color for the application category.",
                    "example": "{{color_hex_code}}",
                    "nullable": true,
                    "readOnly": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application category. Specify `null` if you want to provide this later.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application category.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "description",
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/create-app-category.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_details": [],
                  "color_hex_code": null,
                  "created_at": "2021-05-25T15:40:47.920319",
                  "description": "DB app category",
                  "modified_at": "2021-05-25T15:40:47.920330",
                  "name": "DB_apps",
                  "resource_uri": "/api/v1/appcategories/d01cd4a2-efb7-47ae-9d7d-5f0ea6899c4b",
                  "uuid_url": "iNSex9QrQnCljLXHk5FHbQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an application category.",
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application category.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "properties": {
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-category-details.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "color_hex_code": {
                      "description": "The display color for the application category.",
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking this object's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application category. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Specifies the location of the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application category.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app_details",
                    "description",
                    "uuid_url",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-category.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create an application category",
        "tags": [
          "Application categories"
        ]
      },
      "get": {
        "description": "Lists your application categories.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-categories"
        },
        "operationId": "get-app-categories",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "app_details": [
                        {
                          "name": "Employee OIDC.Net Hybrid",
                          "uuid_url": "IzlikGM3QQ6EvXZyeG1haw"
                        },
                        {
                          "name": "EAAClient One Domain",
                          "uuid_url": "M8VAuzP6Sz-ATdQPEkfO4g"
                        }
                      ],
                      "color_hex_code": "#2d70e8",
                      "created_at": "2018-08-07T14:14:33.660117",
                      "description": "Communication Applications",
                      "modified_at": "2018-08-07T14:18:37.543968",
                      "name": "Communications",
                      "resource_uri": "/api/v1/appcategories/04c6bb16-0a69-4856-a6d8-67ec8d9c34dd",
                      "uuid_url": "BMa7FgppSFam2GfsjZw03Q"
                    },
                    {
                      "app_details": [
                        {
                          "name": "Office365",
                          "uuid_url": "A92i-3VZRd23SCnL7mno8A"
                        }
                      ],
                      "color_hex_code": "#5e36d0",
                      "created_at": "2017-11-01T17:23:28.220874",
                      "description": null,
                      "modified_at": "2017-11-01T17:23:44.492034",
                      "name": "SAML SaaS",
                      "resource_uri": "/api/v1/appcategories/8b3de00a-c382-4bbe-b0aa-101ef32ee93e",
                      "uuid_url": "iz3gCsOCS76wqhAe8y7pPg"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application categories.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application category details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "properties": {
                          "app_details": {
                            "description": "Detailed application data for the this application category.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Details about an application in an application category.",
                              "properties": {
                                "name": {
                                  "description": "Name of the application.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the application.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/app-category-details.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "color_hex_code": {
                            "description": "The display color for the application category.",
                            "nullable": true,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "__Read-only__ ISO 8601 timestamp marking this object's creation.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application category. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "__Read-only__ ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "A display label for the application category.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "description": "Specifies the location of the application category.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application category.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "app_details",
                          "description",
                          "uuid_url",
                          "name"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-category.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-categories.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application categories",
        "tags": [
          "Application categories"
        ]
      },
      "x-akamai": {
        "file-path": "paths/app-categories.yaml",
        "path-info": "/mgmt-pop/appcategories"
      }
    },
    "/mgmt-pop/appcategories/{appCategoryId}": {
      "get": {
        "description": "Lists details for a specific application category.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-category"
        },
        "operationId": "get-app-category",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_details": [],
                  "color_hex_code": null,
                  "created_at": "2021-05-25T15:40:47.920319",
                  "description": "DB app category",
                  "modified_at": "2021-05-25T15:40:47.920330",
                  "name": "DB_apps",
                  "resource_uri": "/api/v1/appcategories/d01cd4a2-efb7-47ae-9d7d-5f0ea6899c4b",
                  "uuid_url": "iNSex9QrQnCljLXHk5FHbQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an application category.",
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application category.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "properties": {
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-category-details.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "color_hex_code": {
                      "description": "The display color for the application category.",
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking this object's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application category. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Specifies the location of the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application category.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app_details",
                    "description",
                    "uuid_url",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-category.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application category",
        "tags": [
          "Application categories"
        ]
      },
      "put": {
        "description": "Modifies an existing application category.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app-category"
        },
        "operationId": "put-app-category",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "app_details": [
                  {
                    "name": "custom http app",
                    "uuid_url": "F1X8BT5WSq2wLeccDYe7BA"
                  }
                ],
                "color_hex_code": "#6ba5bd",
                "created_at": "2021-05-25T15:40:47.920319",
                "description": "HTTP custom apps",
                "modified_at": "2021-05-25T15:49:08.489470",
                "name": "HTTP_custom_apps"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an application category.",
                "properties": {
                  "app_details": {
                    "description": "Detailed application data for the this application category.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Details about an application in an application category.",
                      "properties": {
                        "name": {
                          "description": "Name of the application.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-category-details.yaml"
                      }
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "color_hex_code": {
                    "description": "The display color for the application category.",
                    "example": "{{color_hex_code}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "__Read-only__ ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "readOnly": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application category. Specify `null` if you want to provide this later.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "__Read-only__ ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application category.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Specifies the location of the application category.",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "app_details",
                  "description",
                  "color_hex_code",
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/modify-app-category.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_details": [],
                  "color_hex_code": null,
                  "created_at": "2021-05-25T15:40:47.920319",
                  "description": "DB app category",
                  "modified_at": "2021-05-25T15:40:47.920330",
                  "name": "DB_apps",
                  "resource_uri": "/api/v1/appcategories/d01cd4a2-efb7-47ae-9d7d-5f0ea6899c4b",
                  "uuid_url": "iNSex9QrQnCljLXHk5FHbQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an application category.",
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application category.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "properties": {
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-category-details.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "color_hex_code": {
                      "description": "The display color for the application category.",
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking this object's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application category. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Specifies the location of the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application category.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app_details",
                    "description",
                    "uuid_url",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-category.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify an application category",
        "tags": [
          "Application categories"
        ]
      },
      "delete": {
        "description": "Removes an application category from your Enterprise Application Access product.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app-category"
        },
        "operationId": "delete-app-category",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Successful"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "Deletion message.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/message.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Delete an application category",
        "tags": [
          "Application categories"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application category.",
          "example": "{{appCategoryId}}",
          "in": "path",
          "name": "appCategoryId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/app-category-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app-category.yaml",
        "path-info": "/mgmt-pop/appcategories/{appCategoryId}"
      }
    },
    "/mgmt-pop/appdirectories": {
      "post": {
        "description": "Creates or deletes a set of application and directories.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-directory"
        },
        "operationId": "post-app-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "Set this query parameter to `DELETE` for a `POST` request when you want the resource removed.",
            "example": "{{method}}",
            "in": "query",
            "name": "method",
            "schema": {
              "example": "DELETE",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/method-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "data": [
                  {
                    "apps": [
                      "3JEFvcNxRKCoQk-al9PAZw"
                    ],
                    "directories": [
                      {
                        "enable_mfa": "inherit",
                        "uuid_url": "gKP_FhvmSFaomjpNaR7Z9Q"
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Creates an application directory.",
                "properties": {
                  "data": {
                    "description": "Application directory details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "apps": {
                          "description": "The applications to add to the directory group.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "directories": {
                          "description": "The directory properties.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "enable_mfa": {
                                "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings, or `null` to specify this later.",
                                "enum": [
                                  "inherit",
                                  "enable"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "uuid_url": {
                                "description": "The unique ID of the directory.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/create-app-directory.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app": {
                    "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                    "name": "SaaS App"
                  },
                  "directory": {
                    "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                    "name": "Cloud Directory"
                  },
                  "enable_mfa": "inherit",
                  "resource": "appdirectories",
                  "resource_uri": {
                    "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                    "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                    "href": "/api/v1/appdirectories/flaeNl3wRfmjzvUBUVJsgw"
                  },
                  "uuid_url": "flaeNl3wRfmjzvUBUVJsgw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application directory.",
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Specifies the directory for the application directory.",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "directory_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "inherit",
                        "enable"
                      ],
                      "type": "string"
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application directory.",
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The directory resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "apps",
                        "directories",
                        "href"
                      ],
                      "type": "object"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app",
                    "directory",
                    "enable_mfa",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-directory.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create or delete application directories",
        "tags": [
          "Application directories"
        ]
      },
      "get": {
        "description": "Lists your application directories.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-directories"
        },
        "operationId": "get-app-directories",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=20",
                    "offset": 0,
                    "previous": null,
                    "total_count": 209
                  },
                  "objects": [
                    {
                      "app": {
                        "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                        "name": "SaaS App"
                      },
                      "directory": {
                        "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "name": "Cloud Directory"
                      },
                      "enable_mfa": "inherit",
                      "resource": "appdirectories",
                      "resource_uri": {
                        "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                        "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                        "href": "/api/v1/appdirectories/flaeNl3wRfmjzvUBUVJsgw"
                      },
                      "uuid_url": "flaeNl3wRfmjzvUBUVJsgw"
                    },
                    {
                      "app": {
                        "app_uuid_url": "DSany6qrSbKwgtks9z8SFQ",
                        "name": "Saleforce"
                      },
                      "directory": {
                        "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "name": "New York"
                      },
                      "enable_mfa": "inherit",
                      "resource": "appdirectories",
                      "resource_uri": {
                        "apps": "/api/v1/apps/DSany6qrSbKwgtks9z8SFQ",
                        "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                        "href": "/api/v1/appdirectories/2Xq3HJhKS9Ke4_BVH57i-Q"
                      },
                      "uuid_url": "2Xq3HJhKS9Ke4_BVH57i-Q"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Application Directories.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application directory details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Configuration settings for an application directory.",
                        "properties": {
                          "app": {
                            "additionalProperties": false,
                            "description": "Specifies the application for the application directory.",
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "app_uuid_url",
                              "name"
                            ],
                            "type": "object"
                          },
                          "directory": {
                            "additionalProperties": false,
                            "description": "Specifies the directory for the application directory.",
                            "properties": {
                              "directory_uuid_url": {
                                "description": "The directory UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "directory_uuid_url",
                              "name"
                            ],
                            "type": "object"
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                            "enum": [
                              "inherit",
                              "enable"
                            ],
                            "type": "string"
                          },
                          "resource": {
                            "description": "The type of resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of resources for the application directory.",
                            "properties": {
                              "apps": {
                                "description": "The application resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "directories": {
                                "description": "The directory resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "apps",
                              "directories",
                              "href"
                            ],
                            "type": "object"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "app",
                          "directory",
                          "enable_mfa",
                          "resource",
                          "resource_uri",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-directory.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-directories.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application directories",
        "tags": [
          "Application directories"
        ]
      },
      "x-akamai": {
        "file-path": "paths/app-directories.yaml",
        "path-info": "/mgmt-pop/appdirectories"
      }
    },
    "/mgmt-pop/appdirectories/{appDirectoryId}": {
      "get": {
        "description": "Get details for a specific application directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-directory"
        },
        "operationId": "get-app-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app": {
                    "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                    "name": "SaaS App"
                  },
                  "directory": {
                    "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                    "name": "Cloud Directory"
                  },
                  "enable_mfa": "inherit",
                  "resource": "appdirectories",
                  "resource_uri": {
                    "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                    "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                    "href": "/api/v1/appdirectories/flaeNl3wRfmjzvUBUVJsgw"
                  },
                  "uuid_url": "flaeNl3wRfmjzvUBUVJsgw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application directory.",
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Specifies the directory for the application directory.",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "directory_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "inherit",
                        "enable"
                      ],
                      "type": "string"
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application directory.",
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The directory resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "apps",
                        "directories",
                        "href"
                      ],
                      "type": "object"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app",
                    "directory",
                    "enable_mfa",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-directory.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application directory",
        "tags": [
          "Application directories"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application directory.",
          "example": "{{appDirectoryId}}",
          "in": "path",
          "name": "appDirectoryId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/app-directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app-directory.yaml",
        "path-info": "/mgmt-pop/appdirectories/{appDirectoryId}"
      }
    },
    "/mgmt-pop/appgroups": {
      "post": {
        "description": "Assigns one or more directory groups to one or more applications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-assign-app-groups"
        },
        "operationId": "post-assign-app-groups",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "data": [
                  {
                    "apps": [
                      "Bl3KO_RJSYGiPap3sYvFyw"
                    ],
                    "groups": [
                      {
                        "enable_mfa": "enable",
                        "uuid_url": "zueKU3XmTsm9jGw7Rsqd0w"
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Properties for assigning applications to directory groups.",
                "properties": {
                  "data": {
                    "description": "Application directory details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "apps": {
                          "description": "The application ID to assign to a group.",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "groups": {
                          "description": "The group ID and MFA settings to assign to the application.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "enable_mfa": {
                                "description": "Enables multifactor authentication. Either `enable` or use `inherit` to use the IDP's MFA settings.",
                                "enum": [
                                  "enable",
                                  "inherit"
                                ],
                                "type": "string"
                              },
                              "uuid_url": {
                                "description": "A unique identifier for the application rewrite group.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "apps",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/assign-app-directory.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "app": "Bl3KO_RJSYGiPap3sYvFyw",
                    "enable_mfa": "inherit",
                    "group": "196YoFHhQa-MaQPEIsIF5A",
                    "resource_uri": {
                      "apps": "/api/v1/apps/Bl3KO_RJSYGiPap3sYvFyw",
                      "groups": "/api/v1/groups/196YoFHhQa-MaQPEIsIF5A",
                      "href": "/api/v1/appgroups/QxzQAeHNQQWuRPxZ23LLfQ"
                    },
                    "uuid_url": "QxzQAeHNQQWuRPxZ23LLfQ"
                  },
                  {
                    "app": "Bl3KO_RJSYGiPap3sYvFyw",
                    "enable_mfa": "inherit",
                    "group": "zueKU3XmTsm9jGw7Rsqd0w",
                    "resource_uri": {
                      "apps": "/api/v1/apps/Bl3KO_RJSYGiPap3sYvFyw",
                      "groups": "/api/v1/groups/zueKU3XmTsm9jGw7Rsqd0w",
                      "href": "/api/v1/appgroups/sM9aYErkSYO_gVCV86dqGg"
                    },
                    "uuid_url": "sM9aYErkSYO_gVCV86dqGg"
                  }
                ],
                "schema": {
                  "description": "Configuration settings for an application rewrite group.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "app": {
                        "description": "The application UUID URL for the group.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "enable_mfa": {
                        "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                        "enum": [
                          "inherit",
                          "enable"
                        ],
                        "type": "string"
                      },
                      "group": {
                        "description": "The directory ID assigned to the group.",
                        "type": "string"
                      },
                      "resource_uri": {
                        "additionalProperties": false,
                        "description": "The resource locations for the application rewrite group.",
                        "properties": {
                          "apps": {
                            "description": "The application resource URI.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "groups": {
                            "description": "The group's resource URI.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "href": {
                            "description": "The href resource URI.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "apps",
                          "groups",
                          "href"
                        ],
                        "type": "object"
                      },
                      "uuid_url": {
                        "description": "A unique identifier for the application rewrite group.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "app",
                      "enable_mfa",
                      "group",
                      "resource_uri",
                      "uuid_url"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/assign-app-group-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the app group assignment."
          }
        },
        "summary": "Assign directory groups to applications",
        "tags": [
          "Application groups"
        ]
      },
      "get": {
        "description": "Lists your application groups.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-groups"
        },
        "operationId": "get-app-groups",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1491
                  },
                  "objects": [
                    {
                      "app": {
                        "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                        "name": "SaaSAppweb"
                      },
                      "enable_mfa": "inherit",
                      "group": {
                        "dir_name": "Cloud Directory",
                        "dir_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "group_uuid_url": "aITPkYE1QRipnk5S4TOT1w",
                        "name": "Admins"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                        "groups": "/api/v1/groups/aITPkYE1QRipnk5S4TOT1w",
                        "href": "/api/v1/appgroups/1tLd5eKaQd-v14FEeSDEqA"
                      },
                      "uuid_url": "1tLd5eKaQd-v14FEeSDEqA"
                    },
                    {
                      "app": {
                        "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                        "name": "SaaSAppDB"
                      },
                      "enable_mfa": "inherit",
                      "group": {
                        "dir_name": "Cloud Directory",
                        "dir_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "group_uuid_url": "rHB7BUZXSvab74JrFFcT7A",
                        "name": "Users"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                        "groups": "/api/v1/groups/rHB7BUZXSvab74JrFFcT7A",
                        "href": "/api/v1/appgroups/ZlB8MTbXRl6ck5DHGiJYvw"
                      },
                      "uuid_url": "ZlB8MTbXRl6ck5DHGiJYvw"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Application Groups.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application groups. ",
                      "items": {
                        "additionalProperties": false,
                        "description": "Configuration settings for an application rewrite group.",
                        "properties": {
                          "app": {
                            "additionalProperties": false,
                            "description": "Specifies the application for the group.",
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "app_uuid_url",
                              "name"
                            ],
                            "type": "object"
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                            "enum": [
                              "inherit",
                              "enable"
                            ],
                            "type": "string"
                          },
                          "group": {
                            "additionalProperties": false,
                            "description": "Specifies the directory resources assigned to the group.",
                            "properties": {
                              "dir_name": {
                                "description": "The directory name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "dir_uuid_url": {
                                "description": "The directory UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "group_uuid_url": {
                                "description": "The application group UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The IDP name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "dir_name",
                              "dir_uuid_url",
                              "group_uuid_url",
                              "name"
                            ],
                            "type": "object"
                          },
                          "resource": {
                            "description": "The type of resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of resources for the application rewrite group.",
                            "properties": {
                              "apps": {
                                "description": "The application resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "groups": {
                                "description": "The groups resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "apps",
                              "groups",
                              "href"
                            ],
                            "type": "object"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application rewrite group.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "enable_mfa",
                          "group",
                          "app",
                          "resource_uri",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-group.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-groups.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application rewrite groups",
        "tags": [
          "Application rewrite groups"
        ]
      },
      "x-akamai": {
        "file-path": "paths/app-groups.yaml",
        "path-info": "/mgmt-pop/appgroups"
      }
    },
    "/mgmt-pop/appgroups/{appGroupId}": {
      "get": {
        "description": "Get details for an application group.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-group"
        },
        "operationId": "get-app-group",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app": {
                    "app_uuid_url": "DSany6qrSbKwgtks9z8SFQ",
                    "name": "Saleforce"
                  },
                  "enable_mfa": "inherit",
                  "group": {
                    "dir_name": "Pelicancloud",
                    "dir_uuid_url": "z2WI-DS9RAKWj4ecsYI3BA",
                    "group_uuid_url": "umtuOBTPRGSj8bSbDgJ7ng",
                    "name": "SP2Group235"
                  },
                  "resource_uri": {
                    "apps": "/api/v1/apps/DSany6qrSbKwgtks9z8SFQ",
                    "groups": "/api/v1/groups/umtuOBTPRGSj8bSbDgJ7ng",
                    "href": "/api/v1/appgroups/MQLllWZzRWm4EhAFnyCt8w"
                  },
                  "uuid_url": "MQLllWZzRWm4EhAFnyCt8w"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application rewrite group.",
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the group.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "inherit",
                        "enable"
                      ],
                      "type": "string"
                    },
                    "group": {
                      "additionalProperties": false,
                      "description": "Specifies the directory resources assigned to the group.",
                      "properties": {
                        "dir_name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "dir_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "group_uuid_url": {
                          "description": "The application group UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "dir_name",
                        "dir_uuid_url",
                        "group_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application rewrite group.",
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "apps",
                        "groups",
                        "href"
                      ],
                      "type": "object"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application rewrite group.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "enable_mfa",
                    "group",
                    "app",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-group.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application group",
        "tags": [
          "Application groups"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application rewrite group.",
          "example": "{{appGroupId}}",
          "in": "path",
          "name": "appGroupId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/app-group-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app-group.yaml",
        "path-info": "/mgmt-pop/appgroups/{appGroupId}"
      }
    },
    "/mgmt-pop/appidp": {
      "post": {
        "description": "Assign an existing IDP to an application. Overwrites any existing IDP assigned to the application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-idp"
        },
        "operationId": "post-app-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "app": "kTiWFtM0QtOPGT6rtAT2cw",
                "idp": "r03ZZ6AcRReHa-Nn2BHSIw"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access Application IDP creation properties.",
                "properties": {
                  "app": {
                    "description": "The application's uuid_url.",
                    "example": "{{app}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "idp": {
                    "description": "The Identity Provider's uuid_url.",
                    "example": "{{idp}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "app",
                  "idp"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/create-app-idp.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app": {
                    "app_uuid_url": "Dtt5_YNQRmGpa75yWMrBxg",
                    "name": "Salesforce-QA"
                  },
                  "enable_mfa": "inherit",
                  "idp": {
                    "idp_uuid_url": "fsGXD1aYQyCPjqi48kK6nQ",
                    "name": "SecPerimeter-SALM-IDP"
                  },
                  "resource": "appidp",
                  "resource_uri": {
                    "apps": "/api/v1/apps/Dtt5_YNQRmGpa75yWMrBxg",
                    "href": "/api/v1/appidp/CVxouRl2RlCLUFuMylSg8g",
                    "idp": "/api/v1/idp/fsGXD1aYQyCPjqi48kK6nQ"
                  },
                  "uuid_url": "CVxouRl2RlCLUFuMylSg8g"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application identity provider (IDP).",
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "The application IDP properties.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "enable",
                        "inherit"
                      ],
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "The application IDP properties.",
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The Identity Provider name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "idp_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application IDP.",
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "apps",
                        "href",
                        "idp"
                      ],
                      "type": "object"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application IDP.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app",
                    "enable_mfa",
                    "idp",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-idp.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Assign an IDP to an application",
        "tags": [
          "Application IDPs"
        ]
      },
      "get": {
        "description": "Lists your application IDPs.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-idps"
        },
        "operationId": "get-app-idps",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 5,
                    "next": "?limit=5&offset=10",
                    "offset": 5,
                    "previous": "?limit=5&offset=0",
                    "total_count": 126
                  },
                  "objects": [
                    {
                      "app": {
                        "app_uuid_url": "1eujJKCSSuOEkBy5Q7hEAw",
                        "name": "JIRA-SAML"
                      },
                      "enable_mfa": "inherit",
                      "idp": {
                        "idp_uuid_url": "lMEgMEgeTxKlRaaP1u5kLg",
                        "name": "Company-SAML-IDP"
                      },
                      "resource": "appidp",
                      "resource_uri": {
                        "apps": "/api/v1/apps/1eujJKCSSuOEkBy5Q7hEAw",
                        "href": "/api/v1/appidp/HQZpYw1nRlucFcQLvLG2yQ",
                        "idp": "/api/v1/idp/lMEgMEgeTxKlRaaP1u5kLg"
                      },
                      "uuid_url": "HQZpYw1nRlucFcQLvLG2yQ"
                    },
                    {
                      "app": {
                        "app_uuid_url": "vgn_sEBdQ6arcR-D4tZW1Q",
                        "name": "This Company HTTP App"
                      },
                      "enable_mfa": "inherit",
                      "idp": {
                        "idp_uuid_url": "fsGXD1aYQyCPjqi48kK6nQ",
                        "name": "Company-SALM-IDP"
                      },
                      "resource": "appidp",
                      "resource_uri": {
                        "apps": "/api/v1/apps/vgn_sEBdQ6arcR-D4tZW1Q",
                        "href": "/api/v1/appidp/JCOqMBfWTR-M_kXcd8y1Cg",
                        "idp": "/api/v1/idp/fsGXD1aYQyCPjqi48kK6nQ"
                      },
                      "uuid_url": "JCOqMBfWTR-M_kXcd8y1Cg"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Application IDP.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application IDPs.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Configuration settings for an application identity provider (IDP).",
                        "properties": {
                          "app": {
                            "additionalProperties": false,
                            "description": "The application IDP properties.",
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "app_uuid_url",
                              "name"
                            ],
                            "type": "object"
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                            "enum": [
                              "enable",
                              "inherit"
                            ],
                            "type": "string"
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "The application IDP properties.",
                            "properties": {
                              "idp_uuid_url": {
                                "description": "The Identity Provider UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The Identity Provider name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "idp_uuid_url",
                              "name"
                            ],
                            "type": "object"
                          },
                          "resource": {
                            "description": "The type of resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of resources for the application IDP.",
                            "properties": {
                              "apps": {
                                "description": "The application resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "idp": {
                                "description": "The IDP resource URI.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "apps",
                              "href",
                              "idp"
                            ],
                            "type": "object"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application IDP.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "app",
                          "enable_mfa",
                          "idp",
                          "resource",
                          "resource_uri",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/app-idp.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-idps.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application IDPs",
        "tags": [
          "Application IDPs"
        ]
      },
      "x-akamai": {
        "file-path": "paths/app-idps.yaml",
        "path-info": "/mgmt-pop/appidp"
      }
    },
    "/mgmt-pop/appidp/{appIdpId}": {
      "get": {
        "description": "Get details for a specific application IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-idp"
        },
        "operationId": "get-app-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app": {
                    "app_uuid_url": "Dtt5_YNQRmGpa75yWMrBxg",
                    "name": "Salesforce-QA"
                  },
                  "enable_mfa": "inherit",
                  "idp": {
                    "idp_uuid_url": "fsGXD1aYQyCPjqi48kK6nQ",
                    "name": "SecPerimeter-SALM-IDP"
                  },
                  "resource": "appidp",
                  "resource_uri": {
                    "apps": "/api/v1/apps/Dtt5_YNQRmGpa75yWMrBxg",
                    "href": "/api/v1/appidp/CVxouRl2RlCLUFuMylSg8g",
                    "idp": "/api/v1/idp/fsGXD1aYQyCPjqi48kK6nQ"
                  },
                  "uuid_url": "CVxouRl2RlCLUFuMylSg8g"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application identity provider (IDP).",
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "The application IDP properties.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "enable",
                        "inherit"
                      ],
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "The application IDP properties.",
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The Identity Provider name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "idp_uuid_url",
                        "name"
                      ],
                      "type": "object"
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application IDP.",
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "apps",
                        "href",
                        "idp"
                      ],
                      "type": "object"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application IDP.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "app",
                    "enable_mfa",
                    "idp",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/app-idp.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application IDP",
        "tags": [
          "Application IDPs"
        ]
      },
      "delete": {
        "description": "Removes the IDP assigned to your application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app-idp"
        },
        "operationId": "delete-app-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete an application IDP",
        "tags": [
          "Application IDPs"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application IDP.",
          "example": "{{appIdpId}}",
          "in": "path",
          "name": "appIdpId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/app-idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app-idp.yaml",
        "path-info": "/mgmt-pop/appidp/{appIdpId}"
      }
    },
    "/mgmt-pop/application-reports/ops/query": {
      "get": {
        "description": "Lists an audit log report with optional custom filters.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-application-reports"
        },
        "operationId": "get-application-reports",
        "parameters": [
          {
            "description": "Hostname of the SSH or RDP type application.",
            "example": "{{app}}",
            "in": "query",
            "name": "app",
            "schema": {
              "example": "example-ssh-1.stage.akamai-access.com,example-tnl-ssh-1.stage.akamai-access.com,ZgcTQNq4SPeHuOpGUakpRA.stage.akamai-access.com,example-ssh2-plog.stage.akamai-access.com,example-tnl1.stage.akamai-access.com",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/app-query.yaml"
            }
          },
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": 1633067800000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": 1633068000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) timezone of the requested `start` and `end` parameters.",
            "example": "{{tz}}",
            "in": "query",
            "name": "tz",
            "required": true,
            "schema": {
              "example": "Asia/Calcutta",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/tz-query.yaml"
            }
          },
          {
            "description": "The upper limit of records returned by this operation.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/limit-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "app": "example-ssh-1.stage.akamai-access.com",
                      "browser": "Chrome 88.0",
                      "cc": "India",
                      "di": "1a6e4f414c9d7604a829f83e1f469527079fa1464b5b41203d8e398744d38d63",
                      "os": "Mac OS X 10.15",
                      "ral": [],
                      "rscd": "302",
                      "state": "Karnataka",
                      "ts": 1613809915306,
                      "uid": "example@akamai.com",
                      "uip": "192.0.2.56"
                    },
                    {
                      "app": "example-ssh-1.stage.akamai-access.com",
                      "browser": "Firefox 85.0",
                      "cc": "India",
                      "di": "1a6e4f414c9d7604a829f83e1f469527079fa1464b5b41203d8e398744d38d63",
                      "os": "Mac OS X 10.15",
                      "ral": [],
                      "rscd": "302",
                      "state": "Andhra Pradesh",
                      "ts": 1613462468839,
                      "uid": "example@akamai.com",
                      "uip": "192.0.2.216"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access audit logs.",
                  "properties": {
                    "data": {
                      "description": "Enterprise Access audit log data.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "app": {
                            "description": "The name of the application a user accessed.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "browser": {
                            "description": "The name of the user's browser.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "cc": {
                            "description": "The device's country location.",
                            "type": "string"
                          },
                          "di": {
                            "description": "The unique device ID.",
                            "type": "string"
                          },
                          "os": {
                            "description": "The name of the user's operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "ral": {
                            "description": "The failed risk posture rules that indicate the device risk assessment level.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "rscd": {
                            "description": "HTTP response status code.",
                            "type": "string"
                          },
                          "state": {
                            "description": "The name of the user's location.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "ts": {
                            "description": "The epoch timestamp marking the application audit log's creation.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uid": {
                            "description": "The user's email address.",
                            "type": "string"
                          },
                          "uip": {
                            "description": "The IP address of the user's device.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/auditlogs.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application audit logs reports",
        "tags": [
          "Application audit logs"
        ]
      },
      "x-akamai": {
        "file-path": "paths/query.yaml",
        "path-info": "/mgmt-pop/application-reports/ops/query"
      }
    },
    "/mgmt-pop/apps": {
      "post": {
        "description": "Creates a new application. After successful creation, additional steps are needed to deploy the application, depending on the application type. Refer to [Application creation workflow](https://techdocs.akamai.com/eaa-api/reference/application-creation-workflow).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app"
        },
        "operationId": "post-app",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "app_profile": 7,
                "app_type": 1,
                "name": "Example Application"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access Application properties.",
                "properties": {
                  "advanced_settings": {
                    "additionalProperties": false,
                    "description": "Application config version advanced settings.",
                    "properties": {
                      "acceleration": {
                        "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "allow_cors": {
                        "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "anonymous_server_conn_limit": {
                        "description": "The maximum number of concurrent anonymous server connections.",
                        "type": "string"
                      },
                      "anonymous_server_request_limit": {
                        "description": "The maximum number of concurrent anonymous server requests.",
                        "type": "string"
                      },
                      "app_auth": {
                        "description": "The application-facing authentication mechanism. Default is `none`.",
                        "type": "string"
                      },
                      "app_auth_domain": {
                        "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_client_cert_auth": {
                        "description": "Enables client certificate authentication. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "app_cookie_domain": {
                        "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_location": {
                        "description": "The application's location. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_server_read_timeout": {
                        "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                        "type": "string"
                      },
                      "authenticated_server_conn_limit": {
                        "description": "The maximum number of authenticated server connections allowed.",
                        "type": "string"
                      },
                      "authenticated_server_request_limit": {
                        "description": "The maximum number of authenticated server connections allowed.",
                        "type": "string"
                      },
                      "client_cert_auth": {
                        "description": "Enables client certificate authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant certificate parameters for client authentication.",
                        "type": "string"
                      },
                      "cookie_domain": {
                        "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "type": "string"
                      },
                      "cors_header_list": {
                        "default": "unbounded",
                        "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                        "type": "string"
                      },
                      "cors_max_age": {
                        "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                        "type": "string"
                      },
                      "cors_method_list": {
                        "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                        "type": "string"
                      },
                      "cors_origin_list": {
                        "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                        "type": "string"
                      },
                      "cors_support_credential": {
                        "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "custom_headers": {
                        "description": "Custom headers for application connections.",
                        "items": {
                          "nullable": true,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "domain_exception_list": {
                        "description": "A list of domains to except from content rewrite. ",
                        "type": "string"
                      },
                      "edge_authentication_enabled": {
                        "description": "Enables edge authentication for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "edge_cookie_key": {
                        "description": "The edge key to share with your ION configuration.",
                        "type": "string"
                      },
                      "external_cookie_domain": {
                        "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "force_mfa": {
                        "description": "Forces multi-factor authentication. Either `off` or `on`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "forward_ticket_granting_ticket": {
                        "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "g2o_enabled": {
                        "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "g2o_key": {
                        "description": "The G2O key to share with your ION configuration.",
                        "nullable": true,
                        "type": "string"
                      },
                      "g2o_nonce": {
                        "description": "The G2O nonce to share with your ION configuration.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_fall": {
                        "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                        "type": "string"
                      },
                      "health_check_http_host_header": {
                        "description": "The host header to use for HTTP health checks.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_http_url": {
                        "description": "The URL to use for HTTP health checks.",
                        "type": "string"
                      },
                      "health_check_http_version": {
                        "description": "The HTTP version to use for the health check.",
                        "type": "string"
                      },
                      "health_check_interval": {
                        "description": "The interval between successive heartbeats in seconds.",
                        "type": "string"
                      },
                      "health_check_rise": {
                        "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                        "type": "string"
                      },
                      "health_check_timeout": {
                        "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                        "type": "string"
                      },
                      "health_check_type": {
                        "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                        "enum": [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7"
                        ],
                        "type": "string"
                      },
                      "hidden_app": {
                        "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "host_key": {
                        "description": "The host secret key.",
                        "nullable": true,
                        "type": "string"
                      },
                      "hsts_age": {
                        "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                        "type": "string"
                      },
                      "http_only_cookie": {
                        "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "https_sslv3": {
                        "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "idle_close_time_seconds": {
                        "description": "The number of seconds a session may remain idle before it's closed.",
                        "type": "string"
                      },
                      "idle_conn_ceil": {
                        "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                        "type": "string"
                      },
                      "idle_conn_floor": {
                        "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                        "type": "string"
                      },
                      "idle_conn_step": {
                        "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                        "type": "string"
                      },
                      "idp_idle_expiry": {
                        "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "idp_max_expiry": {
                        "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "ignore_bypass_mfa": {
                        "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "ignore_cname_resolution": {
                        "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "inject_ajax_javascript": {
                        "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "internal_host_port": {
                        "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                        "type": "string"
                      },
                      "internal_hostname": {
                        "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "ip_access_allow": {
                        "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "is_ssl_verification_enabled": {
                        "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "keepalive_connection_pool": {
                        "description": "The maximum number of connections allowed in the keepalive pool.",
                        "type": "string"
                      },
                      "keepalive_enable": {
                        "description": "Enables connection keepalives. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "keepalive_timeout": {
                        "description": "The keepalive timeout period in seconds.",
                        "type": "string"
                      },
                      "kerberos_negotiate_once": {
                        "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                        "type": "string"
                      },
                      "keyed_keepalive_enable": {
                        "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "keytab": {
                        "description": "A unique keytab for Kerberos delegation.",
                        "type": "string"
                      },
                      "load_balancing_metric": {
                        "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                        "enum": [
                          "round-robin",
                          "ip-hash"
                        ],
                        "type": "string"
                      },
                      "logging_enabled": {
                        "description": "Enables logging for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "login_timeout": {
                        "description": "The number of seconds before a login attempt times out.",
                        "type": "string"
                      },
                      "login_url": {
                        "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "logout_url": {
                        "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "mdc_enable": {
                        "description": "Enables multi-data center connections. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa": {
                        "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                        "enum": [
                          "enable",
                          "disable",
                          "inherit"
                        ],
                        "type": "string"
                      },
                      "offload_onpremise_traffic": {
                        "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "pass_phrase": {
                        "description": "The passphrase for the certificate. ",
                        "nullable": true,
                        "type": "string"
                      },
                      "preauth_consent": {
                        "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "preauth_enforce_url": {
                        "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                        "type": "string"
                      },
                      "private_key": {
                        "description": "Private key for the certificate.",
                        "nullable": true,
                        "type": "string"
                      },
                      "proxy_buffer_size_kb": {
                        "description": "The size of the proxy's buffer, in kilobytes.",
                        "nullable": true,
                        "type": "string"
                      },
                      "proxy_disable_clipboard": {
                        "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "rate_limit": {
                        "description": "Enables rate limiting for the application. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "rdp_initial_program": {
                        "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "rdp_legacy_mode": {
                        "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "rdp_remote_apps": {
                        "description": "Remote RDP applications. ",
                        "items": {
                          "nullable": true,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "rdp_tls1": {
                        "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "refresh_sticky_cookie": {
                        "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "remote_spark_audio": {
                        "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "remote_spark_disk": {
                        "description": "Name of the disk for Cisco Webex Spark application.",
                        "type": "string"
                      },
                      "remote_spark_mapClipboard": {
                        "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "remote_spark_mapDisk": {
                        "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "remote_spark_mapPrinter": {
                        "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "remote_spark_printer": {
                        "description": "Name of the printer for Cisco Webex Spark application.",
                        "type": "string"
                      },
                      "remote_spark_recording": {
                        "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "request_body_rewrite": {
                        "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "request_parameters": {
                        "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "saas_enabled": {
                        "description": "Enables SaaS for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "sentry_redirect_401": {
                        "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                        "type": "string"
                      },
                      "server_cert_validate": {
                        "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "server_request_burst": {
                        "description": "The server request threshold for burst monitoring.",
                        "type": "string"
                      },
                      "service_principle_name": {
                        "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "session_sticky": {
                        "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "session_sticky_cookie_maxage": {
                        "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                        "type": "string"
                      },
                      "session_sticky_server_cookie": {
                        "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                        "nullable": true,
                        "type": "string"
                      },
                      "single_host_content_rw": {
                        "description": "Enables single host content rewrite. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_host_cookie_domain": {
                        "description": "Enables single host cookie domains. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_host_enable": {
                        "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_host_fqdn": {
                        "description": "The single host fully qualified domain name used to host multiple applications.",
                        "type": "string"
                      },
                      "single_host_path": {
                        "description": "The single host path used to host multiple applications.",
                        "type": "string"
                      },
                      "sla_object_url": {
                        "description": "The SLA object URL to share with your ION configuration.",
                        "type": "string"
                      },
                      "spdy_enabled": {
                        "description": "Enables SPDY traffic management. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "ssh_audit_enabled": {
                        "description": "Enables ssh session auditing. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "sso": {
                        "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "sticky_agent": {
                        "description": "Enables connector persistence for connections. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "user_name": {
                        "description": "The username to use for application authentication. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "wapp_auth": {
                        "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                        "enum": [
                          "form",
                          "basic",
                          "basic+cookie",
                          "certificate_only"
                        ],
                        "type": "string"
                      },
                      "websocket_enabled": {
                        "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "wildcard_internal_hostname": {
                        "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                    }
                  },
                  "agents": {
                    "description": "Target connectors for deploying the application configuration.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "compatible": {
                          "description": "Whether the target connector is compatible with the application configuration.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "compatible",
                        "name",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "app": {
                    "additionalProperties": false,
                    "description": "Specifies the application for the application directory.",
                    "properties": {
                      "app_uuid_url": {
                        "description": "The application UUID URL.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The application name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "app_uuid_url"
                    ],
                    "type": "object"
                  },
                  "app_category": {
                    "additionalProperties": false,
                    "description": "Specifies the category the application belongs to.",
                    "properties": {
                      "name": {
                        "description": "The name of the category.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uuid_url": {
                        "description": "The UUID of the category.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "app_deployed": {
                    "description": "Whether the application configuration is deployed.",
                    "example": "{{app_deployed}}",
                    "type": "boolean"
                  },
                  "app_logo": {
                    "description": "A URL identifying the application configuration's logo icon.",
                    "example": "{{app_logo}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "app_operational": {
                    "default": 1,
                    "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "example": "{{app_operational}}",
                    "type": "integer"
                  },
                  "app_profile": {
                    "default": 1,
                    "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ],
                    "example": "{{app_profile}}",
                    "type": "integer"
                  },
                  "app_status": {
                    "default": 1,
                    "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ],
                    "example": "{{app_status}}",
                    "type": "integer"
                  },
                  "app_type": {
                    "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": "{{app_type}}",
                    "type": "integer"
                  },
                  "auth_agent": {
                    "description": "The connector for the application.",
                    "example": "{{auth_agent}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "auth_enabled": {
                    "default": "true",
                    "description": "Enables authentication.",
                    "example": "{{auth_enabled}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_type": {
                    "default": 1,
                    "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "example": "{{auth_type}}",
                    "type": "integer"
                  },
                  "bookmark_url": {
                    "description": "The Okta Bookmark app URL.",
                    "example": "{{bookmark_url}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "cert": {
                    "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "client_app_mode": {
                    "default": 1,
                    "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                    "enum": [
                      1,
                      2
                    ],
                    "example": "{{client_app_mode}}",
                    "type": "integer"
                  },
                  "cname": {
                    "description": "The upstream URL for a CNAME redirect.",
                    "example": "{{cname}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                    "example": "{{created_at}}",
                    "readOnly": true,
                    "type": "string"
                  },
                  "data_agent": {
                    "description": "The data connector for the application.",
                    "example": "{{data_agent}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "directories": {
                    "description": "Application directory details for validating user accounts.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the directory.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                          "enum": [
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "user_count": {
                          "description": "The total number of user accounts configured on the directory.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the directory.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "name",
                        "user_count",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "directory": {
                    "additionalProperties": false,
                    "description": "Directory properties.",
                    "properties": {
                      "directory_uuid_url": {
                        "description": "The directory's unique ID.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The directory name.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "domain": {
                    "default": 1,
                    "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                    "enum": [
                      1,
                      2
                    ],
                    "example": "{{domain}}",
                    "type": "integer"
                  },
                  "domain_suffix": {
                    "description": "The domain suffix. For example, `.com`.",
                    "example": "{{domain_suffix}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "enable_mfa": {
                    "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                    "enum": [
                      "inherit",
                      "enable"
                    ],
                    "example": "{{enable_mfa}}",
                    "type": "string"
                  },
                  "host": {
                    "description": "The external default hostname for the application.",
                    "example": "{{host}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "idp": {
                    "additionalProperties": false,
                    "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                    "properties": {
                      "client_cert_auth": {
                        "description": "Enables client certificate authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant cert based parameters for client authentication.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "idp_id": {
                        "description": "The ID of the IDP configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the IDP configuration.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": {
                        "default": 1,
                        "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9
                        ],
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "modified_at": {
                    "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                    "example": "{{modified_at}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application configuration.",
                    "example": "{{name}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "oidc": {
                    "description": "Enables OpenID Connect (OIDC).",
                    "example": "{{oidc}}",
                    "type": "boolean"
                  },
                  "oidc_settings": {
                    "additionalProperties": false,
                    "description": "JSON settings to implement OIDC.",
                    "nullable": true,
                    "properties": {
                      "authorization_endpoint": {
                        "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "certs_uri": {
                        "description": "The URI of the relaying party's CA certificate.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "check_session_iframe": {
                        "description": "The iframe URL used to check session status.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "discovery_url": {
                        "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "end_session_endpoint": {
                        "description": "The OIDC endpoint that triggers single sign out.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "jwks_uri": {
                        "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "openid_metadata": {
                        "description": "Metadata that describes the OIDC provider's configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "token_endpoint": {
                        "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "userinfo_endpoint": {
                        "description": "The OIDC endpoint where the client sends requests for identity claims.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/app-oidc-settings.yaml"
                    }
                  },
                  "orig_tls": {
                    "description": "Whether the origin host uses TLS encryption.",
                    "example": "{{orig_tls}}",
                    "type": "string"
                  },
                  "origin_host": {
                    "description": "The IP address or FQDN of the application origin server.",
                    "example": "{{origin_host}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "origin_port": {
                    "description": "The application's origin port.",
                    "example": "{{origin_port}}",
                    "type": "integer"
                  },
                  "pop": {
                    "description": "The identifier for the target region to deploy the application.",
                    "example": "{{pop}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "popName": {
                    "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                    "example": "{{popName}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "rdp_version": {
                    "description": "The version of remote desktop protocol (RDP).",
                    "example": "{{rdp_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource": {
                    "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_status": {
                    "additionalProperties": false,
                    "description": "The most recent status of various application resources.",
                    "properties": {
                      "cert_status": {
                        "default": 1,
                        "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ],
                        "type": "integer"
                      },
                      "cname_dns_status": {
                        "default": 1,
                        "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "type": "integer"
                      },
                      "data_agent_status": {
                        "default": 1,
                        "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "type": "integer"
                      },
                      "dialin_server_status": {
                        "default": 1,
                        "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "type": "integer"
                      },
                      "directories_status": {
                        "default": 1,
                        "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "type": "integer"
                      },
                      "host_dns_status": {
                        "default": 1,
                        "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ],
                        "type": "integer"
                      },
                      "host_reachable": {
                        "default": false,
                        "description": "Indicates whether the host is reachable.",
                        "type": "boolean"
                      },
                      "internal_host_status": {
                        "default": 1,
                        "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                        "enum": [
                          1,
                          2
                        ],
                        "type": "integer"
                      },
                      "origin_host_status": {
                        "default": 1,
                        "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "type": "integer"
                      },
                      "pop_status": {
                        "default": 1,
                        "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                        "enum": [
                          1,
                          2
                        ],
                        "type": "integer"
                      }
                    },
                    "required": [
                      "host_reachable",
                      "directories_status",
                      "cname_dns_status",
                      "data_agent_status",
                      "cert_status",
                      "host_dns_status",
                      "origin_host_status",
                      "dialin_server_status",
                      "pop_status",
                      "internal_host_status"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/app-resource-status.yaml"
                    }
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Related resource URIs for the application.",
                    "properties": {
                      "apps": {
                        "description": "The URI location of an associated application resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "directories": {
                        "description": "The URI location of an associated directory resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The URI location of an associated group resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URI location of an associated href resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "pop": {
                        "description": "The URI location of an associated pop resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "services": {
                        "description": "The URI location of an associated service resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "sites": {
                        "description": "The URI location of an associated site resource.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "saml": {
                    "description": "Enables SAML for the application.",
                    "example": "{{saml}}",
                    "type": "boolean"
                  },
                  "saml_settings": {
                    "description": "SAML configuration for an application.",
                    "items": {
                      "additionalProperties": false,
                      "description": "SAML configuration for an application.",
                      "properties": {
                        "attrmap": {
                          "description": "SAML attribute mapping details.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "fmt": {
                                "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "basic",
                                  "unspecified",
                                  "persistent",
                                  "transient"
                                ],
                                "type": "string"
                              },
                              "fname": {
                                "description": "The fname of the attribute.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "fmt",
                              "src"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                          "properties": {
                            "ecp_enable": {
                              "default": false,
                              "description": "Enables enhanced client or proxy (ECP).",
                              "type": "boolean"
                            },
                            "ecp_resp_signature": {
                              "default": false,
                              "description": "The ECP response signature.",
                              "type": "boolean"
                            },
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "metadata": {
                              "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "enum": [
                                "post"
                              ],
                              "type": "string"
                            },
                            "self_signed": {
                              "default": true,
                              "description": "Enables a self-signed certificate.",
                              "type": "boolean"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ],
                              "type": "string"
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "self_signed",
                            "ecp_resp_signature",
                            "slo_url",
                            "entity_id",
                            "resp_bind",
                            "sign_cert",
                            "sign_algo",
                            "ecp_enable",
                            "metadata"
                          ],
                          "type": "object"
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider (SP) settings for the SAML configuration.",
                          "properties": {
                            "acs_url": {
                              "description": "The single sign-on (ACS) URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "default_relay_state": {
                              "description": "The default relay state. Specify `null` if you want to provide this later.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "encr_algo": {
                              "default": "aes256-cbc",
                              "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                              "enum": [
                                "aes256-cbc",
                                "aes128-cbc"
                              ],
                              "type": "string"
                            },
                            "encr_cert": {
                              "description": "The response encryption certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "force_auth": {
                              "default": false,
                              "description": "Forces encryption using the `httponly` flag in the session cookie.",
                              "type": "boolean"
                            },
                            "logout_bind": {
                              "description": "The request binding for single logout requests.",
                              "type": "string"
                            },
                            "metadata": {
                              "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "req_bind": {
                              "default": "redirect",
                              "description": "The response binding. Either `redirect` or `post`.",
                              "enum": [
                                "redirect",
                                "post"
                              ],
                              "type": "string"
                            },
                            "req_verify": {
                              "default": false,
                              "description": "Enables request verification.",
                              "type": "boolean"
                            },
                            "resp_encr": {
                              "default": false,
                              "description": "Enables encryption on the responses.",
                              "type": "boolean"
                            },
                            "sign_cert": {
                              "description": "The request signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_bind": {
                              "default": "post",
                              "description": "The single log-out binding. Either `post` or `redirect`.",
                              "enum": [
                                "post",
                                "redirect"
                              ],
                              "type": "string"
                            },
                            "slo_req_verify": {
                              "default": true,
                              "description": "Enables single log-out request verification.",
                              "type": "boolean"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 0,
                              "type": "string"
                            }
                          },
                          "required": [
                            "entity_id",
                            "acs_url",
                            "req_bind",
                            "default_relay_state",
                            "force_auth",
                            "req_verify",
                            "resp_encr",
                            "encr_cert",
                            "encr_algo"
                          ],
                          "type": "object"
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies the subject settings for the SAML configuration.",
                          "properties": {
                            "attr_source": {
                              "description": "The subject's source attribute. ",
                              "type": "string"
                            },
                            "fmt": {
                              "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                              "enum": [
                                "email",
                                "basic",
                                "unspecified",
                                "persistent",
                                "transient"
                              ],
                              "type": "string"
                            },
                            "rule": {
                              "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "fmt",
                            "src"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/app-saml-settings.yaml"
                    }
                  },
                  "servers": {
                    "description": "Origin server details of the internal application within your network.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the origin server.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "orig_tls": {
                          "description": "Enables TLS on the origin server.",
                          "type": "boolean"
                        },
                        "origin_host": {
                          "description": "The IP address or FQDN of the origin server.",
                          "nullable": true,
                          "type": "string"
                        },
                        "origin_port": {
                          "description": "The port number of the origin server.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "origin_protocol": {
                          "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                          "enum": [
                            "ssh",
                            "http"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "origin_protocol",
                        "orig_tls",
                        "origin_host",
                        "origin_port"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "services": {
                    "description": "Services enabled on the application configuration.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the service.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The unique ID of the service.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "sites": {
                    "description": "List of associated site resources.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "status": {
                    "default": 1,
                    "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ],
                    "example": "{{status}}"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "wsfed": {
                    "description": "Enables Web Services Federation (WSFED) identity federation.",
                    "example": "{{wsfed}}",
                    "type": "boolean"
                  },
                  "wsfed_settings": {
                    "description": "JSON settings to implement WSFED.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Web Services Federation (WSFED) configuration for an application.",
                      "properties": {
                        "attrmap": {
                          "description": "Mapped attributes for the WSFED configuration.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                          "properties": {
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ],
                              "type": "string"
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "entity_id",
                            "sign_key",
                            "sign_cert",
                            "sign_algo"
                          ],
                          "type": "object"
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider settings for the WSFED configuration.",
                          "properties": {
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID of the service provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "enum": [
                                "post"
                              ],
                              "type": "string"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "token_life": {
                              "default": 3600,
                              "description": "The number of seconds a token is valid.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "entity_id",
                            "slo_url",
                            "dst_url",
                            "resp_bind",
                            "token_life"
                          ],
                          "type": "object"
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies subject settings for the WSFED configuration.",
                          "properties": {
                            "custom_fmt": {
                              "description": "The custom format of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "fmt": {
                              "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                              "enum": [
                                "email",
                                "persistent",
                                "unspecified",
                                "transient"
                              ],
                              "minLength": 1,
                              "type": "string"
                            },
                            "rule": {
                              "description": "The custom rule language for the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "fmt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "title": "Web Services Federation (WSFED) settings",
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/app-wsfed-settings.yaml"
                    }
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/application.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "acceleration": "false",
                    "allow_cors": "false",
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_client_cert_auth": "false",
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "cookie_domain": "",
                    "cors_header_list": "unbounded",
                    "cors_max_age": "86400",
                    "cors_method_list": "unbounded",
                    "cors_origin_list": "unbounded",
                    "cors_support_credential": "on",
                    "custom_headers": [],
                    "domain_exception_list": "",
                    "edge_authentication_enabled": "false",
                    "edge_cookie_key": "",
                    "external_cookie_domain": null,
                    "force_mfa": "off",
                    "forward_ticket_granting_ticket": "false",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": "",
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "hsts_age": "15552000",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_host_port": "0",
                    "internal_hostname": "",
                    "keepalive_connection_pool": "50",
                    "keepalive_enable": "true",
                    "keepalive_timeout": "3",
                    "kerberos_negotiate_once": "off",
                    "keyed_keepalive_enable": "false",
                    "keytab": "",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "offload_onpremise_traffic": "false",
                    "pass_phrase": null,
                    "preauth_enforce_url": "",
                    "private_key": null,
                    "proxy_buffer_size_kb": null,
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "rdp_legacy_mode": "false",
                    "rdp_remote_apps": [],
                    "rdp_tls1": "false",
                    "refresh_sticky_cookie": "on",
                    "remote_spark_audio": "true",
                    "remote_spark_disk": "LOCALSHARE",
                    "remote_spark_mapClipboard": "on",
                    "remote_spark_mapDisk": "true",
                    "remote_spark_mapPrinter": "true",
                    "remote_spark_printer": "LOCALPRINTER",
                    "remote_spark_recording": "false",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "sla_object_url": "____spx/ionpage",
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "sticky_agent": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false",
                    "wildcard_internal_hostname": "false"
                  },
                  "agents": [
                    {
                      "compatible": true,
                      "name": "Email-App-Connector",
                      "uuid_url": "aldTFght_SfoolsooD26Q"
                    },
                    {
                      "compatible": true,
                      "name": "App2-Connector",
                      "uuid_url": "askljgoSxmQnkfJ1fozTA"
                    }
                  ],
                  "app_category": {
                    "name": "Communications",
                    "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                  },
                  "app_deployed": true,
                  "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                  "app_operational": 3,
                  "app_profile": 1,
                  "app_status": 2,
                  "app_type": 2,
                  "auth_agent": null,
                  "auth_enabled": "true",
                  "auth_type": 1,
                  "bookmark_url": "",
                  "cert": null,
                  "client_app_mode": 1,
                  "cname": "<uuid_url>.host.akamai-access.com",
                  "created_at": "2017-10-09T21:21:27.548211",
                  "data_agent": null,
                  "description": "This is the Email Server",
                  "directories": [
                    {
                      "name": "Company-Primary-AD",
                      "type": 1,
                      "user_count": 29584,
                      "uuid_url": "_tvruiywwiyipwgvs8rw"
                    }
                  ],
                  "domain": 1,
                  "domain_suffix": "host.akamai-access.com",
                  "host": "<uuid_url>.host.akamai-access.com",
                  "idp": {
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                    "name": "Pri-SAML-IDP",
                    "type": 2
                  },
                  "modified_at": "2019-03-28T20:10:22.418270",
                  "name": "Primary Email Application",
                  "oidc": false,
                  "oidc_settings": {},
                  "orig_tls": "true",
                  "origin_host": null,
                  "origin_port": 443,
                  "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                  "popName": "us-pop-1",
                  "rdp_version": "V1",
                  "resource": "apps",
                  "resource_status": {
                    "cert_status": 1,
                    "cname_dns_status": 1,
                    "data_agent_status": 1,
                    "dialin_server_status": 4,
                    "directories_status": 2,
                    "host_dns_status": 4,
                    "host_reachable": false,
                    "internal_host_status": 1,
                    "origin_host_status": 4,
                    "pop_status": 2
                  },
                  "resource_uri": {
                    "directories": "/api/v1/apps/uuid_url/directories/",
                    "groups": "/api/v1/apps/<uuid_url>/groups/",
                    "href": "/api/v1/apps/<uuid_url>",
                    "pop": "/api/v1/pops/<pop>",
                    "services": "/api/v1/apps/<uuid_url>/services/",
                    "sites": "/api/v1/apps/<uuid_url>/sites"
                  },
                  "saml": true,
                  "saml_settings": [
                    {
                      "attrmap": [
                        {
                          "fmt": "unspecified",
                          "fname": "",
                          "name": "Alice",
                          "src": "user.aliceSmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "asmith@company.com",
                          "src": "user.asmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "Smith",
                          "src": "user.aliceSmith"
                        }
                      ],
                      "idp": {
                        "ecp_enable": false,
                        "ecp_resp_signature": false,
                        "entity_id": "https://host.net/saml/idp/sso",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "resp_bind": "post",
                        "self_signed": true,
                        "sign_algo": "SHA1",
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_url": "https://host.net/saml/idp/slo"
                      },
                      "sp": {
                        "acs_url": "https://host.net/saml/sp/response",
                        "default_relay_state": "",
                        "dst_url": "",
                        "encr_algo": "aes256-cbc",
                        "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "entity_id": "https://host.net/saml/sp/response",
                        "force_auth": true,
                        "logout_bind": "post",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "req_bind": "redirect",
                        "req_verify": false,
                        "resp_encr": false,
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_bind": "redirect",
                        "slo_req_verify": false,
                        "slo_url": ""
                      },
                      "subject": {
                        "attr_source": "user.email",
                        "fmt": "unspecified",
                        "src": "user.userPrincipleName"
                      }
                    }
                  ],
                  "servers": [
                    {
                      "orig_tls": true,
                      "origin_host": "192.0.2.160",
                      "origin_port": 22,
                      "origin_protocol": "ssh"
                    }
                  ],
                  "services": [
                    {
                      "name": "Acceleration",
                      "uuid_url": "YqQlGzjYRzuSX04"
                    },
                    {
                      "name": "Access Control",
                      "uuid_url": "RzuSX04c8CECtw15"
                    }
                  ],
                  "sites": [
                    "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                  ],
                  "status": 1,
                  "uuid_url": "ZgpmtAS0ORa2b0jF",
                  "wsfed": false,
                  "wsfed_settings": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application properties.",
                  "properties": {
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Application config version advanced settings.",
                      "properties": {
                        "acceleration": {
                          "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "allow_cors": {
                          "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of concurrent anonymous server connections.",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of concurrent anonymous server requests.",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_client_cert_auth": {
                          "description": "Enables client certificate authentication. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant certificate parameters for client authentication.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "type": "string"
                        },
                        "cors_header_list": {
                          "default": "unbounded",
                          "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                          "type": "string"
                        },
                        "cors_max_age": {
                          "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                          "type": "string"
                        },
                        "cors_method_list": {
                          "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                          "type": "string"
                        },
                        "cors_origin_list": {
                          "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                          "type": "string"
                        },
                        "cors_support_credential": {
                          "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "custom_headers": {
                          "description": "Custom headers for application connections.",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "domain_exception_list": {
                          "description": "A list of domains to except from content rewrite. ",
                          "type": "string"
                        },
                        "edge_authentication_enabled": {
                          "description": "Enables edge authentication for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "edge_cookie_key": {
                          "description": "The edge key to share with your ION configuration.",
                          "type": "string"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "force_mfa": {
                          "description": "Forces multi-factor authentication. Either `off` or `on`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "forward_ticket_granting_ticket": {
                          "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_enabled": {
                          "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_key": {
                          "description": "The G2O key to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "g2o_nonce": {
                          "description": "The G2O nonce to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_host_header": {
                          "description": "The host header to use for HTTP health checks.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_http_url": {
                          "description": "The URL to use for HTTP health checks.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check.",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                          "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ],
                          "type": "string"
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "host_key": {
                          "description": "The host secret key.",
                          "nullable": true,
                          "type": "string"
                        },
                        "hsts_age": {
                          "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session may remain idle before it's closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "ignore_bypass_mfa": {
                          "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "ignore_cname_resolution": {
                          "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "inject_ajax_javascript": {
                          "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "internal_host_port": {
                          "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip_access_allow": {
                          "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keepalive_connection_pool": {
                          "description": "The maximum number of connections allowed in the keepalive pool.",
                          "type": "string"
                        },
                        "keepalive_enable": {
                          "description": "Enables connection keepalives. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keepalive_timeout": {
                          "description": "The keepalive timeout period in seconds.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "type": "string"
                        },
                        "keyed_keepalive_enable": {
                          "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keytab": {
                          "description": "A unique keytab for Kerberos delegation.",
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ],
                          "type": "string"
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "mdc_enable": {
                          "description": "Enables multi-data center connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                          "enum": [
                            "enable",
                            "disable",
                            "inherit"
                          ],
                          "type": "string"
                        },
                        "offload_onpremise_traffic": {
                          "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "pass_phrase": {
                          "description": "The passphrase for the certificate. ",
                          "nullable": true,
                          "type": "string"
                        },
                        "preauth_consent": {
                          "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "private_key": {
                          "description": "Private key for the certificate.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "rdp_legacy_mode": {
                          "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "rdp_remote_apps": {
                          "description": "Remote RDP applications. ",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "rdp_tls1": {
                          "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "remote_spark_audio": {
                          "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_disk": {
                          "description": "Name of the disk for Cisco Webex Spark application.",
                          "type": "string"
                        },
                        "remote_spark_mapClipboard": {
                          "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "remote_spark_mapDisk": {
                          "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_mapPrinter": {
                          "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_printer": {
                          "description": "Name of the printer for Cisco Webex Spark application.",
                          "type": "string"
                        },
                        "remote_spark_recording": {
                          "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                          "nullable": true,
                          "type": "string"
                        },
                        "single_host_content_rw": {
                          "description": "Enables single host content rewrite. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_cookie_domain": {
                          "description": "Enables single host cookie domains. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_enable": {
                          "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_fqdn": {
                          "description": "The single host fully qualified domain name used to host multiple applications.",
                          "type": "string"
                        },
                        "single_host_path": {
                          "description": "The single host path used to host multiple applications.",
                          "type": "string"
                        },
                        "sla_object_url": {
                          "description": "The SLA object URL to share with your ION configuration.",
                          "type": "string"
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sticky_agent": {
                          "description": "Enables connector persistence for connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The username to use for application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ],
                          "type": "string"
                        },
                        "websocket_enabled": {
                          "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "wildcard_internal_hostname": {
                          "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                      }
                    },
                    "agents": {
                      "description": "Target connectors for deploying the application configuration.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "app_uuid_url"
                      ],
                      "type": "object"
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ],
                      "type": "integer"
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details for validating user accounts.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Directory properties.",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory's unique ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "inherit",
                        "enable"
                      ],
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant cert based parameters for client authentication.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "nullable": true,
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "orig_tls": {
                      "description": "Whether the origin host uses TLS encryption.",
                      "type": "string"
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "origin_port": {
                      "description": "The application's origin port.",
                      "type": "integer"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "type": "integer"
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "type": "integer"
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "enum": [
                            1,
                            2
                          ],
                          "type": "integer"
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "enum": [
                            1,
                            2
                          ],
                          "type": "integer"
                        }
                      },
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Related resource URIs for the application.",
                      "properties": {
                        "apps": {
                          "description": "The URI location of an associated application resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                  "enum": [
                                    "email",
                                    "basic",
                                    "unspecified",
                                    "persistent",
                                    "transient"
                                  ],
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "enum": [
                                  "post"
                                ],
                                "type": "string"
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ],
                                "type": "string"
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "type": "object"
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ],
                                "type": "string"
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "logout_bind": {
                                "description": "The request binding for single logout requests.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "enum": [
                                  "redirect",
                                  "post"
                                ],
                                "type": "string"
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "enum": [
                                  "post",
                                  "redirect"
                                ],
                                "type": "string"
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 0,
                                "type": "string"
                              }
                            },
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "type": "object"
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "properties": {
                              "attr_source": {
                                "description": "The subject's source attribute. ",
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "basic",
                                  "unspecified",
                                  "persistent",
                                  "transient"
                                ],
                                "type": "string"
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "Origin server details of the internal application within your network.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "nullable": true,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "enum": [
                              "ssh",
                              "http"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "origin_protocol",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "services": {
                      "description": "Services enabled on the application configuration.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The unique ID of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "properties": {
                          "attrmap": {
                            "description": "Mapped attributes for the WSFED configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "fmt"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ],
                                "type": "string"
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "type": "object"
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "enum": [
                                  "post"
                                ],
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "type": "object"
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ],
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create an application",
        "tags": [
          "Applications"
        ]
      },
      "get": {
        "description": "Lists your EAA applications.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-apps"
        },
        "operationId": "get-apps",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "When set to `true`, the application members include services and directories.",
            "example": "{{expand_sdk}}",
            "in": "query",
            "name": "expand_sdk",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-sdk-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 2,
                    "next": "?limit=2&expand=true&offset=10",
                    "offset": 10,
                    "previous": "?limit=2&expand=true&offset=8",
                    "total_count": 178
                  },
                  "objects": [
                    {
                      "advanced_settings": {
                        "acceleration": "false",
                        "allow_cors": "false",
                        "anonymous_server_conn_limit": "50",
                        "anonymous_server_request_limit": "100",
                        "app_auth": "none",
                        "app_auth_domain": null,
                        "app_client_cert_auth": "false",
                        "app_cookie_domain": null,
                        "app_location": null,
                        "app_server_read_timeout": "60",
                        "authenticated_server_conn_limit": "50",
                        "authenticated_server_request_limit": "100",
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "cookie_domain": "",
                        "cors_header_list": "unbounded",
                        "cors_max_age": "86400",
                        "cors_method_list": "unbounded",
                        "cors_origin_list": "unbounded",
                        "cors_support_credential": "on",
                        "custom_headers": [],
                        "domain_exception_list": "",
                        "edge_authentication_enabled": "false",
                        "edge_cookie_key": "",
                        "external_cookie_domain": null,
                        "force_mfa": "off",
                        "forward_ticket_granting_ticket": "false",
                        "g2o_enabled": "false",
                        "g2o_key": null,
                        "g2o_nonce": null,
                        "health_check_fall": "3",
                        "health_check_http_host_header": "",
                        "health_check_http_url": "/",
                        "health_check_http_version": "1.1",
                        "health_check_interval": "30000",
                        "health_check_rise": "2",
                        "health_check_timeout": "50000",
                        "health_check_type": "0",
                        "hidden_app": "false",
                        "hsts_age": "15552000",
                        "http_only_cookie": "true",
                        "https_sslv3": "false",
                        "idle_close_time_seconds": "1200",
                        "idle_conn_ceil": "75",
                        "idle_conn_floor": "50",
                        "idle_conn_step": "10",
                        "idp_idle_expiry": null,
                        "idp_max_expiry": null,
                        "ignore_cname_resolution": "false",
                        "inject_ajax_javascript": "off",
                        "internal_host_port": "0",
                        "internal_hostname": "",
                        "keepalive_connection_pool": "50",
                        "keepalive_enable": "true",
                        "keepalive_timeout": "3",
                        "kerberos_negotiate_once": "off",
                        "keyed_keepalive_enable": "false",
                        "keytab": "",
                        "load_balancing_metric": "round-robin",
                        "logging_enabled": "true",
                        "login_timeout": "5",
                        "login_url": null,
                        "logout_url": null,
                        "mfa": "inherit",
                        "offload_onpremise_traffic": "false",
                        "pass_phrase": null,
                        "preauth_enforce_url": "",
                        "private_key": null,
                        "proxy_buffer_size_kb": null,
                        "proxy_disable_clipboard": "false",
                        "rate_limit": "on",
                        "rdp_initial_program": null,
                        "rdp_legacy_mode": "false",
                        "rdp_remote_apps": [],
                        "rdp_tls1": "false",
                        "refresh_sticky_cookie": "on",
                        "remote_spark_audio": "true",
                        "remote_spark_disk": "LOCALSHARE",
                        "remote_spark_mapClipboard": "on",
                        "remote_spark_mapDisk": "true",
                        "remote_spark_mapPrinter": "true",
                        "remote_spark_printer": "LOCALPRINTER",
                        "remote_spark_recording": "false",
                        "request_body_rewrite": "false",
                        "request_parameters": null,
                        "saas_enabled": "false",
                        "sentry_redirect_401": "off",
                        "server_cert_validate": "true",
                        "server_request_burst": "100",
                        "service_principle_name": null,
                        "session_sticky": "false",
                        "session_sticky_cookie_maxage": "0",
                        "session_sticky_server_cookie": null,
                        "sla_object_url": "____spx/iontestpage",
                        "spdy_enabled": "true",
                        "ssh_audit_enabled": "false",
                        "sso": "true",
                        "sticky_agent": "false",
                        "user_name": null,
                        "wapp_auth": "form",
                        "websocket_enabled": "false",
                        "wildcard_internal_hostname": "false"
                      },
                      "agents": [
                        {
                          "compatible": true,
                          "name": "Email-App-Connector",
                          "uuid_url": "aldTFght_SfoolsooD26Q"
                        },
                        {
                          "compatible": true,
                          "name": "App2-Connector",
                          "uuid_url": "askljgoSxmQnkfJ1fozTA"
                        }
                      ],
                      "app_category": {
                        "name": "Communications",
                        "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                      },
                      "app_deployed": true,
                      "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 2,
                      "app_type": 2,
                      "auth_agent": null,
                      "auth_enabled": "true",
                      "auth_type": 1,
                      "bookmark_url": "",
                      "cert": null,
                      "client_app_mode": 1,
                      "cname": "<uuid_url>.host.akamai-access.com",
                      "created_at": "2017-10-09T21:21:27.548211",
                      "data_agent": null,
                      "description": "This is the Email Server",
                      "directories": [
                        {
                          "name": "Company-Primary-AD",
                          "type": 1,
                          "user_count": 29584,
                          "uuid_url": "_tvruiywwiyipwgvs8rw"
                        }
                      ],
                      "domain": 1,
                      "domain_suffix": "host.akamai-access.com",
                      "host": "<uuid_url>.host.akamai-access.com",
                      "idp": {
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                        "name": "Pri-SAML-IDP",
                        "type": 2
                      },
                      "modified_at": "2019-03-28T20:10:22.418270",
                      "name": "Primary Email Application",
                      "oidc": false,
                      "oidc_settings": {},
                      "orig_tls": "true",
                      "origin_host": null,
                      "origin_port": 443,
                      "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "popName": "us-pop-1",
                      "rdp_version": "V1",
                      "resource": "apps",
                      "resource_status": {
                        "cert_status": 1,
                        "cname_dns_status": 1,
                        "data_agent_status": 1,
                        "dialin_server_status": 4,
                        "directories_status": 2,
                        "host_dns_status": 4,
                        "host_reachable": false,
                        "internal_host_status": 1,
                        "origin_host_status": 4,
                        "pop_status": 2
                      },
                      "resource_uri": {
                        "directories": "/api/v1/apps/uuid_url/directories/",
                        "groups": "/api/v1/apps/<uuid_url>/groups/",
                        "href": "/api/v1/apps/<uuid_url>",
                        "pop": "/api/v1/pops/<pop>",
                        "services": "/api/v1/apps/<uuid_url>/services/",
                        "sites": "/api/v1/apps/<uuid_url>/sites"
                      },
                      "saml": true,
                      "saml_settings": [
                        {
                          "attrmap": [
                            {
                              "fmt": "unspecified",
                              "fname": "",
                              "name": "FirstName",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "Email",
                              "src": "user.email"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "LastName",
                              "src": "user.lastName"
                            }
                          ],
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://host.net/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA1",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_url": "https://host.net/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://host.net/saml/sp/response",
                            "default_relay_state": "",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "entity_id": "https://host.net/saml/sp/response",
                            "force_auth": true,
                            "logout_bind": "post",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_bind": "redirect",
                            "slo_req_verify": false,
                            "slo_url": ""
                          },
                          "subject": {
                            "attr_source": "user.email",
                            "fmt": "unspecified",
                            "src": "user.userPrincipleName"
                          }
                        }
                      ],
                      "servers": [
                        {
                          "orig_tls": true,
                          "origin_host": "192.0.2.45",
                          "origin_port": 22,
                          "origin_protocol": "ssh"
                        }
                      ],
                      "services": [
                        {
                          "name": "Acceleration",
                          "uuid_url": "YqQlGzjYRzuSX04"
                        },
                        {
                          "name": "Access Control",
                          "uuid_url": "RzuSX04c8CECtw15"
                        }
                      ],
                      "sites": [
                        "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                      ],
                      "status": 1,
                      "uuid_url": "ZgpmtAS0ORa2b0jF",
                      "wsfed": false,
                      "wsfed_settings": []
                    },
                    {
                      "advanced_settings": {
                        "acceleration": "false",
                        "allow_cors": "false",
                        "anonymous_server_conn_limit": "50",
                        "anonymous_server_request_limit": "100",
                        "app_auth": "none",
                        "app_auth_domain": null,
                        "app_client_cert_auth": "false",
                        "app_cookie_domain": null,
                        "app_location": null,
                        "app_server_read_timeout": "60",
                        "authenticated_server_conn_limit": "50",
                        "authenticated_server_request_limit": "100",
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "cookie_domain": "",
                        "cors_header_list": "unbounded",
                        "cors_max_age": "86400",
                        "cors_method_list": "unbounded",
                        "cors_origin_list": "unbounded",
                        "cors_support_credential": "on",
                        "custom_headers": [],
                        "domain_exception_list": "",
                        "edge_authentication_enabled": "false",
                        "edge_cookie_key": "",
                        "external_cookie_domain": null,
                        "force_mfa": "off",
                        "forward_ticket_granting_ticket": "false",
                        "g2o_enabled": "false",
                        "g2o_key": null,
                        "g2o_nonce": null,
                        "health_check_fall": "3",
                        "health_check_http_host_header": "",
                        "health_check_http_url": "/",
                        "health_check_http_version": "1.1",
                        "health_check_interval": "30000",
                        "health_check_rise": "2",
                        "health_check_timeout": "50000",
                        "health_check_type": "0",
                        "hidden_app": "false",
                        "hsts_age": "15552000",
                        "http_only_cookie": "true",
                        "https_sslv3": "false",
                        "idle_close_time_seconds": "1200",
                        "idle_conn_ceil": "75",
                        "idle_conn_floor": "50",
                        "idle_conn_step": "10",
                        "idp_idle_expiry": null,
                        "idp_max_expiry": null,
                        "ignore_cname_resolution": "false",
                        "inject_ajax_javascript": "off",
                        "internal_host_port": "0",
                        "internal_hostname": "",
                        "keepalive_connection_pool": "50",
                        "keepalive_enable": "true",
                        "keepalive_timeout": "3",
                        "kerberos_negotiate_once": "off",
                        "keyed_keepalive_enable": "false",
                        "keytab": "",
                        "load_balancing_metric": "round-robin",
                        "logging_enabled": "true",
                        "login_timeout": "5",
                        "login_url": null,
                        "logout_url": null,
                        "mfa": "inherit",
                        "offload_onpremise_traffic": "false",
                        "pass_phrase": null,
                        "preauth_enforce_url": "",
                        "private_key": null,
                        "proxy_buffer_size_kb": null,
                        "proxy_disable_clipboard": "false",
                        "rate_limit": "on",
                        "rdp_initial_program": null,
                        "rdp_legacy_mode": "false",
                        "rdp_remote_apps": [],
                        "rdp_tls1": "false",
                        "refresh_sticky_cookie": "on",
                        "remote_spark_audio": "true",
                        "remote_spark_disk": "LOCALSHARE",
                        "remote_spark_mapClipboard": "on",
                        "remote_spark_mapDisk": "true",
                        "remote_spark_mapPrinter": "true",
                        "remote_spark_printer": "LOCALPRINTER",
                        "remote_spark_recording": "false",
                        "request_body_rewrite": "false",
                        "request_parameters": null,
                        "saas_enabled": "false",
                        "sentry_redirect_401": "off",
                        "server_cert_validate": "true",
                        "server_request_burst": "100",
                        "service_principle_name": null,
                        "session_sticky": "false",
                        "session_sticky_cookie_maxage": "0",
                        "session_sticky_server_cookie": null,
                        "sla_object_url": "____spx/iontestpage",
                        "spdy_enabled": "true",
                        "ssh_audit_enabled": "false",
                        "sso": "true",
                        "sticky_agent": "false",
                        "user_name": null,
                        "wapp_auth": "form",
                        "websocket_enabled": "false",
                        "wildcard_internal_hostname": "false"
                      },
                      "agents": [
                        {
                          "compatible": true,
                          "name": "Email-App-Connector",
                          "uuid_url": "aldTFght_SfoolsooD26Q"
                        },
                        {
                          "compatible": true,
                          "name": "App2-Connector",
                          "uuid_url": "askljgoSxmQnkfJ1fozTA"
                        }
                      ],
                      "app_category": {
                        "name": "Communications",
                        "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                      },
                      "app_deployed": true,
                      "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 2,
                      "app_type": 2,
                      "auth_agent": null,
                      "auth_enabled": "true",
                      "auth_type": 1,
                      "bookmark_url": "",
                      "cert": null,
                      "client_app_mode": 1,
                      "cname": "<uuid_url>.host.akamai-access.com",
                      "created_at": "2017-10-09T21:21:27.548211",
                      "data_agent": null,
                      "description": "This is the Email Server",
                      "directories": [
                        {
                          "name": "Company-Primary-AD",
                          "type": 1,
                          "user_count": 29584,
                          "uuid_url": "_tvruiywwiyipwgvs8rw"
                        }
                      ],
                      "domain": 1,
                      "domain_suffix": "host.akamai-access.com",
                      "host": "<uuid_url>.host.akamai-access.com",
                      "idp": {
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                        "name": "Pri-SAML-IDP",
                        "type": 2
                      },
                      "modified_at": "2019-03-28T20:10:22.418270",
                      "name": "Primary Email Application",
                      "oidc": false,
                      "oidc_settings": {},
                      "orig_tls": "true",
                      "origin_host": null,
                      "origin_port": 443,
                      "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "popName": "us-pop-1",
                      "rdp_version": "V1",
                      "resource": "apps",
                      "resource_status": {
                        "cert_status": 1,
                        "cname_dns_status": 1,
                        "data_agent_status": 1,
                        "dialin_server_status": 4,
                        "directories_status": 2,
                        "host_dns_status": 4,
                        "host_reachable": false,
                        "internal_host_status": 1,
                        "origin_host_status": 4,
                        "pop_status": 2
                      },
                      "resource_uri": {
                        "directories": "/api/v1/apps/uuid_url/directories/",
                        "groups": "/api/v1/apps/<uuid_url>/groups/",
                        "href": "/api/v1/apps/<uuid_url>",
                        "pop": "/api/v1/pops/<pop>",
                        "services": "/api/v1/apps/<uuid_url>/services/",
                        "sites": "/api/v1/apps/<uuid_url>/sites"
                      },
                      "saml": true,
                      "saml_settings": [
                        {
                          "attrmap": [
                            {
                              "fmt": "unspecified",
                              "fname": "",
                              "name": "FirstName",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "Email",
                              "src": "user.email"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "LastName",
                              "src": "user.lastName"
                            }
                          ],
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://host.net/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA1",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_url": "https://host.net/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://host.net/saml/sp/response",
                            "default_relay_state": "",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "entity_id": "https://host.net/saml/sp/response",
                            "force_auth": true,
                            "logout_bind": "post",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_bind": "redirect",
                            "slo_req_verify": false,
                            "slo_url": ""
                          },
                          "subject": {
                            "attr_source": "user.email",
                            "fmt": "unspecified",
                            "src": "user.userPrincipleName"
                          }
                        }
                      ],
                      "servers": [
                        {
                          "orig_tls": true,
                          "origin_host": "192.0.2.103",
                          "origin_port": 22,
                          "origin_protocol": "ssh"
                        }
                      ],
                      "services": [
                        {
                          "name": "Acceleration",
                          "uuid_url": "YqQlGzjYRzuSX04"
                        },
                        {
                          "name": "Access Control",
                          "uuid_url": "RzuSX04c8CECtw15"
                        }
                      ],
                      "sites": [
                        "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                      ],
                      "status": 1,
                      "uuid_url": "ZgpmtAS0ORa2b0jF",
                      "wsfed": false,
                      "wsfed_settings": []
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Applications.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "List of applications for the account.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise Access Application properties.",
                        "properties": {
                          "advanced_settings": {
                            "additionalProperties": false,
                            "description": "Application config version advanced settings.",
                            "properties": {
                              "acceleration": {
                                "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "allow_cors": {
                                "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "anonymous_server_conn_limit": {
                                "description": "The maximum number of concurrent anonymous server connections.",
                                "type": "string"
                              },
                              "anonymous_server_request_limit": {
                                "description": "The maximum number of concurrent anonymous server requests.",
                                "type": "string"
                              },
                              "app_auth": {
                                "description": "The application-facing authentication mechanism. Default is `none`.",
                                "type": "string"
                              },
                              "app_auth_domain": {
                                "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_client_cert_auth": {
                                "description": "Enables client certificate authentication. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "app_cookie_domain": {
                                "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_location": {
                                "description": "The application's location. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_server_read_timeout": {
                                "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                                "type": "string"
                              },
                              "authenticated_server_conn_limit": {
                                "description": "The maximum number of authenticated server connections allowed.",
                                "type": "string"
                              },
                              "authenticated_server_request_limit": {
                                "description": "The maximum number of authenticated server connections allowed.",
                                "type": "string"
                              },
                              "client_cert_auth": {
                                "description": "Enables client certificate authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_user_param": {
                                "description": "Relevant certificate parameters for client authentication.",
                                "type": "string"
                              },
                              "cookie_domain": {
                                "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                "type": "string"
                              },
                              "cors_header_list": {
                                "default": "unbounded",
                                "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                                "type": "string"
                              },
                              "cors_max_age": {
                                "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                                "type": "string"
                              },
                              "cors_method_list": {
                                "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                                "type": "string"
                              },
                              "cors_origin_list": {
                                "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                                "type": "string"
                              },
                              "cors_support_credential": {
                                "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "custom_headers": {
                                "description": "Custom headers for application connections.",
                                "items": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "domain_exception_list": {
                                "description": "A list of domains to except from content rewrite. ",
                                "type": "string"
                              },
                              "edge_authentication_enabled": {
                                "description": "Enables edge authentication for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "edge_cookie_key": {
                                "description": "The edge key to share with your ION configuration.",
                                "type": "string"
                              },
                              "external_cookie_domain": {
                                "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "force_mfa": {
                                "description": "Forces multi-factor authentication. Either `off` or `on`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "forward_ticket_granting_ticket": {
                                "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "g2o_enabled": {
                                "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "g2o_key": {
                                "description": "The G2O key to share with your ION configuration.",
                                "nullable": true,
                                "type": "string"
                              },
                              "g2o_nonce": {
                                "description": "The G2O nonce to share with your ION configuration.",
                                "nullable": true,
                                "type": "string"
                              },
                              "health_check_fall": {
                                "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                                "type": "string"
                              },
                              "health_check_http_host_header": {
                                "description": "The host header to use for HTTP health checks.",
                                "nullable": true,
                                "type": "string"
                              },
                              "health_check_http_url": {
                                "description": "The URL to use for HTTP health checks.",
                                "type": "string"
                              },
                              "health_check_http_version": {
                                "description": "The HTTP version to use for the health check.",
                                "type": "string"
                              },
                              "health_check_interval": {
                                "description": "The interval between successive heartbeats in seconds.",
                                "type": "string"
                              },
                              "health_check_rise": {
                                "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                                "type": "string"
                              },
                              "health_check_timeout": {
                                "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                                "type": "string"
                              },
                              "health_check_type": {
                                "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                                "enum": [
                                  "0",
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6",
                                  "7"
                                ],
                                "type": "string"
                              },
                              "hidden_app": {
                                "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "host_key": {
                                "description": "The host secret key.",
                                "nullable": true,
                                "type": "string"
                              },
                              "hsts_age": {
                                "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                                "type": "string"
                              },
                              "http_only_cookie": {
                                "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "https_sslv3": {
                                "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "idle_close_time_seconds": {
                                "description": "The number of seconds a session may remain idle before it's closed.",
                                "type": "string"
                              },
                              "idle_conn_ceil": {
                                "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                                "type": "string"
                              },
                              "idle_conn_floor": {
                                "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                                "type": "string"
                              },
                              "idle_conn_step": {
                                "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                                "type": "string"
                              },
                              "idp_idle_expiry": {
                                "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "idp_max_expiry": {
                                "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "ignore_bypass_mfa": {
                                "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "ignore_cname_resolution": {
                                "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "inject_ajax_javascript": {
                                "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "internal_host_port": {
                                "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                                "type": "string"
                              },
                              "internal_hostname": {
                                "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "ip_access_allow": {
                                "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "is_ssl_verification_enabled": {
                                "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "keepalive_connection_pool": {
                                "description": "The maximum number of connections allowed in the keepalive pool.",
                                "type": "string"
                              },
                              "keepalive_enable": {
                                "description": "Enables connection keepalives. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "keepalive_timeout": {
                                "description": "The keepalive timeout period in seconds.",
                                "type": "string"
                              },
                              "kerberos_negotiate_once": {
                                "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                                "type": "string"
                              },
                              "keyed_keepalive_enable": {
                                "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "keytab": {
                                "description": "A unique keytab for Kerberos delegation.",
                                "type": "string"
                              },
                              "load_balancing_metric": {
                                "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                                "enum": [
                                  "round-robin",
                                  "ip-hash"
                                ],
                                "type": "string"
                              },
                              "logging_enabled": {
                                "description": "Enables logging for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "login_timeout": {
                                "description": "The number of seconds before a login attempt times out.",
                                "type": "string"
                              },
                              "login_url": {
                                "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "logout_url": {
                                "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "mdc_enable": {
                                "description": "Enables multi-data center connections. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa": {
                                "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                                "enum": [
                                  "enable",
                                  "disable",
                                  "inherit"
                                ],
                                "type": "string"
                              },
                              "offload_onpremise_traffic": {
                                "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "pass_phrase": {
                                "description": "The passphrase for the certificate. ",
                                "nullable": true,
                                "type": "string"
                              },
                              "preauth_consent": {
                                "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "preauth_enforce_url": {
                                "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                                "type": "string"
                              },
                              "private_key": {
                                "description": "Private key for the certificate.",
                                "nullable": true,
                                "type": "string"
                              },
                              "proxy_buffer_size_kb": {
                                "description": "The size of the proxy's buffer, in kilobytes.",
                                "nullable": true,
                                "type": "string"
                              },
                              "proxy_disable_clipboard": {
                                "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "rate_limit": {
                                "description": "Enables rate limiting for the application. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "rdp_initial_program": {
                                "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "rdp_legacy_mode": {
                                "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "rdp_remote_apps": {
                                "description": "Remote RDP applications. ",
                                "items": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "rdp_tls1": {
                                "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "refresh_sticky_cookie": {
                                "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "remote_spark_audio": {
                                "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "remote_spark_disk": {
                                "description": "Name of the disk for Cisco Webex Spark application.",
                                "type": "string"
                              },
                              "remote_spark_mapClipboard": {
                                "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "remote_spark_mapDisk": {
                                "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "remote_spark_mapPrinter": {
                                "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "remote_spark_printer": {
                                "description": "Name of the printer for Cisco Webex Spark application.",
                                "type": "string"
                              },
                              "remote_spark_recording": {
                                "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "request_body_rewrite": {
                                "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "request_parameters": {
                                "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "saas_enabled": {
                                "description": "Enables SaaS for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "sentry_redirect_401": {
                                "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                                "type": "string"
                              },
                              "server_cert_validate": {
                                "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "server_request_burst": {
                                "description": "The server request threshold for burst monitoring.",
                                "type": "string"
                              },
                              "service_principle_name": {
                                "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "session_sticky": {
                                "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "session_sticky_cookie_maxage": {
                                "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                                "type": "string"
                              },
                              "session_sticky_server_cookie": {
                                "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                                "nullable": true,
                                "type": "string"
                              },
                              "single_host_content_rw": {
                                "description": "Enables single host content rewrite. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_host_cookie_domain": {
                                "description": "Enables single host cookie domains. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_host_enable": {
                                "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_host_fqdn": {
                                "description": "The single host fully qualified domain name used to host multiple applications.",
                                "type": "string"
                              },
                              "single_host_path": {
                                "description": "The single host path used to host multiple applications.",
                                "type": "string"
                              },
                              "sla_object_url": {
                                "description": "The SLA object URL to share with your ION configuration.",
                                "type": "string"
                              },
                              "spdy_enabled": {
                                "description": "Enables SPDY traffic management. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "ssh_audit_enabled": {
                                "description": "Enables ssh session auditing. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "sso": {
                                "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "sticky_agent": {
                                "description": "Enables connector persistence for connections. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "user_name": {
                                "description": "The username to use for application authentication. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "wapp_auth": {
                                "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                                "enum": [
                                  "form",
                                  "basic",
                                  "basic+cookie",
                                  "certificate_only"
                                ],
                                "type": "string"
                              },
                              "websocket_enabled": {
                                "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "wildcard_internal_hostname": {
                                "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                            }
                          },
                          "agents": {
                            "description": "Target connectors for deploying the application configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "compatible": {
                                  "description": "Whether the target connector is compatible with the application configuration.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The UUID URL of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "compatible",
                                "name",
                                "uuid_url"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "app": {
                            "additionalProperties": false,
                            "description": "Specifies the application for the application directory.",
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "app_uuid_url"
                            ],
                            "type": "object"
                          },
                          "app_category": {
                            "additionalProperties": false,
                            "description": "Specifies the category the application belongs to.",
                            "properties": {
                              "name": {
                                "description": "The name of the category.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "uuid_url": {
                                "description": "The UUID of the category.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_logo": {
                            "description": "A URL identifying the application configuration's logo icon.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "app_operational": {
                            "default": 1,
                            "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "app_profile": {
                            "default": 1,
                            "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ],
                            "type": "integer"
                          },
                          "app_status": {
                            "default": 1,
                            "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7
                            ],
                            "type": "integer"
                          },
                          "app_type": {
                            "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "auth_agent": {
                            "description": "The connector for the application.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "auth_enabled": {
                            "default": "true",
                            "description": "Enables authentication.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "auth_type": {
                            "default": 1,
                            "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "bookmark_url": {
                            "description": "The Okta Bookmark app URL.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "cert": {
                            "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "client_app_mode": {
                            "default": 1,
                            "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "cname": {
                            "description": "The upstream URL for a CNAME redirect.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "data_agent": {
                            "description": "The data connector for the application.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "directories": {
                            "description": "Application directory details for validating user accounts.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the directory.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4
                                  ],
                                  "type": "integer"
                                },
                                "user_count": {
                                  "description": "The total number of user accounts configured on the directory.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "uuid_url": {
                                  "description": "The UUID URL of the directory.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "name",
                                "user_count",
                                "uuid_url"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "directory": {
                            "additionalProperties": false,
                            "description": "Directory properties.",
                            "properties": {
                              "directory_uuid_url": {
                                "description": "The directory's unique ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "domain": {
                            "default": 1,
                            "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "domain_suffix": {
                            "description": "The domain suffix. For example, `.com`.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                            "enum": [
                              "inherit",
                              "enable"
                            ],
                            "type": "string"
                          },
                          "host": {
                            "description": "The external default hostname for the application.",
                            "nullable": true,
                            "type": "string"
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                            "properties": {
                              "client_cert_auth": {
                                "description": "Enables client certificate authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_user_param": {
                                "description": "Relevant cert based parameters for client authentication.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "idp_id": {
                                "description": "The ID of the IDP configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the IDP configuration.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "type": {
                                "default": 1,
                                "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  9
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "modified_at": {
                            "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the application configuration.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "oidc": {
                            "description": "Enables OpenID Connect (OIDC).",
                            "type": "boolean"
                          },
                          "oidc_settings": {
                            "additionalProperties": false,
                            "description": "JSON settings to implement OIDC.",
                            "nullable": true,
                            "properties": {
                              "authorization_endpoint": {
                                "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "certs_uri": {
                                "description": "The URI of the relaying party's CA certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "check_session_iframe": {
                                "description": "The iframe URL used to check session status.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "discovery_url": {
                                "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "end_session_endpoint": {
                                "description": "The OIDC endpoint that triggers single sign out.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "jwks_uri": {
                                "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "openid_metadata": {
                                "description": "Metadata that describes the OIDC provider's configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_endpoint": {
                                "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "userinfo_endpoint": {
                                "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/app-oidc-settings.yaml"
                            }
                          },
                          "orig_tls": {
                            "description": "Whether the origin host uses TLS encryption.",
                            "type": "string"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the application origin server.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The application's origin port.",
                            "type": "integer"
                          },
                          "pop": {
                            "description": "The identifier for the target region to deploy the application.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "popName": {
                            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "rdp_version": {
                            "description": "The version of remote desktop protocol (RDP).",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_status": {
                            "additionalProperties": false,
                            "description": "The most recent status of various application resources.",
                            "properties": {
                              "cert_status": {
                                "default": 1,
                                "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ],
                                "type": "integer"
                              },
                              "cname_dns_status": {
                                "default": 1,
                                "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "type": "integer"
                              },
                              "data_agent_status": {
                                "default": 1,
                                "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "dialin_server_status": {
                                "default": 1,
                                "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "type": "integer"
                              },
                              "directories_status": {
                                "default": 1,
                                "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "host_dns_status": {
                                "default": 1,
                                "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ],
                                "type": "integer"
                              },
                              "host_reachable": {
                                "default": false,
                                "description": "Indicates whether the host is reachable.",
                                "type": "boolean"
                              },
                              "internal_host_status": {
                                "default": 1,
                                "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer"
                              },
                              "origin_host_status": {
                                "default": 1,
                                "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "type": "integer"
                              },
                              "pop_status": {
                                "default": 1,
                                "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer"
                              }
                            },
                            "required": [
                              "host_reachable",
                              "directories_status",
                              "cname_dns_status",
                              "data_agent_status",
                              "cert_status",
                              "host_dns_status",
                              "origin_host_status",
                              "dialin_server_status",
                              "pop_status",
                              "internal_host_status"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/app-resource-status.yaml"
                            }
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Related resource URIs for the application.",
                            "properties": {
                              "apps": {
                                "description": "The URI location of an associated application resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "directories": {
                                "description": "The URI location of an associated directory resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "groups": {
                                "description": "The URI location of an associated group resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URI location of an associated href resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "pop": {
                                "description": "The URI location of an associated pop resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The URI location of an associated service resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sites": {
                                "description": "The URI location of an associated site resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "saml": {
                            "description": "Enables SAML for the application.",
                            "type": "boolean"
                          },
                          "saml_settings": {
                            "description": "SAML configuration for an application.",
                            "items": {
                              "additionalProperties": false,
                              "description": "SAML configuration for an application.",
                              "properties": {
                                "attrmap": {
                                  "description": "SAML attribute mapping details.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "fmt": {
                                        "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                        "enum": [
                                          "email",
                                          "basic",
                                          "unspecified",
                                          "persistent",
                                          "transient"
                                        ],
                                        "type": "string"
                                      },
                                      "fname": {
                                        "description": "The fname of the attribute.",
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "rule": {
                                        "description": "The custom rule language for the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "val": {
                                        "description": "The value of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "fmt",
                                      "src"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "idp": {
                                  "additionalProperties": false,
                                  "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                                  "properties": {
                                    "ecp_enable": {
                                      "default": false,
                                      "description": "Enables enhanced client or proxy (ECP).",
                                      "type": "boolean"
                                    },
                                    "ecp_resp_signature": {
                                      "default": false,
                                      "description": "The ECP response signature.",
                                      "type": "boolean"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID of the identity provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "resp_bind": {
                                      "default": "post",
                                      "description": "The response binding. Set to `post`.",
                                      "enum": [
                                        "post"
                                      ],
                                      "type": "string"
                                    },
                                    "self_signed": {
                                      "default": true,
                                      "description": "Enables a self-signed certificate.",
                                      "type": "boolean"
                                    },
                                    "sign_algo": {
                                      "default": "SHA256",
                                      "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                      "enum": [
                                        "SHA256",
                                        "SHA1"
                                      ],
                                      "type": "string"
                                    },
                                    "sign_cert": {
                                      "description": "The signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_key": {
                                      "description": "The signing key.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "self_signed",
                                    "ecp_resp_signature",
                                    "slo_url",
                                    "entity_id",
                                    "resp_bind",
                                    "sign_cert",
                                    "sign_algo",
                                    "ecp_enable",
                                    "metadata"
                                  ],
                                  "type": "object"
                                },
                                "sp": {
                                  "additionalProperties": false,
                                  "description": "Specifies service provider (SP) settings for the SAML configuration.",
                                  "properties": {
                                    "acs_url": {
                                      "description": "The single sign-on (ACS) URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "default_relay_state": {
                                      "description": "The default relay state. Specify `null` if you want to provide this later.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "dst_url": {
                                      "description": "The destination URL.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "encr_algo": {
                                      "default": "aes256-cbc",
                                      "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                      "enum": [
                                        "aes256-cbc",
                                        "aes128-cbc"
                                      ],
                                      "type": "string"
                                    },
                                    "encr_cert": {
                                      "description": "The response encryption certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "force_auth": {
                                      "default": false,
                                      "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                      "type": "boolean"
                                    },
                                    "logout_bind": {
                                      "description": "The request binding for single logout requests.",
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "req_bind": {
                                      "default": "redirect",
                                      "description": "The response binding. Either `redirect` or `post`.",
                                      "enum": [
                                        "redirect",
                                        "post"
                                      ],
                                      "type": "string"
                                    },
                                    "req_verify": {
                                      "default": false,
                                      "description": "Enables request verification.",
                                      "type": "boolean"
                                    },
                                    "resp_encr": {
                                      "default": false,
                                      "description": "Enables encryption on the responses.",
                                      "type": "boolean"
                                    },
                                    "sign_cert": {
                                      "description": "The request signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "slo_bind": {
                                      "default": "post",
                                      "description": "The single log-out binding. Either `post` or `redirect`.",
                                      "enum": [
                                        "post",
                                        "redirect"
                                      ],
                                      "type": "string"
                                    },
                                    "slo_req_verify": {
                                      "default": true,
                                      "description": "Enables single log-out request verification.",
                                      "type": "boolean"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 0,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entity_id",
                                    "acs_url",
                                    "req_bind",
                                    "default_relay_state",
                                    "force_auth",
                                    "req_verify",
                                    "resp_encr",
                                    "encr_cert",
                                    "encr_algo"
                                  ],
                                  "type": "object"
                                },
                                "subject": {
                                  "additionalProperties": false,
                                  "description": "Specifies the subject settings for the SAML configuration.",
                                  "properties": {
                                    "attr_source": {
                                      "description": "The subject's source attribute. ",
                                      "type": "string"
                                    },
                                    "fmt": {
                                      "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                      "enum": [
                                        "email",
                                        "basic",
                                        "unspecified",
                                        "persistent",
                                        "transient"
                                      ],
                                      "type": "string"
                                    },
                                    "rule": {
                                      "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "src": {
                                      "description": "The source of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "val": {
                                      "description": "The value of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "fmt",
                                    "src"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "sp",
                                "attrmap",
                                "idp",
                                "subject"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "x-akamai": {
                              "file-path": "schemas/app-saml-settings.yaml"
                            }
                          },
                          "servers": {
                            "description": "Origin server details of the internal application within your network.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the origin server.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "orig_tls": {
                                  "description": "Enables TLS on the origin server.",
                                  "type": "boolean"
                                },
                                "origin_host": {
                                  "description": "The IP address or FQDN of the origin server.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "origin_port": {
                                  "description": "The port number of the origin server.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "origin_protocol": {
                                  "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                                  "enum": [
                                    "ssh",
                                    "http"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "origin_protocol",
                                "orig_tls",
                                "origin_host",
                                "origin_port"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "services": {
                            "description": "Services enabled on the application configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the service.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The unique ID of the service.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "sites": {
                            "description": "List of associated site resources.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "status": {
                            "default": 1,
                            "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7
                            ]
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "wsfed": {
                            "description": "Enables Web Services Federation (WSFED) identity federation.",
                            "type": "boolean"
                          },
                          "wsfed_settings": {
                            "description": "JSON settings to implement WSFED.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Web Services Federation (WSFED) configuration for an application.",
                              "properties": {
                                "attrmap": {
                                  "description": "Mapped attributes for the WSFED configuration.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "custom_fmt": {
                                        "description": "The custom format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "fmt": {
                                        "description": "The name format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "rule": {
                                        "description": "The custom rule language for the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "val": {
                                        "description": "The value of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "fmt"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "idp": {
                                  "additionalProperties": false,
                                  "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                                  "properties": {
                                    "entity_id": {
                                      "description": "The entity ID of the identity provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_algo": {
                                      "default": "SHA256",
                                      "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                      "enum": [
                                        "SHA256",
                                        "SHA1"
                                      ],
                                      "type": "string"
                                    },
                                    "sign_cert": {
                                      "description": "The signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_key": {
                                      "description": "The signing key.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entity_id",
                                    "sign_key",
                                    "sign_cert",
                                    "sign_algo"
                                  ],
                                  "type": "object"
                                },
                                "sp": {
                                  "additionalProperties": false,
                                  "description": "Specifies service provider settings for the WSFED configuration.",
                                  "properties": {
                                    "dst_url": {
                                      "description": "The destination URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID of the service provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "resp_bind": {
                                      "default": "post",
                                      "description": "The response binding. Set to `post`.",
                                      "enum": [
                                        "post"
                                      ],
                                      "type": "string"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "token_life": {
                                      "default": 3600,
                                      "description": "The number of seconds a token is valid.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "entity_id",
                                    "slo_url",
                                    "dst_url",
                                    "resp_bind",
                                    "token_life"
                                  ],
                                  "type": "object"
                                },
                                "subject": {
                                  "additionalProperties": false,
                                  "description": "Specifies subject settings for the WSFED configuration.",
                                  "properties": {
                                    "custom_fmt": {
                                      "description": "The custom format of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "fmt": {
                                      "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                      "enum": [
                                        "email",
                                        "persistent",
                                        "unspecified",
                                        "transient"
                                      ],
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "rule": {
                                      "description": "The custom rule language for the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "src": {
                                      "description": "The source of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "val": {
                                      "description": "The value of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "fmt"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "sp",
                                "attrmap",
                                "idp",
                                "subject"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "title": "Web Services Federation (WSFED) settings",
                            "type": "array",
                            "x-akamai": {
                              "file-path": "schemas/app-wsfed-settings.yaml"
                            }
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/application.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/applications.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List applications",
        "tags": [
          "Applications"
        ]
      },
      "x-akamai": {
        "file-path": "paths/apps.yaml",
        "path-info": "/mgmt-pop/apps"
      }
    },
    "/mgmt-pop/apps/{applicationId}": {
      "get": {
        "description": "Lists a specified application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app"
        },
        "operationId": "get-app",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "When set to `true`, the application members include services and directories.",
            "example": "{{expand_sdk}}",
            "in": "query",
            "name": "expand_sdk",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-sdk-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "acceleration": "false",
                    "allow_cors": "false",
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_client_cert_auth": "false",
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "cookie_domain": "",
                    "cors_header_list": "unbounded",
                    "cors_max_age": "86400",
                    "cors_method_list": "unbounded",
                    "cors_origin_list": "unbounded",
                    "cors_support_credential": "on",
                    "custom_headers": [],
                    "domain_exception_list": "",
                    "edge_authentication_enabled": "false",
                    "edge_cookie_key": "",
                    "external_cookie_domain": null,
                    "force_mfa": "off",
                    "forward_ticket_granting_ticket": "false",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": "",
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "hsts_age": "15552000",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_host_port": "0",
                    "internal_hostname": "",
                    "keepalive_connection_pool": "50",
                    "keepalive_enable": "true",
                    "keepalive_timeout": "3",
                    "kerberos_negotiate_once": "off",
                    "keyed_keepalive_enable": "false",
                    "keytab": "",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "offload_onpremise_traffic": "false",
                    "pass_phrase": null,
                    "preauth_enforce_url": "",
                    "private_key": null,
                    "proxy_buffer_size_kb": null,
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "rdp_legacy_mode": "false",
                    "rdp_remote_apps": [],
                    "rdp_tls1": "false",
                    "refresh_sticky_cookie": "on",
                    "remote_spark_audio": "true",
                    "remote_spark_disk": "LOCALSHARE",
                    "remote_spark_mapClipboard": "on",
                    "remote_spark_mapDisk": "true",
                    "remote_spark_mapPrinter": "true",
                    "remote_spark_printer": "LOCALPRINTER",
                    "remote_spark_recording": "false",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "sla_object_url": "____spx/ionpage",
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "sticky_agent": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false",
                    "wildcard_internal_hostname": "false"
                  },
                  "agents": [
                    {
                      "compatible": true,
                      "name": "Email-App-Connector",
                      "uuid_url": "aldTFght_SfoolsooD26Q"
                    },
                    {
                      "compatible": true,
                      "name": "App2-Connector",
                      "uuid_url": "askljgoSxmQnkfJ1fozTA"
                    }
                  ],
                  "app_category": {
                    "name": "Communications",
                    "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                  },
                  "app_deployed": true,
                  "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                  "app_operational": 3,
                  "app_profile": 1,
                  "app_status": 2,
                  "app_type": 2,
                  "auth_agent": null,
                  "auth_enabled": "true",
                  "auth_type": 1,
                  "bookmark_url": "",
                  "cert": null,
                  "client_app_mode": 1,
                  "cname": "<uuid_url>.host.akamai-access.com",
                  "created_at": "2017-10-09T21:21:27.548211",
                  "data_agent": null,
                  "description": "This is the Email Server",
                  "directories": [
                    {
                      "name": "Company-Primary-AD",
                      "type": 1,
                      "user_count": 29584,
                      "uuid_url": "_tvruiywwiyipwgvs8rw"
                    }
                  ],
                  "domain": 1,
                  "domain_suffix": "host.akamai-access.com",
                  "host": "<uuid_url>.host.akamai-access.com",
                  "idp": {
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                    "name": "Pri-SAML-IDP",
                    "type": 2
                  },
                  "modified_at": "2019-03-28T20:10:22.418270",
                  "name": "Primary Email Application",
                  "oidc": false,
                  "oidc_settings": {},
                  "orig_tls": "true",
                  "origin_host": null,
                  "origin_port": 443,
                  "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                  "popName": "us-pop-1",
                  "rdp_version": "V1",
                  "resource": "apps",
                  "resource_status": {
                    "cert_status": 1,
                    "cname_dns_status": 1,
                    "data_agent_status": 1,
                    "dialin_server_status": 4,
                    "directories_status": 2,
                    "host_dns_status": 4,
                    "host_reachable": false,
                    "internal_host_status": 1,
                    "origin_host_status": 4,
                    "pop_status": 2
                  },
                  "resource_uri": {
                    "directories": "/api/v1/apps/uuid_url/directories/",
                    "groups": "/api/v1/apps/<uuid_url>/groups/",
                    "href": "/api/v1/apps/<uuid_url>",
                    "pop": "/api/v1/pops/<pop>",
                    "services": "/api/v1/apps/<uuid_url>/services/",
                    "sites": "/api/v1/apps/<uuid_url>/sites"
                  },
                  "saml": true,
                  "saml_settings": [
                    {
                      "attrmap": [
                        {
                          "fmt": "unspecified",
                          "fname": "",
                          "name": "Alice",
                          "src": "user.aliceSmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "asmith@company.com",
                          "src": "user.asmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "Smith",
                          "src": "user.aliceSmith"
                        }
                      ],
                      "idp": {
                        "ecp_enable": false,
                        "ecp_resp_signature": false,
                        "entity_id": "https://host.net/saml/idp/sso",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "resp_bind": "post",
                        "self_signed": true,
                        "sign_algo": "SHA1",
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_url": "https://host.net/saml/idp/slo"
                      },
                      "sp": {
                        "acs_url": "https://host.net/saml/sp/response",
                        "default_relay_state": "",
                        "dst_url": "",
                        "encr_algo": "aes256-cbc",
                        "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "entity_id": "https://host.net/saml/sp/response",
                        "force_auth": true,
                        "logout_bind": "post",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "req_bind": "redirect",
                        "req_verify": false,
                        "resp_encr": false,
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_bind": "redirect",
                        "slo_req_verify": false,
                        "slo_url": ""
                      },
                      "subject": {
                        "attr_source": "user.email",
                        "fmt": "unspecified",
                        "src": "user.userPrincipleName"
                      }
                    }
                  ],
                  "servers": [
                    {
                      "orig_tls": true,
                      "origin_host": "192.0.2.160",
                      "origin_port": 22,
                      "origin_protocol": "ssh"
                    }
                  ],
                  "services": [
                    {
                      "name": "Acceleration",
                      "uuid_url": "YqQlGzjYRzuSX04"
                    },
                    {
                      "name": "Access Control",
                      "uuid_url": "RzuSX04c8CECtw15"
                    }
                  ],
                  "sites": [
                    "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                  ],
                  "status": 1,
                  "uuid_url": "ZgpmtAS0ORa2b0jF",
                  "wsfed": false,
                  "wsfed_settings": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application properties.",
                  "properties": {
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Application config version advanced settings.",
                      "properties": {
                        "acceleration": {
                          "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "allow_cors": {
                          "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of concurrent anonymous server connections.",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of concurrent anonymous server requests.",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_client_cert_auth": {
                          "description": "Enables client certificate authentication. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant certificate parameters for client authentication.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "type": "string"
                        },
                        "cors_header_list": {
                          "default": "unbounded",
                          "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                          "type": "string"
                        },
                        "cors_max_age": {
                          "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                          "type": "string"
                        },
                        "cors_method_list": {
                          "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                          "type": "string"
                        },
                        "cors_origin_list": {
                          "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                          "type": "string"
                        },
                        "cors_support_credential": {
                          "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "custom_headers": {
                          "description": "Custom headers for application connections.",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "domain_exception_list": {
                          "description": "A list of domains to except from content rewrite. ",
                          "type": "string"
                        },
                        "edge_authentication_enabled": {
                          "description": "Enables edge authentication for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "edge_cookie_key": {
                          "description": "The edge key to share with your ION configuration.",
                          "type": "string"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "force_mfa": {
                          "description": "Forces multi-factor authentication. Either `off` or `on`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "forward_ticket_granting_ticket": {
                          "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_enabled": {
                          "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_key": {
                          "description": "The G2O key to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "g2o_nonce": {
                          "description": "The G2O nonce to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_host_header": {
                          "description": "The host header to use for HTTP health checks.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_http_url": {
                          "description": "The URL to use for HTTP health checks.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check.",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                          "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ],
                          "type": "string"
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "host_key": {
                          "description": "The host secret key.",
                          "nullable": true,
                          "type": "string"
                        },
                        "hsts_age": {
                          "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session may remain idle before it's closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "ignore_bypass_mfa": {
                          "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "ignore_cname_resolution": {
                          "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "inject_ajax_javascript": {
                          "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "internal_host_port": {
                          "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip_access_allow": {
                          "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keepalive_connection_pool": {
                          "description": "The maximum number of connections allowed in the keepalive pool.",
                          "type": "string"
                        },
                        "keepalive_enable": {
                          "description": "Enables connection keepalives. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keepalive_timeout": {
                          "description": "The keepalive timeout period in seconds.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "type": "string"
                        },
                        "keyed_keepalive_enable": {
                          "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keytab": {
                          "description": "A unique keytab for Kerberos delegation.",
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ],
                          "type": "string"
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "mdc_enable": {
                          "description": "Enables multi-data center connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                          "enum": [
                            "enable",
                            "disable",
                            "inherit"
                          ],
                          "type": "string"
                        },
                        "offload_onpremise_traffic": {
                          "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "pass_phrase": {
                          "description": "The passphrase for the certificate. ",
                          "nullable": true,
                          "type": "string"
                        },
                        "preauth_consent": {
                          "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "private_key": {
                          "description": "Private key for the certificate.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "rdp_legacy_mode": {
                          "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "rdp_remote_apps": {
                          "description": "Remote RDP applications. ",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "rdp_tls1": {
                          "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "remote_spark_audio": {
                          "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_disk": {
                          "description": "Name of the disk for Cisco Webex Spark application.",
                          "type": "string"
                        },
                        "remote_spark_mapClipboard": {
                          "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "remote_spark_mapDisk": {
                          "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_mapPrinter": {
                          "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_printer": {
                          "description": "Name of the printer for Cisco Webex Spark application.",
                          "type": "string"
                        },
                        "remote_spark_recording": {
                          "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                          "nullable": true,
                          "type": "string"
                        },
                        "single_host_content_rw": {
                          "description": "Enables single host content rewrite. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_cookie_domain": {
                          "description": "Enables single host cookie domains. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_enable": {
                          "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_fqdn": {
                          "description": "The single host fully qualified domain name used to host multiple applications.",
                          "type": "string"
                        },
                        "single_host_path": {
                          "description": "The single host path used to host multiple applications.",
                          "type": "string"
                        },
                        "sla_object_url": {
                          "description": "The SLA object URL to share with your ION configuration.",
                          "type": "string"
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sticky_agent": {
                          "description": "Enables connector persistence for connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The username to use for application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ],
                          "type": "string"
                        },
                        "websocket_enabled": {
                          "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "wildcard_internal_hostname": {
                          "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                      }
                    },
                    "agents": {
                      "description": "Target connectors for deploying the application configuration.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "app_uuid_url"
                      ],
                      "type": "object"
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ],
                      "type": "integer"
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details for validating user accounts.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Directory properties.",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory's unique ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "inherit",
                        "enable"
                      ],
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant cert based parameters for client authentication.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "nullable": true,
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "orig_tls": {
                      "description": "Whether the origin host uses TLS encryption.",
                      "type": "string"
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "origin_port": {
                      "description": "The application's origin port.",
                      "type": "integer"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "type": "integer"
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "type": "integer"
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "enum": [
                            1,
                            2
                          ],
                          "type": "integer"
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "enum": [
                            1,
                            2
                          ],
                          "type": "integer"
                        }
                      },
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Related resource URIs for the application.",
                      "properties": {
                        "apps": {
                          "description": "The URI location of an associated application resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                  "enum": [
                                    "email",
                                    "basic",
                                    "unspecified",
                                    "persistent",
                                    "transient"
                                  ],
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "enum": [
                                  "post"
                                ],
                                "type": "string"
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ],
                                "type": "string"
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "type": "object"
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ],
                                "type": "string"
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "logout_bind": {
                                "description": "The request binding for single logout requests.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "enum": [
                                  "redirect",
                                  "post"
                                ],
                                "type": "string"
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "enum": [
                                  "post",
                                  "redirect"
                                ],
                                "type": "string"
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 0,
                                "type": "string"
                              }
                            },
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "type": "object"
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "properties": {
                              "attr_source": {
                                "description": "The subject's source attribute. ",
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "basic",
                                  "unspecified",
                                  "persistent",
                                  "transient"
                                ],
                                "type": "string"
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "Origin server details of the internal application within your network.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "nullable": true,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "enum": [
                              "ssh",
                              "http"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "origin_protocol",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "services": {
                      "description": "Services enabled on the application configuration.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The unique ID of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "properties": {
                          "attrmap": {
                            "description": "Mapped attributes for the WSFED configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "fmt"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ],
                                "type": "string"
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "type": "object"
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "enum": [
                                  "post"
                                ],
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "type": "object"
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ],
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application",
        "tags": [
          "Applications"
        ]
      },
      "put": {
        "description": "Updates the details of an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app"
        },
        "operationId": "put-app",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "advanced_settings": {
                  "acceleration": "false",
                  "allow_cors": "false",
                  "anonymous_server_conn_limit": "50",
                  "anonymous_server_request_limit": "100",
                  "app_auth": "none",
                  "app_auth_domain": null,
                  "app_client_cert_auth": "false",
                  "app_cookie_domain": null,
                  "app_location": null,
                  "app_server_read_timeout": "60",
                  "authenticated_server_conn_limit": "50",
                  "authenticated_server_request_limit": "100",
                  "client_cert_auth": "false",
                  "client_cert_user_param": "",
                  "cookie_domain": "",
                  "cors_header_list": "unbounded",
                  "cors_max_age": "86400",
                  "cors_method_list": "unbounded",
                  "cors_origin_list": "unbounded",
                  "cors_support_credential": "on",
                  "custom_headers": [],
                  "domain_exception_list": "",
                  "edge_authentication_enabled": "false",
                  "edge_cookie_key": "",
                  "external_cookie_domain": null,
                  "force_mfa": "off",
                  "forward_ticket_granting_ticket": "false",
                  "g2o_enabled": "false",
                  "g2o_key": null,
                  "g2o_nonce": null,
                  "health_check_fall": "3",
                  "health_check_http_host_header": "",
                  "health_check_http_url": "/",
                  "health_check_http_version": "1.1",
                  "health_check_interval": "30000",
                  "health_check_rise": "2",
                  "health_check_timeout": "50000",
                  "health_check_type": "0",
                  "hidden_app": "false",
                  "hsts_age": "15552000",
                  "http_only_cookie": "true",
                  "https_sslv3": "false",
                  "idle_close_time_seconds": "1200",
                  "idle_conn_ceil": "75",
                  "idle_conn_floor": "50",
                  "idle_conn_step": "10",
                  "idp_idle_expiry": null,
                  "idp_max_expiry": null,
                  "ignore_cname_resolution": "false",
                  "inject_ajax_javascript": "off",
                  "internal_host_port": "0",
                  "internal_hostname": "",
                  "keepalive_connection_pool": "50",
                  "keepalive_enable": "true",
                  "keepalive_timeout": "3",
                  "kerberos_negotiate_once": "off",
                  "keyed_keepalive_enable": "false",
                  "keytab": "",
                  "load_balancing_metric": "round-robin",
                  "logging_enabled": "true",
                  "login_timeout": "5",
                  "login_url": null,
                  "logout_url": null,
                  "mfa": "inherit",
                  "offload_onpremise_traffic": "false",
                  "pass_phrase": null,
                  "preauth_enforce_url": "",
                  "private_key": null,
                  "proxy_buffer_size_kb": null,
                  "proxy_disable_clipboard": "false",
                  "rate_limit": "on",
                  "rdp_initial_program": null,
                  "rdp_legacy_mode": "false",
                  "rdp_remote_apps": [],
                  "rdp_tls1": "false",
                  "refresh_sticky_cookie": "on",
                  "remote_spark_audio": "true",
                  "remote_spark_disk": "LOCALSHARE",
                  "remote_spark_mapClipboard": "on",
                  "remote_spark_mapDisk": "true",
                  "remote_spark_mapPrinter": "true",
                  "remote_spark_printer": "LOCALPRINTER",
                  "remote_spark_recording": "false",
                  "request_body_rewrite": "false",
                  "request_parameters": null,
                  "saas_enabled": "false",
                  "sentry_redirect_401": "off",
                  "server_cert_validate": "true",
                  "server_request_burst": "100",
                  "service_principle_name": null,
                  "session_sticky": "false",
                  "session_sticky_cookie_maxage": "0",
                  "session_sticky_server_cookie": null,
                  "sla_object_url": "____spx/iontestpage",
                  "spdy_enabled": "true",
                  "ssh_audit_enabled": "false",
                  "sso": "true",
                  "sticky_agent": "false",
                  "user_name": null,
                  "wapp_auth": "form",
                  "websocket_enabled": "false",
                  "wildcard_internal_hostname": "false"
                },
                "agents": [
                  {
                    "compatible": true,
                    "name": "Email-App-Connector",
                    "uuid_url": "aldTFght_SfoolsooD26Q"
                  },
                  {
                    "compatible": true,
                    "name": "App2-Connector",
                    "uuid_url": "askljgoSxmQnkfJ1fozTA"
                  }
                ],
                "app_category": {
                  "name": "Communications",
                  "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                },
                "app_deployed": true,
                "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                "app_operational": 3,
                "app_profile": 1,
                "app_status": 2,
                "app_type": 2,
                "auth_agent": null,
                "auth_enabled": "true",
                "auth_type": 1,
                "bookmark_url": "",
                "cert": null,
                "client_app_mode": 1,
                "cname": "<uuid_url>.host.akamai-access.com",
                "data_agent": null,
                "description": "This is the Email Server",
                "directories": [
                  {
                    "name": "Company-Primary-AD",
                    "type": 1,
                    "user_count": 29584,
                    "uuid_url": "_tvruiywwiyipwgvs8rw"
                  }
                ],
                "domain": 1,
                "domain_suffix": "host.akamai-access.com",
                "host": "<uuid_url>.host.akamai-access.com",
                "idp": {
                  "client_cert_auth": "false",
                  "client_cert_user_param": "",
                  "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                  "name": "Pri-SAML-IDP",
                  "type": 2
                },
                "name": "Primary Email Application",
                "oidc": false,
                "oidc_settings": {},
                "orig_tls": "true",
                "origin_host": null,
                "origin_port": 443,
                "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                "popName": "us-pop-1",
                "rdp_version": "V1",
                "resource": "apps",
                "resource_status": {
                  "cert_status": 1,
                  "cname_dns_status": 1,
                  "data_agent_status": 1,
                  "dialin_server_status": 4,
                  "directories_status": 2,
                  "host_dns_status": 4,
                  "host_reachable": false,
                  "internal_host_status": 1,
                  "origin_host_status": 4,
                  "pop_status": 2
                },
                "resource_uri": {
                  "directories": "/api/v1/apps/uuid_url/directories/",
                  "groups": "/api/v1/apps/<uuid_url>/groups/",
                  "href": "/api/v1/apps/<uuid_url>",
                  "pop": "/api/v1/pops/<pop>",
                  "services": "/api/v1/apps/<uuid_url>/services/",
                  "sites": "/api/v1/apps/<uuid_url>/sites"
                },
                "saml": true,
                "saml_settings": [
                  {
                    "attrmap": [
                      {
                        "fmt": "unspecified",
                        "fname": "",
                        "name": "FirstName",
                        "src": "user.firstName"
                      },
                      {
                        "fmt": "basic",
                        "fname": "",
                        "name": "Email",
                        "src": "user.email"
                      },
                      {
                        "fmt": "basic",
                        "fname": "",
                        "name": "LastName",
                        "src": "user.lastName"
                      }
                    ],
                    "idp": {
                      "ecp_enable": false,
                      "ecp_resp_signature": false,
                      "entity_id": "https://host.net/saml/idp/sso",
                      "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                      "resp_bind": "post",
                      "self_signed": true,
                      "sign_algo": "SHA1",
                      "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                      "slo_url": "https://host.net/saml/idp/slo"
                    },
                    "sp": {
                      "acs_url": "https://host.net/saml/sp/response",
                      "default_relay_state": "",
                      "dst_url": "",
                      "encr_algo": "aes256-cbc",
                      "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                      "entity_id": "https://host.net/saml/sp/response",
                      "force_auth": true,
                      "logout_bind": "post",
                      "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                      "req_bind": "redirect",
                      "req_verify": false,
                      "resp_encr": false,
                      "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                      "slo_bind": "redirect",
                      "slo_req_verify": false,
                      "slo_url": ""
                    },
                    "subject": {
                      "attr_source": "user.email",
                      "fmt": "unspecified",
                      "src": "user.userPrincipleName"
                    }
                  }
                ],
                "servers": [
                  {
                    "orig_tls": true,
                    "origin_host": "192.0.2.215",
                    "origin_port": 22,
                    "origin_protocol": "ssh"
                  }
                ],
                "services": [
                  {
                    "name": "Acceleration",
                    "uuid_url": "YqQlGzjYRzuSX04"
                  },
                  {
                    "name": "Access Control",
                    "uuid_url": "RzuSX04c8CECtw15"
                  }
                ],
                "sites": [
                  "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                ],
                "status": 1,
                "uuid_url": "ZgpmtAS0ORa2b0jF",
                "wsfed": false,
                "wsfed_settings": []
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access Application properties.",
                "properties": {
                  "advanced_settings": {
                    "additionalProperties": false,
                    "description": "Application config version advanced settings.",
                    "properties": {
                      "acceleration": {
                        "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "allow_cors": {
                        "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "anonymous_server_conn_limit": {
                        "description": "The maximum number of concurrent anonymous server connections.",
                        "type": "string"
                      },
                      "anonymous_server_request_limit": {
                        "description": "The maximum number of concurrent anonymous server requests.",
                        "type": "string"
                      },
                      "app_auth": {
                        "description": "The application-facing authentication mechanism. Default is `none`.",
                        "type": "string"
                      },
                      "app_auth_domain": {
                        "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_client_cert_auth": {
                        "description": "Enables client certificate authentication. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "app_cookie_domain": {
                        "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_location": {
                        "description": "The application's location. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_server_read_timeout": {
                        "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                        "type": "string"
                      },
                      "authenticated_server_conn_limit": {
                        "description": "The maximum number of authenticated server connections allowed.",
                        "type": "string"
                      },
                      "authenticated_server_request_limit": {
                        "description": "The maximum number of authenticated server connections allowed.",
                        "type": "string"
                      },
                      "client_cert_auth": {
                        "description": "Enables client certificate authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant certificate parameters for client authentication.",
                        "type": "string"
                      },
                      "cookie_domain": {
                        "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "type": "string"
                      },
                      "cors_header_list": {
                        "default": "unbounded",
                        "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                        "type": "string"
                      },
                      "cors_max_age": {
                        "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                        "type": "string"
                      },
                      "cors_method_list": {
                        "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                        "type": "string"
                      },
                      "cors_origin_list": {
                        "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                        "type": "string"
                      },
                      "cors_support_credential": {
                        "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "custom_headers": {
                        "description": "Custom headers for application connections.",
                        "items": {
                          "nullable": true,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "domain_exception_list": {
                        "description": "A list of domains to except from content rewrite. ",
                        "type": "string"
                      },
                      "edge_authentication_enabled": {
                        "description": "Enables edge authentication for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "edge_cookie_key": {
                        "description": "The edge key to share with your ION configuration.",
                        "type": "string"
                      },
                      "external_cookie_domain": {
                        "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "force_mfa": {
                        "description": "Forces multi-factor authentication. Either `off` or `on`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "forward_ticket_granting_ticket": {
                        "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "g2o_enabled": {
                        "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "g2o_key": {
                        "description": "The G2O key to share with your ION configuration.",
                        "nullable": true,
                        "type": "string"
                      },
                      "g2o_nonce": {
                        "description": "The G2O nonce to share with your ION configuration.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_fall": {
                        "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                        "type": "string"
                      },
                      "health_check_http_host_header": {
                        "description": "The host header to use for HTTP health checks.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_http_url": {
                        "description": "The URL to use for HTTP health checks.",
                        "type": "string"
                      },
                      "health_check_http_version": {
                        "description": "The HTTP version to use for the health check.",
                        "type": "string"
                      },
                      "health_check_interval": {
                        "description": "The interval between successive heartbeats in seconds.",
                        "type": "string"
                      },
                      "health_check_rise": {
                        "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                        "type": "string"
                      },
                      "health_check_timeout": {
                        "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                        "type": "string"
                      },
                      "health_check_type": {
                        "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                        "enum": [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7"
                        ],
                        "type": "string"
                      },
                      "hidden_app": {
                        "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "host_key": {
                        "description": "The host secret key.",
                        "nullable": true,
                        "type": "string"
                      },
                      "hsts_age": {
                        "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                        "type": "string"
                      },
                      "http_only_cookie": {
                        "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "https_sslv3": {
                        "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "idle_close_time_seconds": {
                        "description": "The number of seconds a session may remain idle before it's closed.",
                        "type": "string"
                      },
                      "idle_conn_ceil": {
                        "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                        "type": "string"
                      },
                      "idle_conn_floor": {
                        "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                        "type": "string"
                      },
                      "idle_conn_step": {
                        "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                        "type": "string"
                      },
                      "idp_idle_expiry": {
                        "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "idp_max_expiry": {
                        "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "ignore_bypass_mfa": {
                        "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "ignore_cname_resolution": {
                        "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "inject_ajax_javascript": {
                        "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "internal_host_port": {
                        "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                        "type": "string"
                      },
                      "internal_hostname": {
                        "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "ip_access_allow": {
                        "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "is_ssl_verification_enabled": {
                        "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "keepalive_connection_pool": {
                        "description": "The maximum number of connections allowed in the keepalive pool.",
                        "type": "string"
                      },
                      "keepalive_enable": {
                        "description": "Enables connection keepalives. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "keepalive_timeout": {
                        "description": "The keepalive timeout period in seconds.",
                        "type": "string"
                      },
                      "kerberos_negotiate_once": {
                        "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                        "type": "string"
                      },
                      "keyed_keepalive_enable": {
                        "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "keytab": {
                        "description": "A unique keytab for Kerberos delegation.",
                        "type": "string"
                      },
                      "load_balancing_metric": {
                        "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                        "enum": [
                          "round-robin",
                          "ip-hash"
                        ],
                        "type": "string"
                      },
                      "logging_enabled": {
                        "description": "Enables logging for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "login_timeout": {
                        "description": "The number of seconds before a login attempt times out.",
                        "type": "string"
                      },
                      "login_url": {
                        "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "logout_url": {
                        "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "mdc_enable": {
                        "description": "Enables multi-data center connections. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa": {
                        "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                        "enum": [
                          "enable",
                          "disable",
                          "inherit"
                        ],
                        "type": "string"
                      },
                      "offload_onpremise_traffic": {
                        "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "pass_phrase": {
                        "description": "The passphrase for the certificate. ",
                        "nullable": true,
                        "type": "string"
                      },
                      "preauth_consent": {
                        "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "preauth_enforce_url": {
                        "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                        "type": "string"
                      },
                      "private_key": {
                        "description": "Private key for the certificate.",
                        "nullable": true,
                        "type": "string"
                      },
                      "proxy_buffer_size_kb": {
                        "description": "The size of the proxy's buffer, in kilobytes.",
                        "nullable": true,
                        "type": "string"
                      },
                      "proxy_disable_clipboard": {
                        "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "rate_limit": {
                        "description": "Enables rate limiting for the application. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "rdp_initial_program": {
                        "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "rdp_legacy_mode": {
                        "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "rdp_remote_apps": {
                        "description": "Remote RDP applications. ",
                        "items": {
                          "nullable": true,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "rdp_tls1": {
                        "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "refresh_sticky_cookie": {
                        "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                        "enum": [
                          "off",
                          "on"
                        ],
                        "type": "string"
                      },
                      "remote_spark_audio": {
                        "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "remote_spark_disk": {
                        "description": "Name of the disk for Cisco Webex Spark application.",
                        "type": "string"
                      },
                      "remote_spark_mapClipboard": {
                        "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "remote_spark_mapDisk": {
                        "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "remote_spark_mapPrinter": {
                        "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "remote_spark_printer": {
                        "description": "Name of the printer for Cisco Webex Spark application.",
                        "type": "string"
                      },
                      "remote_spark_recording": {
                        "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "request_body_rewrite": {
                        "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "request_parameters": {
                        "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "saas_enabled": {
                        "description": "Enables SaaS for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "sentry_redirect_401": {
                        "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                        "type": "string"
                      },
                      "server_cert_validate": {
                        "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "server_request_burst": {
                        "description": "The server request threshold for burst monitoring.",
                        "type": "string"
                      },
                      "service_principle_name": {
                        "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "session_sticky": {
                        "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "session_sticky_cookie_maxage": {
                        "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                        "type": "string"
                      },
                      "session_sticky_server_cookie": {
                        "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                        "nullable": true,
                        "type": "string"
                      },
                      "single_host_content_rw": {
                        "description": "Enables single host content rewrite. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_host_cookie_domain": {
                        "description": "Enables single host cookie domains. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_host_enable": {
                        "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_host_fqdn": {
                        "description": "The single host fully qualified domain name used to host multiple applications.",
                        "type": "string"
                      },
                      "single_host_path": {
                        "description": "The single host path used to host multiple applications.",
                        "type": "string"
                      },
                      "sla_object_url": {
                        "description": "The SLA object URL to share with your ION configuration.",
                        "type": "string"
                      },
                      "spdy_enabled": {
                        "description": "Enables SPDY traffic management. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "ssh_audit_enabled": {
                        "description": "Enables ssh session auditing. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "sso": {
                        "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "sticky_agent": {
                        "description": "Enables connector persistence for connections. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "user_name": {
                        "description": "The username to use for application authentication. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "wapp_auth": {
                        "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                        "enum": [
                          "form",
                          "basic",
                          "basic+cookie",
                          "certificate_only"
                        ],
                        "type": "string"
                      },
                      "websocket_enabled": {
                        "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "wildcard_internal_hostname": {
                        "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                    }
                  },
                  "agents": {
                    "description": "Target connectors for deploying the application configuration.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "compatible": {
                          "description": "Whether the target connector is compatible with the application configuration.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "compatible",
                        "name",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "app": {
                    "additionalProperties": false,
                    "description": "Specifies the application for the application directory.",
                    "properties": {
                      "app_uuid_url": {
                        "description": "The application UUID URL.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The application name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "app_uuid_url"
                    ],
                    "type": "object"
                  },
                  "app_category": {
                    "additionalProperties": false,
                    "description": "Specifies the category the application belongs to.",
                    "properties": {
                      "name": {
                        "description": "The name of the category.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uuid_url": {
                        "description": "The UUID of the category.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "app_deployed": {
                    "description": "Whether the application configuration is deployed.",
                    "example": "{{app_deployed}}",
                    "type": "boolean"
                  },
                  "app_logo": {
                    "description": "A URL identifying the application configuration's logo icon.",
                    "example": "{{app_logo}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "app_operational": {
                    "default": 1,
                    "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "example": "{{app_operational}}",
                    "type": "integer"
                  },
                  "app_profile": {
                    "default": 1,
                    "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ],
                    "example": "{{app_profile}}",
                    "type": "integer"
                  },
                  "app_status": {
                    "default": 1,
                    "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ],
                    "example": "{{app_status}}",
                    "type": "integer"
                  },
                  "app_type": {
                    "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": "{{app_type}}",
                    "type": "integer"
                  },
                  "auth_agent": {
                    "description": "The connector for the application.",
                    "example": "{{auth_agent}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "auth_enabled": {
                    "default": "true",
                    "description": "Enables authentication.",
                    "example": "{{auth_enabled}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_type": {
                    "default": 1,
                    "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                    "enum": [
                      1,
                      2,
                      3
                    ],
                    "example": "{{auth_type}}",
                    "type": "integer"
                  },
                  "bookmark_url": {
                    "description": "The Okta Bookmark app URL.",
                    "example": "{{bookmark_url}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "cert": {
                    "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "client_app_mode": {
                    "default": 1,
                    "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                    "enum": [
                      1,
                      2
                    ],
                    "example": "{{client_app_mode}}",
                    "type": "integer"
                  },
                  "cname": {
                    "description": "The upstream URL for a CNAME redirect.",
                    "example": "{{cname}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                    "example": "{{created_at}}",
                    "readOnly": true,
                    "type": "string"
                  },
                  "data_agent": {
                    "description": "The data connector for the application.",
                    "example": "{{data_agent}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "directories": {
                    "description": "Application directory details for validating user accounts.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the directory.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                          "enum": [
                            1,
                            2,
                            3,
                            4
                          ],
                          "type": "integer"
                        },
                        "user_count": {
                          "description": "The total number of user accounts configured on the directory.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the directory.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "name",
                        "user_count",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "directory": {
                    "additionalProperties": false,
                    "description": "Directory properties.",
                    "properties": {
                      "directory_uuid_url": {
                        "description": "The directory's unique ID.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The directory name.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "domain": {
                    "default": 1,
                    "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                    "enum": [
                      1,
                      2
                    ],
                    "example": "{{domain}}",
                    "type": "integer"
                  },
                  "domain_suffix": {
                    "description": "The domain suffix. For example, `.com`.",
                    "example": "{{domain_suffix}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "enable_mfa": {
                    "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                    "enum": [
                      "inherit",
                      "enable"
                    ],
                    "example": "{{enable_mfa}}",
                    "type": "string"
                  },
                  "host": {
                    "description": "The external default hostname for the application.",
                    "example": "{{host}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "idp": {
                    "additionalProperties": false,
                    "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                    "properties": {
                      "client_cert_auth": {
                        "description": "Enables client certificate authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant cert based parameters for client authentication.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "idp_id": {
                        "description": "The ID of the IDP configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the IDP configuration.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": {
                        "default": 1,
                        "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9
                        ],
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "modified_at": {
                    "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                    "example": "{{modified_at}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application configuration.",
                    "example": "{{name}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "oidc": {
                    "description": "Enables OpenID Connect (OIDC).",
                    "example": "{{oidc}}",
                    "type": "boolean"
                  },
                  "oidc_settings": {
                    "additionalProperties": false,
                    "description": "JSON settings to implement OIDC.",
                    "nullable": true,
                    "properties": {
                      "authorization_endpoint": {
                        "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "certs_uri": {
                        "description": "The URI of the relaying party's CA certificate.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "check_session_iframe": {
                        "description": "The iframe URL used to check session status.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "discovery_url": {
                        "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "end_session_endpoint": {
                        "description": "The OIDC endpoint that triggers single sign out.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "jwks_uri": {
                        "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "openid_metadata": {
                        "description": "Metadata that describes the OIDC provider's configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "token_endpoint": {
                        "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "userinfo_endpoint": {
                        "description": "The OIDC endpoint where the client sends requests for identity claims.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/app-oidc-settings.yaml"
                    }
                  },
                  "orig_tls": {
                    "description": "Whether the origin host uses TLS encryption.",
                    "example": "{{orig_tls}}",
                    "type": "string"
                  },
                  "origin_host": {
                    "description": "The IP address or FQDN of the application origin server.",
                    "example": "{{origin_host}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "origin_port": {
                    "description": "The application's origin port.",
                    "example": "{{origin_port}}",
                    "type": "integer"
                  },
                  "pop": {
                    "description": "The identifier for the target region to deploy the application.",
                    "example": "{{pop}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "popName": {
                    "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                    "example": "{{popName}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "rdp_version": {
                    "description": "The version of remote desktop protocol (RDP).",
                    "example": "{{rdp_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource": {
                    "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_status": {
                    "additionalProperties": false,
                    "description": "The most recent status of various application resources.",
                    "properties": {
                      "cert_status": {
                        "default": 1,
                        "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ],
                        "type": "integer"
                      },
                      "cname_dns_status": {
                        "default": 1,
                        "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "type": "integer"
                      },
                      "data_agent_status": {
                        "default": 1,
                        "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "type": "integer"
                      },
                      "dialin_server_status": {
                        "default": 1,
                        "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "type": "integer"
                      },
                      "directories_status": {
                        "default": 1,
                        "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ],
                        "type": "integer"
                      },
                      "host_dns_status": {
                        "default": 1,
                        "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ],
                        "type": "integer"
                      },
                      "host_reachable": {
                        "default": false,
                        "description": "Indicates whether the host is reachable.",
                        "type": "boolean"
                      },
                      "internal_host_status": {
                        "default": 1,
                        "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                        "enum": [
                          1,
                          2
                        ],
                        "type": "integer"
                      },
                      "origin_host_status": {
                        "default": 1,
                        "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "type": "integer"
                      },
                      "pop_status": {
                        "default": 1,
                        "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                        "enum": [
                          1,
                          2
                        ],
                        "type": "integer"
                      }
                    },
                    "required": [
                      "host_reachable",
                      "directories_status",
                      "cname_dns_status",
                      "data_agent_status",
                      "cert_status",
                      "host_dns_status",
                      "origin_host_status",
                      "dialin_server_status",
                      "pop_status",
                      "internal_host_status"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/app-resource-status.yaml"
                    }
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Related resource URIs for the application.",
                    "properties": {
                      "apps": {
                        "description": "The URI location of an associated application resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "directories": {
                        "description": "The URI location of an associated directory resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The URI location of an associated group resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URI location of an associated href resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "pop": {
                        "description": "The URI location of an associated pop resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "services": {
                        "description": "The URI location of an associated service resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "sites": {
                        "description": "The URI location of an associated site resource.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "saml": {
                    "description": "Enables SAML for the application.",
                    "example": "{{saml}}",
                    "type": "boolean"
                  },
                  "saml_settings": {
                    "description": "SAML configuration for an application.",
                    "items": {
                      "additionalProperties": false,
                      "description": "SAML configuration for an application.",
                      "properties": {
                        "attrmap": {
                          "description": "SAML attribute mapping details.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "fmt": {
                                "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "basic",
                                  "unspecified",
                                  "persistent",
                                  "transient"
                                ],
                                "type": "string"
                              },
                              "fname": {
                                "description": "The fname of the attribute.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "fmt",
                              "src"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                          "properties": {
                            "ecp_enable": {
                              "default": false,
                              "description": "Enables enhanced client or proxy (ECP).",
                              "type": "boolean"
                            },
                            "ecp_resp_signature": {
                              "default": false,
                              "description": "The ECP response signature.",
                              "type": "boolean"
                            },
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "metadata": {
                              "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "enum": [
                                "post"
                              ],
                              "type": "string"
                            },
                            "self_signed": {
                              "default": true,
                              "description": "Enables a self-signed certificate.",
                              "type": "boolean"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ],
                              "type": "string"
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "self_signed",
                            "ecp_resp_signature",
                            "slo_url",
                            "entity_id",
                            "resp_bind",
                            "sign_cert",
                            "sign_algo",
                            "ecp_enable",
                            "metadata"
                          ],
                          "type": "object"
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider (SP) settings for the SAML configuration.",
                          "properties": {
                            "acs_url": {
                              "description": "The single sign-on (ACS) URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "default_relay_state": {
                              "description": "The default relay state. Specify `null` if you want to provide this later.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "encr_algo": {
                              "default": "aes256-cbc",
                              "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                              "enum": [
                                "aes256-cbc",
                                "aes128-cbc"
                              ],
                              "type": "string"
                            },
                            "encr_cert": {
                              "description": "The response encryption certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "force_auth": {
                              "default": false,
                              "description": "Forces encryption using the `httponly` flag in the session cookie.",
                              "type": "boolean"
                            },
                            "logout_bind": {
                              "description": "The request binding for single logout requests.",
                              "type": "string"
                            },
                            "metadata": {
                              "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "req_bind": {
                              "default": "redirect",
                              "description": "The response binding. Either `redirect` or `post`.",
                              "enum": [
                                "redirect",
                                "post"
                              ],
                              "type": "string"
                            },
                            "req_verify": {
                              "default": false,
                              "description": "Enables request verification.",
                              "type": "boolean"
                            },
                            "resp_encr": {
                              "default": false,
                              "description": "Enables encryption on the responses.",
                              "type": "boolean"
                            },
                            "sign_cert": {
                              "description": "The request signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_bind": {
                              "default": "post",
                              "description": "The single log-out binding. Either `post` or `redirect`.",
                              "enum": [
                                "post",
                                "redirect"
                              ],
                              "type": "string"
                            },
                            "slo_req_verify": {
                              "default": true,
                              "description": "Enables single log-out request verification.",
                              "type": "boolean"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 0,
                              "type": "string"
                            }
                          },
                          "required": [
                            "entity_id",
                            "acs_url",
                            "req_bind",
                            "default_relay_state",
                            "force_auth",
                            "req_verify",
                            "resp_encr",
                            "encr_cert",
                            "encr_algo"
                          ],
                          "type": "object"
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies the subject settings for the SAML configuration.",
                          "properties": {
                            "attr_source": {
                              "description": "The subject's source attribute. ",
                              "type": "string"
                            },
                            "fmt": {
                              "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                              "enum": [
                                "email",
                                "basic",
                                "unspecified",
                                "persistent",
                                "transient"
                              ],
                              "type": "string"
                            },
                            "rule": {
                              "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "fmt",
                            "src"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/app-saml-settings.yaml"
                    }
                  },
                  "servers": {
                    "description": "Origin server details of the internal application within your network.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the origin server.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "orig_tls": {
                          "description": "Enables TLS on the origin server.",
                          "type": "boolean"
                        },
                        "origin_host": {
                          "description": "The IP address or FQDN of the origin server.",
                          "nullable": true,
                          "type": "string"
                        },
                        "origin_port": {
                          "description": "The port number of the origin server.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "origin_protocol": {
                          "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                          "enum": [
                            "ssh",
                            "http"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "origin_protocol",
                        "orig_tls",
                        "origin_host",
                        "origin_port"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "services": {
                    "description": "Services enabled on the application configuration.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the service.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The unique ID of the service.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "sites": {
                    "description": "List of associated site resources.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "status": {
                    "default": 1,
                    "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ],
                    "example": "{{status}}"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "wsfed": {
                    "description": "Enables Web Services Federation (WSFED) identity federation.",
                    "example": "{{wsfed}}",
                    "type": "boolean"
                  },
                  "wsfed_settings": {
                    "description": "JSON settings to implement WSFED.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Web Services Federation (WSFED) configuration for an application.",
                      "properties": {
                        "attrmap": {
                          "description": "Mapped attributes for the WSFED configuration.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                          "properties": {
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ],
                              "type": "string"
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "entity_id",
                            "sign_key",
                            "sign_cert",
                            "sign_algo"
                          ],
                          "type": "object"
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider settings for the WSFED configuration.",
                          "properties": {
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID of the service provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "enum": [
                                "post"
                              ],
                              "type": "string"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "token_life": {
                              "default": 3600,
                              "description": "The number of seconds a token is valid.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "entity_id",
                            "slo_url",
                            "dst_url",
                            "resp_bind",
                            "token_life"
                          ],
                          "type": "object"
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies subject settings for the WSFED configuration.",
                          "properties": {
                            "custom_fmt": {
                              "description": "The custom format of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "fmt": {
                              "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                              "enum": [
                                "email",
                                "persistent",
                                "unspecified",
                                "transient"
                              ],
                              "minLength": 1,
                              "type": "string"
                            },
                            "rule": {
                              "description": "The custom rule language for the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "fmt"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "type": "object"
                    },
                    "minItems": 1,
                    "title": "Web Services Federation (WSFED) settings",
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/app-wsfed-settings.yaml"
                    }
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/application.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "acceleration": "false",
                    "allow_cors": "false",
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_client_cert_auth": "false",
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "cookie_domain": "",
                    "cors_header_list": "unbounded",
                    "cors_max_age": "86400",
                    "cors_method_list": "unbounded",
                    "cors_origin_list": "unbounded",
                    "cors_support_credential": "on",
                    "custom_headers": [],
                    "domain_exception_list": "",
                    "edge_authentication_enabled": "false",
                    "edge_cookie_key": "",
                    "external_cookie_domain": null,
                    "force_mfa": "off",
                    "forward_ticket_granting_ticket": "false",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": "",
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "hsts_age": "15552000",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_host_port": "0",
                    "internal_hostname": "",
                    "keepalive_connection_pool": "50",
                    "keepalive_enable": "true",
                    "keepalive_timeout": "3",
                    "kerberos_negotiate_once": "off",
                    "keyed_keepalive_enable": "false",
                    "keytab": "",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "offload_onpremise_traffic": "false",
                    "pass_phrase": null,
                    "preauth_enforce_url": "",
                    "private_key": null,
                    "proxy_buffer_size_kb": null,
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "rdp_legacy_mode": "false",
                    "rdp_remote_apps": [],
                    "rdp_tls1": "false",
                    "refresh_sticky_cookie": "on",
                    "remote_spark_audio": "true",
                    "remote_spark_disk": "LOCALSHARE",
                    "remote_spark_mapClipboard": "on",
                    "remote_spark_mapDisk": "true",
                    "remote_spark_mapPrinter": "true",
                    "remote_spark_printer": "LOCALPRINTER",
                    "remote_spark_recording": "false",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "sla_object_url": "____spx/iontestpage",
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "sticky_agent": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false",
                    "wildcard_internal_hostname": "false"
                  },
                  "agents": [
                    {
                      "compatible": true,
                      "name": "Email-App-Connector",
                      "uuid_url": "aldTFght_SfoolsooD26Q"
                    },
                    {
                      "compatible": true,
                      "name": "App2-Connector",
                      "uuid_url": "askljgoSxmQnkfJ1fozTA"
                    }
                  ],
                  "app_category": {
                    "name": "Communications",
                    "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                  },
                  "app_deployed": true,
                  "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                  "app_operational": 3,
                  "app_profile": 1,
                  "app_status": 2,
                  "app_type": 2,
                  "auth_agent": null,
                  "auth_enabled": "true",
                  "auth_type": 1,
                  "bookmark_url": "",
                  "cert": null,
                  "client_app_mode": 1,
                  "cname": "<uuid_url>.host.akamai-access.com",
                  "data_agent": null,
                  "description": "This is the Email Server",
                  "directories": [
                    {
                      "name": "Company-Primary-AD",
                      "type": 1,
                      "user_count": 29584,
                      "uuid_url": "_tvruiywwiyipwgvs8rw"
                    }
                  ],
                  "domain": 1,
                  "domain_suffix": "host.akamai-access.com",
                  "host": "<uuid_url>.host.akamai-access.com",
                  "idp": {
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                    "name": "Pri-SAML-IDP",
                    "type": 2
                  },
                  "name": "Primary Email Application",
                  "oidc": false,
                  "oidc_settings": {},
                  "orig_tls": "true",
                  "origin_host": null,
                  "origin_port": 443,
                  "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                  "popName": "us-pop-1",
                  "rdp_version": "V1",
                  "resource": "apps",
                  "resource_status": {
                    "cert_status": 1,
                    "cname_dns_status": 1,
                    "data_agent_status": 1,
                    "dialin_server_status": 4,
                    "directories_status": 2,
                    "host_dns_status": 4,
                    "host_reachable": false,
                    "internal_host_status": 1,
                    "origin_host_status": 4,
                    "pop_status": 2
                  },
                  "resource_uri": {
                    "directories": "/api/v1/apps/uuid_url/directories/",
                    "groups": "/api/v1/apps/<uuid_url>/groups/",
                    "href": "/api/v1/apps/<uuid_url>",
                    "pop": "/api/v1/pops/<pop>",
                    "services": "/api/v1/apps/<uuid_url>/services/",
                    "sites": "/api/v1/apps/<uuid_url>/sites"
                  },
                  "saml": true,
                  "saml_settings": [
                    {
                      "attrmap": [
                        {
                          "fmt": "unspecified",
                          "fname": "",
                          "name": "FirstName",
                          "src": "user.firstName"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "Email",
                          "src": "user.email"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "LastName",
                          "src": "user.lastName"
                        }
                      ],
                      "idp": {
                        "ecp_enable": false,
                        "ecp_resp_signature": false,
                        "entity_id": "https://host.net/saml/idp/sso",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "resp_bind": "post",
                        "self_signed": true,
                        "sign_algo": "SHA1",
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_url": "https://host.net/saml/idp/slo"
                      },
                      "sp": {
                        "acs_url": "https://host.net/saml/sp/response",
                        "default_relay_state": "",
                        "dst_url": "",
                        "encr_algo": "aes256-cbc",
                        "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "entity_id": "https://host.net/saml/sp/response",
                        "force_auth": true,
                        "logout_bind": "post",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "req_bind": "redirect",
                        "req_verify": false,
                        "resp_encr": false,
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_bind": "redirect",
                        "slo_req_verify": false,
                        "slo_url": ""
                      },
                      "subject": {
                        "attr_source": "user.email",
                        "fmt": "unspecified",
                        "src": "user.userPrincipleName"
                      }
                    }
                  ],
                  "servers": [
                    {
                      "orig_tls": true,
                      "origin_host": "192.0.2.215",
                      "origin_port": 22,
                      "origin_protocol": "ssh"
                    }
                  ],
                  "services": [
                    {
                      "name": "Acceleration",
                      "uuid_url": "YqQlGzjYRzuSX04"
                    },
                    {
                      "name": "Access Control",
                      "uuid_url": "RzuSX04c8CECtw15"
                    }
                  ],
                  "sites": [
                    "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                  ],
                  "status": 1,
                  "uuid_url": "ZgpmtAS0ORa2b0jF",
                  "wsfed": false,
                  "wsfed_settings": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application properties.",
                  "properties": {
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Application config version advanced settings.",
                      "properties": {
                        "acceleration": {
                          "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "allow_cors": {
                          "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of concurrent anonymous server connections.",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of concurrent anonymous server requests.",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_client_cert_auth": {
                          "description": "Enables client certificate authentication. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant certificate parameters for client authentication.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "type": "string"
                        },
                        "cors_header_list": {
                          "default": "unbounded",
                          "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                          "type": "string"
                        },
                        "cors_max_age": {
                          "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                          "type": "string"
                        },
                        "cors_method_list": {
                          "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                          "type": "string"
                        },
                        "cors_origin_list": {
                          "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                          "type": "string"
                        },
                        "cors_support_credential": {
                          "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "custom_headers": {
                          "description": "Custom headers for application connections.",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "domain_exception_list": {
                          "description": "A list of domains to except from content rewrite. ",
                          "type": "string"
                        },
                        "edge_authentication_enabled": {
                          "description": "Enables edge authentication for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "edge_cookie_key": {
                          "description": "The edge key to share with your ION configuration.",
                          "type": "string"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "force_mfa": {
                          "description": "Forces multi-factor authentication. Either `off` or `on`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "forward_ticket_granting_ticket": {
                          "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_enabled": {
                          "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_key": {
                          "description": "The G2O key to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "g2o_nonce": {
                          "description": "The G2O nonce to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_host_header": {
                          "description": "The host header to use for HTTP health checks.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_http_url": {
                          "description": "The URL to use for HTTP health checks.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check.",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                          "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ],
                          "type": "string"
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "host_key": {
                          "description": "The host secret key.",
                          "nullable": true,
                          "type": "string"
                        },
                        "hsts_age": {
                          "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session may remain idle before it's closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "ignore_bypass_mfa": {
                          "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "ignore_cname_resolution": {
                          "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "inject_ajax_javascript": {
                          "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "internal_host_port": {
                          "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "ip_access_allow": {
                          "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keepalive_connection_pool": {
                          "description": "The maximum number of connections allowed in the keepalive pool.",
                          "type": "string"
                        },
                        "keepalive_enable": {
                          "description": "Enables connection keepalives. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keepalive_timeout": {
                          "description": "The keepalive timeout period in seconds.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "type": "string"
                        },
                        "keyed_keepalive_enable": {
                          "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "keytab": {
                          "description": "A unique keytab for Kerberos delegation.",
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ],
                          "type": "string"
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "mdc_enable": {
                          "description": "Enables multi-data center connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                          "enum": [
                            "enable",
                            "disable",
                            "inherit"
                          ],
                          "type": "string"
                        },
                        "offload_onpremise_traffic": {
                          "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "pass_phrase": {
                          "description": "The passphrase for the certificate. ",
                          "nullable": true,
                          "type": "string"
                        },
                        "preauth_consent": {
                          "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "private_key": {
                          "description": "Private key for the certificate.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "rdp_legacy_mode": {
                          "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "rdp_remote_apps": {
                          "description": "Remote RDP applications. ",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "rdp_tls1": {
                          "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "enum": [
                            "off",
                            "on"
                          ],
                          "type": "string"
                        },
                        "remote_spark_audio": {
                          "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_disk": {
                          "description": "Name of the disk for Cisco Webex Spark application.",
                          "type": "string"
                        },
                        "remote_spark_mapClipboard": {
                          "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "remote_spark_mapDisk": {
                          "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_mapPrinter": {
                          "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "remote_spark_printer": {
                          "description": "Name of the printer for Cisco Webex Spark application.",
                          "type": "string"
                        },
                        "remote_spark_recording": {
                          "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                          "nullable": true,
                          "type": "string"
                        },
                        "single_host_content_rw": {
                          "description": "Enables single host content rewrite. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_cookie_domain": {
                          "description": "Enables single host cookie domains. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_enable": {
                          "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_host_fqdn": {
                          "description": "The single host fully qualified domain name used to host multiple applications.",
                          "type": "string"
                        },
                        "single_host_path": {
                          "description": "The single host path used to host multiple applications.",
                          "type": "string"
                        },
                        "sla_object_url": {
                          "description": "The SLA object URL to share with your ION configuration.",
                          "type": "string"
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "sticky_agent": {
                          "description": "Enables connector persistence for connections. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The username to use for application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ],
                          "type": "string"
                        },
                        "websocket_enabled": {
                          "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "wildcard_internal_hostname": {
                          "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                      }
                    },
                    "agents": {
                      "description": "Target connectors for deploying the application configuration.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "app_uuid_url"
                      ],
                      "type": "object"
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ],
                      "type": "integer"
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details for validating user accounts.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Directory properties.",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory's unique ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "enum": [
                        "inherit",
                        "enable"
                      ],
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant cert based parameters for client authentication.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "nullable": true,
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "orig_tls": {
                      "description": "Whether the origin host uses TLS encryption.",
                      "type": "string"
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "origin_port": {
                      "description": "The application's origin port.",
                      "type": "integer"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "type": "integer"
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "integer"
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ],
                          "type": "integer"
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "enum": [
                            1,
                            2
                          ],
                          "type": "integer"
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "type": "integer"
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "enum": [
                            1,
                            2
                          ],
                          "type": "integer"
                        }
                      },
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Related resource URIs for the application.",
                      "properties": {
                        "apps": {
                          "description": "The URI location of an associated application resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                  "enum": [
                                    "email",
                                    "basic",
                                    "unspecified",
                                    "persistent",
                                    "transient"
                                  ],
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "enum": [
                                  "post"
                                ],
                                "type": "string"
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ],
                                "type": "string"
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "type": "object"
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ],
                                "type": "string"
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "logout_bind": {
                                "description": "The request binding for single logout requests.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "enum": [
                                  "redirect",
                                  "post"
                                ],
                                "type": "string"
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "enum": [
                                  "post",
                                  "redirect"
                                ],
                                "type": "string"
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 0,
                                "type": "string"
                              }
                            },
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "type": "object"
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "properties": {
                              "attr_source": {
                                "description": "The subject's source attribute. ",
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "basic",
                                  "unspecified",
                                  "persistent",
                                  "transient"
                                ],
                                "type": "string"
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "Origin server details of the internal application within your network.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "nullable": true,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "enum": [
                              "ssh",
                              "http"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "origin_protocol",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "services": {
                      "description": "Services enabled on the application configuration.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The unique ID of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "properties": {
                          "attrmap": {
                            "description": "Mapped attributes for the WSFED configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "fmt"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ],
                                "type": "string"
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "type": "object"
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "enum": [
                                  "post"
                                ],
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "type": "object"
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ],
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "fmt"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify an application",
        "tags": [
          "Applications"
        ]
      },
      "delete": {
        "description": "Removes an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app"
        },
        "operationId": "delete-app",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete an application",
        "tags": [
          "Applications"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/app.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}"
      }
    },
    "/mgmt-pop/apps/{applicationId}/agents": {
      "post": {
        "description": "Assign connectors to an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-connectors"
        },
        "operationId": "post-app-connectors",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "agents": [
                  {
                    "compatible": true,
                    "name": "bala7-ohio-aws",
                    "uuid_url": "a5_xNtxbR9O_c4xy35R2Wg"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Target connectors for deploying the application configuration.",
                "properties": {
                  "agents": {
                    "description": "Connector to assign applications to.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "compatible": {
                          "description": "Whether the target connector is compatible with the application configuration.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "compatible",
                        "name",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/assign-agents-application-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "agent": {
                      "name": "bala7-ohio-aws",
                      "uuid_url": "a5_xNtxbR9O_c4xy35R2Wg"
                    },
                    "resource_uri": {
                      "href": "/api/v1/agents/a5_xNtxbR9O_c4xy35R2Wg/"
                    }
                  }
                ],
                "schema": {
                  "description": "Target connectors for deploying the application configuration.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "agent": {
                        "additionalProperties": false,
                        "description": "Connector properties for the application deployment.",
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "resource_uri": {
                        "additionalProperties": false,
                        "description": "Resource locations for the connector.",
                        "properties": {
                          "href": {
                            "description": "The location of connector details.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "href"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/assign-agents-application-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Assign connectors to an application",
        "tags": [
          "Connectors"
        ]
      },
      "get": {
        "description": "Lists connectors for an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-connectors"
        },
        "operationId": "get-app-connectors",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 250,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 2
                  },
                  "objects": [
                    {
                      "advanced_settings": {
                        "network_info": [
                          "192.0.2.243/24"
                        ]
                      },
                      "agent_type": 1,
                      "agent_upgrade_enabled": true,
                      "agent_upgrade_suspended": false,
                      "agent_version": null,
                      "all_applications": [
                        {
                          "app_status": 1,
                          "name": "Accessapp#1",
                          "uuid_url": "3Czu34blSkarRHafL2v8bQ"
                        },
                        {
                          "app_status": 1,
                          "name": "HRWeb",
                          "uuid_url": "E85_4Cq-Q4WGTkq2lT31cg"
                        }
                      ],
                      "all_directories": [
                        {
                          "name": "Cloud Directory",
                          "uuid_url": "GbIfrXwtTKaqBrXD0ZkGBA"
                        },
                        {
                          "name": "Akamai Directory",
                          "uuid_url": "SewbYG0iRZSPaMZrM6n4Qw"
                        }
                      ],
                      "auth_service": true,
                      "cpu": null,
                      "created_at": "2019-05-02T09:27:11.677150",
                      "data_service": true,
                      "debug_channel_permitted": true,
                      "description": null,
                      "dhcp": "enabled",
                      "disk_size": null,
                      "dns_server": null,
                      "download_url": null,
                      "gateway": null,
                      "hostname": null,
                      "ip_addr": null,
                      "last_checkin": null,
                      "logging_settings": "[]",
                      "mac": null,
                      "manual_override": false,
                      "modified_at": "2019-05-02T09:27:11.684264",
                      "name": "tcp-tunnel",
                      "os_version": null,
                      "package": 3,
                      "policy": "bmOy5TeRRBuByVZiS0cITQ",
                      "private_ip": null,
                      "public_ip": null,
                      "pwd_comments": null,
                      "pwdsyncflag": false,
                      "ram_size": null,
                      "reach": 0,
                      "region": null,
                      "resource_uri": {
                        "href": "/api/v1/agents/zOFC4JBSQ3OuGReWVPcB3A"
                      },
                      "setpwd_attempt": 1,
                      "state": 0,
                      "status": 1,
                      "subnet": null,
                      "tz": null,
                      "uuid_url": "zOFC4JBSQ3OuGReWVPcB3A"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise connectors.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Connector details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "advanced_settings": {
                            "additionalProperties": false,
                            "description": "Connector advanced network settings. ",
                            "properties": {
                              "network_info": {
                                "description": "Network subnets for the connector. ",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "agent_type": {
                            "default": 1,
                            "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "agent_upgrade_enabled": {
                            "description": "Enables upgrades for the connector.",
                            "type": "boolean"
                          },
                          "agent_upgrade_suspended": {
                            "description": "Suspends upgrades for a connector.",
                            "type": "boolean"
                          },
                          "agent_version": {
                            "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                            "nullable": true,
                            "type": "string"
                          },
                          "all_applications": {
                            "description": "All applications using the connector.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "app_status": {
                                  "default": 1,
                                  "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7
                                  ],
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Application name.",
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The application's unique ID.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "all_directories": {
                            "description": "All directories used by the connector.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The directory name.",
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The directoru's unique ID.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "auth_service": {
                            "description": "Enables the authorization service.",
                            "type": "boolean"
                          },
                          "cpu": {
                            "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the connector's creation.",
                            "type": "string"
                          },
                          "data_service": {
                            "description": "Enables the data service.",
                            "type": "boolean"
                          },
                          "debug_channel_permitted": {
                            "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                            "type": "boolean"
                          },
                          "description": {
                            "description": "The connector descripton. ",
                            "nullable": true,
                            "type": "string"
                          },
                          "dhcp": {
                            "description": "Enables DHCP for the connector. Either `enabled` or `disabled`. ",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "type": "string"
                          },
                          "disk_size": {
                            "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "dns_server": {
                            "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "download_url": {
                            "description": "S3 URL to download the connector package. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "gateway": {
                            "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "hostname": {
                            "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "ip_addr": {
                            "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "last_checkin": {
                            "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                            "nullable": true,
                            "type": "string"
                          },
                          "logging_settings": {
                            "description": "JSON-formatted logging settings.",
                            "type": "string"
                          },
                          "mac": {
                            "description": "MAC address of the connector. ",
                            "nullable": true,
                            "type": "string"
                          },
                          "manual_override": {
                            "description": "When `true`, the connector cannot be upgraded.",
                            "type": "boolean"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the connector's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The connector name.",
                            "type": "string"
                          },
                          "os_version": {
                            "description": "OS version of the connector.",
                            "nullable": true,
                            "type": "string"
                          },
                          "package": {
                            "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11
                            ],
                            "type": "integer"
                          },
                          "policy": {
                            "description": "The unique ID of the policy applied to the connector.",
                            "type": "string"
                          },
                          "private_ip": {
                            "description": "Public IP address of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "public_ip": {
                            "description": "Public IP address of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "pwd_comments": {
                            "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`. ",
                            "enum": [
                              "Success",
                              "Failed"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "pwdsyncflag": {
                            "description": "Enables sync of the connector password with the back-end database.",
                            "type": "boolean"
                          },
                          "ram_size": {
                            "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                            "nullable": true,
                            "type": "string"
                          },
                          "reach": {
                            "default": 1,
                            "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "region": {
                            "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "A plural bundle of navigable hypermedia links to other API resources.",
                            "properties": {
                              "href": {
                                "description": "The href resource URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "setpwd_attempt": {
                            "description": "The number of password entry attempts on the connector.",
                            "type": "integer"
                          },
                          "state": {
                            "default": 0,
                            "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8
                            ],
                            "type": "integer"
                          },
                          "status": {
                            "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "subnet": {
                            "description": "Subnet of the connector. ",
                            "nullable": true,
                            "type": "string"
                          },
                          "tz": {
                            "description": "The connector's time zone. ",
                            "nullable": true,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The connector's unique resource ID.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/list-app-agents.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List connectors for an application",
        "tags": [
          "Connectors"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/agents-per-app.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/agents"
      }
    },
    "/mgmt-pop/apps/{applicationId}/agents/{agentId}": {
      "get": {
        "description": "Lists connectors for an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-connector"
        },
        "operationId": "get-app-connector",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.90/24"
                    ]
                  },
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2019-05-02T09:27:11.677150",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": null,
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": null,
                  "gateway": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2019-05-02T09:27:11.684264",
                  "name": "tcp-tunnel",
                  "os_version": null,
                  "package": 3,
                  "policy": "bmOy5TeRRBuByVZiS0cITQ",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "resource_uri": {
                    "href": "/api/v1/agents/zOFC4JBSQ3OuGReWVPcB3A"
                  },
                  "setpwd_attempt": 1,
                  "state": 0,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "zOFC4JBSQ3OuGReWVPcB3A"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "advanced_settings": {
                      "additionalProperties": false,
                      "description": "Connector advanced network settings. ",
                      "properties": {
                        "network_info": {
                          "description": "Network subnets for the connector. ",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    },
                    "agent_upgrade_enabled": {
                      "description": "Enables upgrades for the connector.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "additionalProperties": false,
                      "description": "Connector capacity data.",
                      "properties": {
                        "capacity-multipliers": {
                          "additionalProperties": false,
                          "description": "Multipliers applied to capacity calculations.",
                          "properties": {
                            "rdp": {
                              "description": "Remote desktop protocol connections.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "remaining-capacity": {
                          "description": "Connector capacity remaining.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "down_apps_count": {
                      "description": "Count of down applications.",
                      "type": "integer"
                    },
                    "down_dir_count": {
                      "description": "Count of down directories.",
                      "type": "integer"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "geo_location": {
                      "description": "Geo-location of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "enum": [
                        1,
                        4
                      ],
                      "type": "integer"
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "load_status": {
                      "description": "The connector load percentage status. 70% or more is `High`, 50 - 70% is `Medium`, and less than 50% is `Low``.",
                      "enum": [
                        "High",
                        "Medium",
                        "Low"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON-formatted logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_upgrades_up_to_date": {
                      "description": "Whether the connector OS packages are up to date.",
                      "type": "boolean"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "nullable": true,
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "enum": [
                        "Success",
                        "Failed"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "pwdsyncflag": {
                      "description": "Enables sync of the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource locations for the connector.",
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "href"
                      ],
                      "type": "object"
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ],
                      "type": "integer"
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "up_apps_count": {
                      "description": "Count of up applications.",
                      "type": "integer"
                    },
                    "up_dir_count": {
                      "description": "Count of up directories.",
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a connector for an application",
        "tags": [
          "Connectors"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agent-id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/agent.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/agents/{agentId}"
      }
    },
    "/mgmt-pop/apps/{applicationId}/deploy": {
      "post": {
        "description": "Deploys an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-deploy"
        },
        "operationId": "post-app-deploy",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "deploy_note": "Deploying on 21st Sept"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Add a comment to an app deployment.",
                "properties": {
                  "deploy_note": {
                    "description": "Comment to summarize your app's deployment.",
                    "example": "{{deploy_note}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "deploy_note"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/deploy-app-comment.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": 7883826115006123
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "app_id": {
                      "description": "The unique application to deploy.",
                      "type": "string"
                    },
                    "cmdid": {
                      "description": "A unique identifier for the command to track progress.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "cmdid"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deploy-app.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Deploy an application",
        "tags": [
          "Applications"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/deploy-app.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/deploy"
      }
    },
    "/mgmt-pop/apps/{applicationId}/edgekey": {
      "post": {
        "description": "Generates an edge key for an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-edgekey"
        },
        "operationId": "post-app-edgekey",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "edge_cookie_key": "bdbd496d5 ... 13282ed58",
                  "sla_object_url": "____spx/ionpage"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application edge key information.",
                  "properties": {
                    "edge_cookie_key": {
                      "description": "The edge key to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sla_object_url": {
                      "description": "The SLA object URL to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "edge_cookie_key",
                    "sla_object_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/edge-key.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create an edge key",
        "tags": [
          "Edge keys"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/edgekey.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/edgekey"
      }
    },
    "/mgmt-pop/apps/{applicationId}/g2o": {
      "post": {
        "description": "Enables a G2O configuration for an application. Used only if you've enabled [Akamai Edge Enforcement](https://techdocs.akamai.com/eaa/docs/setup-advanced-settings-app).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-g2o"
        },
        "operationId": "post-app-g2o",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "g2o_enabled": "true",
                  "g2o_key": "a719dbd96 ... 3561d96d4c",
                  "g2o_nonce": "b59f6a5a"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Ghost to Origin (G2O) credentials.",
                  "properties": {
                    "g2o_enabled": {
                      "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "g2o_key": {
                      "description": "The G2O key to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "g2o_nonce": {
                      "description": "The G2O nonce to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "g2o_enabled",
                    "g2o_key",
                    "g2o_nonce"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/g2o.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a Ghost to Origin key",
        "tags": [
          "Ghost to Origin keys"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/g2o-per-app.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/g2o"
      }
    },
    "/mgmt-pop/apps/{applicationId}/groups": {
      "get": {
        "description": "Lists the groups authorized to access the application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-groups-per-app"
        },
        "operationId": "get-groups-per-app",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "created_at": "2017-09-28T19:11:18.201248",
                      "description": null,
                      "group_type": 1,
                      "modified_at": "2017-09-28T19:11:18.201264",
                      "name": "Admins",
                      "resource": "groups",
                      "resource_uri": {
                        "directory": "/api/v1/directories/gKP_FhvmSFaomjpNaR7Z9Q/",
                        "href": "/api/v1/groups/eHLt50Z6RQaUznwXD4sCRg",
                        "permissions": "/api/v1/groups/eHLt50Z6RQaUznwXD4sCRg/permissions/",
                        "users": "/api/v1/groups/eHLt50Z6RQaUznwXD4sCRg/users/"
                      },
                      "status": 1,
                      "user_count": 7,
                      "uuid_url": "eHLt50Z6RQaUznwXD4sCRg"
                    },
                    {
                      "created_at": "2017-09-28T19:11:18.213654",
                      "description": null,
                      "group_type": 1,
                      "modified_at": "2017-09-28T19:11:18.213671",
                      "name": "Admins",
                      "resource": "groups",
                      "resource_uri": {
                        "directory": "/api/v1/directories/0MREBOagSSKMgZt3l7GANw/",
                        "href": "/api/v1/groups/AjnZv5GGTe6C9IEVUXl0Nw",
                        "permissions": "/api/v1/groups/AjnZv5GGTe6C9IEVUXl0Nw/permissions/",
                        "users": "/api/v1/groups/AjnZv5GGTe6C9IEVUXl0Nw/users/"
                      },
                      "status": 1,
                      "user_count": 17,
                      "uuid_url": "AjnZv5GGTe6C9IEVUXl0Nw"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise access groups for an application.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application access group details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application group information.",
                        "properties": {
                          "created_at": {
                            "description": "ISO 8601 timestamp marking this object's creation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A brief description for this group.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "group_type": {
                            "default": 1,
                            "description": "The type of group. Select `1` for Cloud, `2` for Active Directory, `3` for OU, or `4` for LDAP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                            "type": "string"
                          },
                          "name": {
                            "description": "A unique name for this group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "The type of resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies resource URI details for the IDP configuration.",
                            "properties": {
                              "directory": {
                                "description": "The directory for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href URI for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "permissions": {
                                "description": "The permissions for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "users": {
                                "description": "Users assigned to the resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "directory",
                              "href",
                              "users",
                              "permissions"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "default": 0,
                            "description": "`0` (Disabled), `1` (Enabled).",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "user_count": {
                            "description": "The number of users in the group.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for this group.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "user_count",
                          "resource",
                          "description",
                          "name",
                          "uuid_url",
                          "group_type",
                          "resource_uri"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/application-group.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/application-groups.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List the groups assigned to an application",
        "tags": [
          "Application rewrite groups"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/groups-per-app.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/groups"
      }
    },
    "/mgmt-pop/apps/{applicationId}/services": {
      "get": {
        "description": "Lists the details of the services for an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-services"
        },
        "operationId": "get-app-services",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "app": {
                        "app_uuid_url": "3JEFvcNxRKCoQk-al9PAZw",
                        "name": "Dev Application"
                      },
                      "resource": "appservices",
                      "resource_uri": {
                        "apps": "/api/v1/apps/3JEFvcNxRKCoQk-al9PAZw",
                        "href": "/api/v1/appservices/aHfEPDp_RU2wN9qennJbow",
                        "services": "/api/v1/services/yl3eapQoTAyIeE_VSJQChw"
                      },
                      "service": {
                        "description": null,
                        "name": "Acceleration",
                        "service_type": 2,
                        "settings": {
                          "compression": "on"
                        },
                        "status": "on",
                        "uuid_url": "yl3eapQoTAyIeE_VSJQChw"
                      },
                      "status": 1,
                      "uuid_url": "aHfEPDp_RU2wN9qennJbow"
                    },
                    {
                      "app": {
                        "app_uuid_url": "3JEFvcNxRKCoQk-al9PAZw",
                        "name": "Dev Application"
                      },
                      "resource": "appservices",
                      "resource_uri": {
                        "apps": "/api/v1/apps/3JEFvcNxRKCoQk-al9PAZw",
                        "href": "/api/v1/appservices/oG9K1x42T3CATo58tJMcQQ",
                        "services": "/api/v1/services/K-7IH7AaTj-2fOLjt1xsVg"
                      },
                      "service": {
                        "description": null,
                        "name": "WAF",
                        "service_type": 1,
                        "settings": {
                          "bad_robots": "Off",
                          "http_policy": "Off",
                          "illegal_resource_access": "Off",
                          "joomla": "Off",
                          "php": "Off",
                          "protocol_anomalies": "Off",
                          "protocol_violations": "Off",
                          "request_limits": "Off",
                          "sql_injection": "Off",
                          "wordpress": "Off",
                          "xss_attack": "Off"
                        },
                        "status": "off",
                        "uuid_url": "K-7IH7AaTj-2fOLjt1xsVg"
                      },
                      "status": 1,
                      "uuid_url": "oG9K1x42T3CATo58tJMcQQ"
                    },
                    {
                      "app": {
                        "app_uuid_url": "3JEFvcNxRKCoQk-al9PAZw",
                        "name": "Dev Application"
                      },
                      "resource": "appservices",
                      "resource_uri": {
                        "apps": "/api/v1/apps/3JEFvcNxRKCoQk-al9PAZw",
                        "href": "/api/v1/appservices/sDK9DXYPQcS_RiLjjE0uTA",
                        "services": "/api/v1/services/u3V0QcQjTpytKT0Tv2ZbYg"
                      },
                      "service": {
                        "description": null,
                        "name": "ICAP Service",
                        "service_type": 3,
                        "settings": {
                          "icap_file_size": "500M",
                          "icap_file_size_allow": "deny",
                          "icap_hc_type": "icap",
                          "icap_host": "icap.host.com",
                          "icap_http_methods": "POST",
                          "icap_mime_types": "*",
                          "icap_port": 1344,
                          "icap_service": "sohaservice",
                          "icap_tls_enable": "on"
                        },
                        "status": "on",
                        "uuid_url": "u3V0QcQjTpytKT0Tv2ZbYg"
                      },
                      "status": 1,
                      "uuid_url": "sDK9DXYPQcS_RiLjjE0uTA"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access services for an application.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "EAA application service details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application service information.",
                        "properties": {
                          "app": {
                            "additionalProperties": false,
                            "description": "Application details.",
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application's UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application's name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "app_uuid_url"
                            ],
                            "type": "object"
                          },
                          "resource": {
                            "description": "The resource details for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "The unique resource URI.",
                            "properties": {
                              "apps": {
                                "description": "Applications assigned to this resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href URL for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The services assigned to the resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "services",
                              "href",
                              "apps"
                            ],
                            "type": "object"
                          },
                          "service": {
                            "additionalProperties": false,
                            "description": "Service details for the application.",
                            "properties": {
                              "description": {
                                "description": "A brief description for this service. Specify `null` if you want to name it later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "A unique name for the service.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "service_type": {
                                "default": 1,
                                "description": "The service type. Either `1` for WAF, `2` for Acceleration, `3` for ICAP, `4` for IPS, `5` for SLB, `6` for access control, `7` for rewrite, or `8` for group rewrite.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ],
                                "type": "integer"
                              },
                              "settings": {
                                "additionalProperties": false,
                                "description": "Application service settings.",
                                "properties": {
                                  "bad_robots": {
                                    "description": "Whether to block bad robots from the service.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "compression": {
                                    "description": "Compression type to use for the service.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "http_policy": {
                                    "description": "Enables an HTTP policy.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_file_size": {
                                    "description": "Internet Content Adaptation Protocol maximum file size in Megabytes. The default is 500.",
                                    "type": "string"
                                  },
                                  "icap_file_size_allow": {
                                    "description": "If the file exceeds the maximum file size, select either `deny` to reject the file transfer or `ignore`.",
                                    "enum": [
                                      "deny",
                                      "ignore"
                                    ],
                                    "type": "string"
                                  },
                                  "icap_hc_type": {
                                    "description": "ICAP health check type. Either `icap` or `tcp`.",
                                    "enum": [
                                      "icap",
                                      "tcp"
                                    ],
                                    "type": "string"
                                  },
                                  "icap_host": {
                                    "description": "Host or IP address of the co-located ICAP server to use with EAA.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_http_methods": {
                                    "default": "POST",
                                    "description": "HTTP method used to forward traffic to the ICAP server.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_mime_types": {
                                    "description": "MIME types to allow for forwarding to the ICAP server.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_port": {
                                    "description": "Port number to communicate with the ICAP server.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "icap_service": {
                                    "description": "A descriptive name for the service using ICAP.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_tls_enable": {
                                    "description": "Enables TLS for the service.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "illegal_resource_access": {
                                    "description": "Logs illegal resource access attempts. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "joomla": {
                                    "description": "Allows Joomla traffic. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "php": {
                                    "description": "Allows PHP traffic. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "protocol_anomalies": {
                                    "description": "Logs protocol anomalies. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "protocol_violations": {
                                    "description": "Logs protocol violations. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "request_limits": {
                                    "description": "Enables request limits. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "sql_injection": {
                                    "description": "Allows SQL injection traffic. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "wordpress": {
                                    "description": "Allows Wordpress traffic. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "xss_attack": {
                                    "description": "Logs cross-site scripting attack attempts. `Off` by default.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/service-settings.yaml"
                                }
                              },
                              "status": {
                                "description": "The service status. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "uuid_url": {
                                "description": "A unique identifier for this service.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "service_type",
                              "settings",
                              "description",
                              "name",
                              "uuid_url",
                              "status"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "description": "The service status. Either `0` for off or `1` for on.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for this service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "resource",
                          "service",
                          "app",
                          "resource_uri"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/list-application-services-response.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/application-services-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List services for an application",
        "tags": [
          "Services"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/services-per-app.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/services"
      }
    },
    "/mgmt-pop/apps/{applicationId}/urllocation": {
      "post": {
        "description": "Creates a URL location rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-urllocation"
        },
        "operationId": "post-app-urllocation",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "homepage_URL",
                "rule_type": 1,
                "url": "/home"
              },
              "schema": {
                "additionalProperties": true,
                "description": "URL location properties.",
                "properties": {
                  "description": {
                    "description": "The URL location description.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the URL location rule.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "rule_type": {
                    "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{rule_type}}",
                    "type": "integer"
                  },
                  "url": {
                    "description": "The URL to map the application to.",
                    "example": "{{url}}",
                    "type": "string"
                  }
                },
                "required": [
                  "rule_type",
                  "name",
                  "url"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/create-urllocation-body.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_uuid_url": "l_U22L2wSVy4eG3-TcggzA",
                  "description": null,
                  "name": "Sales URL",
                  "resource_uri": {
                    "href": "/api/v1/apps/l_U22L2wSVy4eG3-TcggzA/urllocation/FtY7JBy7Sy6BnEORMBsZgA"
                  },
                  "rule_type": 1,
                  "servers": [],
                  "settings": {
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "authentication_enabled": "true",
                    "cookie_domain": null,
                    "disable_caching": false,
                    "external_cookie_domain": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": null,
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_hostname": null,
                    "is_ssl_verification_enabled": "false",
                    "kerberos_negotiate_once": "off",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "match_exact_url": false,
                    "mfa": "enable",
                    "preauth_enforce_url": "",
                    "proxy_buffer_size_kb": "4",
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "refresh_sticky_cookie": "on",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": null,
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "use_internal_host": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false"
                  },
                  "status": 1,
                  "url": "/home/sales",
                  "uuid_url": "FtY7JBy7Sy6BnEORMBsZgA"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "URL location rule configuration.",
                  "properties": {
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "URL location resource properties.",
                      "properties": {
                        "href": {
                          "description": "A unique identifier for the resource location.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "servers": {
                      "description": "Host, port, and protocol server details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "origin_host": {
                            "description": "Server hostname.",
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "Server port.",
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The https or http protocol of the server.",
                            "type": "string"
                          }
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "settings": {
                      "additionalProperties": true,
                      "description": "The advanced application settings.",
                      "properties": {
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of anonymous server connections allowed.",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of anonymous server requests allowed.",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authentication_enabled": {
                          "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "disable_caching": {
                          "default": false,
                          "description": "Disables caching for URL-path based policies.",
                          "type": "boolean"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check.",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The minimum number of consecutive successful heartbeats the connector receives to consider an application server healthy. The default is `two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that connector waits before considering a heartbeat attempt failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                          "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ],
                          "type": "string"
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session can remain idle before it's closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "integer"
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "integer"
                        },
                        "ignore_cname_resolution": {
                          "description": "Configures the application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ],
                          "type": "string"
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "match_exact_url": {
                          "default": false,
                          "description": "Configures URL path based rules for exact matches on URLs.",
                          "type": "boolean"
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                          "enum": [
                            "enable",
                            "disable",
                            "inherit"
                          ],
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true`, `false`, or `null` if not applicable.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                          "nullable": true,
                          "type": "string"
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "use_internal_host": {
                          "description": "Configures the application to use CNAME redirection to an internal hostname.",
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The username for use in application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ],
                          "type": "string"
                        },
                        "websocket_enabled": {
                          "description": "Enables WebSockets for HTTP transport. Either `true` or `false`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "The status of the application.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "url": {
                      "description": "The application URL.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "The application configuration's unique ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/get-urllocation.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a URL location rule",
        "tags": [
          "URL location rules"
        ]
      },
      "get": {
        "description": "Lists a list of URL location rules for an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-urllocations"
        },
        "operationId": "get-app-urllocations",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1
                  },
                  "objects": [
                    {
                      "app_uuid_url": "3Czu34blSkarRHafL2v8bQ",
                      "description": null,
                      "name": "asdf",
                      "resource_uri": {
                        "href": "/api/v1/apps/3Czu34blSkarRHafL2v8bQ/urllocation/Erzz3LiSQqSp0uIw28aMKQ"
                      },
                      "servers": [
                        {
                          "origin_host": "192.0.2.154",
                          "origin_port": 80,
                          "origin_protocol": "http"
                        }
                      ],
                      "settings": {
                        "anonymous_server_conn_limit": "50",
                        "anonymous_server_request_limit": "100",
                        "app_auth": "none",
                        "app_auth_domain": null,
                        "app_cookie_domain": null,
                        "app_location": null,
                        "app_server_read_timeout": "60",
                        "authenticated_server_conn_limit": "50",
                        "authenticated_server_request_limit": "100",
                        "authentication_enabled": "false",
                        "cookie_domain": null,
                        "external_cookie_domain": null,
                        "health_check_fall": "3",
                        "health_check_http_host_header": null,
                        "health_check_http_url": "/",
                        "health_check_http_version": "1.1",
                        "health_check_interval": "30000",
                        "health_check_rise": "2",
                        "health_check_timeout": "50000",
                        "health_check_type": "0",
                        "hidden_app": "false",
                        "http_only_cookie": "true",
                        "https_sslv3": "false",
                        "idle_close_time_seconds": "1200",
                        "idle_conn_ceil": "75",
                        "idle_conn_floor": "50",
                        "idle_conn_step": "10",
                        "idp_idle_expiry": null,
                        "idp_max_expiry": null,
                        "ignore_cname_resolution": "false",
                        "inject_ajax_javascript": "off",
                        "internal_hostname": null,
                        "kerberos_negotiate_once": "off",
                        "load_balancing_metric": "round-robin",
                        "logging_enabled": "true",
                        "login_timeout": "5",
                        "login_url": null,
                        "logout_url": null,
                        "mfa": "inherit",
                        "preauth_enforce_url": "",
                        "proxy_buffer_size_kb": "4",
                        "proxy_disable_clipboard": "false",
                        "rate_limit": "on",
                        "rdp_initial_program": null,
                        "refresh_sticky_cookie": "on",
                        "request_body_rewrite": "false",
                        "request_parameters": null,
                        "saas_enabled": "false",
                        "sentry_redirect_401": "off",
                        "server_cert_validate": "true",
                        "server_request_burst": "100",
                        "service_principle_name": null,
                        "session_sticky": "false",
                        "session_sticky_cookie_maxage": "0",
                        "session_sticky_server_cookie": null,
                        "spdy_enabled": "true",
                        "ssh_audit_enabled": "false",
                        "sso": "true",
                        "use_internal_host": "false",
                        "user_name": null,
                        "wapp_auth": "form",
                        "websocket_enabled": "false"
                      },
                      "status": 1,
                      "url": "/asdf",
                      "uuid_url": "Erzz3LiSQqSp0uIw28aMKQ"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "URL location rule configuration.",
                      "items": {
                        "additionalProperties": false,
                        "description": "URL location rule configuration.",
                        "properties": {
                          "app_uuid_url": {
                            "description": "A unique identifier for an application.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the application.",
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "URL location resource properties.",
                            "properties": {
                              "href": {
                                "description": "A unique identifier for the resource location.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "rule_type": {
                            "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "servers": {
                            "description": "Host, port, and protocol server details.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "origin_host": {
                                  "description": "Server hostname.",
                                  "type": "string"
                                },
                                "origin_port": {
                                  "description": "Server port.",
                                  "type": "integer"
                                },
                                "origin_protocol": {
                                  "description": "The https or http protocol of the server.",
                                  "type": "string"
                                }
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "settings": {
                            "additionalProperties": true,
                            "description": "The advanced application settings.",
                            "properties": {
                              "anonymous_server_conn_limit": {
                                "description": "The maximum number of anonymous server connections allowed.",
                                "type": "string"
                              },
                              "anonymous_server_request_limit": {
                                "description": "The maximum number of anonymous server requests allowed.",
                                "type": "string"
                              },
                              "app_auth": {
                                "description": "The application-facing authentication mechanism. Default is `none`.",
                                "type": "string"
                              },
                              "app_auth_domain": {
                                "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_cookie_domain": {
                                "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_location": {
                                "description": "The application's location. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_server_read_timeout": {
                                "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                                "type": "string"
                              },
                              "authenticated_server_conn_limit": {
                                "description": "The maximum number of authenticated server connections allowed.",
                                "type": "string"
                              },
                              "authenticated_server_request_limit": {
                                "description": "The maximum number of authenticated server connections allowed.",
                                "type": "string"
                              },
                              "authentication_enabled": {
                                "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                                "type": "string"
                              },
                              "cookie_domain": {
                                "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "disable_caching": {
                                "default": false,
                                "description": "Disables caching for URL-path based policies.",
                                "type": "boolean"
                              },
                              "external_cookie_domain": {
                                "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "health_check_fall": {
                                "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                                "type": "string"
                              },
                              "health_check_http_version": {
                                "description": "The HTTP version to use for the health check.",
                                "type": "string"
                              },
                              "health_check_interval": {
                                "description": "The interval between successive heartbeats in seconds.",
                                "type": "string"
                              },
                              "health_check_rise": {
                                "description": "The minimum number of consecutive successful heartbeats the connector receives to consider an application server healthy. The default is `two.",
                                "type": "string"
                              },
                              "health_check_timeout": {
                                "description": "The time in seconds that connector waits before considering a heartbeat attempt failed.",
                                "type": "string"
                              },
                              "health_check_type": {
                                "description": "The type of health check to perform to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                                "enum": [
                                  "0",
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6",
                                  "7"
                                ],
                                "type": "string"
                              },
                              "hidden_app": {
                                "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                                "type": "string"
                              },
                              "http_only_cookie": {
                                "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                                "type": "string"
                              },
                              "https_sslv3": {
                                "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                                "type": "string"
                              },
                              "idle_close_time_seconds": {
                                "description": "The number of seconds a session can remain idle before it's closed.",
                                "type": "string"
                              },
                              "idle_conn_ceil": {
                                "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                                "type": "string"
                              },
                              "idle_conn_floor": {
                                "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                                "type": "string"
                              },
                              "idle_conn_step": {
                                "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                                "type": "string"
                              },
                              "idp_idle_expiry": {
                                "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "idp_max_expiry": {
                                "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "integer"
                              },
                              "ignore_cname_resolution": {
                                "description": "Configures the application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                                "type": "string"
                              },
                              "internal_hostname": {
                                "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "is_ssl_verification_enabled": {
                                "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                                "type": "string"
                              },
                              "kerberos_negotiate_once": {
                                "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "load_balancing_metric": {
                                "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                                "enum": [
                                  "round-robin",
                                  "ip-hash"
                                ],
                                "type": "string"
                              },
                              "logging_enabled": {
                                "description": "Enables logging for the application. Either `true` or `false`.",
                                "type": "string"
                              },
                              "login_timeout": {
                                "description": "The number of seconds before a login attempt times out.",
                                "type": "string"
                              },
                              "login_url": {
                                "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "logout_url": {
                                "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "match_exact_url": {
                                "default": false,
                                "description": "Configures URL path based rules for exact matches on URLs.",
                                "type": "boolean"
                              },
                              "mfa": {
                                "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                                "enum": [
                                  "enable",
                                  "disable",
                                  "inherit"
                                ],
                                "type": "string"
                              },
                              "preauth_enforce_url": {
                                "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                                "type": "string"
                              },
                              "proxy_buffer_size_kb": {
                                "description": "The size of the proxy's buffer, in kilobytes.",
                                "nullable": true,
                                "type": "string"
                              },
                              "proxy_disable_clipboard": {
                                "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                                "type": "string"
                              },
                              "rate_limit": {
                                "description": "Enables rate limiting for the application. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "rdp_initial_program": {
                                "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "refresh_sticky_cookie": {
                                "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "request_body_rewrite": {
                                "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                                "type": "string"
                              },
                              "request_parameters": {
                                "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "saas_enabled": {
                                "description": "Enables SaaS for the application. Either `true` or `false`.",
                                "type": "string"
                              },
                              "sentry_redirect_401": {
                                "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                                "type": "string"
                              },
                              "server_cert_validate": {
                                "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                                "type": "string"
                              },
                              "server_request_burst": {
                                "description": "The server request threshold for burst monitoring.",
                                "type": "string"
                              },
                              "service_principle_name": {
                                "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "session_sticky": {
                                "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true`, `false`, or `null` if not applicable.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "session_sticky_cookie_maxage": {
                                "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                                "type": "string"
                              },
                              "session_sticky_server_cookie": {
                                "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                                "nullable": true,
                                "type": "string"
                              },
                              "spdy_enabled": {
                                "description": "Enables SPDY traffic management. Either `true` or `false`.",
                                "type": "string"
                              },
                              "ssh_audit_enabled": {
                                "description": "Enables ssh session auditing. Either `true` or `false`.",
                                "type": "string"
                              },
                              "sso": {
                                "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                                "type": "string"
                              },
                              "use_internal_host": {
                                "description": "Configures the application to use CNAME redirection to an internal hostname.",
                                "type": "string"
                              },
                              "user_name": {
                                "description": "The username for use in application authentication. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "wapp_auth": {
                                "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                                "enum": [
                                  "form",
                                  "basic",
                                  "basic+cookie",
                                  "certificate_only"
                                ],
                                "type": "string"
                              },
                              "websocket_enabled": {
                                "description": "Enables WebSockets for HTTP transport. Either `true` or `false`.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "The status of the application.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "url": {
                            "description": "The application URL.",
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The application configuration's unique ID.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "name"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/get-urllocation.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/object-urllocation.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List URL location rules",
        "tags": [
          "URL location rules"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/url-location.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/urllocation"
      }
    },
    "/mgmt-pop/apps/{applicationId}/urllocation/{locationId}": {
      "get": {
        "description": "Lists the URL location rule for an application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-urllocation"
        },
        "operationId": "get-app-urllocation",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_uuid_url": "3Czu34blSkarRHafL2v8bQ",
                  "description": null,
                  "name": "asdf",
                  "resource_uri": {
                    "href": "/api/v1/apps/3Czu34blSkarRHafL2v8bQ/urllocation/Erzz3LiSQqSp0uIw28aMKQ"
                  },
                  "servers": [
                    {
                      "origin_host": "192.0.2.178",
                      "origin_port": 80,
                      "origin_protocol": "http"
                    }
                  ],
                  "settings": {
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "authentication_enabled": "false",
                    "cookie_domain": null,
                    "external_cookie_domain": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": null,
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_hostname": null,
                    "kerberos_negotiate_once": "off",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "preauth_enforce_url": "",
                    "proxy_buffer_size_kb": "4",
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "refresh_sticky_cookie": "on",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "use_internal_host": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false"
                  },
                  "status": 1,
                  "url": "/asdf",
                  "uuid_url": "Erzz3LiSQqSp0uIw28aMKQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "URL location rule configuration.",
                  "properties": {
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "URL location resource properties.",
                      "properties": {
                        "href": {
                          "description": "A unique identifier for the resource location.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "servers": {
                      "description": "Host, port, and protocol server details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "origin_host": {
                            "description": "Server hostname.",
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "Server port.",
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The https or http protocol of the server.",
                            "type": "string"
                          }
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "settings": {
                      "additionalProperties": true,
                      "description": "The advanced application settings.",
                      "properties": {
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of anonymous server connections allowed.",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of anonymous server requests allowed.",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authentication_enabled": {
                          "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "disable_caching": {
                          "default": false,
                          "description": "Disables caching for URL-path based policies.",
                          "type": "boolean"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check.",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The minimum number of consecutive successful heartbeats the connector receives to consider an application server healthy. The default is `two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that connector waits before considering a heartbeat attempt failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                          "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ],
                          "type": "string"
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session can remain idle before it's closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "integer"
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "integer"
                        },
                        "ignore_cname_resolution": {
                          "description": "Configures the application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ],
                          "type": "string"
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "match_exact_url": {
                          "default": false,
                          "description": "Configures URL path based rules for exact matches on URLs.",
                          "type": "boolean"
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                          "enum": [
                            "enable",
                            "disable",
                            "inherit"
                          ],
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true`, `false`, or `null` if not applicable.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                          "nullable": true,
                          "type": "string"
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "use_internal_host": {
                          "description": "Configures the application to use CNAME redirection to an internal hostname.",
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The username for use in application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ],
                          "type": "string"
                        },
                        "websocket_enabled": {
                          "description": "Enables WebSockets for HTTP transport. Either `true` or `false`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "The status of the application.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "url": {
                      "description": "The application URL.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "The application configuration's unique ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/get-urllocation.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a URL location rule",
        "tags": [
          "URL location rules"
        ]
      },
      "put": {
        "description": "Edits a URL location rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app-urllocation"
        },
        "operationId": "put-app-urllocation",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "app_uuid_url": "l_U22L2wSVy4eG3-TcggzA",
                "description": null,
                "name": "default application rule",
                "rule_type": 1,
                "servers": [],
                "settings": {
                  "anonymous_server_conn_limit": "50",
                  "anonymous_server_request_limit": "100",
                  "app_auth": "none",
                  "app_auth_domain": null,
                  "app_cookie_domain": null,
                  "app_location": null,
                  "app_server_read_timeout": "60",
                  "authenticated_server_conn_limit": "50",
                  "authenticated_server_request_limit": "100",
                  "authentication_enabled": "false",
                  "cookie_domain": null,
                  "disable_caching": false,
                  "external_cookie_domain": null,
                  "health_check_fall": "3",
                  "health_check_http_host_header": null,
                  "health_check_http_url": "/",
                  "health_check_http_version": "1.1",
                  "health_check_interval": "30000",
                  "health_check_rise": "2",
                  "health_check_timeout": "50000",
                  "health_check_type": "0",
                  "hidden_app": "false",
                  "http_only_cookie": "true",
                  "https_sslv3": "false",
                  "idle_close_time_seconds": "1200",
                  "idle_conn_ceil": "75",
                  "idle_conn_floor": "50",
                  "idle_conn_step": "10",
                  "idp_idle_expiry": null,
                  "idp_max_expiry": null,
                  "ignore_cname_resolution": "false",
                  "inject_ajax_javascript": "off",
                  "internal_hostname": null,
                  "is_ssl_verification_enabled": "false",
                  "kerberos_negotiate_once": "off",
                  "load_balancing_metric": "ip-hash",
                  "logging_enabled": "true",
                  "login_timeout": "5",
                  "login_url": null,
                  "logout_url": null,
                  "match_exact_url": true,
                  "mfa": "enable",
                  "preauth_enforce_url": "",
                  "proxy_buffer_size_kb": "4",
                  "proxy_disable_clipboard": "false",
                  "rate_limit": "on",
                  "rdp_initial_program": null,
                  "refresh_sticky_cookie": "on",
                  "request_body_rewrite": "false",
                  "request_parameters": null,
                  "saas_enabled": "false",
                  "sentry_redirect_401": "off",
                  "server_cert_validate": "true",
                  "server_request_burst": "100",
                  "service_principle_name": null,
                  "session_sticky": null,
                  "session_sticky_cookie_maxage": "0",
                  "session_sticky_server_cookie": null,
                  "spdy_enabled": "true",
                  "ssh_audit_enabled": "false",
                  "sso": "true",
                  "use_internal_host": "true",
                  "user_name": null,
                  "wapp_auth": "form",
                  "websocket_enabled": "false"
                },
                "status": 1,
                "url": "/about"
              },
              "schema": {
                "additionalProperties": false,
                "description": "URL location rule configuration.",
                "properties": {
                  "app_uuid_url": {
                    "description": "A unique identifier for an application.",
                    "example": "{{app_uuid_url}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "example": "{{description}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "URL location resource properties.",
                    "properties": {
                      "href": {
                        "description": "A unique identifier for the resource location.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "rule_type": {
                    "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{rule_type}}",
                    "type": "integer"
                  },
                  "servers": {
                    "description": "Host, port, and protocol server details.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "origin_host": {
                          "description": "Server hostname.",
                          "type": "string"
                        },
                        "origin_port": {
                          "description": "Server port.",
                          "type": "integer"
                        },
                        "origin_protocol": {
                          "description": "The https or http protocol of the server.",
                          "type": "string"
                        }
                      }
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "settings": {
                    "additionalProperties": true,
                    "description": "The advanced application settings.",
                    "properties": {
                      "anonymous_server_conn_limit": {
                        "description": "The maximum number of anonymous server connections allowed.",
                        "type": "string"
                      },
                      "anonymous_server_request_limit": {
                        "description": "The maximum number of anonymous server requests allowed.",
                        "type": "string"
                      },
                      "app_auth": {
                        "description": "The application-facing authentication mechanism. Default is `none`.",
                        "type": "string"
                      },
                      "app_auth_domain": {
                        "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_cookie_domain": {
                        "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_location": {
                        "description": "The application's location. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_server_read_timeout": {
                        "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                        "type": "string"
                      },
                      "authenticated_server_conn_limit": {
                        "description": "The maximum number of authenticated server connections allowed.",
                        "type": "string"
                      },
                      "authenticated_server_request_limit": {
                        "description": "The maximum number of authenticated server connections allowed.",
                        "type": "string"
                      },
                      "authentication_enabled": {
                        "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "cookie_domain": {
                        "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "disable_caching": {
                        "default": false,
                        "description": "Disables caching for URL-path based policies.",
                        "type": "boolean"
                      },
                      "external_cookie_domain": {
                        "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_fall": {
                        "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                        "type": "string"
                      },
                      "health_check_http_version": {
                        "description": "The HTTP version to use for the health check.",
                        "type": "string"
                      },
                      "health_check_interval": {
                        "description": "The interval between successive heartbeats in seconds.",
                        "type": "string"
                      },
                      "health_check_rise": {
                        "description": "The minimum number of consecutive successful heartbeats the connector receives to consider an application server healthy. The default is `two.",
                        "type": "string"
                      },
                      "health_check_timeout": {
                        "description": "The time in seconds that connector waits before considering a heartbeat attempt failed.",
                        "type": "string"
                      },
                      "health_check_type": {
                        "description": "The type of health check to perform to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                        "enum": [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7"
                        ],
                        "type": "string"
                      },
                      "hidden_app": {
                        "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                        "type": "string"
                      },
                      "http_only_cookie": {
                        "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                        "type": "string"
                      },
                      "https_sslv3": {
                        "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                        "type": "string"
                      },
                      "idle_close_time_seconds": {
                        "description": "The number of seconds a session can remain idle before it's closed.",
                        "type": "string"
                      },
                      "idle_conn_ceil": {
                        "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idle_conn_floor": {
                        "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idle_conn_step": {
                        "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idp_idle_expiry": {
                        "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "integer"
                      },
                      "idp_max_expiry": {
                        "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "integer"
                      },
                      "ignore_cname_resolution": {
                        "description": "Configures the application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                        "type": "string"
                      },
                      "internal_hostname": {
                        "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "is_ssl_verification_enabled": {
                        "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "kerberos_negotiate_once": {
                        "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "load_balancing_metric": {
                        "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                        "enum": [
                          "round-robin",
                          "ip-hash"
                        ],
                        "type": "string"
                      },
                      "logging_enabled": {
                        "description": "Enables logging for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "login_timeout": {
                        "description": "The number of seconds before a login attempt times out.",
                        "type": "string"
                      },
                      "login_url": {
                        "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "logout_url": {
                        "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "match_exact_url": {
                        "default": false,
                        "description": "Configures URL path based rules for exact matches on URLs.",
                        "type": "boolean"
                      },
                      "mfa": {
                        "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                        "enum": [
                          "enable",
                          "disable",
                          "inherit"
                        ],
                        "type": "string"
                      },
                      "preauth_enforce_url": {
                        "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                        "type": "string"
                      },
                      "proxy_buffer_size_kb": {
                        "description": "The size of the proxy's buffer, in kilobytes.",
                        "nullable": true,
                        "type": "string"
                      },
                      "proxy_disable_clipboard": {
                        "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                        "type": "string"
                      },
                      "rate_limit": {
                        "description": "Enables rate limiting for the application. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "rdp_initial_program": {
                        "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "refresh_sticky_cookie": {
                        "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                        "enum": [
                          "on",
                          "off"
                        ],
                        "type": "string"
                      },
                      "request_body_rewrite": {
                        "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                        "type": "string"
                      },
                      "request_parameters": {
                        "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "saas_enabled": {
                        "description": "Enables SaaS for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "sentry_redirect_401": {
                        "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                        "type": "string"
                      },
                      "server_cert_validate": {
                        "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                        "type": "string"
                      },
                      "server_request_burst": {
                        "description": "The server request threshold for burst monitoring.",
                        "type": "string"
                      },
                      "service_principle_name": {
                        "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "session_sticky": {
                        "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true`, `false`, or `null` if not applicable.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "session_sticky_cookie_maxage": {
                        "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                        "type": "string"
                      },
                      "session_sticky_server_cookie": {
                        "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                        "nullable": true,
                        "type": "string"
                      },
                      "spdy_enabled": {
                        "description": "Enables SPDY traffic management. Either `true` or `false`.",
                        "type": "string"
                      },
                      "ssh_audit_enabled": {
                        "description": "Enables ssh session auditing. Either `true` or `false`.",
                        "type": "string"
                      },
                      "sso": {
                        "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "use_internal_host": {
                        "description": "Configures the application to use CNAME redirection to an internal hostname.",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "The username for use in application authentication. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "wapp_auth": {
                        "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                        "enum": [
                          "form",
                          "basic",
                          "basic+cookie",
                          "certificate_only"
                        ],
                        "type": "string"
                      },
                      "websocket_enabled": {
                        "description": "Enables WebSockets for HTTP transport. Either `true` or `false`.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "description": "The status of the application.",
                    "example": "{{status}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "url": {
                    "description": "The application URL.",
                    "example": "{{url}}",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "The application configuration's unique ID.",
                    "example": "{{uuid_url}}",
                    "type": "string"
                  }
                },
                "required": [
                  "description",
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/get-urllocation.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_uuid_url": "l_U22L2wSVy4eG3-TcggzA",
                  "description": null,
                  "name": "TEST_RULE",
                  "resource_uri": {
                    "href": "/api/v1/apps/l_U22L2wSVy4eG3-TcggzA/urllocation/238Yd-3DStaB0aUgT4Vntg"
                  },
                  "rule_type": 1,
                  "servers": [],
                  "settings": {
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "authentication_enabled": "false",
                    "cookie_domain": null,
                    "external_cookie_domain": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": null,
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_hostname": null,
                    "is_ssl_verification_enabled": "false",
                    "kerberos_negotiate_once": "off",
                    "load_balancing_metric": "ip-hash",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "enable",
                    "preauth_enforce_url": "",
                    "proxy_buffer_size_kb": "4",
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "refresh_sticky_cookie": "on",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": null,
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "use_internal_host": "true",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false"
                  },
                  "status": 1,
                  "url": "/about",
                  "uuid_url": "238Yd-3DStaB0aUgT4Vntg"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "URL location rule configuration.",
                  "properties": {
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "URL location resource properties.",
                      "properties": {
                        "href": {
                          "description": "A unique identifier for the resource location.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "servers": {
                      "description": "Host, port, and protocol server details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "origin_host": {
                            "description": "Server hostname.",
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "Server port.",
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The https or http protocol of the server.",
                            "type": "string"
                          }
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "settings": {
                      "additionalProperties": true,
                      "description": "The advanced application settings.",
                      "properties": {
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of anonymous server connections allowed.",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of anonymous server requests allowed.",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed.",
                          "type": "string"
                        },
                        "authentication_enabled": {
                          "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "disable_caching": {
                          "default": false,
                          "description": "Disables caching for URL-path based policies.",
                          "type": "boolean"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check.",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The minimum number of consecutive successful heartbeats the connector receives to consider an application server healthy. The default is `two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that connector waits before considering a heartbeat attempt failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                          "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7"
                          ],
                          "type": "string"
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session can remain idle before it's closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "integer"
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "integer"
                        },
                        "ignore_cname_resolution": {
                          "description": "Configures the application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ],
                          "type": "string"
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "match_exact_url": {
                          "default": false,
                          "description": "Configures URL path based rules for exact matches on URLs.",
                          "type": "boolean"
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                          "enum": [
                            "enable",
                            "disable",
                            "inherit"
                          ],
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes.",
                          "nullable": true,
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "enum": [
                            "on",
                            "off"
                          ],
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true`, `false`, or `null` if not applicable.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                          "nullable": true,
                          "type": "string"
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "use_internal_host": {
                          "description": "Configures the application to use CNAME redirection to an internal hostname.",
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The username for use in application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ],
                          "type": "string"
                        },
                        "websocket_enabled": {
                          "description": "Enables WebSockets for HTTP transport. Either `true` or `false`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "The status of the application.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "url": {
                      "description": "The application URL.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "The application configuration's unique ID.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/get-urllocation.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify a URL location rule",
        "tags": [
          "URL location rules"
        ]
      },
      "delete": {
        "description": "Removes a URL location rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app-urllocation"
        },
        "operationId": "delete-app-urllocation",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete a URL location rule",
        "tags": [
          "URL location rules"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each URL location rule.",
          "example": "{{locationId}}",
          "in": "path",
          "name": "locationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/location-id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/location.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/urllocation/{locationId}"
      }
    },
    "/mgmt-pop/apps/{applicationId}/versions": {
      "get": {
        "description": "Lists a list of application versions.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-versions"
        },
        "operationId": "get-app-versions",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "cloud_deployed_at": null,
                      "created_at": "2021-01-13T14:43:11.809596",
                      "created_by": "d4cdaaff-44d4-456f-839c-9e6162afc0cd",
                      "created_by_email": "svazhaka@akamai.com",
                      "deployed_at": "2021-01-13T14:44:10.182348",
                      "deployment_started_at": null,
                      "modified_at": "2021-01-13T14:44:10.182454",
                      "name": "",
                      "note": "",
                      "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/YnzBpoGTSHGcdxxPjBtzWg",
                      "status": "ready",
                      "uuid_url": "YnzBpoGTSHGcdxxPjBtzWg",
                      "version": "3"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access app config version data.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "App config version details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application configuration versions.",
                        "properties": {
                          "cloud_deployed_at": {
                            "description": "ISO 8601 timestamp marking the configuration version's deployment to the data path point of presence (DPOP).",
                            "nullable": true,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the configuration version's creation.",
                            "type": "string"
                          },
                          "created_by": {
                            "description": "The ID of the user who created the application configuration version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "created_by_email": {
                            "description": "The email address of the user who created the application configuration version.",
                            "type": "string"
                          },
                          "deployed_at": {
                            "description": "ISO 8601 timestamp marking the application configuration version's deployment to connectors.",
                            "type": "string"
                          },
                          "deployment_started_at": {
                            "description": "ISO 8601 timestamp marking the application configuration version deployment began.",
                            "nullable": true,
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the application configuration version's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of application configuration version.",
                            "type": "string"
                          },
                          "note": {
                            "description": "Custom text field for additional notes on the application configuration version.",
                            "type": "string"
                          },
                          "resource_uri": {
                            "description": "The path for the unique application config version resource.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The current status of the application configuration version. Either `new`, `ready`, `invalidated`, or `archived`.",
                            "enum": [
                              "new",
                              "ready",
                              "invalidated",
                              "archived"
                            ],
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application configuration version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the application configuration.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "version_settings_data": {
                            "additionalProperties": false,
                            "description": "App config version settings.",
                            "properties": {
                              "advanced_settings": {
                                "additionalProperties": false,
                                "description": "Application config version advanced settings.",
                                "properties": {
                                  "acceleration": {
                                    "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "allow_cors": {
                                    "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "anonymous_server_conn_limit": {
                                    "description": "The maximum number of concurrent anonymous server connections.",
                                    "type": "string"
                                  },
                                  "anonymous_server_request_limit": {
                                    "description": "The maximum number of concurrent anonymous server requests.",
                                    "type": "string"
                                  },
                                  "app_auth": {
                                    "description": "The application-facing authentication mechanism. Default is `none`.",
                                    "type": "string"
                                  },
                                  "app_auth_domain": {
                                    "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "app_client_cert_auth": {
                                    "description": "Enables client certificate authentication. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "app_cookie_domain": {
                                    "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "app_location": {
                                    "description": "The application's location. Specify `null` if you want to provide this later.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "app_server_read_timeout": {
                                    "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                                    "type": "string"
                                  },
                                  "authenticated_server_conn_limit": {
                                    "description": "The maximum number of authenticated server connections allowed.",
                                    "type": "string"
                                  },
                                  "authenticated_server_request_limit": {
                                    "description": "The maximum number of authenticated server connections allowed.",
                                    "type": "string"
                                  },
                                  "client_cert_auth": {
                                    "description": "Enables client certificate authorization. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "client_cert_user_param": {
                                    "description": "Relevant certificate parameters for client authentication.",
                                    "type": "string"
                                  },
                                  "cookie_domain": {
                                    "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                    "type": "string"
                                  },
                                  "cors_header_list": {
                                    "default": "unbounded",
                                    "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                                    "type": "string"
                                  },
                                  "cors_max_age": {
                                    "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                                    "type": "string"
                                  },
                                  "cors_method_list": {
                                    "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                                    "type": "string"
                                  },
                                  "cors_origin_list": {
                                    "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                                    "type": "string"
                                  },
                                  "cors_support_credential": {
                                    "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                                    "enum": [
                                      "off",
                                      "on"
                                    ],
                                    "type": "string"
                                  },
                                  "custom_headers": {
                                    "description": "Custom headers for application connections.",
                                    "items": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "domain_exception_list": {
                                    "description": "A list of domains to except from content rewrite. ",
                                    "type": "string"
                                  },
                                  "edge_authentication_enabled": {
                                    "description": "Enables edge authentication for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "edge_cookie_key": {
                                    "description": "The edge key to share with your ION configuration.",
                                    "type": "string"
                                  },
                                  "external_cookie_domain": {
                                    "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "force_mfa": {
                                    "description": "Forces multi-factor authentication. Either `off` or `on`.",
                                    "enum": [
                                      "on",
                                      "off"
                                    ],
                                    "type": "string"
                                  },
                                  "forward_ticket_granting_ticket": {
                                    "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "g2o_enabled": {
                                    "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "g2o_key": {
                                    "description": "The G2O key to share with your ION configuration.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "g2o_nonce": {
                                    "description": "The G2O nonce to share with your ION configuration.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "health_check_fall": {
                                    "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                                    "type": "string"
                                  },
                                  "health_check_http_host_header": {
                                    "description": "The host header to use for HTTP health checks.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "health_check_http_url": {
                                    "description": "The URL to use for HTTP health checks.",
                                    "type": "string"
                                  },
                                  "health_check_http_version": {
                                    "description": "The HTTP version to use for the health check.",
                                    "type": "string"
                                  },
                                  "health_check_interval": {
                                    "description": "The interval between successive heartbeats in seconds.",
                                    "type": "string"
                                  },
                                  "health_check_rise": {
                                    "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                                    "type": "string"
                                  },
                                  "health_check_timeout": {
                                    "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                                    "type": "string"
                                  },
                                  "health_check_type": {
                                    "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                                    "enum": [
                                      "0",
                                      "1",
                                      "2",
                                      "3",
                                      "4",
                                      "5",
                                      "6",
                                      "7"
                                    ],
                                    "type": "string"
                                  },
                                  "hidden_app": {
                                    "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "host_key": {
                                    "description": "The host secret key.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "hsts_age": {
                                    "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                                    "type": "string"
                                  },
                                  "http_only_cookie": {
                                    "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "https_sslv3": {
                                    "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "idle_close_time_seconds": {
                                    "description": "The number of seconds a session may remain idle before it's closed.",
                                    "type": "string"
                                  },
                                  "idle_conn_ceil": {
                                    "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                                    "type": "string"
                                  },
                                  "idle_conn_floor": {
                                    "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                                    "type": "string"
                                  },
                                  "idle_conn_step": {
                                    "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                                    "type": "string"
                                  },
                                  "idp_idle_expiry": {
                                    "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "idp_max_expiry": {
                                    "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "ignore_bypass_mfa": {
                                    "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                                    "enum": [
                                      "off",
                                      "on"
                                    ],
                                    "type": "string"
                                  },
                                  "ignore_cname_resolution": {
                                    "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "inject_ajax_javascript": {
                                    "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                                    "enum": [
                                      "off",
                                      "on"
                                    ],
                                    "type": "string"
                                  },
                                  "internal_host_port": {
                                    "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                                    "type": "string"
                                  },
                                  "internal_hostname": {
                                    "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "ip_access_allow": {
                                    "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "is_ssl_verification_enabled": {
                                    "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "keepalive_connection_pool": {
                                    "description": "The maximum number of connections allowed in the keepalive pool.",
                                    "type": "string"
                                  },
                                  "keepalive_enable": {
                                    "description": "Enables connection keepalives. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "keepalive_timeout": {
                                    "description": "The keepalive timeout period in seconds.",
                                    "type": "string"
                                  },
                                  "kerberos_negotiate_once": {
                                    "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                                    "type": "string"
                                  },
                                  "keyed_keepalive_enable": {
                                    "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "keytab": {
                                    "description": "A unique keytab for Kerberos delegation.",
                                    "type": "string"
                                  },
                                  "load_balancing_metric": {
                                    "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                                    "enum": [
                                      "round-robin",
                                      "ip-hash"
                                    ],
                                    "type": "string"
                                  },
                                  "logging_enabled": {
                                    "description": "Enables logging for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "login_timeout": {
                                    "description": "The number of seconds before a login attempt times out.",
                                    "type": "string"
                                  },
                                  "login_url": {
                                    "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "logout_url": {
                                    "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "mdc_enable": {
                                    "description": "Enables multi-data center connections. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "mfa": {
                                    "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                                    "enum": [
                                      "enable",
                                      "disable",
                                      "inherit"
                                    ],
                                    "type": "string"
                                  },
                                  "offload_onpremise_traffic": {
                                    "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "pass_phrase": {
                                    "description": "The passphrase for the certificate. ",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "preauth_consent": {
                                    "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "preauth_enforce_url": {
                                    "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                                    "type": "string"
                                  },
                                  "private_key": {
                                    "description": "Private key for the certificate.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "proxy_buffer_size_kb": {
                                    "description": "The size of the proxy's buffer, in kilobytes.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "proxy_disable_clipboard": {
                                    "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "rate_limit": {
                                    "description": "Enables rate limiting for the application. Either `on` or `off`.",
                                    "enum": [
                                      "on",
                                      "off"
                                    ],
                                    "type": "string"
                                  },
                                  "rdp_initial_program": {
                                    "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "rdp_legacy_mode": {
                                    "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "rdp_remote_apps": {
                                    "description": "Remote RDP applications. ",
                                    "items": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "rdp_tls1": {
                                    "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "refresh_sticky_cookie": {
                                    "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                                    "enum": [
                                      "off",
                                      "on"
                                    ],
                                    "type": "string"
                                  },
                                  "remote_spark_audio": {
                                    "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "remote_spark_disk": {
                                    "description": "Name of the disk for Cisco Webex Spark application.",
                                    "type": "string"
                                  },
                                  "remote_spark_mapClipboard": {
                                    "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                                    "enum": [
                                      "on",
                                      "off"
                                    ],
                                    "type": "string"
                                  },
                                  "remote_spark_mapDisk": {
                                    "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "remote_spark_mapPrinter": {
                                    "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "remote_spark_printer": {
                                    "description": "Name of the printer for Cisco Webex Spark application.",
                                    "type": "string"
                                  },
                                  "remote_spark_recording": {
                                    "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "request_body_rewrite": {
                                    "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "request_parameters": {
                                    "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "saas_enabled": {
                                    "description": "Enables SaaS for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "sentry_redirect_401": {
                                    "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                                    "type": "string"
                                  },
                                  "server_cert_validate": {
                                    "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "server_request_burst": {
                                    "description": "The server request threshold for burst monitoring.",
                                    "type": "string"
                                  },
                                  "service_principle_name": {
                                    "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "session_sticky": {
                                    "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "session_sticky_cookie_maxage": {
                                    "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                                    "type": "string"
                                  },
                                  "session_sticky_server_cookie": {
                                    "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "single_host_content_rw": {
                                    "description": "Enables single host content rewrite. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "single_host_cookie_domain": {
                                    "description": "Enables single host cookie domains. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "single_host_enable": {
                                    "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "single_host_fqdn": {
                                    "description": "The single host fully qualified domain name used to host multiple applications.",
                                    "type": "string"
                                  },
                                  "single_host_path": {
                                    "description": "The single host path used to host multiple applications.",
                                    "type": "string"
                                  },
                                  "sla_object_url": {
                                    "description": "The SLA object URL to share with your ION configuration.",
                                    "type": "string"
                                  },
                                  "spdy_enabled": {
                                    "description": "Enables SPDY traffic management. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "ssh_audit_enabled": {
                                    "description": "Enables ssh session auditing. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "sso": {
                                    "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "sticky_agent": {
                                    "description": "Enables connector persistence for connections. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "user_name": {
                                    "description": "The username to use for application authentication. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "wapp_auth": {
                                    "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                                    "enum": [
                                      "form",
                                      "basic",
                                      "basic+cookie",
                                      "certificate_only"
                                    ],
                                    "type": "string"
                                  },
                                  "websocket_enabled": {
                                    "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  },
                                  "wildcard_internal_hostname": {
                                    "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                                }
                              },
                              "authentication": {
                                "additionalProperties": false,
                                "description": "App config version authentication settings.",
                                "properties": {
                                  "auth_enabled": {
                                    "description": "Enables authentication for this app config version.",
                                    "type": "boolean"
                                  },
                                  "directories": {
                                    "description": "The unique ID of the directories used for authentication.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "groups": {
                                    "additionalProperties": {
                                      "description": "Group IDs and their authentication settings. ",
                                      "type": "string"
                                    },
                                    "description": "App config version groups.",
                                    "type": "object"
                                  },
                                  "idp": {
                                    "description": "The unique ID of the IDP used for authentication.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "identity_data": {
                                "additionalProperties": false,
                                "description": "The application identity settings.",
                                "properties": {
                                  "app_bundle": {
                                    "description": "The application bundle name.",
                                    "type": "string"
                                  },
                                  "app_category": {
                                    "additionalProperties": false,
                                    "description": "Application category settings.",
                                    "properties": {
                                      "name": {
                                        "description": "The name of the category.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "uuid_url": {
                                        "description": "The UUID of the category.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "app_logo": {
                                    "description": "The application logo URL.",
                                    "type": "string"
                                  },
                                  "bookmark_url": {
                                    "description": "The application URL to bookmark.",
                                    "type": "string"
                                  },
                                  "cert": {
                                    "description": "The certificate contents.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "client_app_mode": {
                                    "description": "The client application mode. ",
                                    "type": "integer"
                                  },
                                  "client_cert": {
                                    "description": "The client certificate. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "cname": {
                                    "description": "The application's CNAME mapping.",
                                    "type": "string"
                                  },
                                  "custom_tls_suite_name": {
                                    "description": "The custom TLS suite name. Specify `null` if not applicable.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "default_tls_suite": {
                                    "description": "Whether the application uses the default TLS suite.",
                                    "type": "boolean"
                                  },
                                  "description": {
                                    "description": "The application description.",
                                    "type": "string"
                                  },
                                  "dialin_server": {
                                    "description": "The dialin server hostname.",
                                    "type": "string"
                                  },
                                  "dialin_sni": {
                                    "description": "The dialin server SNI.",
                                    "type": "string"
                                  },
                                  "domain": {
                                    "description": "The domain type. Defaults to `1`.",
                                    "type": "integer"
                                  },
                                  "domain_suffix": {
                                    "description": "The domain suffix to add to the configured hostname.",
                                    "type": "string"
                                  },
                                  "encr_algo": {
                                    "description": "The encryption algorithm.",
                                    "type": "integer"
                                  },
                                  "etp_settings": {
                                    "additionalProperties": false,
                                    "description": "OpenID Connect (OIDC) configuration settings for an application configuration.",
                                    "nullable": true,
                                    "properties": {
                                      "authorization_endpoint": {
                                        "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "certs_uri": {
                                        "description": "The URI of the relaying party's CA certificate.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "check_session_iframe": {
                                        "description": "The iframe URL used to check session status.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "discovery_url": {
                                        "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "end_session_endpoint": {
                                        "description": "The OIDC endpoint that triggers single sign out.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "jwks_uri": {
                                        "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "openid_metadata": {
                                        "description": "Metadata that describes the OIDC provider's configuration.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "token_endpoint": {
                                        "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "userinfo_endpoint": {
                                        "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/app-oidc-settings.yaml"
                                    }
                                  },
                                  "host": {
                                    "description": "The hostname.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Application name.",
                                    "type": "string"
                                  },
                                  "oidc_settings": {
                                    "additionalProperties": false,
                                    "description": "OpenID Connect (OIDC) configuration settings for an application configuration.",
                                    "nullable": true,
                                    "properties": {
                                      "authorization_endpoint": {
                                        "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "certs_uri": {
                                        "description": "The URI of the relaying party's CA certificate.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "check_session_iframe": {
                                        "description": "The iframe URL used to check session status.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "discovery_url": {
                                        "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "end_session_endpoint": {
                                        "description": "The OIDC endpoint that triggers single sign out.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "jwks_uri": {
                                        "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "openid_metadata": {
                                        "description": "Metadata that describes the OIDC provider's configuration.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "token_endpoint": {
                                        "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "userinfo_endpoint": {
                                        "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/app-oidc-settings.yaml"
                                    }
                                  },
                                  "orig_encr_algo": {
                                    "description": "The origin's encryption algorithm.",
                                    "type": "integer"
                                  },
                                  "orig_tls": {
                                    "description": "Whether the origin server uses TLS. ",
                                    "type": "boolean"
                                  },
                                  "origin_host": {
                                    "description": "The origin host IP address or name.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "origin_keepalive": {
                                    "description": "The origin's keepalive timeout in seconds.",
                                    "type": "integer"
                                  },
                                  "origin_port": {
                                    "description": "The origin port number.",
                                    "type": "integer"
                                  },
                                  "port": {
                                    "description": "The local port number.",
                                    "type": "integer"
                                  },
                                  "saml_settings": {
                                    "description": "SAML settings.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "attrmap": {
                                          "description": "User attribute mapping.",
                                          "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "fmt": {
                                                "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                                "enum": [
                                                  "email",
                                                  "basic",
                                                  "unspecified",
                                                  "persistent",
                                                  "transient"
                                                ],
                                                "type": "string"
                                              },
                                              "fname": {
                                                "description": "The format name.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "The attribute name.",
                                                "type": "string"
                                              },
                                              "src": {
                                                "description": "The source of the subject.",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "idp": {
                                          "additionalProperties": false,
                                          "description": "SAML IdP settings.",
                                          "properties": {
                                            "ecp_enable": {
                                              "description": "Enables enhanced client or proxy.",
                                              "type": "boolean"
                                            },
                                            "ecp_resp_signature": {
                                              "description": "The ECP response signature.",
                                              "type": "boolean"
                                            },
                                            "entity_id": {
                                              "description": "The IdP's SAML entity URL.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "SAML metadata file contents.",
                                              "type": "string"
                                            },
                                            "resp_bind": {
                                              "description": "The response binding for HTTP requests.",
                                              "type": "string"
                                            },
                                            "self_signed": {
                                              "description": "Whether the certificate is self-signed.",
                                              "type": "boolean"
                                            },
                                            "sign_algo": {
                                              "description": "The certificate signing algorithm.",
                                              "type": "string"
                                            },
                                            "sign_cert": {
                                              "description": "The self-signed certificate.",
                                              "type": "string"
                                            },
                                            "sign_key": {
                                              "description": "The certificate signing key.",
                                              "type": "string"
                                            },
                                            "slo_url": {
                                              "description": "The single logout URL.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "sp": {
                                          "additionalProperties": false,
                                          "description": "SAML service provider settings.",
                                          "properties": {
                                            "acs_url": {
                                              "description": "The SAML assertion consumer service URL.",
                                              "type": "string"
                                            },
                                            "default_relay_state": {
                                              "description": "A default status value passed between the IdP and the service provider.",
                                              "type": "string"
                                            },
                                            "dst_url": {
                                              "description": "The destination URL for users to access the application.",
                                              "type": "string"
                                            },
                                            "encr_algo": {
                                              "description": "The response encryption algorithm.",
                                              "type": "string"
                                            },
                                            "encr_cert": {
                                              "description": "The encryption certificate.",
                                              "type": "string"
                                            },
                                            "entity_id": {
                                              "description": "The service provider's SAML entity URL.",
                                              "type": "string"
                                            },
                                            "force_auth": {
                                              "description": "Whether to force authentication. ",
                                              "type": "boolean"
                                            },
                                            "logout_bind": {
                                              "description": "The request binding for single logout requests.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "SAML metadata file contents.",
                                              "type": "string"
                                            },
                                            "req_bind": {
                                              "description": "The request binding for single logout requests.",
                                              "type": "string"
                                            },
                                            "req_verify": {
                                              "description": "Whether to verify requests.",
                                              "type": "boolean"
                                            },
                                            "resp_encr": {
                                              "description": "Whether to encrypt requests. ",
                                              "type": "boolean"
                                            },
                                            "sign_cert": {
                                              "description": "The signing certificate.",
                                              "type": "string"
                                            },
                                            "slo_bind": {
                                              "description": "The response binding for single logout requests.",
                                              "type": "string"
                                            },
                                            "slo_req_verify": {
                                              "description": "Whether to verify single logout requests.",
                                              "type": "boolean"
                                            },
                                            "slo_url": {
                                              "description": "The single logout URL.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "subject": {
                                          "additionalProperties": false,
                                          "description": "Specifies the subject settings for the IdP configuration.",
                                          "properties": {
                                            "fmt": {
                                              "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                              "enum": [
                                                "email",
                                                "basic",
                                                "unspecified",
                                                "persistent",
                                                "transient"
                                              ],
                                              "type": "string"
                                            },
                                            "src": {
                                              "description": "The source of the subject.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "servers": {
                                    "description": "Application identity server properties.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "orig_tls": {
                                          "description": "Whether the origin host uses TLS encryption.",
                                          "type": "boolean"
                                        },
                                        "origin_host": {
                                          "description": "The origin host IP address.",
                                          "type": "string"
                                        },
                                        "origin_port": {
                                          "description": "The origin host port number.",
                                          "type": "integer"
                                        },
                                        "origin_protocol": {
                                          "description": "The origin host protocol. ",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "sites": {
                                    "description": "Site IDs for the application.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "ssl_ca_cert": {
                                    "description": "The SSL CA-signed certificate. ",
                                    "type": "string"
                                  },
                                  "tunnel_internal_hosts": {
                                    "description": "THe internal hosts to allow tunnel application access.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "wsfed_settings": {
                                    "description": "[Web Services Federation](https://techdocs.akamai.com/eaa-api/reference/https://techdocs.akamai.com/eaa/docs/web-services-federation) settings.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/appconfigversion-identity-data.yaml"
                                }
                              },
                              "location_data": {
                                "additionalProperties": false,
                                "description": "App config version location data.",
                                "properties": {
                                  "connector_data": {
                                    "description": "Connector data for the application.",
                                    "type": "object"
                                  },
                                  "pop_uuid_url": {
                                    "description": "Unique ID of the POP the application uses.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "names": {
                                "additionalProperties": false,
                                "description": "Application names configuration.",
                                "properties": {
                                  "cert_name": {
                                    "description": "A descriptive name for the certificate.",
                                    "type": "string"
                                  },
                                  "connector_names": {
                                    "description": "The connector names.",
                                    "type": "object"
                                  },
                                  "directory_names": {
                                    "additionalProperties": {
                                      "description": "Directory ID and name pairings.",
                                      "type": "string"
                                    },
                                    "description": "Directory IDs and their names. ",
                                    "type": "object"
                                  },
                                  "domain_suffix": {
                                    "description": "The suffix to add to all hostnames.",
                                    "type": "string"
                                  },
                                  "group_names": {
                                    "additionalProperties": {
                                      "description": "Group ID and name pairings.",
                                      "type": "string"
                                    },
                                    "description": "Group IDs and their names. ",
                                    "type": "object"
                                  },
                                  "idp_name": {
                                    "description": "The IdP name.",
                                    "type": "string"
                                  },
                                  "pop_name": {
                                    "description": "The POP name.",
                                    "type": "string"
                                  },
                                  "ssl_ca_cert": {
                                    "description": "The CA-signed SSL certificate contents.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/appconfigversion-names.yaml"
                                }
                              },
                              "service_data": {
                                "description": "The application service settings. ",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "name": {
                                      "description": "A unique name for the service.",
                                      "type": "string"
                                    },
                                    "rules": {
                                      "description": "The risk assessment rules applied to the service.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    },
                                    "service_type": {
                                      "default": 1,
                                      "description": "The service type. Either `1` for WAF, `2` for Acceleration, `3` for ICAP, `4` for IPS, `5` for SLB, `6` for access control, `7` for rewrite, or `8` for group rewrite.",
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7,
                                        8
                                      ],
                                      "type": "integer"
                                    },
                                    "settings": {
                                      "description": "Service settings.",
                                      "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "name": {
                                            "description": "The service setting name.",
                                            "type": "string"
                                          },
                                          "setting_type": {
                                            "description": "The service setting type. ",
                                            "type": "integer"
                                          },
                                          "value": {
                                            "description": "The service setting value.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "status": {
                                      "description": "The service status. Either `0` for off or `1` for on. ",
                                      "enum": [
                                        0,
                                        1
                                      ],
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array",
                                "x-akamai": {
                                  "file-path": "schemas/appconfigversion-service-data.yaml"
                                }
                              },
                              "url_location_data": {
                                "description": "The application location data, including the POP region and connector.",
                                "items": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "cloud_deployed_at",
                          "created_by",
                          "created_by_email",
                          "deployed_at",
                          "deployment_started_at",
                          "name",
                          "note",
                          "status",
                          "uuid_url",
                          "version"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/appconfigversion.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/appconfigversionlist.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List application versions",
        "tags": [
          "Versions"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/versions.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/versions"
      }
    },
    "/mgmt-pop/apps/{applicationId}/versions/{versionId}": {
      "get": {
        "description": "Lists an application version.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-version"
        },
        "operationId": "get-app-version",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cloud_deployed_at": null,
                  "created_at": "2021-01-13T14:43:11.809596",
                  "created_by": "d4cdaaff-44d4-456f-839c-9e6162afc0cd",
                  "created_by_email": "svazhaka@akamai.com",
                  "deployed_at": "2021-01-13T14:44:10.182348",
                  "deployment_started_at": null,
                  "modified_at": "2021-01-13T14:44:10.182454",
                  "name": "",
                  "note": "",
                  "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/YnzBpoGTSHGcdxxPjBtzWg",
                  "status": "ready",
                  "uuid_url": "YnzBpoGTSHGcdxxPjBtzWg",
                  "version": "3",
                  "version_settings_data": {
                    "advanced_settings": {
                      "acceleration": "false",
                      "allow_cors": "false",
                      "anonymous_server_conn_limit": "50",
                      "anonymous_server_request_limit": "100",
                      "app_auth": "none",
                      "app_auth_domain": null,
                      "app_client_cert_auth": "false",
                      "app_cookie_domain": null,
                      "app_location": null,
                      "app_server_read_timeout": "60",
                      "authenticated_server_conn_limit": "50",
                      "authenticated_server_request_limit": "100",
                      "client_cert_auth": "false",
                      "client_cert_user_param": "",
                      "cookie_domain": "",
                      "cors_header_list": "unbounded",
                      "cors_max_age": "86400",
                      "cors_method_list": "unbounded",
                      "cors_origin_list": "unbounded",
                      "cors_support_credential": "on",
                      "custom_headers": [],
                      "domain_exception_list": "",
                      "edge_authentication_enabled": "false",
                      "edge_cookie_key": "",
                      "external_cookie_domain": null,
                      "force_mfa": "off",
                      "forward_ticket_granting_ticket": "false",
                      "g2o_enabled": "false",
                      "g2o_key": null,
                      "g2o_nonce": null,
                      "health_check_fall": "3",
                      "health_check_http_host_header": null,
                      "health_check_http_url": "/",
                      "health_check_http_version": "1.1",
                      "health_check_interval": "30000",
                      "health_check_rise": "2",
                      "health_check_timeout": "50000",
                      "health_check_type": "0",
                      "hidden_app": "false",
                      "host_key": null,
                      "hsts_age": "15552000",
                      "http_only_cookie": "true",
                      "https_sslv3": "false",
                      "idle_close_time_seconds": "1200",
                      "idle_conn_ceil": "75",
                      "idle_conn_floor": "50",
                      "idle_conn_step": "10",
                      "idp_idle_expiry": null,
                      "idp_max_expiry": null,
                      "ignore_bypass_mfa": "off",
                      "ignore_cname_resolution": "false",
                      "inject_ajax_javascript": "off",
                      "internal_host_port": "0",
                      "internal_hostname": null,
                      "ip_access_allow": "false",
                      "is_ssl_verification_enabled": "false",
                      "keepalive_connection_pool": "50",
                      "keepalive_enable": "true",
                      "keepalive_timeout": "3",
                      "kerberos_negotiate_once": "off",
                      "keyed_keepalive_enable": "false",
                      "keytab": "",
                      "load_balancing_metric": "round-robin",
                      "logging_enabled": "true",
                      "login_timeout": "5",
                      "login_url": null,
                      "logout_url": null,
                      "mdc_enable": "false",
                      "mfa": "inherit",
                      "offload_onpremise_traffic": "false",
                      "pass_phrase": null,
                      "preauth_consent": "false",
                      "preauth_enforce_url": "",
                      "private_key": null,
                      "proxy_buffer_size_kb": "4",
                      "proxy_disable_clipboard": "false",
                      "rate_limit": "on",
                      "rdp_initial_program": null,
                      "rdp_legacy_mode": "false",
                      "rdp_remote_apps": [],
                      "rdp_tls1": "false",
                      "refresh_sticky_cookie": "on",
                      "remote_spark_audio": "true",
                      "remote_spark_disk": "LOCALSHARE",
                      "remote_spark_mapClipboard": "on",
                      "remote_spark_mapDisk": "true",
                      "remote_spark_mapPrinter": "true",
                      "remote_spark_printer": "LOCALPRINTER",
                      "remote_spark_recording": "false",
                      "request_body_rewrite": "false",
                      "request_parameters": null,
                      "saas_enabled": "false",
                      "sentry_redirect_401": "off",
                      "server_cert_validate": "true",
                      "server_request_burst": "100",
                      "service_principle_name": null,
                      "session_sticky": null,
                      "session_sticky_cookie_maxage": "0",
                      "session_sticky_server_cookie": null,
                      "single_host_content_rw": "false",
                      "single_host_cookie_domain": "false",
                      "single_host_enable": "false",
                      "single_host_fqdn": "",
                      "single_host_path": "",
                      "sla_object_url": "____spx/ionpage",
                      "spdy_enabled": "true",
                      "ssh_audit_enabled": "false",
                      "sso": "true",
                      "sticky_agent": "false",
                      "user_name": null,
                      "wapp_auth": "form",
                      "websocket_enabled": "false",
                      "wildcard_internal_hostname": "false"
                    },
                    "authentication": {
                      "auth_enabled": true,
                      "directories": [
                        "H2fcmydaTb6GRRDAwXVfrg",
                        "NZJHqc-WRDS0FRLVVHEE7Q"
                      ],
                      "groups": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "inherit",
                        "-nJlyMgJSIC4Odb_C725Bg": "inherit",
                        "0Mu0N691QTi0RA4wS9WUpA": "inherit",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "inherit",
                        "C5cuRmbZSuOWSt5WYWJ3jw": "inherit",
                        "CFlmTq1hRZK0xj_TkrkxEw": "inherit",
                        "CXgBU8KKRSGU1gySx-2n2Q": "inherit",
                        "CXoHttcUSCGcAGtoiXlU7Q": "inherit",
                        "D9sVrBGMQoWCZvZTLFiemw": "inherit"
                      },
                      "idp": "acnuuf0eQK2a4qvxJe4mWQ"
                    },
                    "identity_data": {
                      "app_bundle": "",
                      "app_category": {},
                      "app_logo": "",
                      "bookmark_url": "https://sp.iamshowcase.com/ixs?idp=bd2628be266ce863f63d938b5aa628d35c85c948",
                      "cert": "",
                      "client_app_mode": 1,
                      "client_cert": "",
                      "cname": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "custom_tls_suite_name": null,
                      "default_tls_suite": true,
                      "description": "",
                      "dialin_server": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "dialin_sni": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "domain": 1,
                      "domain_suffix": "NOBQl7ETS8iP_7w63N8n4g",
                      "encr_algo": 1,
                      "etp_settings": {},
                      "host": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "name": "nesaasapp",
                      "oidc_settings": {},
                      "orig_encr_algo": 1,
                      "orig_tls": true,
                      "origin_host": null,
                      "origin_keepalive": 600,
                      "origin_port": 443,
                      "port": 443,
                      "saml_settings": [
                        {
                          "attrmap": [
                            {
                              "fmt": "basic",
                              "fname": "adminname",
                              "name": "name",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "unspecified",
                              "fname": "adminemail",
                              "name": "email",
                              "src": "user.email"
                            }
                          ],
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\">\n<md:IDPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n  <md:KeyDescriptor use=\"signing\">\n    <ds:KeyInfo>\n      <ds:X509Data> ... </ds:X509Certificate>\n      </ds:X509Data>\n    </ds:KeyInfo>\n  </md:KeyDescriptor>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n\n</md:IDPSSODescriptor>\n</md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA256",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                            "sign_key": "key ...",
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://sp.iamshowcase.com/acs",
                            "default_relay_state": "green",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "",
                            "entity_id": "IAMShowcase",
                            "force_auth": false,
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"IAMShowcase\">\n<md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n\n\n\n  <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n\n  <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://sp.iamshowcase.com/acs\" index=\"0\" isDefault=\"true\"/>\n\n</md:SPSSODescriptor>\n</md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "",
                            "slo_bind": "post",
                            "slo_req_verify": true,
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "subject": {
                            "fmt": "email",
                            "src": "user.email"
                          }
                        }
                      ],
                      "servers": [],
                      "sites": [
                        "-m8zyc_3Q6GP09tSwmNdHQ"
                      ],
                      "ssl_ca_cert": "",
                      "tunnel_internal_hosts": [],
                      "wsfed_settings": []
                    },
                    "location_data": {
                      "connector_data": {},
                      "pop_uuid_url": "LpeAuKXkEeOg_Q7rYYFrWw"
                    },
                    "names": {
                      "cert_name": "",
                      "connector_names": {},
                      "directory_names": {
                        "H2fcmydaTb6GRRDAwXVfrg": "Cloud Directory",
                        "NZJHqc-WRDS0FRLVVHEE7Q": "root.com"
                      },
                      "domain_suffix": "stage.akamai-access.com",
                      "group_names": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "skfgroup1",
                        "-nJlyMgJSIC4Odb_C725Bg": "ou_ougroup1",
                        "0Mu0N691QTi0RA4wS9WUpA": "Domain Admins",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "Domain Users",
                        "C5cuRmbZSuOWSt5WYWJ3jw": "Users",
                        "CFlmTq1hRZK0xj_TkrkxEw": "childgroup1",
                        "CXgBU8KKRSGU1gySx-2n2Q": "group_abhi",
                        "CXoHttcUSCGcAGtoiXlU7Q": "childgroup7",
                        "D9sVrBGMQoWCZvZTLFiemw": "Admins",
                        "JiNtM3t3TgCKJkfg11m9ew": "rootnew2",
                        "NOjlnMTBTfel1jrzzj-H0A": "ntlm",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "ou_shyrusou1",
                        "RdziUef7R_K4wGKzv3eK-Q": "employee",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "skfgroup2"
                      },
                      "idp_name": "IWA-IDP",
                      "pop_name": "DPOP-DPus-west-coast-1",
                      "ssl_ca_cert": ""
                    },
                    "service_data": [
                      {
                        "name": "ICAP Service",
                        "rules": [],
                        "service_type": 3,
                        "settings": [
                          {
                            "name": "ICAP Service_icap_file_size",
                            "setting_type": 1,
                            "value": "500M"
                          },
                          {
                            "name": "ICAP Service_icap_service",
                            "setting_type": 6,
                            "value": "sohaservice"
                          },
                          {
                            "name": "ICAP Service_icap_http_methods",
                            "setting_type": 3,
                            "value": "POST"
                          },
                          {
                            "name": "ICAP Service_icap_port",
                            "setting_type": 5,
                            "value": "1344"
                          }
                        ],
                        "status": 0
                      },
                      {
                        "name": "WAF",
                        "rules": [],
                        "service_type": 1,
                        "settings": [
                          {
                            "name": "WAF_illegal_resource_access",
                            "setting_type": 10,
                            "value": "On"
                          },
                          {
                            "name": "WAF_protocol_anomalies",
                            "setting_type": 6,
                            "value": "On"
                          },
                          {
                            "name": "WAF_php",
                            "setting_type": 3,
                            "value": "On"
                          }
                        ],
                        "status": 0
                      }
                    ],
                    "url_location_data": []
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application configuration versions.",
                  "properties": {
                    "cloud_deployed_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's deployment to the data path point of presence (DPOP).",
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's creation.",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The ID of the user who created the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_by_email": {
                      "description": "The email address of the user who created the application configuration version.",
                      "type": "string"
                    },
                    "deployed_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's deployment to connectors.",
                      "type": "string"
                    },
                    "deployment_started_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version deployment began.",
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of application configuration version.",
                      "type": "string"
                    },
                    "note": {
                      "description": "Custom text field for additional notes on the application configuration version.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The path for the unique application config version resource.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the application configuration version. Either `new`, `ready`, `invalidated`, or `archived`.",
                      "enum": [
                        "new",
                        "ready",
                        "invalidated",
                        "archived"
                      ],
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "version_settings_data": {
                      "additionalProperties": false,
                      "description": "App config version settings.",
                      "properties": {
                        "advanced_settings": {
                          "additionalProperties": false,
                          "description": "Application config version advanced settings.",
                          "properties": {
                            "acceleration": {
                              "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "allow_cors": {
                              "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "anonymous_server_conn_limit": {
                              "description": "The maximum number of concurrent anonymous server connections.",
                              "type": "string"
                            },
                            "anonymous_server_request_limit": {
                              "description": "The maximum number of concurrent anonymous server requests.",
                              "type": "string"
                            },
                            "app_auth": {
                              "description": "The application-facing authentication mechanism. Default is `none`.",
                              "type": "string"
                            },
                            "app_auth_domain": {
                              "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "app_client_cert_auth": {
                              "description": "Enables client certificate authentication. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "app_cookie_domain": {
                              "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "app_location": {
                              "description": "The application's location. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "app_server_read_timeout": {
                              "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                              "type": "string"
                            },
                            "authenticated_server_conn_limit": {
                              "description": "The maximum number of authenticated server connections allowed.",
                              "type": "string"
                            },
                            "authenticated_server_request_limit": {
                              "description": "The maximum number of authenticated server connections allowed.",
                              "type": "string"
                            },
                            "client_cert_auth": {
                              "description": "Enables client certificate authorization. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "client_cert_user_param": {
                              "description": "Relevant certificate parameters for client authentication.",
                              "type": "string"
                            },
                            "cookie_domain": {
                              "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                              "type": "string"
                            },
                            "cors_header_list": {
                              "default": "unbounded",
                              "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                              "type": "string"
                            },
                            "cors_max_age": {
                              "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                              "type": "string"
                            },
                            "cors_method_list": {
                              "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                              "type": "string"
                            },
                            "cors_origin_list": {
                              "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                              "type": "string"
                            },
                            "cors_support_credential": {
                              "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "custom_headers": {
                              "description": "Custom headers for application connections.",
                              "items": {
                                "nullable": true,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "domain_exception_list": {
                              "description": "A list of domains to except from content rewrite. ",
                              "type": "string"
                            },
                            "edge_authentication_enabled": {
                              "description": "Enables edge authentication for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "edge_cookie_key": {
                              "description": "The edge key to share with your ION configuration.",
                              "type": "string"
                            },
                            "external_cookie_domain": {
                              "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "force_mfa": {
                              "description": "Forces multi-factor authentication. Either `off` or `on`.",
                              "enum": [
                                "on",
                                "off"
                              ],
                              "type": "string"
                            },
                            "forward_ticket_granting_ticket": {
                              "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "g2o_enabled": {
                              "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "g2o_key": {
                              "description": "The G2O key to share with your ION configuration.",
                              "nullable": true,
                              "type": "string"
                            },
                            "g2o_nonce": {
                              "description": "The G2O nonce to share with your ION configuration.",
                              "nullable": true,
                              "type": "string"
                            },
                            "health_check_fall": {
                              "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                              "type": "string"
                            },
                            "health_check_http_host_header": {
                              "description": "The host header to use for HTTP health checks.",
                              "nullable": true,
                              "type": "string"
                            },
                            "health_check_http_url": {
                              "description": "The URL to use for HTTP health checks.",
                              "type": "string"
                            },
                            "health_check_http_version": {
                              "description": "The HTTP version to use for the health check.",
                              "type": "string"
                            },
                            "health_check_interval": {
                              "description": "The interval between successive heartbeats in seconds.",
                              "type": "string"
                            },
                            "health_check_rise": {
                              "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                              "type": "string"
                            },
                            "health_check_timeout": {
                              "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                              "type": "string"
                            },
                            "health_check_type": {
                              "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                              "enum": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7"
                              ],
                              "type": "string"
                            },
                            "hidden_app": {
                              "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "host_key": {
                              "description": "The host secret key.",
                              "nullable": true,
                              "type": "string"
                            },
                            "hsts_age": {
                              "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                              "type": "string"
                            },
                            "http_only_cookie": {
                              "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "https_sslv3": {
                              "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "idle_close_time_seconds": {
                              "description": "The number of seconds a session may remain idle before it's closed.",
                              "type": "string"
                            },
                            "idle_conn_ceil": {
                              "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                              "type": "string"
                            },
                            "idle_conn_floor": {
                              "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                              "type": "string"
                            },
                            "idle_conn_step": {
                              "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                              "type": "string"
                            },
                            "idp_idle_expiry": {
                              "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "idp_max_expiry": {
                              "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "ignore_bypass_mfa": {
                              "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "ignore_cname_resolution": {
                              "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "inject_ajax_javascript": {
                              "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "internal_host_port": {
                              "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                              "type": "string"
                            },
                            "internal_hostname": {
                              "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "ip_access_allow": {
                              "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "is_ssl_verification_enabled": {
                              "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "keepalive_connection_pool": {
                              "description": "The maximum number of connections allowed in the keepalive pool.",
                              "type": "string"
                            },
                            "keepalive_enable": {
                              "description": "Enables connection keepalives. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "keepalive_timeout": {
                              "description": "The keepalive timeout period in seconds.",
                              "type": "string"
                            },
                            "kerberos_negotiate_once": {
                              "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                              "type": "string"
                            },
                            "keyed_keepalive_enable": {
                              "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "keytab": {
                              "description": "A unique keytab for Kerberos delegation.",
                              "type": "string"
                            },
                            "load_balancing_metric": {
                              "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                              "enum": [
                                "round-robin",
                                "ip-hash"
                              ],
                              "type": "string"
                            },
                            "logging_enabled": {
                              "description": "Enables logging for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "login_timeout": {
                              "description": "The number of seconds before a login attempt times out.",
                              "type": "string"
                            },
                            "login_url": {
                              "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "logout_url": {
                              "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "mdc_enable": {
                              "description": "Enables multi-data center connections. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "mfa": {
                              "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                              "enum": [
                                "enable",
                                "disable",
                                "inherit"
                              ],
                              "type": "string"
                            },
                            "offload_onpremise_traffic": {
                              "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "pass_phrase": {
                              "description": "The passphrase for the certificate. ",
                              "nullable": true,
                              "type": "string"
                            },
                            "preauth_consent": {
                              "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "preauth_enforce_url": {
                              "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                              "type": "string"
                            },
                            "private_key": {
                              "description": "Private key for the certificate.",
                              "nullable": true,
                              "type": "string"
                            },
                            "proxy_buffer_size_kb": {
                              "description": "The size of the proxy's buffer, in kilobytes.",
                              "nullable": true,
                              "type": "string"
                            },
                            "proxy_disable_clipboard": {
                              "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "rate_limit": {
                              "description": "Enables rate limiting for the application. Either `on` or `off`.",
                              "enum": [
                                "on",
                                "off"
                              ],
                              "type": "string"
                            },
                            "rdp_initial_program": {
                              "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "rdp_legacy_mode": {
                              "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "rdp_remote_apps": {
                              "description": "Remote RDP applications. ",
                              "items": {
                                "nullable": true,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "rdp_tls1": {
                              "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "refresh_sticky_cookie": {
                              "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "remote_spark_audio": {
                              "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "remote_spark_disk": {
                              "description": "Name of the disk for Cisco Webex Spark application.",
                              "type": "string"
                            },
                            "remote_spark_mapClipboard": {
                              "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                              "enum": [
                                "on",
                                "off"
                              ],
                              "type": "string"
                            },
                            "remote_spark_mapDisk": {
                              "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "remote_spark_mapPrinter": {
                              "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "remote_spark_printer": {
                              "description": "Name of the printer for Cisco Webex Spark application.",
                              "type": "string"
                            },
                            "remote_spark_recording": {
                              "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "request_body_rewrite": {
                              "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "request_parameters": {
                              "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "saas_enabled": {
                              "description": "Enables SaaS for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "sentry_redirect_401": {
                              "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                              "type": "string"
                            },
                            "server_cert_validate": {
                              "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "server_request_burst": {
                              "description": "The server request threshold for burst monitoring.",
                              "type": "string"
                            },
                            "service_principle_name": {
                              "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "session_sticky": {
                              "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "session_sticky_cookie_maxage": {
                              "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                              "type": "string"
                            },
                            "session_sticky_server_cookie": {
                              "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                              "nullable": true,
                              "type": "string"
                            },
                            "single_host_content_rw": {
                              "description": "Enables single host content rewrite. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "single_host_cookie_domain": {
                              "description": "Enables single host cookie domains. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "single_host_enable": {
                              "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "single_host_fqdn": {
                              "description": "The single host fully qualified domain name used to host multiple applications.",
                              "type": "string"
                            },
                            "single_host_path": {
                              "description": "The single host path used to host multiple applications.",
                              "type": "string"
                            },
                            "sla_object_url": {
                              "description": "The SLA object URL to share with your ION configuration.",
                              "type": "string"
                            },
                            "spdy_enabled": {
                              "description": "Enables SPDY traffic management. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "ssh_audit_enabled": {
                              "description": "Enables ssh session auditing. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "sso": {
                              "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "sticky_agent": {
                              "description": "Enables connector persistence for connections. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "user_name": {
                              "description": "The username to use for application authentication. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "wapp_auth": {
                              "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                              "enum": [
                                "form",
                                "basic",
                                "basic+cookie",
                                "certificate_only"
                              ],
                              "type": "string"
                            },
                            "websocket_enabled": {
                              "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "wildcard_internal_hostname": {
                              "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                          }
                        },
                        "authentication": {
                          "additionalProperties": false,
                          "description": "App config version authentication settings.",
                          "properties": {
                            "auth_enabled": {
                              "description": "Enables authentication for this app config version.",
                              "type": "boolean"
                            },
                            "directories": {
                              "description": "The unique ID of the directories used for authentication.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "groups": {
                              "additionalProperties": {
                                "description": "Group IDs and their authentication settings. ",
                                "type": "string"
                              },
                              "description": "App config version groups.",
                              "type": "object"
                            },
                            "idp": {
                              "description": "The unique ID of the IDP used for authentication.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "identity_data": {
                          "additionalProperties": false,
                          "description": "The application identity settings.",
                          "properties": {
                            "app_bundle": {
                              "description": "The application bundle name.",
                              "type": "string"
                            },
                            "app_category": {
                              "additionalProperties": false,
                              "description": "Application category settings.",
                              "properties": {
                                "name": {
                                  "description": "The name of the category.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The UUID of the category.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "app_logo": {
                              "description": "The application logo URL.",
                              "type": "string"
                            },
                            "bookmark_url": {
                              "description": "The application URL to bookmark.",
                              "type": "string"
                            },
                            "cert": {
                              "description": "The certificate contents.",
                              "nullable": true,
                              "type": "string"
                            },
                            "client_app_mode": {
                              "description": "The client application mode. ",
                              "type": "integer"
                            },
                            "client_cert": {
                              "description": "The client certificate. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "cname": {
                              "description": "The application's CNAME mapping.",
                              "type": "string"
                            },
                            "custom_tls_suite_name": {
                              "description": "The custom TLS suite name. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_tls_suite": {
                              "description": "Whether the application uses the default TLS suite.",
                              "type": "boolean"
                            },
                            "description": {
                              "description": "The application description.",
                              "type": "string"
                            },
                            "dialin_server": {
                              "description": "The dialin server hostname.",
                              "type": "string"
                            },
                            "dialin_sni": {
                              "description": "The dialin server SNI.",
                              "type": "string"
                            },
                            "domain": {
                              "description": "The domain type. Defaults to `1`.",
                              "type": "integer"
                            },
                            "domain_suffix": {
                              "description": "The domain suffix to add to the configured hostname.",
                              "type": "string"
                            },
                            "encr_algo": {
                              "description": "The encryption algorithm.",
                              "type": "integer"
                            },
                            "etp_settings": {
                              "additionalProperties": false,
                              "description": "OpenID Connect (OIDC) configuration settings for an application configuration.",
                              "nullable": true,
                              "properties": {
                                "authorization_endpoint": {
                                  "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "certs_uri": {
                                  "description": "The URI of the relaying party's CA certificate.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "check_session_iframe": {
                                  "description": "The iframe URL used to check session status.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "discovery_url": {
                                  "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "end_session_endpoint": {
                                  "description": "The OIDC endpoint that triggers single sign out.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "jwks_uri": {
                                  "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "openid_metadata": {
                                  "description": "Metadata that describes the OIDC provider's configuration.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "token_endpoint": {
                                  "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "userinfo_endpoint": {
                                  "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/app-oidc-settings.yaml"
                              }
                            },
                            "host": {
                              "description": "The hostname.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Application name.",
                              "type": "string"
                            },
                            "oidc_settings": {
                              "additionalProperties": false,
                              "description": "OpenID Connect (OIDC) configuration settings for an application configuration.",
                              "nullable": true,
                              "properties": {
                                "authorization_endpoint": {
                                  "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "certs_uri": {
                                  "description": "The URI of the relaying party's CA certificate.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "check_session_iframe": {
                                  "description": "The iframe URL used to check session status.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "discovery_url": {
                                  "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "end_session_endpoint": {
                                  "description": "The OIDC endpoint that triggers single sign out.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "jwks_uri": {
                                  "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "openid_metadata": {
                                  "description": "Metadata that describes the OIDC provider's configuration.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "token_endpoint": {
                                  "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "userinfo_endpoint": {
                                  "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/app-oidc-settings.yaml"
                              }
                            },
                            "orig_encr_algo": {
                              "description": "The origin's encryption algorithm.",
                              "type": "integer"
                            },
                            "orig_tls": {
                              "description": "Whether the origin server uses TLS. ",
                              "type": "boolean"
                            },
                            "origin_host": {
                              "description": "The origin host IP address or name.",
                              "nullable": true,
                              "type": "string"
                            },
                            "origin_keepalive": {
                              "description": "The origin's keepalive timeout in seconds.",
                              "type": "integer"
                            },
                            "origin_port": {
                              "description": "The origin port number.",
                              "type": "integer"
                            },
                            "port": {
                              "description": "The local port number.",
                              "type": "integer"
                            },
                            "saml_settings": {
                              "description": "SAML settings.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "attrmap": {
                                    "description": "User attribute mapping.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "fmt": {
                                          "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                          "enum": [
                                            "email",
                                            "basic",
                                            "unspecified",
                                            "persistent",
                                            "transient"
                                          ],
                                          "type": "string"
                                        },
                                        "fname": {
                                          "description": "The format name.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The attribute name.",
                                          "type": "string"
                                        },
                                        "src": {
                                          "description": "The source of the subject.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "idp": {
                                    "additionalProperties": false,
                                    "description": "SAML IdP settings.",
                                    "properties": {
                                      "ecp_enable": {
                                        "description": "Enables enhanced client or proxy.",
                                        "type": "boolean"
                                      },
                                      "ecp_resp_signature": {
                                        "description": "The ECP response signature.",
                                        "type": "boolean"
                                      },
                                      "entity_id": {
                                        "description": "The IdP's SAML entity URL.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "SAML metadata file contents.",
                                        "type": "string"
                                      },
                                      "resp_bind": {
                                        "description": "The response binding for HTTP requests.",
                                        "type": "string"
                                      },
                                      "self_signed": {
                                        "description": "Whether the certificate is self-signed.",
                                        "type": "boolean"
                                      },
                                      "sign_algo": {
                                        "description": "The certificate signing algorithm.",
                                        "type": "string"
                                      },
                                      "sign_cert": {
                                        "description": "The self-signed certificate.",
                                        "type": "string"
                                      },
                                      "sign_key": {
                                        "description": "The certificate signing key.",
                                        "type": "string"
                                      },
                                      "slo_url": {
                                        "description": "The single logout URL.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sp": {
                                    "additionalProperties": false,
                                    "description": "SAML service provider settings.",
                                    "properties": {
                                      "acs_url": {
                                        "description": "The SAML assertion consumer service URL.",
                                        "type": "string"
                                      },
                                      "default_relay_state": {
                                        "description": "A default status value passed between the IdP and the service provider.",
                                        "type": "string"
                                      },
                                      "dst_url": {
                                        "description": "The destination URL for users to access the application.",
                                        "type": "string"
                                      },
                                      "encr_algo": {
                                        "description": "The response encryption algorithm.",
                                        "type": "string"
                                      },
                                      "encr_cert": {
                                        "description": "The encryption certificate.",
                                        "type": "string"
                                      },
                                      "entity_id": {
                                        "description": "The service provider's SAML entity URL.",
                                        "type": "string"
                                      },
                                      "force_auth": {
                                        "description": "Whether to force authentication. ",
                                        "type": "boolean"
                                      },
                                      "logout_bind": {
                                        "description": "The request binding for single logout requests.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "SAML metadata file contents.",
                                        "type": "string"
                                      },
                                      "req_bind": {
                                        "description": "The request binding for single logout requests.",
                                        "type": "string"
                                      },
                                      "req_verify": {
                                        "description": "Whether to verify requests.",
                                        "type": "boolean"
                                      },
                                      "resp_encr": {
                                        "description": "Whether to encrypt requests. ",
                                        "type": "boolean"
                                      },
                                      "sign_cert": {
                                        "description": "The signing certificate.",
                                        "type": "string"
                                      },
                                      "slo_bind": {
                                        "description": "The response binding for single logout requests.",
                                        "type": "string"
                                      },
                                      "slo_req_verify": {
                                        "description": "Whether to verify single logout requests.",
                                        "type": "boolean"
                                      },
                                      "slo_url": {
                                        "description": "The single logout URL.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "subject": {
                                    "additionalProperties": false,
                                    "description": "Specifies the subject settings for the IdP configuration.",
                                    "properties": {
                                      "fmt": {
                                        "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                        "enum": [
                                          "email",
                                          "basic",
                                          "unspecified",
                                          "persistent",
                                          "transient"
                                        ],
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the subject.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "servers": {
                              "description": "Application identity server properties.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "orig_tls": {
                                    "description": "Whether the origin host uses TLS encryption.",
                                    "type": "boolean"
                                  },
                                  "origin_host": {
                                    "description": "The origin host IP address.",
                                    "type": "string"
                                  },
                                  "origin_port": {
                                    "description": "The origin host port number.",
                                    "type": "integer"
                                  },
                                  "origin_protocol": {
                                    "description": "The origin host protocol. ",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "sites": {
                              "description": "Site IDs for the application.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ssl_ca_cert": {
                              "description": "The SSL CA-signed certificate. ",
                              "type": "string"
                            },
                            "tunnel_internal_hosts": {
                              "description": "THe internal hosts to allow tunnel application access.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "wsfed_settings": {
                              "description": "[Web Services Federation](https://techdocs.akamai.com/eaa-api/reference/https://techdocs.akamai.com/eaa/docs/web-services-federation) settings.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-identity-data.yaml"
                          }
                        },
                        "location_data": {
                          "additionalProperties": false,
                          "description": "App config version location data.",
                          "properties": {
                            "connector_data": {
                              "description": "Connector data for the application.",
                              "type": "object"
                            },
                            "pop_uuid_url": {
                              "description": "Unique ID of the POP the application uses.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "names": {
                          "additionalProperties": false,
                          "description": "Application names configuration.",
                          "properties": {
                            "cert_name": {
                              "description": "A descriptive name for the certificate.",
                              "type": "string"
                            },
                            "connector_names": {
                              "description": "The connector names.",
                              "type": "object"
                            },
                            "directory_names": {
                              "additionalProperties": {
                                "description": "Directory ID and name pairings.",
                                "type": "string"
                              },
                              "description": "Directory IDs and their names. ",
                              "type": "object"
                            },
                            "domain_suffix": {
                              "description": "The suffix to add to all hostnames.",
                              "type": "string"
                            },
                            "group_names": {
                              "additionalProperties": {
                                "description": "Group ID and name pairings.",
                                "type": "string"
                              },
                              "description": "Group IDs and their names. ",
                              "type": "object"
                            },
                            "idp_name": {
                              "description": "The IdP name.",
                              "type": "string"
                            },
                            "pop_name": {
                              "description": "The POP name.",
                              "type": "string"
                            },
                            "ssl_ca_cert": {
                              "description": "The CA-signed SSL certificate contents.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-names.yaml"
                          }
                        },
                        "service_data": {
                          "description": "The application service settings. ",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "A unique name for the service.",
                                "type": "string"
                              },
                              "rules": {
                                "description": "The risk assessment rules applied to the service.",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "service_type": {
                                "default": 1,
                                "description": "The service type. Either `1` for WAF, `2` for Acceleration, `3` for ICAP, `4` for IPS, `5` for SLB, `6` for access control, `7` for rewrite, or `8` for group rewrite.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ],
                                "type": "integer"
                              },
                              "settings": {
                                "description": "Service settings.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "name": {
                                      "description": "The service setting name.",
                                      "type": "string"
                                    },
                                    "setting_type": {
                                      "description": "The service setting type. ",
                                      "type": "integer"
                                    },
                                    "value": {
                                      "description": "The service setting value.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The service status. Either `0` for off or `1` for on. ",
                                "enum": [
                                  0,
                                  1
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-service-data.yaml"
                          }
                        },
                        "url_location_data": {
                          "description": "The application location data, including the POP region and connector.",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "cloud_deployed_at",
                    "created_by",
                    "created_by_email",
                    "deployed_at",
                    "deployment_started_at",
                    "name",
                    "note",
                    "status",
                    "uuid_url",
                    "version"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/appconfigversion.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an application version",
        "tags": [
          "Versions"
        ]
      },
      "put": {
        "description": "Copies the selected application version to a new draft application.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app-version"
        },
        "operationId": "put-app-version",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cloud_deployed_at": null,
                  "created_at": "2020-12-14T12:59:26.265716",
                  "created_by": "663506e3-90c1-49dd-9a54-6d536f2e9a8b",
                  "created_by_email": "prasad@akamai.com",
                  "deployed_at": "2020-12-14T13:00:40.098836",
                  "deployment_started_at": null,
                  "modified_at": "2020-12-14T13:00:40.098937",
                  "name": "",
                  "note": "",
                  "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/HaYkWaXESw2Hb2N6VevZmA",
                  "status": "archived",
                  "uuid_url": "HaYkWaXESw2Hb2N6VevZmA",
                  "version": "1",
                  "version_settings_data": {
                    "advanced_settings": {
                      "acceleration": "false",
                      "allow_cors": "false",
                      "anonymous_server_conn_limit": "50",
                      "anonymous_server_request_limit": "100",
                      "app_auth": "none",
                      "app_auth_domain": null,
                      "app_client_cert_auth": "false",
                      "app_cookie_domain": null,
                      "app_location": null,
                      "app_server_read_timeout": "60",
                      "authenticated_server_conn_limit": "50",
                      "authenticated_server_request_limit": "100",
                      "client_cert_auth": "false",
                      "client_cert_user_param": "",
                      "cors_header_list": "unbounded",
                      "cors_max_age": "86400",
                      "cors_method_list": "unbounded",
                      "cors_origin_list": "unbounded",
                      "cors_support_credential": "on",
                      "domain_exception_list": "",
                      "edge_authentication_enabled": "false",
                      "edge_cookie_key": "",
                      "external_cookie_domain": null,
                      "force_mfa": "off",
                      "forward_ticket_granting_ticket": "false",
                      "g2o_enabled": "false",
                      "g2o_key": null,
                      "g2o_nonce": null,
                      "health_check_fall": "3",
                      "health_check_http_host_header": null,
                      "health_check_http_url": "/",
                      "health_check_http_version": "1.1",
                      "health_check_interval": "30000",
                      "health_check_rise": "2",
                      "health_check_timeout": "50000",
                      "health_check_type": "0",
                      "hidden_app": "false",
                      "host_key": null,
                      "hsts_age": "15552000",
                      "http_only_cookie": "true",
                      "https_sslv3": "false",
                      "idle_close_time_seconds": "1200",
                      "idle_conn_ceil": "75",
                      "idle_conn_floor": "50",
                      "idle_conn_step": "10",
                      "idp_idle_expiry": null,
                      "idp_max_expiry": null,
                      "ignore_bypass_mfa": "off",
                      "ignore_cname_resolution": "false",
                      "inject_ajax_javascript": "off",
                      "internal_host_port": "0",
                      "internal_hostname": null,
                      "ip_access_allow": "false",
                      "is_ssl_verification_enabled": "false",
                      "keepalive_connection_pool": "50",
                      "keepalive_enable": "true",
                      "keepalive_timeout": "3",
                      "kerberos_negotiate_once": "off",
                      "keyed_keepalive_enable": "false",
                      "keytab": "",
                      "load_balancing_metric": "round-robin",
                      "logging_enabled": "true",
                      "login_timeout": "5",
                      "login_url": null,
                      "logout_url": null,
                      "mdc_enable": "false",
                      "mfa": "inherit",
                      "offload_onpremise_traffic": "false",
                      "pass_phrase": null,
                      "preauth_consent": "false",
                      "preauth_enforce_url": "",
                      "private_key": null,
                      "proxy_buffer_size_kb": "4",
                      "proxy_disable_clipboard": "false",
                      "rate_limit": "on",
                      "rdp_initial_program": null,
                      "rdp_legacy_mode": "false",
                      "rdp_remote_apps": [],
                      "rdp_tls1": "false",
                      "refresh_sticky_cookie": "on",
                      "remote_spark_audio": "true",
                      "remote_spark_disk": "LOCALSHARE",
                      "remote_spark_mapClipboard": "on",
                      "remote_spark_mapDisk": "true",
                      "remote_spark_mapPrinter": "true",
                      "remote_spark_printer": "LOCALPRINTER",
                      "remote_spark_recording": "false",
                      "request_body_rewrite": "false",
                      "request_parameters": null,
                      "saas_enabled": "false",
                      "sentry_redirect_401": "off",
                      "server_cert_validate": "true",
                      "server_request_burst": "100",
                      "service_principle_name": null,
                      "session_sticky": null,
                      "session_sticky_cookie_maxage": "0",
                      "session_sticky_server_cookie": null,
                      "single_host_content_rw": "false",
                      "single_host_cookie_domain": "false",
                      "single_host_enable": "false",
                      "single_host_fqdn": "",
                      "single_host_path": "",
                      "sla_object_url": "____spx/ionpage",
                      "spdy_enabled": "true",
                      "ssh_audit_enabled": "false",
                      "sso": "true",
                      "sticky_agent": "false",
                      "user_name": null,
                      "wapp_auth": "form",
                      "websocket_enabled": "false",
                      "wildcard_internal_hostname": "false"
                    },
                    "authentication": {
                      "auth_enabled": true,
                      "directories": [
                        "NZJHqc-WRDS0FRLVVHEE7Q"
                      ],
                      "groups": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "inherit",
                        "-nJlyMgJSIC4Odb_C725Bg": "inherit",
                        "0Mu0N691QTi0RA4wS9WUpA": "inherit",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "inherit",
                        "CFlmTq1hRZK0xj_TkrkxEw": "inherit",
                        "CXgBU8KKRSGU1gySx-2n2Q": "inherit",
                        "CXoHttcUSCGcAGtoiXlU7Q": "inherit",
                        "JiNtM3t3TgCKJkfg11m9ew": "inherit",
                        "NOjlnMTBTfel1jrzzj-H0A": "inherit",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "inherit",
                        "RdziUef7R_K4wGKzv3eK-Q": "inherit",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "inherit",
                        "Tv9IHphaTVaTYkwwl5LQXg": "inherit",
                        "XNoiLOYPQeC2S1muQ1Rfyw": "inherit",
                        "a-RkdF7-TxSLd8M__YKVMg": "inherit",
                        "aJHJKn7ATtyWD99MvoZnIw": "inherit",
                        "aa559LPST7Owp5hmA4N5uQ": "inherit",
                        "cWu-1IsqR7e7kdTc3MeVWA": "inherit",
                        "fbmVCQU7RjKwrzkTYBpJUg": "inherit",
                        "hBE2Ab_URIy128lsWcYoNw": "inherit",
                        "nm1F--vuTLGv63Vah1ZDIg": "inherit",
                        "q--YM7UJSS2oG6AOgrn7Nw": "inherit",
                        "rdLC9qnASCij8Rcog5Ok7Q": "inherit",
                        "sl00LSdTTkCQpw07FMne4g": "inherit",
                        "tKOU2uZ_QuyLUUAf8ry5Kw": "inherit",
                        "ulokdoN2ROO14IkBhwy4og": "inherit",
                        "yKvgxMCjTV6RzCw7kOTqYA": "inherit"
                      },
                      "idp": "acnuuf0eQK2a4qvxJe4mWQ"
                    },
                    "identity_data": {
                      "app_bundle": "",
                      "app_category": {},
                      "app_logo": "",
                      "bookmark_url": "https://sp.iamshowcase.com/ixs?idp=bd2628be266ce863f63d938b5aa628d35c85c948",
                      "cert": "",
                      "client_app_mode": 1,
                      "client_cert": "",
                      "cname": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "custom_tls_suite_name": null,
                      "default_tls_suite": true,
                      "description": "",
                      "dialin_server": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "dialin_sni": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "domain": 1,
                      "domain_suffix": "NOBQl7ETS8iP_7w63N8n4g",
                      "encr_algo": 1,
                      "etp_settings": {},
                      "host": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "name": "nesaasapp",
                      "oidc_settings": {},
                      "orig_encr_algo": 1,
                      "orig_tls": true,
                      "origin_host": null,
                      "origin_keepalive": 600,
                      "origin_port": 443,
                      "port": 443,
                      "saml_settings": [
                        {
                          "attrmap": [
                            {
                              "fmt": "basic",
                              "fname": "name",
                              "name": "name",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "unspecified",
                              "fname": "email",
                              "name": "email",
                              "src": "user.email"
                            }
                          ],
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso",
                            "metadata": "<?xml version\"1.0\"?>\n <ds:X509Certificate>\n   </ds:X509Data>\n    </ds:KeyInfo>\n  </md:KeyDescriptor>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n\n</md:IDPSSODescriptor>\n</md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA256",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                            "sign_key": "QXNrcE8zazVXcSto ... QmdVbXhkU29zUT09",
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://sp.iamshowcase.com/acs",
                            "default_relay_state": "green",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "",
                            "entity_id": "IAMShowcase",
                            "force_auth": false,
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"IAMShowcase\">\n<md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n\n\n\n  <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n\n  <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://sp.iamshowcase.com/acs\" index=\"0\" isDefault=\"true\"/>\n\n</md:SPSSODescriptor>\n</md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "",
                            "slo_bind": "post",
                            "slo_req_verify": true,
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "subject": {
                            "fmt": "email",
                            "src": "user.email"
                          }
                        }
                      ],
                      "servers": [],
                      "sites": [
                        "-m8zyc_3Q6GP09tSwmNdHQ"
                      ],
                      "ssl_ca_cert": "",
                      "tunnel_internal_hosts": [],
                      "wsfed_settings": []
                    },
                    "location_data": {
                      "connector_data": {},
                      "pop_uuid_url": "LpeAuKXkEeOg_Q7rYYFrWw"
                    },
                    "names": {
                      "cert_name": "",
                      "connector_names": {},
                      "directory_names": {
                        "NZJHqc-WRDS0FRLVVHEE7Q": "root.com"
                      },
                      "domain_suffix": "stage.akamai-access.com",
                      "group_names": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "skfgroup1",
                        "-nJlyMgJSIC4Odb_C725Bg": "ou_users",
                        "0Mu0N691QTi0RA4wS9WUpA": "Domain Admins",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "Domain Users",
                        "CFlmTq1hRZK0xj_TkrkxEw": "support",
                        "CXgBU8KKRSGU1gySx-2n2Q": "group_abhi",
                        "CXoHttcUSCGcAGtoiXlU7Q": "sso_group",
                        "JiNtM3t3TgCKJkfg11m9ew": "rootnew2",
                        "NOjlnMTBTfel1jrzzj-H0A": "ntlm",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "ou_shyrusou1",
                        "RdziUef7R_K4wGKzv3eK-Q": "employee",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "skfgroup2",
                        "Tv9IHphaTVaTYkwwl5LQXg": "IT_inherit",
                        "XNoiLOYPQeC2S1muQ1Rfyw": "ou_EMEA",
                        "a-RkdF7-TxSLd8M__YKVMg": "matching",
                        "aJHJKn7ATtyWD99MvoZnIw": "HR_subgroup",
                        "aa559LPST7Owp5hmA4N5uQ": "NAmerica",
                        "cWu-1IsqR7e7kdTc3MeVWA": "APAC_users",
                        "fbmVCQU7RjKwrzkTYBpJUg": "ou_childou1",
                        "hBE2Ab_URIy128lsWcYoNw": "root_users",
                        "nm1F--vuTLGv63Vah1ZDIg": "favorites",
                        "q--YM7UJSS2oG6AOgrn7Nw": "git_users",
                        "rdLC9qnASCij8Rcog5Ok7Q": "rootbulk",
                        "sl00LSdTTkCQpw07FMne4g": "IT_group",
                        "tKOU2uZ_QuyLUUAf8ry5Kw": "shyrusoverlay1",
                        "ulokdoN2ROO14IkBhwy4og": "beta",
                        "yKvgxMCjTV6RzCw7kOTqYA": "admins"
                      },
                      "idp_name": "IWA-IDP",
                      "pop_name": "DPOP-DPus-west-coast-1",
                      "ssl_ca_cert": ""
                    },
                    "service_data": [
                      {
                        "name": "ICAP Service",
                        "rules": [],
                        "service_type": 3,
                        "settings": [
                          {
                            "name": "ICAP Service_icap_file_size",
                            "setting_type": 1,
                            "value": "500M"
                          },
                          {
                            "name": "ICAP Service_icap_port",
                            "setting_type": 5,
                            "value": "1344"
                          }
                        ],
                        "status": 0
                      },
                      {
                        "name": "WAF",
                        "rules": [],
                        "service_type": 1,
                        "settings": [
                          {
                            "name": "WAF_xss_attack",
                            "setting_type": 12,
                            "value": "Off"
                          },
                          {
                            "name": "WAF_illegal_resource_access",
                            "setting_type": 10,
                            "value": "Off"
                          },
                          {
                            "name": "WAF_protocol_anomalies",
                            "setting_type": 6,
                            "value": "Off"
                          },
                          {
                            "name": "WAF_php",
                            "setting_type": 3,
                            "value": "Off"
                          }
                        ],
                        "status": 0
                      },
                      {
                        "name": "Acceleration",
                        "rules": [],
                        "service_type": 2,
                        "settings": [
                          {
                            "name": "Acceleration_compression",
                            "setting_type": 1,
                            "value": "on"
                          }
                        ],
                        "status": 1
                      }
                    ],
                    "url_location_data": []
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application configuration versions.",
                  "properties": {
                    "cloud_deployed_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's deployment to the data path point of presence (DPOP).",
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's creation.",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The ID of the user who created the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_by_email": {
                      "description": "The email address of the user who created the application configuration version.",
                      "type": "string"
                    },
                    "deployed_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's deployment to connectors.",
                      "type": "string"
                    },
                    "deployment_started_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version deployment began.",
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of application configuration version.",
                      "type": "string"
                    },
                    "note": {
                      "description": "Custom text field for additional notes on the application configuration version.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The path for the unique application config version resource.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the application configuration version. Either `new`, `ready`, `invalidated`, or `archived`.",
                      "enum": [
                        "new",
                        "ready",
                        "invalidated",
                        "archived"
                      ],
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "version_settings_data": {
                      "additionalProperties": false,
                      "description": "App config version settings.",
                      "properties": {
                        "advanced_settings": {
                          "additionalProperties": false,
                          "description": "Application config version advanced settings.",
                          "properties": {
                            "acceleration": {
                              "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "allow_cors": {
                              "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "anonymous_server_conn_limit": {
                              "description": "The maximum number of concurrent anonymous server connections.",
                              "type": "string"
                            },
                            "anonymous_server_request_limit": {
                              "description": "The maximum number of concurrent anonymous server requests.",
                              "type": "string"
                            },
                            "app_auth": {
                              "description": "The application-facing authentication mechanism. Default is `none`.",
                              "type": "string"
                            },
                            "app_auth_domain": {
                              "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "app_client_cert_auth": {
                              "description": "Enables client certificate authentication. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "app_cookie_domain": {
                              "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "app_location": {
                              "description": "The application's location. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "app_server_read_timeout": {
                              "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                              "type": "string"
                            },
                            "authenticated_server_conn_limit": {
                              "description": "The maximum number of authenticated server connections allowed.",
                              "type": "string"
                            },
                            "authenticated_server_request_limit": {
                              "description": "The maximum number of authenticated server connections allowed.",
                              "type": "string"
                            },
                            "client_cert_auth": {
                              "description": "Enables client certificate authorization. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "client_cert_user_param": {
                              "description": "Relevant certificate parameters for client authentication.",
                              "type": "string"
                            },
                            "cookie_domain": {
                              "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                              "type": "string"
                            },
                            "cors_header_list": {
                              "default": "unbounded",
                              "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                              "type": "string"
                            },
                            "cors_max_age": {
                              "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                              "type": "string"
                            },
                            "cors_method_list": {
                              "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                              "type": "string"
                            },
                            "cors_origin_list": {
                              "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                              "type": "string"
                            },
                            "cors_support_credential": {
                              "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "custom_headers": {
                              "description": "Custom headers for application connections.",
                              "items": {
                                "nullable": true,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "domain_exception_list": {
                              "description": "A list of domains to except from content rewrite. ",
                              "type": "string"
                            },
                            "edge_authentication_enabled": {
                              "description": "Enables edge authentication for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "edge_cookie_key": {
                              "description": "The edge key to share with your ION configuration.",
                              "type": "string"
                            },
                            "external_cookie_domain": {
                              "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "force_mfa": {
                              "description": "Forces multi-factor authentication. Either `off` or `on`.",
                              "enum": [
                                "on",
                                "off"
                              ],
                              "type": "string"
                            },
                            "forward_ticket_granting_ticket": {
                              "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "g2o_enabled": {
                              "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "g2o_key": {
                              "description": "The G2O key to share with your ION configuration.",
                              "nullable": true,
                              "type": "string"
                            },
                            "g2o_nonce": {
                              "description": "The G2O nonce to share with your ION configuration.",
                              "nullable": true,
                              "type": "string"
                            },
                            "health_check_fall": {
                              "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                              "type": "string"
                            },
                            "health_check_http_host_header": {
                              "description": "The host header to use for HTTP health checks.",
                              "nullable": true,
                              "type": "string"
                            },
                            "health_check_http_url": {
                              "description": "The URL to use for HTTP health checks.",
                              "type": "string"
                            },
                            "health_check_http_version": {
                              "description": "The HTTP version to use for the health check.",
                              "type": "string"
                            },
                            "health_check_interval": {
                              "description": "The interval between successive heartbeats in seconds.",
                              "type": "string"
                            },
                            "health_check_rise": {
                              "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                              "type": "string"
                            },
                            "health_check_timeout": {
                              "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                              "type": "string"
                            },
                            "health_check_type": {
                              "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                              "enum": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7"
                              ],
                              "type": "string"
                            },
                            "hidden_app": {
                              "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "host_key": {
                              "description": "The host secret key.",
                              "nullable": true,
                              "type": "string"
                            },
                            "hsts_age": {
                              "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                              "type": "string"
                            },
                            "http_only_cookie": {
                              "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "https_sslv3": {
                              "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "idle_close_time_seconds": {
                              "description": "The number of seconds a session may remain idle before it's closed.",
                              "type": "string"
                            },
                            "idle_conn_ceil": {
                              "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                              "type": "string"
                            },
                            "idle_conn_floor": {
                              "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                              "type": "string"
                            },
                            "idle_conn_step": {
                              "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                              "type": "string"
                            },
                            "idp_idle_expiry": {
                              "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "idp_max_expiry": {
                              "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                              "nullable": true,
                              "type": "string"
                            },
                            "ignore_bypass_mfa": {
                              "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "ignore_cname_resolution": {
                              "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "inject_ajax_javascript": {
                              "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "internal_host_port": {
                              "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                              "type": "string"
                            },
                            "internal_hostname": {
                              "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "ip_access_allow": {
                              "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "is_ssl_verification_enabled": {
                              "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "keepalive_connection_pool": {
                              "description": "The maximum number of connections allowed in the keepalive pool.",
                              "type": "string"
                            },
                            "keepalive_enable": {
                              "description": "Enables connection keepalives. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "keepalive_timeout": {
                              "description": "The keepalive timeout period in seconds.",
                              "type": "string"
                            },
                            "kerberos_negotiate_once": {
                              "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                              "type": "string"
                            },
                            "keyed_keepalive_enable": {
                              "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "keytab": {
                              "description": "A unique keytab for Kerberos delegation.",
                              "type": "string"
                            },
                            "load_balancing_metric": {
                              "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                              "enum": [
                                "round-robin",
                                "ip-hash"
                              ],
                              "type": "string"
                            },
                            "logging_enabled": {
                              "description": "Enables logging for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "login_timeout": {
                              "description": "The number of seconds before a login attempt times out.",
                              "type": "string"
                            },
                            "login_url": {
                              "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "logout_url": {
                              "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "mdc_enable": {
                              "description": "Enables multi-data center connections. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "mfa": {
                              "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                              "enum": [
                                "enable",
                                "disable",
                                "inherit"
                              ],
                              "type": "string"
                            },
                            "offload_onpremise_traffic": {
                              "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "pass_phrase": {
                              "description": "The passphrase for the certificate. ",
                              "nullable": true,
                              "type": "string"
                            },
                            "preauth_consent": {
                              "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "preauth_enforce_url": {
                              "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                              "type": "string"
                            },
                            "private_key": {
                              "description": "Private key for the certificate.",
                              "nullable": true,
                              "type": "string"
                            },
                            "proxy_buffer_size_kb": {
                              "description": "The size of the proxy's buffer, in kilobytes.",
                              "nullable": true,
                              "type": "string"
                            },
                            "proxy_disable_clipboard": {
                              "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "rate_limit": {
                              "description": "Enables rate limiting for the application. Either `on` or `off`.",
                              "enum": [
                                "on",
                                "off"
                              ],
                              "type": "string"
                            },
                            "rdp_initial_program": {
                              "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "rdp_legacy_mode": {
                              "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "rdp_remote_apps": {
                              "description": "Remote RDP applications. ",
                              "items": {
                                "nullable": true,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "rdp_tls1": {
                              "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "refresh_sticky_cookie": {
                              "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                              "enum": [
                                "off",
                                "on"
                              ],
                              "type": "string"
                            },
                            "remote_spark_audio": {
                              "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "remote_spark_disk": {
                              "description": "Name of the disk for Cisco Webex Spark application.",
                              "type": "string"
                            },
                            "remote_spark_mapClipboard": {
                              "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                              "enum": [
                                "on",
                                "off"
                              ],
                              "type": "string"
                            },
                            "remote_spark_mapDisk": {
                              "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "remote_spark_mapPrinter": {
                              "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "remote_spark_printer": {
                              "description": "Name of the printer for Cisco Webex Spark application.",
                              "type": "string"
                            },
                            "remote_spark_recording": {
                              "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "request_body_rewrite": {
                              "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "request_parameters": {
                              "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "saas_enabled": {
                              "description": "Enables SaaS for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "sentry_redirect_401": {
                              "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                              "type": "string"
                            },
                            "server_cert_validate": {
                              "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "server_request_burst": {
                              "description": "The server request threshold for burst monitoring.",
                              "type": "string"
                            },
                            "service_principle_name": {
                              "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "session_sticky": {
                              "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "session_sticky_cookie_maxage": {
                              "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                              "type": "string"
                            },
                            "session_sticky_server_cookie": {
                              "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                              "nullable": true,
                              "type": "string"
                            },
                            "single_host_content_rw": {
                              "description": "Enables single host content rewrite. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "single_host_cookie_domain": {
                              "description": "Enables single host cookie domains. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "single_host_enable": {
                              "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "single_host_fqdn": {
                              "description": "The single host fully qualified domain name used to host multiple applications.",
                              "type": "string"
                            },
                            "single_host_path": {
                              "description": "The single host path used to host multiple applications.",
                              "type": "string"
                            },
                            "sla_object_url": {
                              "description": "The SLA object URL to share with your ION configuration.",
                              "type": "string"
                            },
                            "spdy_enabled": {
                              "description": "Enables SPDY traffic management. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "ssh_audit_enabled": {
                              "description": "Enables ssh session auditing. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "sso": {
                              "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "sticky_agent": {
                              "description": "Enables connector persistence for connections. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "user_name": {
                              "description": "The username to use for application authentication. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "wapp_auth": {
                              "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                              "enum": [
                                "form",
                                "basic",
                                "basic+cookie",
                                "certificate_only"
                              ],
                              "type": "string"
                            },
                            "websocket_enabled": {
                              "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            },
                            "wildcard_internal_hostname": {
                              "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                          }
                        },
                        "authentication": {
                          "additionalProperties": false,
                          "description": "App config version authentication settings.",
                          "properties": {
                            "auth_enabled": {
                              "description": "Enables authentication for this app config version.",
                              "type": "boolean"
                            },
                            "directories": {
                              "description": "The unique ID of the directories used for authentication.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "groups": {
                              "additionalProperties": {
                                "description": "Group IDs and their authentication settings. ",
                                "type": "string"
                              },
                              "description": "App config version groups.",
                              "type": "object"
                            },
                            "idp": {
                              "description": "The unique ID of the IDP used for authentication.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "identity_data": {
                          "additionalProperties": false,
                          "description": "The application identity settings.",
                          "properties": {
                            "app_bundle": {
                              "description": "The application bundle name.",
                              "type": "string"
                            },
                            "app_category": {
                              "additionalProperties": false,
                              "description": "Application category settings.",
                              "properties": {
                                "name": {
                                  "description": "The name of the category.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The UUID of the category.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "app_logo": {
                              "description": "The application logo URL.",
                              "type": "string"
                            },
                            "bookmark_url": {
                              "description": "The application URL to bookmark.",
                              "type": "string"
                            },
                            "cert": {
                              "description": "The certificate contents.",
                              "nullable": true,
                              "type": "string"
                            },
                            "client_app_mode": {
                              "description": "The client application mode. ",
                              "type": "integer"
                            },
                            "client_cert": {
                              "description": "The client certificate. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "cname": {
                              "description": "The application's CNAME mapping.",
                              "type": "string"
                            },
                            "custom_tls_suite_name": {
                              "description": "The custom TLS suite name. Specify `null` if not applicable.",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_tls_suite": {
                              "description": "Whether the application uses the default TLS suite.",
                              "type": "boolean"
                            },
                            "description": {
                              "description": "The application description.",
                              "type": "string"
                            },
                            "dialin_server": {
                              "description": "The dialin server hostname.",
                              "type": "string"
                            },
                            "dialin_sni": {
                              "description": "The dialin server SNI.",
                              "type": "string"
                            },
                            "domain": {
                              "description": "The domain type. Defaults to `1`.",
                              "type": "integer"
                            },
                            "domain_suffix": {
                              "description": "The domain suffix to add to the configured hostname.",
                              "type": "string"
                            },
                            "encr_algo": {
                              "description": "The encryption algorithm.",
                              "type": "integer"
                            },
                            "etp_settings": {
                              "additionalProperties": false,
                              "description": "OpenID Connect (OIDC) configuration settings for an application configuration.",
                              "nullable": true,
                              "properties": {
                                "authorization_endpoint": {
                                  "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "certs_uri": {
                                  "description": "The URI of the relaying party's CA certificate.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "check_session_iframe": {
                                  "description": "The iframe URL used to check session status.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "discovery_url": {
                                  "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "end_session_endpoint": {
                                  "description": "The OIDC endpoint that triggers single sign out.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "jwks_uri": {
                                  "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "openid_metadata": {
                                  "description": "Metadata that describes the OIDC provider's configuration.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "token_endpoint": {
                                  "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "userinfo_endpoint": {
                                  "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/app-oidc-settings.yaml"
                              }
                            },
                            "host": {
                              "description": "The hostname.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Application name.",
                              "type": "string"
                            },
                            "oidc_settings": {
                              "additionalProperties": false,
                              "description": "OpenID Connect (OIDC) configuration settings for an application configuration.",
                              "nullable": true,
                              "properties": {
                                "authorization_endpoint": {
                                  "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "certs_uri": {
                                  "description": "The URI of the relaying party's CA certificate.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "check_session_iframe": {
                                  "description": "The iframe URL used to check session status.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "discovery_url": {
                                  "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "end_session_endpoint": {
                                  "description": "The OIDC endpoint that triggers single sign out.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "jwks_uri": {
                                  "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "openid_metadata": {
                                  "description": "Metadata that describes the OIDC provider's configuration.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "token_endpoint": {
                                  "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "userinfo_endpoint": {
                                  "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/app-oidc-settings.yaml"
                              }
                            },
                            "orig_encr_algo": {
                              "description": "The origin's encryption algorithm.",
                              "type": "integer"
                            },
                            "orig_tls": {
                              "description": "Whether the origin server uses TLS. ",
                              "type": "boolean"
                            },
                            "origin_host": {
                              "description": "The origin host IP address or name.",
                              "nullable": true,
                              "type": "string"
                            },
                            "origin_keepalive": {
                              "description": "The origin's keepalive timeout in seconds.",
                              "type": "integer"
                            },
                            "origin_port": {
                              "description": "The origin port number.",
                              "type": "integer"
                            },
                            "port": {
                              "description": "The local port number.",
                              "type": "integer"
                            },
                            "saml_settings": {
                              "description": "SAML settings.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "attrmap": {
                                    "description": "User attribute mapping.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "fmt": {
                                          "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                          "enum": [
                                            "email",
                                            "basic",
                                            "unspecified",
                                            "persistent",
                                            "transient"
                                          ],
                                          "type": "string"
                                        },
                                        "fname": {
                                          "description": "The format name.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The attribute name.",
                                          "type": "string"
                                        },
                                        "src": {
                                          "description": "The source of the subject.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "idp": {
                                    "additionalProperties": false,
                                    "description": "SAML IdP settings.",
                                    "properties": {
                                      "ecp_enable": {
                                        "description": "Enables enhanced client or proxy.",
                                        "type": "boolean"
                                      },
                                      "ecp_resp_signature": {
                                        "description": "The ECP response signature.",
                                        "type": "boolean"
                                      },
                                      "entity_id": {
                                        "description": "The IdP's SAML entity URL.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "SAML metadata file contents.",
                                        "type": "string"
                                      },
                                      "resp_bind": {
                                        "description": "The response binding for HTTP requests.",
                                        "type": "string"
                                      },
                                      "self_signed": {
                                        "description": "Whether the certificate is self-signed.",
                                        "type": "boolean"
                                      },
                                      "sign_algo": {
                                        "description": "The certificate signing algorithm.",
                                        "type": "string"
                                      },
                                      "sign_cert": {
                                        "description": "The self-signed certificate.",
                                        "type": "string"
                                      },
                                      "sign_key": {
                                        "description": "The certificate signing key.",
                                        "type": "string"
                                      },
                                      "slo_url": {
                                        "description": "The single logout URL.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sp": {
                                    "additionalProperties": false,
                                    "description": "SAML service provider settings.",
                                    "properties": {
                                      "acs_url": {
                                        "description": "The SAML assertion consumer service URL.",
                                        "type": "string"
                                      },
                                      "default_relay_state": {
                                        "description": "A default status value passed between the IdP and the service provider.",
                                        "type": "string"
                                      },
                                      "dst_url": {
                                        "description": "The destination URL for users to access the application.",
                                        "type": "string"
                                      },
                                      "encr_algo": {
                                        "description": "The response encryption algorithm.",
                                        "type": "string"
                                      },
                                      "encr_cert": {
                                        "description": "The encryption certificate.",
                                        "type": "string"
                                      },
                                      "entity_id": {
                                        "description": "The service provider's SAML entity URL.",
                                        "type": "string"
                                      },
                                      "force_auth": {
                                        "description": "Whether to force authentication. ",
                                        "type": "boolean"
                                      },
                                      "logout_bind": {
                                        "description": "The request binding for single logout requests.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "SAML metadata file contents.",
                                        "type": "string"
                                      },
                                      "req_bind": {
                                        "description": "The request binding for single logout requests.",
                                        "type": "string"
                                      },
                                      "req_verify": {
                                        "description": "Whether to verify requests.",
                                        "type": "boolean"
                                      },
                                      "resp_encr": {
                                        "description": "Whether to encrypt requests. ",
                                        "type": "boolean"
                                      },
                                      "sign_cert": {
                                        "description": "The signing certificate.",
                                        "type": "string"
                                      },
                                      "slo_bind": {
                                        "description": "The response binding for single logout requests.",
                                        "type": "string"
                                      },
                                      "slo_req_verify": {
                                        "description": "Whether to verify single logout requests.",
                                        "type": "boolean"
                                      },
                                      "slo_url": {
                                        "description": "The single logout URL.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "subject": {
                                    "additionalProperties": false,
                                    "description": "Specifies the subject settings for the IdP configuration.",
                                    "properties": {
                                      "fmt": {
                                        "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                        "enum": [
                                          "email",
                                          "basic",
                                          "unspecified",
                                          "persistent",
                                          "transient"
                                        ],
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the subject.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "servers": {
                              "description": "Application identity server properties.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "orig_tls": {
                                    "description": "Whether the origin host uses TLS encryption.",
                                    "type": "boolean"
                                  },
                                  "origin_host": {
                                    "description": "The origin host IP address.",
                                    "type": "string"
                                  },
                                  "origin_port": {
                                    "description": "The origin host port number.",
                                    "type": "integer"
                                  },
                                  "origin_protocol": {
                                    "description": "The origin host protocol. ",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "sites": {
                              "description": "Site IDs for the application.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ssl_ca_cert": {
                              "description": "The SSL CA-signed certificate. ",
                              "type": "string"
                            },
                            "tunnel_internal_hosts": {
                              "description": "THe internal hosts to allow tunnel application access.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "wsfed_settings": {
                              "description": "[Web Services Federation](https://techdocs.akamai.com/eaa-api/reference/https://techdocs.akamai.com/eaa/docs/web-services-federation) settings.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-identity-data.yaml"
                          }
                        },
                        "location_data": {
                          "additionalProperties": false,
                          "description": "App config version location data.",
                          "properties": {
                            "connector_data": {
                              "description": "Connector data for the application.",
                              "type": "object"
                            },
                            "pop_uuid_url": {
                              "description": "Unique ID of the POP the application uses.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "names": {
                          "additionalProperties": false,
                          "description": "Application names configuration.",
                          "properties": {
                            "cert_name": {
                              "description": "A descriptive name for the certificate.",
                              "type": "string"
                            },
                            "connector_names": {
                              "description": "The connector names.",
                              "type": "object"
                            },
                            "directory_names": {
                              "additionalProperties": {
                                "description": "Directory ID and name pairings.",
                                "type": "string"
                              },
                              "description": "Directory IDs and their names. ",
                              "type": "object"
                            },
                            "domain_suffix": {
                              "description": "The suffix to add to all hostnames.",
                              "type": "string"
                            },
                            "group_names": {
                              "additionalProperties": {
                                "description": "Group ID and name pairings.",
                                "type": "string"
                              },
                              "description": "Group IDs and their names. ",
                              "type": "object"
                            },
                            "idp_name": {
                              "description": "The IdP name.",
                              "type": "string"
                            },
                            "pop_name": {
                              "description": "The POP name.",
                              "type": "string"
                            },
                            "ssl_ca_cert": {
                              "description": "The CA-signed SSL certificate contents.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-names.yaml"
                          }
                        },
                        "service_data": {
                          "description": "The application service settings. ",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "A unique name for the service.",
                                "type": "string"
                              },
                              "rules": {
                                "description": "The risk assessment rules applied to the service.",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "service_type": {
                                "default": 1,
                                "description": "The service type. Either `1` for WAF, `2` for Acceleration, `3` for ICAP, `4` for IPS, `5` for SLB, `6` for access control, `7` for rewrite, or `8` for group rewrite.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ],
                                "type": "integer"
                              },
                              "settings": {
                                "description": "Service settings.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "name": {
                                      "description": "The service setting name.",
                                      "type": "string"
                                    },
                                    "setting_type": {
                                      "description": "The service setting type. ",
                                      "type": "integer"
                                    },
                                    "value": {
                                      "description": "The service setting value.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The service status. Either `0` for off or `1` for on. ",
                                "enum": [
                                  0,
                                  1
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-akamai": {
                            "file-path": "schemas/appconfigversion-service-data.yaml"
                          }
                        },
                        "url_location_data": {
                          "description": "The application location data, including the POP region and connector.",
                          "items": {
                            "nullable": true,
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "cloud_deployed_at",
                    "created_by",
                    "created_by_email",
                    "deployed_at",
                    "deployment_started_at",
                    "name",
                    "note",
                    "status",
                    "uuid_url",
                    "version"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/appconfigversion.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a new application version from existing",
        "tags": [
          "Versions"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each app config version.",
          "example": "{{versionId}}",
          "in": "path",
          "name": "versionId",
          "required": true,
          "schema": {
            "example": "HaYkWaXESw2Hb2N6VevZmA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/version-id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/application-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/version.yaml",
        "path-info": "/mgmt-pop/apps/{applicationId}/versions/{versionId}"
      }
    },
    "/mgmt-pop/certificates": {
      "post": {
        "description": "Creates a new certificate.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-certificate"
        },
        "operationId": "post-certificate",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "name": "abc@def.com",
                "password": "verygoodpassswrd",
                "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Certificate details.",
                "properties": {
                  "app_count": {
                    "description": "Count of applications.",
                    "example": "{{app_count}}",
                    "type": "integer"
                  },
                  "apps": {
                    "description": "The certificate's applications.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "cert": {
                    "description": "Body of the certificate.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert_file_name": {
                    "description": "The certificate filename.",
                    "example": "{{cert_file_name}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "cert_type": {
                    "default": 1,
                    "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{cert_type}}",
                    "type": "integer"
                  },
                  "cn": {
                    "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                    "example": "{{cn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking certificate creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "days_left": {
                    "description": "Count of days left before certificate expiry.",
                    "example": "{{days_left}}",
                    "type": "integer"
                  },
                  "description": {
                    "description": "A description for the certificate. Example: `certificate for abc app`.",
                    "example": "{{description}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "expired_at": {
                    "description": "ISO 8601 timestamp marking the certificate's expiry.",
                    "example": "{{expired_at}}",
                    "type": "string"
                  },
                  "host_name": {
                    "description": "The certificate hostname.",
                    "example": "{{host_name}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "idps": {
                    "description": "The certficate's identity providers.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "issued_at": {
                    "description": "ISO 8601 timestamp marking the certificate's issue.",
                    "example": "{{issued_at}}",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "Entity that has verified the certificate's contents.",
                    "example": "{{issuer}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the certificate's last modification.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the certificate.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password": {
                    "description": "The certificate's password.",
                    "example": "{{password}}",
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Private key for the certificate.",
                    "example": "{{private_key}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource": {
                    "description": "The resource type.",
                    "example": "{{resource}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Unique resource identifier.",
                    "properties": {
                      "href": {
                        "description": "The resource href URL.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "subject": {
                    "description": "The entity whose identity the certificate confirms.",
                    "example": "{{subject}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uploaded": {
                    "description": "Whether the certificate is uploaded. Specify `null` if you want to add this later.",
                    "example": "{{uploaded}}",
                    "nullable": true,
                    "type": "boolean"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the certificate.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "cert"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-post.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "cert_file_name": null,
                  "cert_type": 1,
                  "cn": "hubbaduba.com",
                  "created_at": "2019-07-10T11:54:14.418364",
                  "days_left": 364,
                  "description": null,
                  "expired_at": "2020-07-09T11:51:35",
                  "host_name": null,
                  "issued_at": "2019-07-10T11:51:35",
                  "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=hubbadubba.com/emailAddress=email@address.com",
                  "modified_at": "2019-07-10T11:54:14.418380",
                  "name": "abc@def.com",
                  "password": "akamai",
                  "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----",
                  "resource": "certificates",
                  "resource_uri": {
                    "href": "/api/v1/certificates/Jq2wsVfuRLadm4yMrOT58A"
                  },
                  "status": 1,
                  "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=hubbaduba.com/emailAddress=email@address.com",
                  "uploaded": null,
                  "uuid_url": "Jq2wsVfuRLadm4yMrOT58A"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Certificate details.",
                  "properties": {
                    "app_count": {
                      "description": "Count of applications.",
                      "type": "integer"
                    },
                    "apps": {
                      "description": "The certificate's applications.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_file_name": {
                      "description": "The certificate filename.",
                      "nullable": true,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation.",
                      "type": "string"
                    },
                    "days_left": {
                      "description": "Count of days left before certificate expiry.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "type": "string"
                    },
                    "host_name": {
                      "description": "The certificate hostname.",
                      "nullable": true,
                      "type": "string"
                    },
                    "idps": {
                      "description": "The certficate's identity providers.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue.",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password": {
                      "description": "The certificate's password.",
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "The resource type.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Unique resource identifier.",
                      "properties": {
                        "href": {
                          "description": "The resource href URL.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "Whether the certificate is uploaded. Specify `null` if you want to add this later.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "cert"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-post.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a certificate",
        "tags": [
          "Certificates"
        ]
      },
      "get": {
        "description": "Lists certificates.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificates"
        },
        "operationId": "get-certificates",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 250,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "app_count": 0,
                      "apps": [],
                      "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                      "cert_type": 1,
                      "cn": "akamai.com",
                      "created_at": "2019-07-10T11:54:14.418364",
                      "days_left": 364,
                      "description": null,
                      "expired_at": "2020-07-09T11:51:35",
                      "idps": [],
                      "issued_at": "2019-07-10T11:51:35",
                      "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=akamai.com/emailAddress=email@address.com",
                      "modified_at": "2019-07-10T11:54:14.418380",
                      "name": "bala7@bwrapp.com",
                      "resource": "certificates",
                      "resource_uri": {
                        "href": "/api/v1/certificates/Jq2wsVfuRLadm4yMrOT58A"
                      },
                      "status": 1,
                      "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=akamai.com/emailAddress=email@address.com",
                      "uuid_url": "Jq2wsVfuRLadm4yMrOT58A"
                    },
                    {
                      "app_count": 0,
                      "apps": [],
                      "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                      "cert_type": 5,
                      "cn": "bala7-saml.login.stage.akamai-access.com",
                      "created_at": "2018-04-11T10:51:29.443157",
                      "days_left": 8676,
                      "description": "",
                      "expired_at": "2043-04-12T10:51:29",
                      "idps": [],
                      "issued_at": "2018-04-11T10:51:29",
                      "issuer": "CN=Soha/O=Soha Systems, Inc./L=Sunnyvale/ST=California/C=US",
                      "modified_at": "2018-04-11T10:51:29.443176",
                      "name": "itQgMBYkSwyQxW15vKsIfA-idp-bala7-saml.login.stage.akamai-access.com",
                      "resource": "certificates",
                      "resource_uri": {
                        "href": "/api/v1/certificates/vqShYlbpTzGSDyLOUNgR7A"
                      },
                      "status": 1,
                      "subject": "CN=bala7-saml.login.stage.akamai-access.com/O=Soha/L=Sunnyvale/ST=California/C=US",
                      "uuid_url": "vqShYlbpTzGSDyLOUNgR7A"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of certificates.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Certificate details.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Certificate details.",
                        "properties": {
                          "app_count": {
                            "description": "Count of applications.",
                            "type": "integer"
                          },
                          "apps": {
                            "description": "The certificate's applications.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "cert": {
                            "description": "Body of the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "cert_file_name": {
                            "description": "The certificate filename.",
                            "nullable": true,
                            "type": "string"
                          },
                          "cert_type": {
                            "default": 1,
                            "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "cn": {
                            "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking certificate creation.",
                            "type": "string"
                          },
                          "days_left": {
                            "description": "Count of days left before certificate expiry.",
                            "type": "integer"
                          },
                          "description": {
                            "description": "A description for the certificate. Example: `certificate for abc app`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "expired_at": {
                            "description": "ISO 8601 timestamp marking the certificate's expiry.",
                            "type": "string"
                          },
                          "host_name": {
                            "description": "The certificate hostname.",
                            "nullable": true,
                            "type": "string"
                          },
                          "idps": {
                            "description": "The certficate's identity providers.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "issued_at": {
                            "description": "ISO 8601 timestamp marking the certificate's issue.",
                            "type": "string"
                          },
                          "issuer": {
                            "description": "Entity that has verified the certificate's contents.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the certificate's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "A display label for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "password": {
                            "description": "The certificate's password.",
                            "type": "string"
                          },
                          "private_key": {
                            "description": "Private key for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "The resource type.",
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Unique resource identifier.",
                            "properties": {
                              "href": {
                                "description": "The resource href URL.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "subject": {
                            "description": "The entity whose identity the certificate confirms.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uploaded": {
                            "description": "Whether the certificate is uploaded. Specify `null` if you want to add this later.",
                            "nullable": true,
                            "type": "boolean"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "cert"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/certificate-post.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-list.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List certificates",
        "tags": [
          "Certificates"
        ]
      },
      "x-akamai": {
        "file-path": "paths/certificates.yaml",
        "path-info": "/mgmt-pop/certificates"
      }
    },
    "/mgmt-pop/certificates/ca_attributes": {
      "get": {
        "description": "Lists CA attributes.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificates-ca-attributes"
        },
        "operationId": "get-certificates-ca-attributes",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "CN",
                  "GN",
                  "IPSec User",
                  "Microsoft Smartcardlogin",
                  "Microsoft Universal Principal Name",
                  "Permanent Identifier",
                  "SN",
                  "UID",
                  "X509v3 Subject Alternative Name",
                  "commonName",
                  "distinguishedName",
                  "emailAddress",
                  "friendlyName",
                  "givenName",
                  "ipsecUser",
                  "mail",
                  "msSmartcardLogin",
                  "msUPN",
                  "name",
                  "serialNumber",
                  "subjectAltName",
                  "surname",
                  "uniqueMember",
                  "unstructuredAddress",
                  "unstructuredName",
                  "userId"
                ],
                "schema": {
                  "description": "CA certificate details.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/ca-certificate.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List CA certificate attributes",
        "tags": [
          "Certificates"
        ]
      },
      "x-akamai": {
        "file-path": "paths/ca-attributes.yaml",
        "path-info": "/mgmt-pop/certificates/ca_attributes"
      }
    },
    "/mgmt-pop/certificates/{certificateId}": {
      "get": {
        "description": "Retrieves a single certificate by ID.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate"
        },
        "operationId": "get-certificate",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "cert_file_name": "certificate.pfx",
                  "cert_type": 1,
                  "cn": "aka.com",
                  "created_at": "2019-07-11T10:42:30.701478",
                  "days_left": 364,
                  "description": null,
                  "expired_at": "2020-07-10T10:40:16",
                  "host_name": null,
                  "issued_at": "2019-07-11T10:40:16",
                  "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=a@vd.com",
                  "modified_at": "2019-07-11T10:42:30.701494",
                  "name": "bala7@bwrapp.com",
                  "password": "akamai",
                  "resource": "certificates",
                  "resource_uri": {
                    "href": "/api/v1/certificates/KscOQO8ZR1qZDBbouTesBQ"
                  },
                  "status": 1,
                  "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=a@vd.com",
                  "uploaded": true,
                  "uuid_url": "KscOQO8ZR1qZDBbouTesBQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Certificate details.",
                  "properties": {
                    "app_count": {
                      "description": "Count of applications.",
                      "type": "integer"
                    },
                    "apps": {
                      "description": "The certificate's applications.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_file_name": {
                      "description": "The certificate filename.",
                      "nullable": true,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation.",
                      "type": "string"
                    },
                    "days_left": {
                      "description": "Count of days left before certificate expiry.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "type": "string"
                    },
                    "host_name": {
                      "description": "The certificate hostname.",
                      "nullable": true,
                      "type": "string"
                    },
                    "idps": {
                      "description": "The certficate's identity providers.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue.",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password": {
                      "description": "The certificate's password.",
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "The resource type.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Unique resource identifier.",
                      "properties": {
                        "href": {
                          "description": "The resource href URL.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "Whether the certificate is uploaded. Specify `null` if you want to add this later.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "cert"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-post.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Get a certificate",
        "tags": [
          "Certificates"
        ]
      },
      "put": {
        "description": "Updates an existing manual certificate.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-certificate"
        },
        "operationId": "put-certificate",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "app_count": 0,
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "cert_type": 1,
                "cn": "aka.com",
                "created_at": "2019-07-12T11:01:42.036917",
                "days_left": 361,
                "description": null,
                "expired_at": "2020-07-10T10:40:16",
                "issued_at": "2019-07-11T10:40:16",
                "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=a@vd.com",
                "modified_at": "2019-07-12T11:01:42.036932",
                "name": "ew",
                "password": "akamai",
                "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----",
                "resource": "certificates",
                "resource_uri": "/api/v1/certificates/KscOQO8ZR1qZDBbouTesBQ",
                "status": 1,
                "subject": "CN=fanr.com/O=Fan/L=San Jose/ST=California/C=US"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Certificate details.",
                "properties": {
                  "app_count": {
                    "description": "Count of applications.",
                    "example": "{{app_count}}",
                    "type": "integer"
                  },
                  "apps": {
                    "description": "The certificate's applications.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "cert": {
                    "description": "Body of the certificate.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert_type": {
                    "default": 1,
                    "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{cert_type}}",
                    "type": "integer"
                  },
                  "cn": {
                    "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                    "example": "{{cn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the certificate's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "days_left": {
                    "description": "The number of days left before the certificate expires.",
                    "example": "{{days_left}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "description": {
                    "description": "A description for the certificate. Specify `null` if you want to provide this later.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "expired_at": {
                    "description": "ISO 8601 timestamp marking the certificate's expiry.",
                    "example": "{{expired_at}}",
                    "type": "string"
                  },
                  "issued_at": {
                    "description": "ISO 8601 timestamp marking certificate issue.",
                    "example": "{{issued_at}}",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "Entity that has verified the certificate's contents.",
                    "example": "{{issuer}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the certificate's last modification.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the certificate.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password": {
                    "description": "The certificate's password.",
                    "example": "{{password}}",
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Private key for the certificate.",
                    "example": "{{private_key}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource": {
                    "description": "The resource type.",
                    "example": "{{resource}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Hypermedia link for the certificate.",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "subject": {
                    "description": "The entity whose identity the certificate confirms.",
                    "example": "{{subject}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the certificate.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "private_key",
                  "name",
                  "cert_type",
                  "cert"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-put.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "cert_type": 1,
                  "cn": "aka.com",
                  "created_at": "2019-07-12T11:01:42.036917",
                  "days_left": 364,
                  "description": null,
                  "expired_at": "2020-07-14T05:30:59",
                  "issued_at": "2019-07-15T05:30:59",
                  "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=abc@dec.com",
                  "modified_at": "2019-07-15T05:31:39.786610",
                  "name": "ew",
                  "password": "akamai",
                  "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----",
                  "resource": "certificates",
                  "resource_uri": {
                    "href": "/api/v1/certificates/FNOUbN-ST2WUvdnz_RFKLw"
                  },
                  "status": 1,
                  "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=abc@dec.com",
                  "uuid_url": "FNOUbN-ST2WUvdnz_RFKLw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Certificate details.",
                  "properties": {
                    "app_count": {
                      "description": "Count of applications.",
                      "type": "integer"
                    },
                    "apps": {
                      "description": "The certificate's applications.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_file_name": {
                      "description": "The certificate filename.",
                      "nullable": true,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation.",
                      "type": "string"
                    },
                    "days_left": {
                      "description": "Count of days left before certificate expiry.",
                      "type": "integer"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "type": "string"
                    },
                    "host_name": {
                      "description": "The certificate hostname.",
                      "nullable": true,
                      "type": "string"
                    },
                    "idps": {
                      "description": "The certficate's identity providers.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue.",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password": {
                      "description": "The certificate's password.",
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "The resource type.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Unique resource identifier.",
                      "properties": {
                        "href": {
                          "description": "The resource href URL.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "Whether the certificate is uploaded. Specify `null` if you want to add this later.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "cert"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-post.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Modify a manual certificate",
        "tags": [
          "Certificates"
        ]
      },
      "delete": {
        "description": "Removes an existing certificate.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-certificate"
        },
        "operationId": "delete-certificate",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Delete a certificate",
        "tags": [
          "Certificates"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the certificate.",
          "example": "{{certificateId}}",
          "in": "path",
          "name": "certificateId",
          "required": true,
          "schema": {
            "example": "X9CnR98mTDCSZxzqKYOkTQ",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/certificate-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/certificate.yaml",
        "path-info": "/mgmt-pop/certificates/{certificateId}"
      }
    },
    "/mgmt-pop/certificates/{certificateId}/upload": {
      "post": {
        "description": "Modifies a certificate.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-certificate-upload"
        },
        "operationId": "post-certificate-upload",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "example": {
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "name": "abc@def.com",
                "password": "verygoodpassswrd",
                "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Certificate details.",
                "properties": {
                  "cert": {
                    "description": "Body of the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert_type": {
                    "default": 1,
                    "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "type": "integer"
                  },
                  "cn": {
                    "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking certificate creation.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description for the certificate. Example: `certificate for abc app`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "expired_at": {
                    "description": "ISO 8601 timestamp marking the certificate's expiry.",
                    "type": "string"
                  },
                  "issued_at": {
                    "description": "ISO 8601 timestamp marking the certificate's issue.",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "Entity that has verified the certificate's contents.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the certificate's last modification.",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Private key for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Unique resource identifier.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "type": "integer"
                  },
                  "subject": {
                    "description": "The entity whose identity the certificate confirms.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "password",
                  "cert"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-post-upload.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-upload-200.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Upload a certificate",
        "tags": [
          "Certificates"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the certificate.",
          "example": "{{certificateId}}",
          "in": "path",
          "name": "certificateId",
          "required": true,
          "schema": {
            "example": "X9CnR98mTDCSZxzqKYOkTQ",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/certificate-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/upload.yaml",
        "path-info": "/mgmt-pop/certificates/{certificateId}/upload"
      }
    },
    "/mgmt-pop/directories": {
      "post": {
        "description": "Creates a new directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-directory"
        },
        "operationId": "post-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "VM device",
                "name": "abhi",
                "service": 1
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "The directory description.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The directory name. ",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "service": {
                    "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ],
                    "example": "{{service}}",
                    "type": "integer"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/create-directory.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "admin_user": null,
                  "agents": [],
                  "api_key": null,
                  "attribute_map": {
                    "user.countryCode": "US",
                    "user.email": "bjones@tech.com",
                    "user.firstName": "Bob",
                    "user.groups": "US_IT",
                    "user.lastName": "jones",
                    "user.netbios": "msDS-PrincipalName",
                    "user.persistentId": "objectGUID",
                    "user.phoneNumber": "8005551212",
                    "user.samAccountName": "bjones",
                    "user.userPrincipleName": "bjones"
                  },
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-3zxfv_tkrpknto5xndnrhq.login.stage.akamai-access.com",
                  "company_id": null,
                  "conf_state": 1,
                  "created_at": "2019-07-22T10:08:32.390504",
                  "description": "prod directory",
                  "dialin_sni": "dir-3zxfv_tkrpknto5xndnrhq.login.dialin.stage.akamai-access.com",
                  "directory_status": 3,
                  "directory_type": 2,
                  "domains": [],
                  "global_catalog": false,
                  "group_base_dn": null,
                  "group_count": 0,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primary",
                  "host": null,
                  "kerb_realms": [],
                  "last_sync": "2019-07-22T10:08:32.390625",
                  "logout_url": "",
                  "metadata": "",
                  "mfa": "off",
                  "modified_at": "2019-07-22T10:08:32.825745",
                  "name": "abhi",
                  "nameidformat": null,
                  "ou_attr": null,
                  "ou_filter": null,
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "password_change_allow": false,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_filter": {
                    "min-char-groups": 2,
                    "min-lower": 1,
                    "min-num": 2,
                    "min-other": 0,
                    "min-special": 1,
                    "min-upper": 1,
                    "name-check": true,
                    "uid-check": true
                  },
                  "password_policy_default": "",
                  "password_reset_allow": false,
                  "port": 636,
                  "resource": "directories",
                  "resource_uri": {
                    "groups": "/api/v1/directories/3zxFV_tKRpKnTO5XNDnrhQ/groups/",
                    "href": "/api/v1/directories/3zxFV_tKRpKnTO5XNDnrhQ",
                    "users": "/api/v1/directories/3zxFV_tKRpKnTO5XNDnrhQ/users/"
                  },
                  "root_dn": null,
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 1,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": null,
                  "user_count": 0,
                  "user_display_name": "Bob Jones",
                  "user_email": "bjones@tech.com",
                  "user_fname": "Bob",
                  "user_lname": "Jones",
                  "user_memberof": "memberOf",
                  "user_memberuid": "memberUid",
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "user_phone_num": "8005551212",
                  "user_principal": "bjones@tech.com",
                  "user_samaccountname": "bjones",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "bjones",
                  "uuid_url": "3zxFV_tKRpKnTO5XNDnrhQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "properties": {
                    "admin_pwd": {
                      "description": "The administrator user password for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Indicates a signed authentication request.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Enables referral chasing.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the directory object.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directories": {
                      "description": "The unique IDs of the directories for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "domains": {
                      "description": "The directory's domains.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The domain name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "items": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The unique ID of the IDP to assign to the directory.",
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object"
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "password_change_allow": {
                      "description": "Allows password changes.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of digits for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The URL for the IDP.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "type": "object"
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "get": {
        "description": "Gets a list of directories.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directories"
        },
        "operationId": "get-directories",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 250,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 10
                  },
                  "objects": [
                    {
                      "admin_user": "",
                      "agents": [],
                      "api_key": "",
                      "attribute_map": {
                        "user.countryCode": "cloud.country_code",
                        "user.email": "cloud.email",
                        "user.firstName": "cloud.first_name",
                        "user.lastName": "cloud.last_name",
                        "user.netbios": "cloud.netbios",
                        "user.persistentId": "cloud.uuid",
                        "user.phoneNumber": "cloud.phone_number",
                        "user.samAccountName": "cloud.samaccountname",
                        "user.userPrincipleName": "cloud.user_principle_name"
                      },
                      "auth_request_signed": false,
                      "auth_response_encrypt": false,
                      "chase_referral": false,
                      "cname": "",
                      "company_id": "",
                      "conf_state": 1,
                      "created_at": "2017-07-20T09:24:51.951381",
                      "description": "",
                      "dialin_sni": "",
                      "directory_status": 3,
                      "directory_type": 1,
                      "domains": [],
                      "global_catalog": false,
                      "group_base_dn": "",
                      "group_count": 2,
                      "group_members": "member",
                      "group_name": "cn",
                      "group_object_classes": [
                        "group",
                        "groupOfNames"
                      ],
                      "group_search_filter": "(objectClass=group)",
                      "group_token": "primaryGroupToken",
                      "host": "",
                      "kerb_realms": [],
                      "last_sync": "2017-07-20T09:24:51.951479",
                      "logout_url": "",
                      "metadata": "",
                      "mfa": "off",
                      "modified_at": "2018-05-18T04:37:31.487944",
                      "name": "Cloud Directory",
                      "nameidformat": "",
                      "ou_attr": "",
                      "ou_filter": null,
                      "ou_object_classes": [
                        "organizationalUnit"
                      ],
                      "password_change_allow": false,
                      "password_change_threshold": 0,
                      "password_complexity_message": "",
                      "password_expire_warn_threshold": 0,
                      "password_filter": {},
                      "password_policy_default": "",
                      "password_reset_allow": false,
                      "port": 636,
                      "resource": "directories",
                      "resource_uri": {
                        "groups": "/api/v1/directories/BPmiD2v8T263qkWt3OEM6A/groups/",
                        "href": "/api/v1/directories/BPmiD2v8T263qkWt3OEM6A",
                        "users": "/api/v1/directories/BPmiD2v8T263qkWt3OEM6A/users/"
                      },
                      "root_dn": "",
                      "schema_attributes": "{}",
                      "server_cert_validate": true,
                      "service": 6,
                      "signed_request": false,
                      "ssl": true,
                      "status": 1,
                      "sync_interval": 21600,
                      "sync_state": 1,
                      "user_base_dn": "",
                      "user_count": 15,
                      "user_display_name": "displayName",
                      "user_email": "mail",
                      "user_fname": "givenName",
                      "user_lname": "sn",
                      "user_memberof": "memberOf",
                      "user_memberuid": "memberUid",
                      "user_object_classes": [
                        "person",
                        "organizationalPerson",
                        "user",
                        "inetOrgPerson"
                      ],
                      "user_phone_num": "telephoneNumber",
                      "user_principal": "sAMAccountName",
                      "user_samaccountname": "sAMAccountName",
                      "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                      "user_upn": "userPrincipalName",
                      "uuid_url": "BPmiD2v8T263qkWt3OEM6A"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory data.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "IDP directory data.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise Access IDP directory information.",
                        "properties": {
                          "admin_pwd": {
                            "description": "The administrator user password for the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "admin_user": {
                            "description": "The administrator user account for the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "agents": {
                            "description": "Connectors assigned to this IDP directory.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "api_key": {
                            "description": "The API key of the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "attribute_map": {
                            "additionalProperties": false,
                            "description": "The attribute mapping for the IDP directory.",
                            "properties": {
                              "eaa.demo": {
                                "description": "The user's EAA demo name.",
                                "type": "string"
                              },
                              "eaa.test": {
                                "description": "The user's EAA test name.",
                                "type": "string"
                              },
                              "user.countryCode": {
                                "description": "The user's country code.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "user.firstName": {
                                "description": "The user's first name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.groups": {
                                "description": "The groups the user belongs to.",
                                "type": "string"
                              },
                              "user.lastName": {
                                "description": "The user's last name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.netbios": {
                                "description": "The user's NetBIOS name.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "user.persistentId": {
                                "description": "The user persistent ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.phoneNumber": {
                                "description": "The user's phone number.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.samAccountName": {
                                "description": "The user's Security Account Manager (SAM) account name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.userPrincipleName": {
                                "description": "The user's principle name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "user.countryCode",
                              "user.email",
                              "user.firstName",
                              "user.lastName",
                              "user.netbios",
                              "user.persistentId",
                              "user.phoneNumber",
                              "user.samAccountName",
                              "user.userPrincipleName"
                            ],
                            "type": "object"
                          },
                          "auth_request_signed": {
                            "description": "Indicates a signed authentication request.",
                            "type": "boolean"
                          },
                          "auth_response_encrypt": {
                            "description": "Enables authentication response encryption.",
                            "type": "boolean"
                          },
                          "chase_referral": {
                            "description": "Enables referral chasing.",
                            "type": "boolean"
                          },
                          "cname": {
                            "description": "The IDP directory cname.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "company_id": {
                            "description": "The company ID of the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "conf_state": {
                            "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                            "nullable": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the directory object.",
                            "nullable": true,
                            "type": "string"
                          },
                          "dialin_sni": {
                            "description": "The dial-in SNI for the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "directories": {
                            "description": "The unique IDs of the directories for the IDP.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "directory_status": {
                            "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "directory_type": {
                            "default": 2,
                            "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "domains": {
                            "description": "The directory's domains.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The domain name.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "global_catalog": {
                            "description": "Enables global catalog.",
                            "type": "boolean"
                          },
                          "group_base_dn": {
                            "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "group_count": {
                            "description": "The number of groups for the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "group_members": {
                            "description": "The members of the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_name": {
                            "description": "The name of the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_object_classes": {
                            "description": "Group object classes that define custom LDAP mappings of users and groups.",
                            "items": {
                              "minLength": 0,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "group_search_filter": {
                            "description": "The search filter for the group, such as `(objectClass=group)`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_token": {
                            "description": "The primary group token.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "host": {
                            "description": "The IDP directory host.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "idp": {
                            "description": "The unique ID of the IDP to assign to the directory.",
                            "type": "string"
                          },
                          "kerb_realms": {
                            "description": "Kerberos realms for the IDP directory.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "kdclist": {
                                  "additionalProperties": false,
                                  "description": "Kerberos Key Distribution Centers (KDC) information.",
                                  "properties": {
                                    "ip": {
                                      "description": "The IP address of the KDC.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The port number of the KDC.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "ip",
                                    "port"
                                  ],
                                  "type": "object"
                                },
                                "realm": {
                                  "description": "The kerberos realm.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kdclist",
                                "realm"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "last_sync": {
                            "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                            "type": "string"
                          },
                          "logout_url": {
                            "description": "The logout URL for the directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "metadata": {
                            "description": "The IDP directory metadata.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "mfa": {
                            "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                            "enum": [
                              "on",
                              "off"
                            ],
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the directory's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "nameidformat": {
                            "description": "The name ID format.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_attr": {
                            "description": "The organization unit's attributes.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_filter": {
                            "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_object_classes": {
                            "description": "The organization unit's object classes.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "password_change_allow": {
                            "description": "Allows password changes.",
                            "type": "boolean"
                          },
                          "password_change_threshold": {
                            "description": "The password change threshold in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "password_complexity_message": {
                            "description": "The password complexity message.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "password_expire_warn_threshold": {
                            "description": "The password expiration warning threshold in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "password_filter": {
                            "additionalProperties": false,
                            "description": "The password format requirement filters.",
                            "properties": {
                              "min-char-groups": {
                                "description": "Minimum number of character groups for the password.",
                                "minimum": 2,
                                "type": "integer"
                              },
                              "min-lower": {
                                "description": "Minimum number of lowercase characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-num": {
                                "description": "Minimum number of digits for the password.",
                                "minimum": 2,
                                "type": "integer"
                              },
                              "min-other": {
                                "description": "Minimum number of other characters for the password.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "min-special": {
                                "description": "Minimum number of special characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-upper": {
                                "description": "Minimum number of uppercase characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "name-check": {
                                "description": "Checks whether the password contains the user's name.",
                                "type": "boolean"
                              },
                              "uid-check": {
                                "description": "Checks whether the password contains the user ID.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "password_policy_default": {
                            "description": "The default password policy for the IDP directory.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "password_reset_allow": {
                            "description": "Whether to allow password reset.",
                            "type": "boolean"
                          },
                          "port": {
                            "description": "The port number of the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "resource": {
                            "description": "The IDP directory resource name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of various IDP directory resources.",
                            "properties": {
                              "groups": {
                                "description": "The URL for group details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URL for IDP directory details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "idp": {
                                "description": "The URL for the IDP.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "users": {
                                "description": "The URL for the list of users.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "groups",
                              "href",
                              "users"
                            ],
                            "type": "object"
                          },
                          "root_dn": {
                            "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "schema_attributes": {
                            "description": "The directory schema attributes.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "server_cert_validate": {
                            "description": "Whether to validate server certificates.",
                            "type": "boolean"
                          },
                          "service": {
                            "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11
                            ],
                            "type": "integer"
                          },
                          "signed_request": {
                            "description": "Whether the request is signed.",
                            "type": "boolean"
                          },
                          "ssl": {
                            "description": "Enables SSL.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "sync_interval": {
                            "description": "The synchronization interval of the IDP directory in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sync_state": {
                            "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "user_base_dn": {
                            "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "user_count": {
                            "description": "The total count of users in the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "user_display_name": {
                            "description": "The display name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_email": {
                            "description": "The email of a user.",
                            "type": "string"
                          },
                          "user_fname": {
                            "description": "The first name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_lname": {
                            "description": "The last name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_memberof": {
                            "description": "The member status of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_memberuid": {
                            "description": "The member UID of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_object_classes": {
                            "description": "The user's object class.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "user_phone_num": {
                            "description": "The phone number of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_principal": {
                            "description": "The login of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_samaccountname": {
                            "description": "The kerberos client principal name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_search_filter": {
                            "description": "The search filter for a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_upn": {
                            "description": "The principal name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/idpdirectory.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectories.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List directories",
        "tags": [
          "Directory administration"
        ]
      },
      "x-akamai": {
        "file-path": "paths/directories.yaml",
        "path-info": "/mgmt-pop/directories"
      }
    },
    "/mgmt-pop/directories/createusers/status/{cmd_id}": {
      "get": {
        "description": "Gets a user's upload status.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-create-users-status"
        },
        "operationId": "get-create-users-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "failed_details": [],
                  "result": "https://s3.amazonaws.com/user-actions/user-bulk-action-1562916653.json",
                  "status": "complete",
                  "success": 2,
                  "total": 2
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dir_reach_error": {
                      "description": "Error messages related directory verification issues.",
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "type": "integer"
                    },
                    "failed_details": {
                      "description": "Failed actions.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON file.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "type": "integer"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get user upload status",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier issued for a verify directory user operation.",
          "example": "{{cmd_id}}",
          "in": "path",
          "name": "cmd_id",
          "required": true,
          "schema": {
            "example": "ce8b4684-a504-4288-b80d-98f0bce20545",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/cmd-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/cmd-create-users.yaml",
        "path-info": "/mgmt-pop/directories/createusers/status/{cmd_id}"
      }
    },
    "/mgmt-pop/directories/reinviteusers/status/{cmd_id}": {
      "get": {
        "description": "Gets the re-invite status for a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-users-reinvite-status"
        },
        "operationId": "get-users-reinvite-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "failed_details": [],
                  "result": "https://s3.amazonaws.com/user-actions/user-bulk-action-1562916653.json",
                  "status": "complete",
                  "success": 2,
                  "total": 2
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dir_reach_error": {
                      "description": "Error messages related directory verification issues.",
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "type": "integer"
                    },
                    "failed_details": {
                      "description": "Failed actions.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON file.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "type": "integer"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Verify user re-invite status",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier issued for a verify directory user operation.",
          "example": "{{cmd_id}}",
          "in": "path",
          "name": "cmd_id",
          "required": true,
          "schema": {
            "example": "ce8b4684-a504-4288-b80d-98f0bce20545",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/cmd-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/cmd-reinvite-users.yaml",
        "path-info": "/mgmt-pop/directories/reinviteusers/status/{cmd_id}"
      }
    },
    "/mgmt-pop/directories/search": {
      "post": {
        "description": "Searches a directory for the specified query string.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-search"
        },
        "operationId": "post-search",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "user": "adevi"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Directory user search results.",
                "properties": {
                  "user": {
                    "description": "The directory user.",
                    "example": "{{user}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "user"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/search-dir.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "1c4e70dc-ff5e-4268-b87c-4f44d800a778",
                  "status": "PENDING"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "cmdid"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Search a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "x-akamai": {
        "file-path": "paths/search.yaml",
        "path-info": "/mgmt-pop/directories/search"
      }
    },
    "/mgmt-pop/directories/verify": {
      "post": {
        "description": "Verifies that directories are reachable by connectors.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-verify"
        },
        "operationId": "post-verify",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "1f8675b0-9b8f-4816-813b-128b1b92ad4b",
                  "dir_status": 5,
                  "status": "pending"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "cmdid"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Verify a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "x-akamai": {
        "file-path": "paths/verify.yaml",
        "path-info": "/mgmt-pop/directories/verify"
      }
    },
    "/mgmt-pop/directories/verify/{cmd_id}": {
      "get": {
        "description": "Checks the directory verification status.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-verify-status"
        },
        "operationId": "get-verify-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "1f8675b0-9b8f-4816-813b-128b1b92ad4b",
                  "dir_reach_error": "",
                  "dir_status": 7,
                  "status": "complete"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dir_reach_error": {
                      "description": "Error messages related directory verification issues.",
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "type": "integer"
                    },
                    "failed_details": {
                      "description": "Failed actions.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON file.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "type": "integer"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Check directory verification status",
        "tags": [
          "Directory administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier issued for a verify directory user operation.",
          "example": "{{cmd_id}}",
          "in": "path",
          "name": "cmd_id",
          "required": true,
          "schema": {
            "example": "ce8b4684-a504-4288-b80d-98f0bce20545",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/cmd-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/cmd-verify.yaml",
        "path-info": "/mgmt-pop/directories/verify/{cmd_id}"
      }
    },
    "/mgmt-pop/directories/{directory_id}": {
      "get": {
        "description": "Gets a single directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory"
        },
        "operationId": "get-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "admin_user": "EAA\\administrator",
                  "agents": [
                    {
                      "name": "Alok-Qa-Wapp-Alpha-Connector-N-California",
                      "uuid_url": "I1QHNAjzQ6KpQiivF5bxGw"
                    },
                    {
                      "name": "Alok_OCSP_Ohio",
                      "uuid_url": "ChQHbBiZT_-mwowz2WvLTA"
                    }
                  ],
                  "api_key": "",
                  "attribute_map": {
                    "eaa.demo": "departmentNumber",
                    "eaa.test": "description",
                    "user.countryCode": "countryCode",
                    "user.email": "email",
                    "user.firstName": "givenName",
                    "user.groups": "memberOf",
                    "user.lastName": "sn",
                    "user.netbios": "msDS-PrincipalName",
                    "user.persistentId": "objectGUID",
                    "user.phoneNumber": "telephoneNumber",
                    "user.samAccountName": "sAMAccountName",
                    "user.userName": "sAMAccountName",
                    "user.userPrincipleName": "userPrincipalName"
                  },
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-aagakk45r6-ulk5u8o2ikw.login.stage.akamai-access.com",
                  "company_id": "",
                  "conf_state": 1,
                  "created_at": "2017-10-30T06:57:39.221798",
                  "description": "",
                  "dialin_sni": "dir-aagakk45r6-ulk5u8o2ikw.login.dialin.stage.akamai-access.com",
                  "directory_status": 5,
                  "directory_type": 2,
                  "domains": [],
                  "global_catalog": false,
                  "group_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "group_count": 5,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primaryGroupToken",
                  "host": "192.0.2.163",
                  "kerb_realms": [],
                  "last_sync": "2019-07-22T07:14:56.285286",
                  "logout_url": "",
                  "metadata": "",
                  "mfa": "off",
                  "modified_at": "2019-07-22T07:14:56.285600",
                  "name": "EAA Directory",
                  "nameidformat": "",
                  "ou_attr": "",
                  "ou_filter": "",
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "password_change_allow": true,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_filter": {},
                  "password_policy_default": "dc=eaa,dc=daredevils,dc=com",
                  "password_reset_allow": true,
                  "port": 636,
                  "resource": "directories",
                  "resource_uri": {
                    "groups": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/groups/",
                    "href": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                    "users": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/users/"
                  },
                  "root_dn": "eaa.daredevils.com",
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 1,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "user_count": 204,
                  "user_display_name": "displayName",
                  "user_email": "mail",
                  "user_fname": "givenName",
                  "user_lname": "sn",
                  "user_memberof": "memberOf",
                  "user_memberuid": "memberUid",
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "user_phone_num": "telephoneNumber",
                  "user_principal": "userPrincipalName",
                  "user_samaccountname": "sAMAccountName",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "userPrincipalName",
                  "uuid_url": "aAgAKK45R6-uLK5U8o2iKw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "properties": {
                    "admin_pwd": {
                      "description": "The administrator user password for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Indicates a signed authentication request.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Enables referral chasing.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the directory object.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directories": {
                      "description": "The unique IDs of the directories for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "domains": {
                      "description": "The directory's domains.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The domain name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "items": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The unique ID of the IDP to assign to the directory.",
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object"
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "password_change_allow": {
                      "description": "Allows password changes.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of digits for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The URL for the IDP.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "type": "object"
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "put": {
        "description": "Updates an existing directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-directory"
        },
        "operationId": "put-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "admin_user": "eaaprod\\Administrator",
                "agents": [
                  {
                    "name": "anag-1804-aws-agent",
                    "uuid_url": "ikbBcyKGSfmFbRaL8zrslA"
                  }
                ],
                "api_key": "",
                "attribute_map": {
                  "user.countryCode": "countryCode",
                  "user.email": "mail",
                  "user.firstName": "givenName",
                  "user.groups": "memberOf",
                  "user.lastName": "sn",
                  "user.netbios": "msDS-PrincipalName",
                  "user.persistentId": "objectGUID",
                  "user.phoneNumber": "telephoneNumber",
                  "user.samAccountName": "sAMAccountName",
                  "user.userPrincipleName": "userPrincipalName"
                },
                "auth_request_signed": false,
                "auth_response_encrypt": false,
                "chase_referral": false,
                "cname": "dir-1xnqzptvrtwczkmwlgcxwq.login.stage.akamai-access.com",
                "company_id": "",
                "conf_state": 1,
                "created_at": "2018-10-04T10:57:18.016370",
                "description": "aadd",
                "dialin_sni": "dir-1xnqzptvrtwczkmwlgcxwq.login.dialin.stage.akamai-access.com",
                "directory_status": 5,
                "directory_type": 2,
                "domains": [
                  {
                    "name": ""
                  }
                ],
                "global_catalog": false,
                "group_base_dn": "dc=eaaprod,dc=daredevils,dc=com",
                "group_count": 4,
                "group_members": "member",
                "group_name": "cn",
                "group_object_classes": [
                  "group",
                  "groupOfNames"
                ],
                "group_search_filter": "(objectClass=group)",
                "group_token": "primaryGroupToken",
                "host": "192.0.2.94",
                "kerb_realms": [],
                "last_sync": "2019-07-19T11:59:37.624427",
                "logout_url": "",
                "metadata": "",
                "mfa": "off",
                "name": "EAA Directory Alpha",
                "nameidformat": "",
                "ou_attr": "",
                "ou_filter": "",
                "ou_object_classes": [
                  "organizationalUnit"
                ],
                "password_change_allow": true,
                "password_change_threshold": 3600,
                "password_complexity_message": "Password must contain at least eight characters and one number.Hello",
                "password_expire_warn_threshold": 3600,
                "password_filter": {
                  "min-char-groups": 2,
                  "min-lower": 1,
                  "min-num": 2,
                  "min-other": 0,
                  "min-special": 1,
                  "min-upper": 1,
                  "name-check": true,
                  "uid-check": true
                },
                "password_policy_default": "dc=eaaprod,dc=daredevils,dc=com",
                "password_reset_allow": true,
                "port": 636,
                "resource": "directories",
                "root_dn": "eaaprod.daredevils.com",
                "schema_attributes": "{}",
                "server_cert_validate": true,
                "service": 1,
                "signed_request": false,
                "ssl": true,
                "status": 1,
                "sync_interval": 1209600,
                "sync_state": 1,
                "user_base_dn": "dc=eaaprod,dc=daredevils,dc=com",
                "user_count": 37,
                "user_display_name": "displayName",
                "user_email": "mail",
                "user_fname": "givenName",
                "user_lname": "sn",
                "user_memberof": "memberOf",
                "user_memberuid": "memberUid",
                "user_object_classes": [
                  "person",
                  "organizationalPerson",
                  "user",
                  "inetOrgPerson"
                ],
                "user_phone_num": "telephoneNumber",
                "user_principal": "userPrincipalName",
                "user_samaccountname": "sAMAccountName",
                "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                "user_upn": "userPrincipalName"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access IDP directory information.",
                "properties": {
                  "admin_pwd": {
                    "description": "The administrator user password for the IDP directory.",
                    "example": "{{admin_pwd}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "admin_user": {
                    "description": "The administrator user account for the IDP directory.",
                    "example": "{{admin_user}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "agents": {
                    "description": "Connectors assigned to this IDP directory.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "api_key": {
                    "description": "The API key of the IDP directory.",
                    "example": "{{api_key}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "attribute_map": {
                    "additionalProperties": false,
                    "description": "The attribute mapping for the IDP directory.",
                    "properties": {
                      "eaa.demo": {
                        "description": "The user's EAA demo name.",
                        "type": "string"
                      },
                      "eaa.test": {
                        "description": "The user's EAA test name.",
                        "type": "string"
                      },
                      "user.countryCode": {
                        "description": "The user's country code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.email": {
                        "description": "The user's email address.",
                        "type": "string"
                      },
                      "user.firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.groups": {
                        "description": "The groups the user belongs to.",
                        "type": "string"
                      },
                      "user.lastName": {
                        "description": "The user's last name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.netbios": {
                        "description": "The user's NetBIOS name.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "user.persistentId": {
                        "description": "The user persistent ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.phoneNumber": {
                        "description": "The user's phone number.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.samAccountName": {
                        "description": "The user's Security Account Manager (SAM) account name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.userName": {
                        "description": "The username.",
                        "type": "string"
                      },
                      "user.userPrincipleName": {
                        "description": "The user's principle name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "user.countryCode",
                      "user.email",
                      "user.firstName",
                      "user.lastName",
                      "user.netbios",
                      "user.persistentId",
                      "user.phoneNumber",
                      "user.samAccountName",
                      "user.userPrincipleName"
                    ],
                    "type": "object"
                  },
                  "auth_request_signed": {
                    "description": "Indicates a signed authentication request.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Enables authentication response encryption.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "chase_referral": {
                    "description": "Enables referral chasing.",
                    "example": "{{chase_referral}}",
                    "type": "boolean"
                  },
                  "cname": {
                    "description": "The IDP directory cname.",
                    "example": "{{cname}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID of the IDP directory.",
                    "example": "{{company_id}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "conf_state": {
                    "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{conf_state}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{created_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the directory object.",
                    "example": "{{description}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "dialin_sni": {
                    "description": "The dial-in SNI for the IDP directory.",
                    "example": "{{dialin_sni}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "directories": {
                    "description": "The unique IDs of the directories for the IDP.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "directory_status": {
                    "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{directory_status}}",
                    "type": "integer"
                  },
                  "directory_type": {
                    "default": 2,
                    "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": "{{directory_type}}",
                    "type": "integer"
                  },
                  "domains": {
                    "description": "The directory's domains.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The domain name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "global_catalog": {
                    "description": "Enables global catalog.",
                    "example": "{{global_catalog}}",
                    "type": "boolean"
                  },
                  "group_base_dn": {
                    "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{group_base_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "group_count": {
                    "description": "The number of groups for the IDP directory.",
                    "example": "{{group_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "group_members": {
                    "description": "The members of the group.",
                    "example": "{{group_members}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_name": {
                    "description": "The name of the group.",
                    "example": "{{group_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_object_classes": {
                    "description": "Group object classes that define custom LDAP mappings of users and groups.",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "group_search_filter": {
                    "description": "The search filter for the group, such as `(objectClass=group)`.",
                    "example": "{{group_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_token": {
                    "description": "The primary group token.",
                    "example": "{{group_token}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The IDP directory host.",
                    "example": "{{host}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "idp": {
                    "description": "The unique ID of the IDP to assign to the directory.",
                    "example": "{{idp}}",
                    "type": "string"
                  },
                  "kerb_realms": {
                    "description": "Kerberos realms for the IDP directory.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "kdclist": {
                          "additionalProperties": false,
                          "description": "Kerberos Key Distribution Centers (KDC) information.",
                          "properties": {
                            "ip": {
                              "description": "The IP address of the KDC.",
                              "type": "string"
                            },
                            "port": {
                              "description": "The port number of the KDC.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "ip",
                            "port"
                          ],
                          "type": "object"
                        },
                        "realm": {
                          "description": "The kerberos realm.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "kdclist",
                        "realm"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "last_sync": {
                    "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                    "example": "{{last_sync}}",
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The logout URL for the directory.",
                    "example": "{{logout_url}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "metadata": {
                    "description": "The IDP directory metadata.",
                    "example": "{{metadata}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "mfa": {
                    "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                    "enum": [
                      "on",
                      "off"
                    ],
                    "example": "{{mfa}}",
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the directory's last modification.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP directory.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameidformat": {
                    "description": "The name ID format.",
                    "example": "{{nameidformat}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_attr": {
                    "description": "The organization unit's attributes.",
                    "example": "{{ou_attr}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_filter": {
                    "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                    "example": "{{ou_filter}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_object_classes": {
                    "description": "The organization unit's object classes.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "password_change_allow": {
                    "description": "Allows password changes.",
                    "example": "{{password_change_allow}}",
                    "type": "boolean"
                  },
                  "password_change_threshold": {
                    "description": "The password change threshold in seconds.",
                    "example": "{{password_change_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_complexity_message": {
                    "description": "The password complexity message.",
                    "example": "{{password_complexity_message}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "password_expire_warn_threshold": {
                    "description": "The password expiration warning threshold in seconds.",
                    "example": "{{password_expire_warn_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_filter": {
                    "additionalProperties": false,
                    "description": "The password format requirement filters.",
                    "properties": {
                      "min-char-groups": {
                        "description": "Minimum number of character groups for the password.",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-lower": {
                        "description": "Minimum number of lowercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-num": {
                        "description": "Minimum number of digits for the password.",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-other": {
                        "description": "Minimum number of other characters for the password.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "min-special": {
                        "description": "Minimum number of special characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-upper": {
                        "description": "Minimum number of uppercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "name-check": {
                        "description": "Checks whether the password contains the user's name.",
                        "type": "boolean"
                      },
                      "uid-check": {
                        "description": "Checks whether the password contains the user ID.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "password_policy_default": {
                    "description": "The default password policy for the IDP directory.",
                    "example": "{{password_policy_default}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "password_reset_allow": {
                    "description": "Whether to allow password reset.",
                    "example": "{{password_reset_allow}}",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The port number of the IDP directory.",
                    "example": "{{port}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "resource": {
                    "description": "The IDP directory resource name.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP directory resources.",
                    "properties": {
                      "groups": {
                        "description": "The URL for group details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URL for IDP directory details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "idp": {
                        "description": "The URL for the IDP.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "users": {
                        "description": "The URL for the list of users.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "groups",
                      "href",
                      "users"
                    ],
                    "type": "object"
                  },
                  "root_dn": {
                    "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{root_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "schema_attributes": {
                    "description": "The directory schema attributes.",
                    "example": "{{schema_attributes}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "server_cert_validate": {
                    "description": "Whether to validate server certificates.",
                    "example": "{{server_cert_validate}}",
                    "type": "boolean"
                  },
                  "service": {
                    "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ],
                    "example": "{{service}}",
                    "type": "integer"
                  },
                  "signed_request": {
                    "description": "Whether the request is signed.",
                    "example": "{{signed_request}}",
                    "type": "boolean"
                  },
                  "ssl": {
                    "description": "Enables SSL.",
                    "example": "{{ssl}}",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "sync_interval": {
                    "description": "The synchronization interval of the IDP directory in seconds.",
                    "example": "{{sync_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sync_state": {
                    "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{sync_state}}",
                    "type": "integer"
                  },
                  "user_base_dn": {
                    "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{user_base_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "user_count": {
                    "description": "The total count of users in the IDP directory.",
                    "example": "{{user_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "user_display_name": {
                    "description": "The display name of a user.",
                    "example": "{{user_display_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_email": {
                    "description": "The email of a user.",
                    "example": "{{user_email}}",
                    "type": "string"
                  },
                  "user_fname": {
                    "description": "The first name of a user.",
                    "example": "{{user_fname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_lname": {
                    "description": "The last name of a user.",
                    "example": "{{user_lname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberof": {
                    "description": "The member status of a user.",
                    "example": "{{user_memberof}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberuid": {
                    "description": "The member UID of a user.",
                    "example": "{{user_memberuid}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_object_classes": {
                    "description": "The user's object class.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "user_phone_num": {
                    "description": "The phone number of a user.",
                    "example": "{{user_phone_num}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_principal": {
                    "description": "The login of a user.",
                    "example": "{{user_principal}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_samaccountname": {
                    "description": "The kerberos client principal name.",
                    "example": "{{user_samaccountname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_search_filter": {
                    "description": "The search filter for a user.",
                    "example": "{{user_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_upn": {
                    "description": "The principal name of a user.",
                    "example": "{{user_upn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the directory.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/idpdirectory.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "admin_user": "EAA\\administrator",
                  "agents": [
                    {
                      "name": "Alok-Qa-Wapp-Alpha-Connector-N-California",
                      "uuid_url": "I1QHNAjzQ6KpQiivF5bxGw"
                    },
                    {
                      "name": "Alok_OCSP_Ohio",
                      "uuid_url": "ChQHbBiZT_-mwowz2WvLTA"
                    }
                  ],
                  "api_key": "",
                  "attribute_map": {
                    "eaa.demo": "departmentNumber",
                    "eaa.test": "description",
                    "user.countryCode": "countryCode",
                    "user.email": "email",
                    "user.firstName": "givenName",
                    "user.groups": "memberOf",
                    "user.lastName": "sn",
                    "user.netbios": "msDS-PrincipalName",
                    "user.persistentId": "objectGUID",
                    "user.phoneNumber": "telephoneNumber",
                    "user.samAccountName": "sAMAccountName",
                    "user.userName": "sAMAccountName",
                    "user.userPrincipleName": "userPrincipalName"
                  },
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-aagakk45r6-ulk5u8o2ikw.login.stage.akamai-access.com",
                  "company_id": "",
                  "conf_state": 1,
                  "created_at": "2017-10-30T06:57:39.221798",
                  "description": "",
                  "dialin_sni": "dir-aagakk45r6-ulk5u8o2ikw.login.dialin.stage.akamai-access.com",
                  "directory_status": 5,
                  "directory_type": 2,
                  "domains": [],
                  "global_catalog": false,
                  "group_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "group_count": 5,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primaryGroupToken",
                  "host": "192.0.2.163",
                  "kerb_realms": [],
                  "last_sync": "2019-07-22T07:14:56.285286",
                  "logout_url": "",
                  "metadata": "",
                  "mfa": "off",
                  "modified_at": "2019-07-22T07:14:56.285600",
                  "name": "EAA Directory",
                  "nameidformat": "",
                  "ou_attr": "",
                  "ou_filter": "",
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "password_change_allow": true,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_filter": {},
                  "password_policy_default": "dc=eaa,dc=daredevils,dc=com",
                  "password_reset_allow": true,
                  "port": 636,
                  "resource": "directories",
                  "resource_uri": {
                    "groups": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/groups/",
                    "href": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                    "users": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/users/"
                  },
                  "root_dn": "eaa.daredevils.com",
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 1,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "user_count": 204,
                  "user_display_name": "displayName",
                  "user_email": "mail",
                  "user_fname": "givenName",
                  "user_lname": "sn",
                  "user_memberof": "memberOf",
                  "user_memberuid": "memberUid",
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "user_phone_num": "telephoneNumber",
                  "user_principal": "userPrincipalName",
                  "user_samaccountname": "sAMAccountName",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "userPrincipalName",
                  "uuid_url": "aAgAKK45R6-uLK5U8o2iKw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "properties": {
                    "admin_pwd": {
                      "description": "The administrator user password for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Indicates a signed authentication request.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Enables referral chasing.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the directory object.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directories": {
                      "description": "The unique IDs of the directories for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "domains": {
                      "description": "The directory's domains.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The domain name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "items": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The unique ID of the IDP to assign to the directory.",
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object"
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "password_change_allow": {
                      "description": "Allows password changes.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of digits for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The URL for the IDP.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "type": "object"
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "delete": {
        "description": "Deletes an existing directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-directory"
        },
        "operationId": "delete-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/directory.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}"
      }
    },
    "/mgmt-pop/directories/{directory_id}/apps": {
      "get": {
        "description": "Gets list of applications associated with the directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-apps"
        },
        "operationId": "get-directory-apps",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "app": {
                        "app_uuid_url": "rifZbAclREyEF7TPAoKNiw",
                        "name": "bala-okta-http"
                      },
                      "directory": {
                        "directory_uuid_url": "aAgAKK45R6-uLK5U8o2iKw",
                        "name": "EAA Directory"
                      },
                      "enable_mfa": "inherit",
                      "resource": "appdirectories",
                      "resource_uri": {
                        "apps": "/api/v1/apps/rifZbAclREyEF7TPAoKNiw",
                        "directories": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                        "href": "/api/v1/appdirectories/-eGoXVYPTbKBEDtHlgtq1w"
                      },
                      "uuid_url": "-eGoXVYPTbKBEDtHlgtq1w"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Applications.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "List of applications for the account.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise Access Application properties.",
                        "properties": {
                          "advanced_settings": {
                            "additionalProperties": false,
                            "description": "Application config version advanced settings.",
                            "properties": {
                              "acceleration": {
                                "description": "Enables traffic acceleration for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "allow_cors": {
                                "description": "Allows cross-origin resource sharing between domains. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "anonymous_server_conn_limit": {
                                "description": "The maximum number of concurrent anonymous server connections.",
                                "type": "string"
                              },
                              "anonymous_server_request_limit": {
                                "description": "The maximum number of concurrent anonymous server requests.",
                                "type": "string"
                              },
                              "app_auth": {
                                "description": "The application-facing authentication mechanism. Default is `none`.",
                                "type": "string"
                              },
                              "app_auth_domain": {
                                "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_client_cert_auth": {
                                "description": "Enables client certificate authentication. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "app_cookie_domain": {
                                "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_location": {
                                "description": "The application's location. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "app_server_read_timeout": {
                                "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                                "type": "string"
                              },
                              "authenticated_server_conn_limit": {
                                "description": "The maximum number of authenticated server connections allowed.",
                                "type": "string"
                              },
                              "authenticated_server_request_limit": {
                                "description": "The maximum number of authenticated server connections allowed.",
                                "type": "string"
                              },
                              "client_cert_auth": {
                                "description": "Enables client certificate authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_user_param": {
                                "description": "Relevant certificate parameters for client authentication.",
                                "type": "string"
                              },
                              "cookie_domain": {
                                "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                "type": "string"
                              },
                              "cors_header_list": {
                                "default": "unbounded",
                                "description": "Controls which origins are populated in the `Access-Control-Allow-Origin`` header. Defaults to `unbounded`, which echoes back the value of the `Origin` header which was sent by the browser.",
                                "type": "string"
                              },
                              "cors_max_age": {
                                "description": "The maximum time in seconds that can lapse before preflight information expires. After this time a new preflight request needs to be made for an unsafe request. ",
                                "type": "string"
                              },
                              "cors_method_list": {
                                "description": "Controls which HTTP methods are populated in the `Access-Control-Allow-Methods` header in response to a preflight request.",
                                "type": "string"
                              },
                              "cors_origin_list": {
                                "description": "Controls which origins are populated in the `Access-Control-Allow-Origin` header. The default value of `unbounded` echoes back the value of the `Origin` header sent by the browser.",
                                "type": "string"
                              },
                              "cors_support_credential": {
                                "description": "Enables the application to respond with the `Access-Control-Allow-Credentials: true` header set. Either `on` or `off`. If `off`, authentication between applications fails. If a cookie is sent to a cross-origin and the response does not include this header, the browser ignores the response. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "custom_headers": {
                                "description": "Custom headers for application connections.",
                                "items": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "domain_exception_list": {
                                "description": "A list of domains to except from content rewrite. ",
                                "type": "string"
                              },
                              "edge_authentication_enabled": {
                                "description": "Enables edge authentication for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "edge_cookie_key": {
                                "description": "The edge key to share with your ION configuration.",
                                "type": "string"
                              },
                              "external_cookie_domain": {
                                "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "force_mfa": {
                                "description": "Forces multi-factor authentication. Either `off` or `on`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "forward_ticket_granting_ticket": {
                                "description": "Enables Kerberos forward ticket grants, instead of using a keytab file. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "g2o_enabled": {
                                "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "g2o_key": {
                                "description": "The G2O key to share with your ION configuration.",
                                "nullable": true,
                                "type": "string"
                              },
                              "g2o_nonce": {
                                "description": "The G2O nonce to share with your ION configuration.",
                                "nullable": true,
                                "type": "string"
                              },
                              "health_check_fall": {
                                "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                                "type": "string"
                              },
                              "health_check_http_host_header": {
                                "description": "The host header to use for HTTP health checks.",
                                "nullable": true,
                                "type": "string"
                              },
                              "health_check_http_url": {
                                "description": "The URL to use for HTTP health checks.",
                                "type": "string"
                              },
                              "health_check_http_version": {
                                "description": "The HTTP version to use for the health check.",
                                "type": "string"
                              },
                              "health_check_interval": {
                                "description": "The interval between successive heartbeats in seconds.",
                                "type": "string"
                              },
                              "health_check_rise": {
                                "description": "The number of consecutive successful heartbeats that connectors need to receive before considering an application server to be healthy. The default is two.",
                                "type": "string"
                              },
                              "health_check_timeout": {
                                "description": "The time in seconds that the connector waits before considering a heartbeat attempt to have failed.",
                                "type": "string"
                              },
                              "health_check_type": {
                                "description": "The type of health check to perform on all the associated servers to verify service availability. Either `0` for default, `1` for http, `2` for https, `3` for tls, `4` for sslv3, `5` for `6` for tcp, or `7` for disable.",
                                "enum": [
                                  "0",
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6",
                                  "7"
                                ],
                                "type": "string"
                              },
                              "hidden_app": {
                                "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "host_key": {
                                "description": "The host secret key.",
                                "nullable": true,
                                "type": "string"
                              },
                              "hsts_age": {
                                "description": "The maximum age of the HTTP Strict Transport Security activity period, in seconds.",
                                "type": "string"
                              },
                              "http_only_cookie": {
                                "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "https_sslv3": {
                                "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "idle_close_time_seconds": {
                                "description": "The number of seconds a session may remain idle before it's closed.",
                                "type": "string"
                              },
                              "idle_conn_ceil": {
                                "description": "The maximum number of user access TLS sessions to applications pre-created by a given connector.",
                                "type": "string"
                              },
                              "idle_conn_floor": {
                                "description": "The minimum number of user access TLS sessions to applications pre-created by a given connector.",
                                "type": "string"
                              },
                              "idle_conn_step": {
                                "description": "The incremental number of user access TLS sessions to launch for applications by a given connector.",
                                "type": "string"
                              },
                              "idp_idle_expiry": {
                                "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "idp_max_expiry": {
                                "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                                "nullable": true,
                                "type": "string"
                              },
                              "ignore_bypass_mfa": {
                                "description": "Ignores MFA bypass attempts on the application. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "ignore_cname_resolution": {
                                "description": "Ignore CNAME DNS resolutions for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "inject_ajax_javascript": {
                                "description": "Enables custom JavaScript injection when rewriting websocket and XHR requests. Either `off` or `on`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "internal_host_port": {
                                "description": "The internal host port to perform CNAME redirection on. Specify `null` if not applicable.",
                                "type": "string"
                              },
                              "internal_hostname": {
                                "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "ip_access_allow": {
                                "description": "Allows access to IP based applications hosted in internal networks though EAA Client connector. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "is_ssl_verification_enabled": {
                                "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "keepalive_connection_pool": {
                                "description": "The maximum number of connections allowed in the keepalive pool.",
                                "type": "string"
                              },
                              "keepalive_enable": {
                                "description": "Enables connection keepalives. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "keepalive_timeout": {
                                "description": "The keepalive timeout period in seconds.",
                                "type": "string"
                              },
                              "kerberos_negotiate_once": {
                                "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                                "type": "string"
                              },
                              "keyed_keepalive_enable": {
                                "description": "Allows a connection between two devices to remain open, even when no data is being transmitted. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "keytab": {
                                "description": "A unique keytab for Kerberos delegation.",
                                "type": "string"
                              },
                              "load_balancing_metric": {
                                "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                                "enum": [
                                  "round-robin",
                                  "ip-hash"
                                ],
                                "type": "string"
                              },
                              "logging_enabled": {
                                "description": "Enables logging for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "login_timeout": {
                                "description": "The number of seconds before a login attempt times out.",
                                "type": "string"
                              },
                              "login_url": {
                                "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "logout_url": {
                                "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "mdc_enable": {
                                "description": "Enables multi-data center connections. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa": {
                                "description": "Enables multi-factor authentication for the application. Either `enable`, `disable`, or `inherit`.",
                                "enum": [
                                  "enable",
                                  "disable",
                                  "inherit"
                                ],
                                "type": "string"
                              },
                              "offload_onpremise_traffic": {
                                "description": "Enables on-premises users to bypass the EAA cloud to access applications. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "pass_phrase": {
                                "description": "The passphrase for the certificate. ",
                                "nullable": true,
                                "type": "string"
                              },
                              "preauth_consent": {
                                "description": "Enables consent for OIDC pre-authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "preauth_enforce_url": {
                                "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                                "type": "string"
                              },
                              "private_key": {
                                "description": "Private key for the certificate.",
                                "nullable": true,
                                "type": "string"
                              },
                              "proxy_buffer_size_kb": {
                                "description": "The size of the proxy's buffer, in kilobytes.",
                                "nullable": true,
                                "type": "string"
                              },
                              "proxy_disable_clipboard": {
                                "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "rate_limit": {
                                "description": "Enables rate limiting for the application. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "rdp_initial_program": {
                                "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "rdp_legacy_mode": {
                                "description": "Enables legacy mode RDP connections to the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "rdp_remote_apps": {
                                "description": "Remote RDP applications. ",
                                "items": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "rdp_tls1": {
                                "description": "Enables TLS v1 for RDP connections. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "refresh_sticky_cookie": {
                                "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                                "enum": [
                                  "off",
                                  "on"
                                ],
                                "type": "string"
                              },
                              "remote_spark_audio": {
                                "description": "Enables audio integration for Cisco Webex Spark application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "remote_spark_disk": {
                                "description": "Name of the disk for Cisco Webex Spark application.",
                                "type": "string"
                              },
                              "remote_spark_mapClipboard": {
                                "description": "Enables map clipboard integration for Cisco Webex Spark application. Either `on` or `off`.",
                                "enum": [
                                  "on",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "remote_spark_mapDisk": {
                                "description": "Enables map disk integration for Cisco Webex Spark application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "remote_spark_mapPrinter": {
                                "description": "Enables map printer integration for Cisco Webex Spark application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "remote_spark_printer": {
                                "description": "Name of the printer for Cisco Webex Spark application.",
                                "type": "string"
                              },
                              "remote_spark_recording": {
                                "description": "Enables recording integration for Cisco Webex Spark application. Either `true` or `false`. ",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "request_body_rewrite": {
                                "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "request_parameters": {
                                "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "saas_enabled": {
                                "description": "Enables SaaS for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "sentry_redirect_401": {
                                "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                                "type": "string"
                              },
                              "server_cert_validate": {
                                "description": "Enables EAA to fo origin server certification validation for HTTPS applications. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "server_request_burst": {
                                "description": "The server request threshold for burst monitoring.",
                                "type": "string"
                              },
                              "service_principle_name": {
                                "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "session_sticky": {
                                "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Either `true` or `false`. Specify `null` if not applicable.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "session_sticky_cookie_maxage": {
                                "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                                "type": "string"
                              },
                              "session_sticky_server_cookie": {
                                "description": "Enables refresh of a sticky cookie to ensure that the content goes to the same connector to prevent session lag or content loss in a session, even after the session length has passed. Omit it if not applicable, and the value subsequently reflects back as `null`.",
                                "nullable": true,
                                "type": "string"
                              },
                              "single_host_content_rw": {
                                "description": "Enables single host content rewrite. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_host_cookie_domain": {
                                "description": "Enables single host cookie domains. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_host_enable": {
                                "description": "Enables single host FQDN for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_host_fqdn": {
                                "description": "The single host fully qualified domain name used to host multiple applications.",
                                "type": "string"
                              },
                              "single_host_path": {
                                "description": "The single host path used to host multiple applications.",
                                "type": "string"
                              },
                              "sla_object_url": {
                                "description": "The SLA object URL to share with your ION configuration.",
                                "type": "string"
                              },
                              "spdy_enabled": {
                                "description": "Enables SPDY traffic management. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "ssh_audit_enabled": {
                                "description": "Enables ssh session auditing. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "sso": {
                                "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "sticky_agent": {
                                "description": "Enables connector persistence for connections. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "user_name": {
                                "description": "The username to use for application authentication. Specify `null` if not applicable.",
                                "nullable": true,
                                "type": "string"
                              },
                              "wapp_auth": {
                                "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                                "enum": [
                                  "form",
                                  "basic",
                                  "basic+cookie",
                                  "certificate_only"
                                ],
                                "type": "string"
                              },
                              "websocket_enabled": {
                                "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "wildcard_internal_hostname": {
                                "description": "Enables an optional wildcard string for internal hostnames. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/appconfigversion-advanced-settings.yaml"
                            }
                          },
                          "agents": {
                            "description": "Target connectors for deploying the application configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "compatible": {
                                  "description": "Whether the target connector is compatible with the application configuration.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The UUID URL of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "compatible",
                                "name",
                                "uuid_url"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "app": {
                            "additionalProperties": false,
                            "description": "Specifies the application for the application directory.",
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "app_uuid_url"
                            ],
                            "type": "object"
                          },
                          "app_category": {
                            "additionalProperties": false,
                            "description": "Specifies the category the application belongs to.",
                            "properties": {
                              "name": {
                                "description": "The name of the category.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "uuid_url": {
                                "description": "The UUID of the category.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_logo": {
                            "description": "A URL identifying the application configuration's logo icon.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "app_operational": {
                            "default": 1,
                            "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "app_profile": {
                            "default": 1,
                            "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ],
                            "type": "integer"
                          },
                          "app_status": {
                            "default": 1,
                            "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7
                            ],
                            "type": "integer"
                          },
                          "app_type": {
                            "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "auth_agent": {
                            "description": "The connector for the application.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "auth_enabled": {
                            "default": "true",
                            "description": "Enables authentication.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "auth_type": {
                            "default": 1,
                            "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "type": "integer"
                          },
                          "bookmark_url": {
                            "description": "The Okta Bookmark app URL.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "cert": {
                            "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "client_app_mode": {
                            "default": 1,
                            "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "cname": {
                            "description": "The upstream URL for a CNAME redirect.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "__Read-only__ ISO 8601 timestamp marking the application object's creation.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "data_agent": {
                            "description": "The data connector for the application.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "directories": {
                            "description": "Application directory details for validating user accounts.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the directory.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4
                                  ],
                                  "type": "integer"
                                },
                                "user_count": {
                                  "description": "The total number of user accounts configured on the directory.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "uuid_url": {
                                  "description": "The UUID URL of the directory.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "name",
                                "user_count",
                                "uuid_url"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "directory": {
                            "additionalProperties": false,
                            "description": "Directory properties.",
                            "properties": {
                              "directory_uuid_url": {
                                "description": "The directory's unique ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "domain": {
                            "default": 1,
                            "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                            "enum": [
                              1,
                              2
                            ],
                            "type": "integer"
                          },
                          "domain_suffix": {
                            "description": "The domain suffix. For example, `.com`.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                            "enum": [
                              "inherit",
                              "enable"
                            ],
                            "type": "string"
                          },
                          "host": {
                            "description": "The external default hostname for the application.",
                            "nullable": true,
                            "type": "string"
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                            "properties": {
                              "client_cert_auth": {
                                "description": "Enables client certificate authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_user_param": {
                                "description": "Relevant cert based parameters for client authentication.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "idp_id": {
                                "description": "The ID of the IDP configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the IDP configuration.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "type": {
                                "default": 1,
                                "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  9
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "modified_at": {
                            "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the application configuration.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "oidc": {
                            "description": "Enables OpenID Connect (OIDC).",
                            "type": "boolean"
                          },
                          "oidc_settings": {
                            "additionalProperties": false,
                            "description": "JSON settings to implement OIDC.",
                            "nullable": true,
                            "properties": {
                              "authorization_endpoint": {
                                "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "certs_uri": {
                                "description": "The URI of the relaying party's CA certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "check_session_iframe": {
                                "description": "The iframe URL used to check session status.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "discovery_url": {
                                "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "end_session_endpoint": {
                                "description": "The OIDC endpoint that triggers single sign out.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "jwks_uri": {
                                "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "openid_metadata": {
                                "description": "Metadata that describes the OIDC provider's configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_endpoint": {
                                "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "userinfo_endpoint": {
                                "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/app-oidc-settings.yaml"
                            }
                          },
                          "orig_tls": {
                            "description": "Whether the origin host uses TLS encryption.",
                            "type": "string"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the application origin server.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The application's origin port.",
                            "type": "integer"
                          },
                          "pop": {
                            "description": "The identifier for the target region to deploy the application.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "popName": {
                            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "rdp_version": {
                            "description": "The version of remote desktop protocol (RDP).",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_status": {
                            "additionalProperties": false,
                            "description": "The most recent status of various application resources.",
                            "properties": {
                              "cert_status": {
                                "default": 1,
                                "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ],
                                "type": "integer"
                              },
                              "cname_dns_status": {
                                "default": 1,
                                "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "type": "integer"
                              },
                              "data_agent_status": {
                                "default": 1,
                                "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "dialin_server_status": {
                                "default": 1,
                                "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "type": "integer"
                              },
                              "directories_status": {
                                "default": 1,
                                "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "host_dns_status": {
                                "default": 1,
                                "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ],
                                "type": "integer"
                              },
                              "host_reachable": {
                                "default": false,
                                "description": "Indicates whether the host is reachable.",
                                "type": "boolean"
                              },
                              "internal_host_status": {
                                "default": 1,
                                "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer"
                              },
                              "origin_host_status": {
                                "default": 1,
                                "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "type": "integer"
                              },
                              "pop_status": {
                                "default": 1,
                                "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                                "enum": [
                                  1,
                                  2
                                ],
                                "type": "integer"
                              }
                            },
                            "required": [
                              "host_reachable",
                              "directories_status",
                              "cname_dns_status",
                              "data_agent_status",
                              "cert_status",
                              "host_dns_status",
                              "origin_host_status",
                              "dialin_server_status",
                              "pop_status",
                              "internal_host_status"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/app-resource-status.yaml"
                            }
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Related resource URIs for the application.",
                            "properties": {
                              "apps": {
                                "description": "The URI location of an associated application resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "directories": {
                                "description": "The URI location of an associated directory resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "groups": {
                                "description": "The URI location of an associated group resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URI location of an associated href resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "pop": {
                                "description": "The URI location of an associated pop resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The URI location of an associated service resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sites": {
                                "description": "The URI location of an associated site resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "saml": {
                            "description": "Enables SAML for the application.",
                            "type": "boolean"
                          },
                          "saml_settings": {
                            "description": "SAML configuration for an application.",
                            "items": {
                              "additionalProperties": false,
                              "description": "SAML configuration for an application.",
                              "properties": {
                                "attrmap": {
                                  "description": "SAML attribute mapping details.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "fmt": {
                                        "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                        "enum": [
                                          "email",
                                          "basic",
                                          "unspecified",
                                          "persistent",
                                          "transient"
                                        ],
                                        "type": "string"
                                      },
                                      "fname": {
                                        "description": "The fname of the attribute.",
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "rule": {
                                        "description": "The custom rule language for the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "val": {
                                        "description": "The value of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "fmt",
                                      "src"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "idp": {
                                  "additionalProperties": false,
                                  "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                                  "properties": {
                                    "ecp_enable": {
                                      "default": false,
                                      "description": "Enables enhanced client or proxy (ECP).",
                                      "type": "boolean"
                                    },
                                    "ecp_resp_signature": {
                                      "default": false,
                                      "description": "The ECP response signature.",
                                      "type": "boolean"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID of the identity provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "resp_bind": {
                                      "default": "post",
                                      "description": "The response binding. Set to `post`.",
                                      "enum": [
                                        "post"
                                      ],
                                      "type": "string"
                                    },
                                    "self_signed": {
                                      "default": true,
                                      "description": "Enables a self-signed certificate.",
                                      "type": "boolean"
                                    },
                                    "sign_algo": {
                                      "default": "SHA256",
                                      "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                      "enum": [
                                        "SHA256",
                                        "SHA1"
                                      ],
                                      "type": "string"
                                    },
                                    "sign_cert": {
                                      "description": "The signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_key": {
                                      "description": "The signing key.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "self_signed",
                                    "ecp_resp_signature",
                                    "slo_url",
                                    "entity_id",
                                    "resp_bind",
                                    "sign_cert",
                                    "sign_algo",
                                    "ecp_enable",
                                    "metadata"
                                  ],
                                  "type": "object"
                                },
                                "sp": {
                                  "additionalProperties": false,
                                  "description": "Specifies service provider (SP) settings for the SAML configuration.",
                                  "properties": {
                                    "acs_url": {
                                      "description": "The single sign-on (ACS) URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "default_relay_state": {
                                      "description": "The default relay state. Specify `null` if you want to provide this later.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "dst_url": {
                                      "description": "The destination URL.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "encr_algo": {
                                      "default": "aes256-cbc",
                                      "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                      "enum": [
                                        "aes256-cbc",
                                        "aes128-cbc"
                                      ],
                                      "type": "string"
                                    },
                                    "encr_cert": {
                                      "description": "The response encryption certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "force_auth": {
                                      "default": false,
                                      "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                      "type": "boolean"
                                    },
                                    "logout_bind": {
                                      "description": "The request binding for single logout requests.",
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "req_bind": {
                                      "default": "redirect",
                                      "description": "The response binding. Either `redirect` or `post`.",
                                      "enum": [
                                        "redirect",
                                        "post"
                                      ],
                                      "type": "string"
                                    },
                                    "req_verify": {
                                      "default": false,
                                      "description": "Enables request verification.",
                                      "type": "boolean"
                                    },
                                    "resp_encr": {
                                      "default": false,
                                      "description": "Enables encryption on the responses.",
                                      "type": "boolean"
                                    },
                                    "sign_cert": {
                                      "description": "The request signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "slo_bind": {
                                      "default": "post",
                                      "description": "The single log-out binding. Either `post` or `redirect`.",
                                      "enum": [
                                        "post",
                                        "redirect"
                                      ],
                                      "type": "string"
                                    },
                                    "slo_req_verify": {
                                      "default": true,
                                      "description": "Enables single log-out request verification.",
                                      "type": "boolean"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 0,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entity_id",
                                    "acs_url",
                                    "req_bind",
                                    "default_relay_state",
                                    "force_auth",
                                    "req_verify",
                                    "resp_encr",
                                    "encr_cert",
                                    "encr_algo"
                                  ],
                                  "type": "object"
                                },
                                "subject": {
                                  "additionalProperties": false,
                                  "description": "Specifies the subject settings for the SAML configuration.",
                                  "properties": {
                                    "attr_source": {
                                      "description": "The subject's source attribute. ",
                                      "type": "string"
                                    },
                                    "fmt": {
                                      "description": "The name format of the attribute. Either `email`, `basic`, `persistent`, `unspecified`, or `transient`.",
                                      "enum": [
                                        "email",
                                        "basic",
                                        "unspecified",
                                        "persistent",
                                        "transient"
                                      ],
                                      "type": "string"
                                    },
                                    "rule": {
                                      "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "src": {
                                      "description": "The source of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "val": {
                                      "description": "The value of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "fmt",
                                    "src"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "sp",
                                "attrmap",
                                "idp",
                                "subject"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array",
                            "x-akamai": {
                              "file-path": "schemas/app-saml-settings.yaml"
                            }
                          },
                          "servers": {
                            "description": "Origin server details of the internal application within your network.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the origin server.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "orig_tls": {
                                  "description": "Enables TLS on the origin server.",
                                  "type": "boolean"
                                },
                                "origin_host": {
                                  "description": "The IP address or FQDN of the origin server.",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "origin_port": {
                                  "description": "The port number of the origin server.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "origin_protocol": {
                                  "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                                  "enum": [
                                    "ssh",
                                    "http"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "origin_protocol",
                                "orig_tls",
                                "origin_host",
                                "origin_port"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "services": {
                            "description": "Services enabled on the application configuration.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the service.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The unique ID of the service.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "sites": {
                            "description": "List of associated site resources.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "status": {
                            "default": 1,
                            "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7
                            ]
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "wsfed": {
                            "description": "Enables Web Services Federation (WSFED) identity federation.",
                            "type": "boolean"
                          },
                          "wsfed_settings": {
                            "description": "JSON settings to implement WSFED.",
                            "items": {
                              "additionalProperties": false,
                              "description": "Web Services Federation (WSFED) configuration for an application.",
                              "properties": {
                                "attrmap": {
                                  "description": "Mapped attributes for the WSFED configuration.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "custom_fmt": {
                                        "description": "The custom format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "fmt": {
                                        "description": "The name format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "rule": {
                                        "description": "The custom rule language for the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "val": {
                                        "description": "The value of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "fmt"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true
                                },
                                "idp": {
                                  "additionalProperties": false,
                                  "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                                  "properties": {
                                    "entity_id": {
                                      "description": "The entity ID of the identity provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_algo": {
                                      "default": "SHA256",
                                      "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                      "enum": [
                                        "SHA256",
                                        "SHA1"
                                      ],
                                      "type": "string"
                                    },
                                    "sign_cert": {
                                      "description": "The signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_key": {
                                      "description": "The signing key.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entity_id",
                                    "sign_key",
                                    "sign_cert",
                                    "sign_algo"
                                  ],
                                  "type": "object"
                                },
                                "sp": {
                                  "additionalProperties": false,
                                  "description": "Specifies service provider settings for the WSFED configuration.",
                                  "properties": {
                                    "dst_url": {
                                      "description": "The destination URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID of the service provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "resp_bind": {
                                      "default": "post",
                                      "description": "The response binding. Set to `post`.",
                                      "enum": [
                                        "post"
                                      ],
                                      "type": "string"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "token_life": {
                                      "default": 3600,
                                      "description": "The number of seconds a token is valid.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "entity_id",
                                    "slo_url",
                                    "dst_url",
                                    "resp_bind",
                                    "token_life"
                                  ],
                                  "type": "object"
                                },
                                "subject": {
                                  "additionalProperties": false,
                                  "description": "Specifies subject settings for the WSFED configuration.",
                                  "properties": {
                                    "custom_fmt": {
                                      "description": "The custom format of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "fmt": {
                                      "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                      "enum": [
                                        "email",
                                        "persistent",
                                        "unspecified",
                                        "transient"
                                      ],
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "rule": {
                                      "description": "The custom rule language for the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "src": {
                                      "description": "The source of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "val": {
                                      "description": "The value of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "fmt"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "sp",
                                "attrmap",
                                "idp",
                                "subject"
                              ],
                              "type": "object"
                            },
                            "minItems": 1,
                            "title": "Web Services Federation (WSFED) settings",
                            "type": "array",
                            "x-akamai": {
                              "file-path": "schemas/app-wsfed-settings.yaml"
                            }
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/application.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/applications.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List directory applications",
        "tags": [
          "Applications"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/apps-per-directory.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/apps"
      }
    },
    "/mgmt-pop/directories/{directory_id}/createusers": {
      "post": {
        "description": "Creates users in bulk for a cloud directory using a CSV.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-users"
        },
        "operationId": "post-users",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "example": "bjones@company.com, Bob, Jones, passwd, IT_group\nasmith@company.com, Alice, Smith, passwd, HR_corp, Payroll\njdoe@company.com, Jane, Doe, Engr_Global, People_Mgmt",
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "28801ce8-aa3a-4cd9-a48d-4680f6f8fc47"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "cmdid"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Bulk create users",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/create-users.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/createusers"
      }
    },
    "/mgmt-pop/directories/{directory_id}/deleteusers": {
      "post": {
        "description": "Deletes users in bulk for a cloud directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-users-delete"
        },
        "operationId": "post-users-delete",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  "43pATzNCTrWMbieFfGQiGw",
                  "-PMZRhFxSf-rteD60F7Z_A"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Users for bulk deletion.",
                "properties": {
                  "user_list": {
                    "description": "Users to bulk delete.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "user_list"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/users-delete-bulk.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "failed_details": [],
                  "status": "complete",
                  "success": 2,
                  "total": 2
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dir_reach_error": {
                      "description": "Error messages related directory verification issues.",
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "type": "integer"
                    },
                    "failed_details": {
                      "description": "Failed actions.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON file.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "type": "integer"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Bulk delete user",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/delete-users.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/deleteusers"
      }
    },
    "/mgmt-pop/directories/{directory_id}/groups": {
      "get": {
        "description": "Gets a list of associated groups.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-groups"
        },
        "operationId": "get-directory-groups",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "created_at": "2017-11-02T12:11:11.210052",
                      "description": "",
                      "group_type": 2,
                      "modified_at": "2017-11-02T12:11:11.210072",
                      "name": "demoGrp",
                      "resource": "groups",
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/",
                        "href": "/api/v1/groups/NMC-zgOjR7GW88Z-GCjZeQ",
                        "permissions": "/api/v1/groups/NMC-zgOjR7GW88Z-GCjZeQ/permissions/",
                        "users": "/api/v1/groups/NMC-zgOjR7GW88Z-GCjZeQ/users/"
                      },
                      "status": 1,
                      "user_count": 32,
                      "uuid_url": "NMC-zgOjR7GW88Z-GCjZeQ"
                    },
                    {
                      "created_at": "2018-06-19T07:53:24.104005",
                      "description": "",
                      "group_type": 4,
                      "modified_at": "2018-06-19T07:53:24.104024",
                      "name": "Overlay group",
                      "resource": "groups",
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/",
                        "href": "/api/v1/groups/0LtQnsKQSAWZoP-OiHl21g",
                        "permissions": "/api/v1/groups/0LtQnsKQSAWZoP-OiHl21g/permissions/",
                        "users": "/api/v1/groups/0LtQnsKQSAWZoP-OiHl21g/users/"
                      },
                      "status": 1,
                      "user_count": 1,
                      "uuid_url": "0LtQnsKQSAWZoP-OiHl21g"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of enterprise access groups.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Groups.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application group information.",
                        "properties": {
                          "created_at": {
                            "description": "ISO 8601 timestamp marking this directory object's creation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the group.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "group_type": {
                            "default": 1,
                            "description": "The type of group. Either `1` for Cloud, `2` for Active Directory, `3` for Organization Unit, or `4` for LDAP overlay.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking this directory object's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The group name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of various group resources.",
                            "properties": {
                              "directory": {
                                "description": "The URL for directory details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URL for group details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "permissions": {
                                "description": "The URL for the list of permissions.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "users": {
                                "description": "The URL for the list of users.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "directory",
                              "href",
                              "permissions",
                              "users"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "default": 1,
                            "description": "The status of the group. Either `0` for Disabled or `1` for Enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "user_count": {
                            "description": "The number of users in the group.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The unique UUID URL of the group.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "group_type",
                          "name",
                          "resource_uri",
                          "status",
                          "user_count",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/group.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/groups.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List directory groups",
        "tags": [
          "Directory groups"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/groups-per-dir.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/groups"
      }
    },
    "/mgmt-pop/directories/{directory_id}/groups/{group_id}": {
      "get": {
        "description": "Lists the details of a group.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-group"
        },
        "operationId": "get-directory-group",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "created_at": "2017-10-30T10:12:03.783055",
                  "description": "",
                  "group_type": 2,
                  "modified_at": "2017-10-30T10:12:03.783080",
                  "name": "Domain Users",
                  "resource": "groups",
                  "resource_uri": {
                    "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/",
                    "href": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw",
                    "permissions": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw/permissions/",
                    "users": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw/users/"
                  },
                  "status": 1,
                  "user_count": 175,
                  "uuid_url": "lDezLHf5QaeFYJyaWOHqAw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application group information.",
                  "properties": {
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this directory object's creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the group.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "group_type": {
                      "default": 1,
                      "description": "The type of group. Either `1` for Cloud, `2` for Active Directory, `3` for Organization Unit, or `4` for LDAP overlay.",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "type": "integer"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this directory object's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The group name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various group resources.",
                      "properties": {
                        "directory": {
                          "description": "The URL for directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "permissions": {
                          "description": "The URL for the list of permissions.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "directory",
                        "href",
                        "permissions",
                        "users"
                      ],
                      "type": "object"
                    },
                    "status": {
                      "default": 1,
                      "description": "The status of the group. Either `0` for Disabled or `1` for Enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "user_count": {
                      "description": "The number of users in the group.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the group.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "group_type",
                    "name",
                    "resource_uri",
                    "status",
                    "user_count",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/group.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a directory group",
        "tags": [
          "Directory groups"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each group.",
          "example": "{{group_id}}",
          "in": "path",
          "name": "group_id",
          "required": true,
          "schema": {
            "example": "umtuOBTPRGSj8bSbDgJ7ng",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/group-id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/group.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/groups/{group_id}"
      }
    },
    "/mgmt-pop/directories/{directory_id}/groups/{group_id}/users": {
      "get": {
        "description": "Gets a list of users for a group.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-group-users"
        },
        "operationId": "get-directory-group-users",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=20",
                    "offset": 0,
                    "previous": null,
                    "total_count": 175
                  },
                  "objects": [
                    {
                      "description": "",
                      "group": {
                        "group_uuid_url": "lDezLHf5QaeFYJyaWOHqAw",
                        "name": "Domain Users"
                      },
                      "name": "",
                      "resource_uri": {
                        "groups": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw",
                        "href": "/api/v1/groupmembership/7RBSRcmaQqq0YEUClWqL_w",
                        "users": "/api/v1/users/Cjy9Gxw2RpaKh8NrMo8_Lw"
                      },
                      "status": 1,
                      "user": {
                        "created_at": "2018-06-29T18:11:29.074899",
                        "display_name": "",
                        "email": "jkowalski",
                        "first_name": "Zach",
                        "last_name": "Doe",
                        "normalized_attributes": {
                          "eaa.demo": "",
                          "eaa.test": "",
                          "eaa.userName": "sqauser12@eaaprod.daredevils.com",
                          "user.countryCode": 0,
                          "user.email": "",
                          "user.firstName": "zach",
                          "user.groups": [],
                          "user.lastName": "smith",
                          "user.netbios": "EAA_lab",
                          "user.persistentId": "b232a4d4-50ec-4338-a4e0-296aca4c391f",
                          "user.phoneNumber": "",
                          "user.samAccountName": "sqauser12",
                          "user.userName": "sqa_zsmith",
                          "user.userPrincipleName": "sqa_zsmith@eaalab.daredevils.com"
                        },
                        "user_uuid_url": "Cjy9Gxw2RpaKh8NrMo8_Lw",
                        "username": "afero@eaaprod.daredevils.com"
                      },
                      "uuid_url": "7RBSRcmaQqq0YEUClWqL_w"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Group users.",
                  "properties": {
                    "ListView": {
                      "additionalProperties": false,
                      "description": "List view properties.",
                      "properties": {
                        "meta": {
                          "description": "Paging properties.",
                          "type": "string"
                        },
                        "objects": {
                          "description": "Group users.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging properties.",
                      "properties": {
                        "limit": {
                          "description": "Used for pagination. The total number of list members after the offset in the request.",
                          "type": "integer"
                        },
                        "next": {
                          "description": "URI of the next page relative to the current page settings.",
                          "type": "string"
                        },
                        "offset": {
                          "description": "Used for pagination. Indicates the first member of the underlying object list in the request.",
                          "type": "integer"
                        },
                        "previous": {
                          "description": "URI of the previous page relative to the current page settings.",
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "Total item count for the collection.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "objects": {
                      "description": "Group users.",
                      "items": {
                        "additionalProperties": true,
                        "description": "EAA group user data.",
                        "properties": {
                          "country_code": {
                            "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "description": {
                            "description": "A description of the group membership.",
                            "nullable": true,
                            "type": "string"
                          },
                          "group": {
                            "additionalProperties": false,
                            "description": "Group properties.",
                            "properties": {
                              "group_uuid_url": {
                                "description": "The group ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The group name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "name": {
                            "description": "The group membership name.",
                            "nullable": true,
                            "type": "string"
                          },
                          "normalized_attributes": {
                            "additionalProperties": true,
                            "description": "The user's normalized attributes.",
                            "properties": {
                              "eaa.demo": {
                                "description": "The user's EAA demo name.",
                                "type": "string"
                              },
                              "eaa.test": {
                                "description": "The user's EAA test name.",
                                "type": "string"
                              },
                              "eaa.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.countryCode": {
                                "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "user.email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "user.firstName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.groups": {
                                "description": "The groups the user belongs to.",
                                "items": {
                                  "type": "string"
                                },
                                "minItems": 0,
                                "type": "array"
                              },
                              "user.lastName": {
                                "description": "The user's last name.",
                                "type": "string"
                              },
                              "user.netbios": {
                                "description": "The user's NetBIOS name.",
                                "type": "string"
                              },
                              "user.persistentId": {
                                "description": "The user's unique persistent ID.",
                                "type": "string"
                              },
                              "user.phoneNumber": {
                                "description": "The user's phone number.",
                                "type": "string"
                              },
                              "user.samAccountName": {
                                "description": "The user's kerberos client principal name.",
                                "type": "string"
                              },
                              "user.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.userPrincipleName": {
                                "description": "The user's principle name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "A plural bundle of navigable hypermedia links to other API resources.",
                            "properties": {
                              "groups": {
                                "description": "The service group URI.",
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "type": "string"
                              },
                              "users": {
                                "description": "The service user URI.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "href",
                              "groups",
                              "users"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "user": {
                            "additionalProperties": false,
                            "description": "Group user properties.",
                            "properties": {
                              "created_at": {
                                "description": "ISO 8601 timestamp marking the user's creation.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "The user's display name.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The user's first name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "last_admin_login": {
                                "description": "ISO 8601 timestamp marking the admin user's last login.",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "last_name": {
                                "description": "The user's last name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "mfa": {
                                "additionalProperties": false,
                                "description": "Multifactor authentication settings for the user.",
                                "properties": {
                                  "admin_mfa": {
                                    "description": "Enables administrator MFA.",
                                    "type": "boolean"
                                  },
                                  "login_mfa": {
                                    "description": "Enables login MFA.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "admin_mfa",
                                  "login_mfa"
                                ],
                                "type": "object"
                              },
                              "normalized_attributes": {
                                "additionalProperties": true,
                                "description": "The user's normalized attributes.",
                                "properties": {
                                  "eaa.demo": {
                                    "description": "The user's EAA demo name.",
                                    "type": "string"
                                  },
                                  "eaa.test": {
                                    "description": "The user's EAA test name.",
                                    "type": "string"
                                  },
                                  "eaa.userName": {
                                    "description": "The username.",
                                    "type": "string"
                                  },
                                  "user.countryCode": {
                                    "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "user.email": {
                                    "description": "The user's email address.",
                                    "type": "string"
                                  },
                                  "user.firstName": {
                                    "description": "The username.",
                                    "type": "string"
                                  },
                                  "user.groups": {
                                    "description": "The groups the user belongs to.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  },
                                  "user.lastName": {
                                    "description": "The user's last name.",
                                    "type": "string"
                                  },
                                  "user.netbios": {
                                    "description": "The user's NetBIOS name.",
                                    "type": "string"
                                  },
                                  "user.persistentId": {
                                    "description": "The user's unique persistent ID.",
                                    "type": "string"
                                  },
                                  "user.phoneNumber": {
                                    "description": "The user's phone number.",
                                    "type": "string"
                                  },
                                  "user.samAccountName": {
                                    "description": "The user's kerberos client principal name.",
                                    "type": "string"
                                  },
                                  "user.userName": {
                                    "description": "The username.",
                                    "type": "string"
                                  },
                                  "user.userPrincipleName": {
                                    "description": "The user's principle name.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "user_uuid_url": {
                                "description": "The user's unique ID.",
                                "type": "string"
                              },
                              "username": {
                                "description": "The user's username.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "user_type": {
                            "default": 1,
                            "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique ID for the user account.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "user",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/group-user.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/group-users.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List directory group users",
        "tags": [
          "Directory groups"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each group.",
          "example": "{{group_id}}",
          "in": "path",
          "name": "group_id",
          "required": true,
          "schema": {
            "example": "umtuOBTPRGSj8bSbDgJ7ng",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/group-id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/users-per-group.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/groups/{group_id}/users"
      }
    },
    "/mgmt-pop/directories/{directory_id}/reinviteusers": {
      "post": {
        "description": "Re-invite users for a cloud directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-users-reinvite"
        },
        "operationId": "post-users-reinvite",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  "a5hPUIBTTI2vkbXxDWfjaQ",
                  "43pATzNCTrWMbieFfGQiGw"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Users to re-invite in bulk.",
                "properties": {
                  "user_list": {
                    "description": "Users to re-invite.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  }
                },
                "required": [
                  "user_list"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/users-reinvite-bulk.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "a047d9cd-e36d-4f81-9abd-1250433238e2"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "cmdid"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Re-invite user to a cloud directory group",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/reinvite-users.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/reinviteusers"
      }
    },
    "/mgmt-pop/directories/{directory_id}/sync": {
      "post": {
        "description": "Synchronizes the external directory with EAA. Directories synchronize automatically every 6 hours.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-sync"
        },
        "operationId": "post-sync",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Syncing directories"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Synchronization task message.",
                  "properties": {
                    "message": {
                      "description": "A message about the directory sync operation.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/sync-dir.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Sync a directory",
        "tags": [
          "Directory administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/sync.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/sync"
      }
    },
    "/mgmt-pop/directories/{directory_id}/users": {
      "post": {
        "description": "Invite an user to a cloud directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-directory-user"
        },
        "operationId": "post-directory-user",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "email": "jperez@akamai.com",
                "first_name": "Alice",
                "last_name": "Smith"
              },
              "schema": {
                "additionalProperties": false,
                "description": "List of IDPs.",
                "properties": {
                  "email": {
                    "description": "The user's email address.",
                    "example": "{{email}}",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "First name of the user.",
                    "example": "{{first_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last name of the user.",
                    "example": "{{last_name}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "first_name",
                  "last_name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/invite-dir-users.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "a047d9cd-e36d-4f81-9abd-1250433238e2"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dir_status": {
                      "description": "The directory status. ",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "cmdid"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Invite an user to a directory group",
        "tags": [
          "User administration"
        ]
      },
      "get": {
        "description": "Gets a list of users for a directory. Returns a maximum of 1000 users per request. Use the `limit` and `offset` parameters to request the next 1000 users.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-users"
        },
        "operationId": "get-directory-users",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=20",
                    "offset": 0,
                    "previous": null,
                    "total_count": 204
                  },
                  "objects": [
                    {
                      "attrib_hash": "49a5237caf14789fab7635cd9105aa58",
                      "country_code": 0,
                      "created_at": "2017-10-30T10:12:05.261965",
                      "display_name": "",
                      "dn": "CN=newuser12,CN=Users,DC=eaa,DC=daredevils,DC=com",
                      "email": "szhang",
                      "first_name": "Albert",
                      "last_accessed_tenant_uuid_url": null,
                      "last_admin_login": null,
                      "last_login": null,
                      "last_name": "Smith",
                      "mfa": {
                        "admin_mfa": false,
                        "login_mfa": true
                      },
                      "mfa_reset": false,
                      "modified_at": "2019-07-02T13:55:20.880278",
                      "netbios": "EAA",
                      "normalized_attributes": {
                        "eaa.demo": "",
                        "eaa.test": "",
                        "eaa.userName": "newuser12@eaa.daredevils.com",
                        "user.countryCode": 0,
                        "user.email": "",
                        "user.firstName": "asmith",
                        "user.groups": [
                          "CN=demogroup,CN=Users,DC=eaa,DC=daredevils,DC=com"
                        ],
                        "user.lastName": "",
                        "user.netbios": "EAA",
                        "user.persistentId": "21f7150a-499f-4c87-833e-16818146bd5d",
                        "user.phoneNumber": "",
                        "user.samAccountName": "asmith",
                        "user.userName": "asmith",
                        "user.userPrincipleName": "newuser12@eaa.daredevils.com"
                      },
                      "password": null,
                      "password_set": false,
                      "phone_num": "",
                      "registered": false,
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                        "groups": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/groups/",
                        "href": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg",
                        "permissions": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/permissions/"
                      },
                      "samaccountname": "bjones",
                      "status": 0,
                      "upn": "newuser12@eaa.daredevils.com",
                      "url_timestamp": "2017-10-30T10:12:05.262165",
                      "url_valid": false,
                      "user_type": 2,
                      "username": "adevi@eaa.daredevils.com",
                      "uuid_url": "P0M1yazIRsWaod0sMt2sGg"
                    },
                    {
                      "attrib_hash": "5cb5de559077a277635c233896c9c2d8",
                      "country_code": 0,
                      "created_at": "2017-10-30T10:12:05.262296",
                      "display_name": "",
                      "dn": "CN=newuser10,CN=Users,DC=eaa,DC=daredevils,DC=com",
                      "email": "adevi",
                      "first_name": "Charles",
                      "last_accessed_tenant_uuid_url": null,
                      "last_admin_login": null,
                      "last_login": null,
                      "last_name": "Miller",
                      "mfa": {
                        "admin_mfa": false,
                        "login_mfa": true
                      },
                      "mfa_reset": false,
                      "modified_at": "2019-07-02T13:55:20.617409",
                      "netbios": "EAA",
                      "normalized_attributes": {
                        "eaa.demo": "",
                        "eaa.test": "",
                        "eaa.userName": "newuser10@eaa.daredevils.com",
                        "user.countryCode": 0,
                        "user.email": "",
                        "user.firstName": "newuser10",
                        "user.groups": [
                          "CN=alokgrp,CN=Users,DC=eaa,DC=daredevils,DC=com"
                        ],
                        "user.lastName": "",
                        "user.netbios": "EAA",
                        "user.persistentId": "ec34e98c-8caf-45b8-ac61-e1f97221f53b",
                        "user.phoneNumber": "",
                        "user.samAccountName": "bjones",
                        "user.userName": "newuser10",
                        "user.userPrincipleName": "newuser10@eaa.daredevils.com"
                      },
                      "password": null,
                      "password_set": false,
                      "phone_num": "",
                      "registered": false,
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                        "groups": "/api/v1/users/SejVnwliRfSmlpV3oo2IRA/groups/",
                        "href": "/api/v1/users/SejVnwliRfSmlpV3oo2IRA",
                        "permissions": "/api/v1/users/SejVnwliRfSmlpV3oo2IRA/permissions/"
                      },
                      "samaccountname": "zsmith",
                      "status": 0,
                      "upn": "newuser10@eaa.daredevils.com",
                      "url_timestamp": "2017-10-30T10:12:05.262469",
                      "url_valid": false,
                      "user_type": 2,
                      "username": "adevi@eaa.daredevils.com",
                      "uuid_url": "SejVnwliRfSmlpV3oo2IRA"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of directory users.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Directory users.",
                      "items": {
                        "additionalProperties": true,
                        "description": "EAA group user data.",
                        "properties": {
                          "country_code": {
                            "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "display_name": {
                            "description": "The user's display name.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "first_name": {
                            "description": "The user's first name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "last_admin_login": {
                            "description": "ISO 8601 timestamp marking the admin user's last login.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "last_name": {
                            "description": "The user's last name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "mfa": {
                            "additionalProperties": false,
                            "description": "Multifactor authentication settings for the user.",
                            "properties": {
                              "admin_mfa": {
                                "description": "Enables administrator MFA.",
                                "type": "boolean"
                              },
                              "login_mfa": {
                                "description": "Enables login MFA.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "admin_mfa",
                              "login_mfa"
                            ],
                            "type": "object"
                          },
                          "normalized_attributes": {
                            "additionalProperties": true,
                            "description": "The user's normalized attributes.",
                            "properties": {
                              "eaa.demo": {
                                "description": "The user's EAA demo name.",
                                "type": "string"
                              },
                              "eaa.test": {
                                "description": "The user's EAA test name.",
                                "type": "string"
                              },
                              "eaa.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.countryCode": {
                                "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "user.email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "user.firstName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.groups": {
                                "description": "The groups the user belongs to.",
                                "items": {
                                  "type": "string"
                                },
                                "minItems": 0,
                                "type": "array"
                              },
                              "user.lastName": {
                                "description": "The user's last name.",
                                "type": "string"
                              },
                              "user.netbios": {
                                "description": "The user's NetBIOS name.",
                                "type": "string"
                              },
                              "user.persistentId": {
                                "description": "The user's unique persistent ID.",
                                "type": "string"
                              },
                              "user.phoneNumber": {
                                "description": "The user's phone number.",
                                "type": "string"
                              },
                              "user.samAccountName": {
                                "description": "The user's kerberos client principal name.",
                                "type": "string"
                              },
                              "user.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.userPrincipleName": {
                                "description": "The user's principle name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "user_type": {
                            "default": 1,
                            "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique ID for the user account.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "normalized_attributes",
                          "uuid_url",
                          "user_type"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/user.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/users.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List directory users",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/users.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/users"
      }
    },
    "/mgmt-pop/directories/{directory_id}/users/autocomplete": {
      "get": {
        "description": "Lists user email addresses matching the given string.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-users-autocomplete"
        },
        "operationId": "get-directory-users-autocomplete",
        "parameters": [
          {
            "description": "Autocomplete string.",
            "example": "{{q}}",
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "example": "abc",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/q-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "abc",
                  "abc@eaa.daredevils.com",
                  "acluser1",
                  "acluser1@eaa.daredevils.com",
                  "acluser2",
                  "acluser2@eaa.daredevils.com",
                  "alok.nag",
                  "alok.nag@eaa.daredevils.com",
                  "aloknag@eaa.daredevils.com"
                ],
                "schema": {
                  "description": "User email addresses matching the query string.",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/users-autocomplete.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List users using autocomplete",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/auto-complete.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/users/autocomplete"
      }
    },
    "/mgmt-pop/directories/{directory_id}/users/byname/{user_id}": {
      "get": {
        "description": "Gets details of a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-user-details"
        },
        "operationId": "get-directory-user-details",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "attrib_hash": "49a5237caf14789fab7635cd9105aa58",
                  "country_code": 0,
                  "created_at": "2017-10-30T10:12:05.261965",
                  "display_name": "",
                  "dn": "CN=newuser12,CN=Users,DC=eaa,DC=daredevils,DC=com",
                  "email": "hgildong",
                  "first_name": "Bob",
                  "last_accessed_tenant_uuid_url": null,
                  "last_admin_login": null,
                  "last_login": null,
                  "last_name": "Jones",
                  "mfa": {
                    "admin_mfa": false,
                    "login_mfa": true
                  },
                  "mfa_reset": false,
                  "modified_at": "2019-07-02T13:55:20.880278",
                  "netbios": "EAA",
                  "normalized_attributes": {
                    "eaa.demo": "",
                    "eaa.test": "",
                    "eaa.userName": "newuser12@eaa.daredevils.com",
                    "user.countryCode": 0,
                    "user.email": "",
                    "user.firstName": "asmith",
                    "user.groups": [
                      "CN=demogroup,CN=Users,DC=eaa,DC=daredevils,DC=com"
                    ],
                    "user.lastName": "",
                    "user.netbios": "EAA",
                    "user.persistentId": "21f7150a-499f-4c87-833e-16818146bd5d",
                    "user.phoneNumber": "",
                    "user.samAccountName": "asmith",
                    "user.userName": "asmith",
                    "user.userPrincipleName": "newuser12@eaa.daredevils.com"
                  },
                  "password": null,
                  "password_set": false,
                  "phone_num": "",
                  "registered": false,
                  "resource_uri": {
                    "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                    "groups": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/groups/",
                    "href": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg",
                    "permissions": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/permissions/"
                  },
                  "samaccountname": "bjones",
                  "status": 0,
                  "upn": "newuser12@eaa.daredevils.com",
                  "url_timestamp": "2017-10-30T10:12:05.262165",
                  "url_valid": false,
                  "user_type": 2,
                  "username": "adevi@eaa.daredevils.com",
                  "uuid_url": "P0M1yazIRsWaod0sMt2sGg"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "EAA group user data.",
                  "properties": {
                    "country_code": {
                      "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "display_name": {
                      "description": "The user's display name.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_admin_login": {
                      "description": "ISO 8601 timestamp marking the admin user's last login.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the user.",
                      "properties": {
                        "admin_mfa": {
                          "description": "Enables administrator MFA.",
                          "type": "boolean"
                        },
                        "login_mfa": {
                          "description": "Enables login MFA.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "admin_mfa",
                        "login_mfa"
                      ],
                      "type": "object"
                    },
                    "normalized_attributes": {
                      "additionalProperties": true,
                      "description": "The user's normalized attributes.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "eaa.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user's unique persistent ID.",
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's kerberos client principal name.",
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "user_type": {
                      "default": 1,
                      "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "A unique ID for the user account.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "normalized_attributes",
                    "uuid_url",
                    "user_type"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a directory user",
        "tags": [
          "User administration"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each user.",
          "example": "{{user_id}}",
          "in": "path",
          "name": "user_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/user-id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/user.yaml",
        "path-info": "/mgmt-pop/directories/{directory_id}/users/byname/{user_id}"
      }
    },
    "/mgmt-pop/groupmembership": {
      "post": {
        "description": "Creates a new directory group membership.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-group-membership"
        },
        "operationId": "post-group-membership",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "accounts": [
                  "Vw2MH6W4SLCIjcEGk6L7NA",
                  "u150L5p8QxeKkBeeX_yZ_A",
                  "eYb3yec0Tda3abMqt2PVsw"
                ],
                "groups": [
                  "I8k7Tlh5RAW6pb8LSr6Tnw"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Add users to directory group in bulk.",
                "properties": {
                  "accounts": {
                    "description": "Account IDs to add to the directory group.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "groups": {
                    "description": "Unique group ID to which to add users.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "maxItems": 1,
                    "type": "array"
                  },
                  "meta": {
                    "additionalProperties": false,
                    "description": "Paging settings for requested data.",
                    "properties": {
                      "limit": {
                        "description": "The number of items requested, maximum of 250.",
                        "maximum": 250,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "next": {
                        "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "offset": {
                        "description": "The offset from the beginning of the underlying object list, starting at 0.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "previous": {
                        "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "total_count": {
                        "description": "The total count of resources that are in the underlying object list.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "next",
                      "limit",
                      "offset",
                      "previous"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/pageable.yaml"
                    }
                  }
                },
                "required": [
                  "accounts",
                  "groups"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/bulk-add-user-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "description": null,
                    "directory_service": 6,
                    "group": "I8k7Tlh5RAW6pb8LSr6Tnw",
                    "name": null,
                    "resource_uri": {
                      "groups": "/api/v1/groups/I8k7Tlh5RAW6pb8LSr6Tnw",
                      "href": "/api/v1/groupmembership/hk0s65mqSESRwl2KU6-h0A",
                      "users": "/api/v1/users/Vw2MH6W4SLCIjcEGk6L7NA"
                    },
                    "status": 1,
                    "user": "jperez",
                    "user_email": "I8k7Tlh5RAW6pb8LSr6Tnw",
                    "uuid_url": "hk0s65mqSESRwl2KU6-h0A"
                  },
                  {
                    "description": null,
                    "directory_service": 6,
                    "group": "I8k7Tlh5RAW6pb8LSr6Tnw",
                    "name": null,
                    "resource_uri": {
                      "groups": "/api/v1/groups/I8k7Tlh5RAW6pb8LSr6Tnw",
                      "href": "/api/v1/groupmembership/drz0E4hgQf2Id_9rgAHu7Q",
                      "users": "/api/v1/users/u150L5p8QxeKkBeeX_yZ_A"
                    },
                    "status": 1,
                    "user": "asingh",
                    "user_email": "I8k7Tlh5RAW6pb8LSr6Tnw",
                    "uuid_url": "drz0E4hgQf2Id_9rgAHu7Q"
                  },
                  {
                    "description": null,
                    "directory_service": 6,
                    "group": "I8k7Tlh5RAW6pb8LSr6Tnw",
                    "name": null,
                    "resource_uri": {
                      "groups": "/api/v1/groups/I8k7Tlh5RAW6pb8LSr6Tnw",
                      "href": "/api/v1/groupmembership/FieuyGrNTkW_rSPmfnI6lw",
                      "users": "/api/v1/users/eYb3yec0Tda3abMqt2PVsw"
                    },
                    "status": 1,
                    "user": "szhang",
                    "user_email": "I8k7Tlh5RAW6pb8LSr6Tnw",
                    "uuid_url": "FieuyGrNTkW_rSPmfnI6lw"
                  }
                ],
                "schema": {
                  "description": "Details of the accounts added to the group.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "description": "A description of the action.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "directory_service": {
                        "description": "The directory type for the group. Always use `6` for cloud directory. The API supports adding bulk accounts only for that type.",
                        "enum": [
                          6
                        ],
                        "type": "integer"
                      },
                      "group": {
                        "description": "The unique ID of the group to which to add users.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the group.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "resource_uri": {
                        "additionalProperties": false,
                        "description": "A bundle of navigable hypermedia links to other API resources.",
                        "properties": {
                          "groups": {
                            "description": "The group resource URL.",
                            "type": "string"
                          },
                          "href": {
                            "description": "The href resource URL.",
                            "type": "string"
                          },
                          "users": {
                            "description": "The user resource URL.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "groups",
                          "href",
                          "users"
                        ],
                        "type": "object"
                      },
                      "status": {
                        "description": "The account status. Either `0` for disabled or `1` for enabled.",
                        "enum": [
                          0,
                          1
                        ],
                        "type": "integer"
                      },
                      "user": {
                        "description": "The unique ID of the user.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user_email": {
                        "description": "The user's email address.",
                        "type": "string"
                      },
                      "uuid_url": {
                        "description": "The unique ID of the group membership.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "description",
                      "directory_service",
                      "group",
                      "name",
                      "resource_uri",
                      "status",
                      "user",
                      "user_email",
                      "uuid_url"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/bulk-add-user-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a directory group membership",
        "tags": [
          "Directory group membership"
        ]
      },
      "get": {
        "description": "Lists directory group memberships.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-group-memberships"
        },
        "operationId": "get-group-memberships",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 2,
                    "next": "?expand=true&limit=2&offset=4",
                    "offset": 2,
                    "previous": "?expand=true&limit=2&offset=0",
                    "total_count": 114764
                  },
                  "objects": [
                    {
                      "description": null,
                      "group": {
                        "group_uuid_url": "GYbYGhfjQKqSzWIMK5VHcw",
                        "name": "1k_users_group"
                      },
                      "name": null,
                      "resource_uri": {
                        "groups": "/api/v1/groups/GYbYGhfjQKqSzWIMK5VHcw",
                        "href": "/api/v1/groupmembership/xdJdjiWLRb26jSUkI0-qPQ",
                        "users": "/api/v1/users/k8bFfDTiQluq4nX7GOdgsg"
                      },
                      "status": 1,
                      "user": {
                        "created_at": "2020-03-18T05:36:58.666741",
                        "display_name": "ASmith",
                        "email": "tyamada@eaaprod.daredevils.com",
                        "first_name": "alice",
                        "last_name": "smith",
                        "normalized_attributes": {
                          "custom.6attribute": "asmith@eaa.daredevils.com",
                          "custom.employeeType": "",
                          "eaa.userName": "asmith",
                          "user.countryCode": 0,
                          "user.email": "asmith@eaa.daredevils.com",
                          "user.firstName": "alice",
                          "user.groups": [
                            "CN=1.5m_users_group,CN=Users,DC=eaa,DC=daredevils,DC=com",
                            "CN=2m_users_group,CN=Users,DC=eaa,DC=daredevils,DC=com",
                            "CN=30k_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com"
                          ],
                          "user.lastName": "smith",
                          "user.netbios": "EAA",
                          "user.persistentId": "cddc0d21-fdc9-4f62-a5d6-52285859f0a3",
                          "user.phoneNumber": [],
                          "user.samAccountName": "asmith_HR",
                          "user.userPrincipleName": "2m_user_441@eaa.daredevils.com"
                        },
                        "user_uuid_url": "k8bFfDTiQluq4nX7GOdgsg",
                        "username": "mrossi"
                      },
                      "uuid_url": "xdJdjiWLRb26jSUkI0-qPQ"
                    },
                    {
                      "description": null,
                      "group": {
                        "group_uuid_url": "GYbYGhfjQKqSzWIMK5VHcw",
                        "name": "1k_users_group"
                      },
                      "name": null,
                      "resource_uri": {
                        "groups": "/api/v1/groups/GYbYGhfjQKqSzWIMK5VHcw",
                        "href": "/api/v1/groupmembership/gn-9VpqlSNqK9sTqoK1LfQ",
                        "users": "/api/v1/users/DPptf5lxSvOtZ0t1jwOQ3A"
                      },
                      "status": 1,
                      "user": {
                        "created_at": "2020-03-18T05:36:58.666925",
                        "display_name": "",
                        "email": "jkowalski@eaaprod.daredevils.com",
                        "first_name": "Bob",
                        "last_name": "Jones",
                        "normalized_attributes": {
                          "custom.emailattribute": "bjones@eaaprod.daredevils.com",
                          "custom.employeeType": "FTE",
                          "eaa.userName": "bjones",
                          "user.countryCode": 0,
                          "user.email": "bjones@eaaprod.daredevils.com",
                          "user.firstName": "Bob",
                          "user.groups": [
                            "CN=100_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com",
                            "CN=1.3m_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com",
                            "CN=100k_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com"
                          ],
                          "user.lastName": "Jones",
                          "user.netbios": "eaaprod",
                          "user.persistentId": "927f4527-40de-4798-9772-1762ef4f6a59",
                          "user.phoneNumber": [],
                          "user.samAccountName": "bjones_qa",
                          "user.userPrincipleName": "bjones2@eaaprod.daredevils.com"
                        },
                        "user_uuid_url": "DPptf5lxSvOtZ0t1jwOQ3A",
                        "username": "alfulani"
                      },
                      "uuid_url": "gn-9VpqlSNqK9sTqoK1LfQ"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Group memberships.",
                  "properties": {
                    "ListView": {
                      "additionalProperties": false,
                      "description": "List view settings.",
                      "properties": {
                        "meta": {
                          "description": "List view paging properties.",
                          "type": "string"
                        },
                        "objects": {
                          "description": "Group memberships.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging properties.",
                      "properties": {
                        "limit": {
                          "description": "Used for pagination. The total number of list members after the offset in the request.",
                          "type": "integer"
                        },
                        "next": {
                          "description": "URI of the next page relative to the current page settings.",
                          "type": "string"
                        },
                        "offset": {
                          "description": "Used for pagination. Indicates the first member of the underlying object list in the request.",
                          "type": "integer"
                        },
                        "previous": {
                          "description": "URI of the previous page relative to the current page settings.",
                          "type": "string"
                        },
                        "total_count": {
                          "description": "Total item count for the collection.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "objects": {
                      "description": "Group memberships.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Group membership information.",
                        "properties": {
                          "description": {
                            "description": "A description of the group membership.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "group": {
                            "additionalProperties": false,
                            "description": "Group members.",
                            "properties": {
                              "group_uuid_url": {
                                "description": "The group ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The group name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "name": {
                            "description": "The group membership name.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "A plural bundle of navigable hypermedia links to other API resources.",
                            "properties": {
                              "groups": {
                                "description": "The service group URI.",
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "type": "string"
                              },
                              "users": {
                                "description": "The service user URI.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "href",
                              "groups",
                              "users"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "user": {
                            "additionalProperties": false,
                            "description": "Group user properties.",
                            "properties": {
                              "created_at": {
                                "description": "ISO 8601 timestamp marking the user's creation.",
                                "type": "string"
                              },
                              "display_name": {
                                "description": "The user's display name.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The user's first name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "last_admin_login": {
                                "description": "ISO 8601 timestamp marking the admin user's last login.",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "last_name": {
                                "description": "The user's last name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "mfa": {
                                "additionalProperties": false,
                                "description": "Multifactor authentication settings for the user.",
                                "properties": {
                                  "admin_mfa": {
                                    "description": "Enables administrator MFA.",
                                    "type": "boolean"
                                  },
                                  "login_mfa": {
                                    "description": "Enables login MFA.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "admin_mfa",
                                  "login_mfa"
                                ],
                                "type": "object"
                              },
                              "normalized_attributes": {
                                "additionalProperties": true,
                                "description": "The user's normalized attributes.",
                                "properties": {
                                  "eaa.demo": {
                                    "description": "The user's EAA demo name.",
                                    "type": "string"
                                  },
                                  "eaa.test": {
                                    "description": "The user's EAA test name.",
                                    "type": "string"
                                  },
                                  "eaa.userName": {
                                    "description": "The username.",
                                    "type": "string"
                                  },
                                  "user.countryCode": {
                                    "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "user.email": {
                                    "description": "The user's email address.",
                                    "type": "string"
                                  },
                                  "user.firstName": {
                                    "description": "The username.",
                                    "type": "string"
                                  },
                                  "user.groups": {
                                    "description": "The groups the user belongs to.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  },
                                  "user.lastName": {
                                    "description": "The user's last name.",
                                    "type": "string"
                                  },
                                  "user.netbios": {
                                    "description": "The user's NetBIOS name.",
                                    "type": "string"
                                  },
                                  "user.persistentId": {
                                    "description": "The user's unique persistent ID.",
                                    "type": "string"
                                  },
                                  "user.phoneNumber": {
                                    "description": "The user's phone number.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "user.samAccountName": {
                                    "description": "The user's kerberos client principal name.",
                                    "type": "string"
                                  },
                                  "user.userName": {
                                    "description": "The username.",
                                    "type": "string"
                                  },
                                  "user.userPrincipleName": {
                                    "description": "The user's principle name.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "user_uuid_url": {
                                "description": "The user's unique ID.",
                                "type": "string"
                              },
                              "username": {
                                "description": "The user's username.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "uuid_url": {
                            "description": "The group membership's unique ID.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "name"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/groupmembership.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/groupmemberships.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List directory group memberships",
        "tags": [
          "Directory group membership"
        ]
      },
      "x-akamai": {
        "file-path": "paths/group-memberships.yaml",
        "path-info": "/mgmt-pop/groupmembership"
      }
    },
    "/mgmt-pop/groupmembership/{groupmembership_id}": {
      "get": {
        "description": "Gets a single group membership.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-group-membership"
        },
        "operationId": "get-group-membership",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": null,
                  "name": null,
                  "resource_uri": {
                    "groups": "/api/v1/groups/GYbYGhfjQKqSzWIMK5VHcw",
                    "href": "/api/v1/groupmembership/xdJdjiWLRb26jSUkI0-qPQ",
                    "users": "/api/v1/users/k8bFfDTiQluq4nX7GOdgsg"
                  },
                  "status": 1,
                  "uuid_url": "xdJdjiWLRb26jSUkI0-qPQ"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Group membership information.",
                  "properties": {
                    "description": {
                      "description": "A description of the group membership.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "group": {
                      "additionalProperties": false,
                      "description": "Group members.",
                      "properties": {
                        "group_uuid_url": {
                          "description": "The group ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The group name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "description": "The group membership name.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "properties": {
                        "groups": {
                          "description": "The service group URI.",
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "users": {
                          "description": "The service user URI.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "groups",
                        "users"
                      ],
                      "type": "object"
                    },
                    "status": {
                      "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "user": {
                      "additionalProperties": false,
                      "description": "Group user properties.",
                      "properties": {
                        "created_at": {
                          "description": "ISO 8601 timestamp marking the user's creation.",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "The user's display name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "first_name": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "last_admin_login": {
                          "description": "ISO 8601 timestamp marking the admin user's last login.",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "last_name": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "mfa": {
                          "additionalProperties": false,
                          "description": "Multifactor authentication settings for the user.",
                          "properties": {
                            "admin_mfa": {
                              "description": "Enables administrator MFA.",
                              "type": "boolean"
                            },
                            "login_mfa": {
                              "description": "Enables login MFA.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "admin_mfa",
                            "login_mfa"
                          ],
                          "type": "object"
                        },
                        "normalized_attributes": {
                          "additionalProperties": true,
                          "description": "The user's normalized attributes.",
                          "properties": {
                            "eaa.demo": {
                              "description": "The user's EAA demo name.",
                              "type": "string"
                            },
                            "eaa.test": {
                              "description": "The user's EAA test name.",
                              "type": "string"
                            },
                            "eaa.userName": {
                              "description": "The username.",
                              "type": "string"
                            },
                            "user.countryCode": {
                              "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "user.email": {
                              "description": "The user's email address.",
                              "type": "string"
                            },
                            "user.firstName": {
                              "description": "The username.",
                              "type": "string"
                            },
                            "user.groups": {
                              "description": "The groups the user belongs to.",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "user.lastName": {
                              "description": "The user's last name.",
                              "type": "string"
                            },
                            "user.netbios": {
                              "description": "The user's NetBIOS name.",
                              "type": "string"
                            },
                            "user.persistentId": {
                              "description": "The user's unique persistent ID.",
                              "type": "string"
                            },
                            "user.phoneNumber": {
                              "description": "The user's phone number.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "user.samAccountName": {
                              "description": "The user's kerberos client principal name.",
                              "type": "string"
                            },
                            "user.userName": {
                              "description": "The username.",
                              "type": "string"
                            },
                            "user.userPrincipleName": {
                              "description": "The user's principle name.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "user_uuid_url": {
                          "description": "The user's unique ID.",
                          "type": "string"
                        },
                        "username": {
                          "description": "The user's username.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "uuid_url": {
                      "description": "The group membership's unique ID.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "name"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/groupmembership.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a directory group membership",
        "tags": [
          "Directory group membership"
        ]
      },
      "delete": {
        "description": "Deletes an existing group membership.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-group-membership"
        },
        "operationId": "delete-group-membership",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Successful"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "Group membership user deletion response.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/groupmembership-delete-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Delete a directory group membership",
        "tags": [
          "Directory group membership"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier of each group membership.",
          "example": "{{groupmembership_id}}",
          "in": "path",
          "name": "groupmembership_id",
          "required": true,
          "schema": {
            "example": "xdJdjiWLRb26jSUkI0-qPQ",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/groupmembership-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/group-membership.yaml",
        "path-info": "/mgmt-pop/groupmembership/{groupmembership_id}"
      }
    },
    "/mgmt-pop/idp": {
      "post": {
        "description": "Creates a new IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp"
        },
        "operationId": "post-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "idp_type": 2,
                "name": "IDP"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Identity provider (IDP) configuration settings.",
                "properties": {
                  "app_count": {
                    "description": "Count of applications associated with the IDP.",
                    "example": "{{app_count}}",
                    "type": "integer"
                  },
                  "attribute_map": {
                    "additionalProperties": false,
                    "description": "Additional attributes to include with the `access_token` response.",
                    "properties": {
                      "eaa.demo": {
                        "description": "The user's EAA demo name.",
                        "type": "string"
                      },
                      "eaa.test": {
                        "description": "The user's EAA test name.",
                        "type": "string"
                      },
                      "user.countryCode": {
                        "description": "The user's country code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.email": {
                        "description": "The user's email address.",
                        "type": "string"
                      },
                      "user.firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.groups": {
                        "description": "The groups the user belongs to.",
                        "type": "string"
                      },
                      "user.lastName": {
                        "description": "The user's last name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.netbios": {
                        "description": "The user's NetBIOS name.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "user.persistentId": {
                        "description": "The user persistent ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.phoneNumber": {
                        "description": "The user's phone number.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.samAccountName": {
                        "description": "The user's Security Account Manager (SAM) account name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.userName": {
                        "description": "The username.",
                        "type": "string"
                      },
                      "user.userPrincipleName": {
                        "description": "The user's principle name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "auth_request_signed": {
                    "description": "Whether the authentication request is signed.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Enables authentication response encryption.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "background_image": {
                    "description": "The name of the background image.",
                    "example": "{{background_image}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "background_image_file_name": {
                    "description": "The filename of the portal background image.",
                    "example": "{{background_image_file_name}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "cert": {
                    "description": "Body of the certificate.",
                    "example": "{{cert}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "client_cert": {
                    "description": "The client certificate.",
                    "example": "{{client_cert}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "client_principle_name": {
                    "description": "The principle name expected by the server in order to authenticate a client request.",
                    "example": "{{client_principle_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID.",
                    "example": "{{company_id}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cookie_expiry": {
                    "description": "The number of minutes the session cookie expires.",
                    "example": "{{cookie_expiry}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "default_language": {
                    "description": "The default language.",
                    "example": "{{default_language}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the IDP configuration.",
                    "example": "{{description}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "directory_count": {
                    "description": "The directory count.",
                    "example": "{{directory_count}}",
                    "type": "integer"
                  },
                  "directory_list": {
                    "description": "Directory IDs for the IDP.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "dns_added": {
                    "description": "Whether the authentication request includes the DNS information.",
                    "example": "{{dns_added}}",
                    "type": "boolean"
                  },
                  "domain_suffix": {
                    "description": "The domain suffix. For example, `.com`.",
                    "example": "{{domain_suffix}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "domains": {
                    "description": "Domains for the IDP.",
                    "items": {
                      "nullable": true,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "enable_access_client": {
                    "description": "Enables the access client.",
                    "example": "{{enable_access_client}}",
                    "type": "boolean"
                  },
                  "enable_mfa": {
                    "description": "Enables multifactor authentication.",
                    "example": "{{enable_mfa}}",
                    "type": "boolean"
                  },
                  "favicon_image": {
                    "description": "The filename of the portal favicon image.",
                    "example": "{{favicon_image}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "helpdesk_email": {
                    "description": "The email address for contacting helpdesk with issues.",
                    "example": "{{helpdesk_email}}",
                    "type": "string"
                  },
                  "idp_deployed": {
                    "description": "Whether the IDP is deployed.",
                    "example": "{{idp_deployed}}",
                    "type": "boolean"
                  },
                  "idp_operational": {
                    "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{idp_operational}}",
                    "type": "integer"
                  },
                  "idp_status": {
                    "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": "{{idp_status}}",
                    "type": "integer"
                  },
                  "idp_type": {
                    "default": 1,
                    "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ],
                    "example": "{{idp_type}}",
                    "type": "integer"
                  },
                  "iwa_keytab": {
                    "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "lockout_interval": {
                    "default": 15,
                    "description": "The number of minutes to lock out the user, `15` by default.",
                    "example": "{{lockout_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "login_cname": {
                    "description": "The login cname URL.",
                    "example": "{{login_cname}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "login_dialin_server": {
                    "description": "The URL of the login dialin server.",
                    "example": "{{login_dialin_server}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "login_domain": {
                    "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                    "enum": [
                      1,
                      2
                    ],
                    "example": "{{login_domain}}",
                    "nullable": true,
                    "type": "integer"
                  },
                  "login_host": {
                    "description": "The service provider login host.",
                    "example": "{{login_host}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "login_lockout": {
                    "default": "off",
                    "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
                    "enum": [
                      "on",
                      "off"
                    ],
                    "example": "{{login_lockout}}",
                    "type": "string"
                  },
                  "login_suffix": {
                    "description": "The login suffix. For example, `.com`.",
                    "example": "{{login_suffix}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "logo": {
                    "description": "The name of the portal logo.",
                    "example": "{{logo}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "logo_file_name": {
                    "description": "The portal logo filename.",
                    "example": "{{logo_file_name}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The single logout URL for SSO.",
                    "example": "{{logout_url}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "max_login_failures": {
                    "default": 5,
                    "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                    "example": "{{max_login_failures}}",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "The metadata of the SAML type IDP.",
                    "example": "{{metadata}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "mfa_settings": {
                    "additionalProperties": false,
                    "description": "Multifactor authentication settings for the IDP configuration.",
                    "properties": {
                      "duo_akey": {
                        "description": "The Duo authentication key.",
                        "type": "string"
                      },
                      "duo_api_hostname": {
                        "description": "The hostname of the Duo API to contact for authentication.",
                        "type": "string"
                      },
                      "duo_integration_key": {
                        "description": "The unique client ID to integrate with Duo Security's MFA service.",
                        "type": "string"
                      },
                      "duo_secret_key": {
                        "description": "The secret key for Duo MFA requests.",
                        "type": "string"
                      },
                      "duo_umap": {
                        "description": "The user email used by Duo to map authentication requests.",
                        "type": "string"
                      },
                      "idp_notification_org_name": {
                        "description": "The name of the IDP authentication organization to notify.",
                        "type": "string"
                      },
                      "mfa_email_immutable": {
                        "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_email_preset": {
                        "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_factor_duo": {
                        "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_factor_email": {
                        "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_factor_sms": {
                        "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_factor_totp": {
                        "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_pci_dss": {
                        "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_sms_immutable": {
                        "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "mfa_sms_preset": {
                        "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/idp-mfa-settings.yaml"
                    }
                  },
                  "modified_at": {
                    "description": "The ISO 8601 timestamp marking the last modification.",
                    "example": "{{modified_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "multilang_fields": {
                    "description": "Multi language field for SAML message configuration.",
                    "example": "{{multilang_fields}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP configuration.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocsp": {
                    "description": "Unicode string data.",
                    "example": "{{ocsp}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "oidcclients": {
                    "description": "The unique ID of the OIDC client.",
                    "example": "{{oidcclients}}",
                    "type": "string"
                  },
                  "pop": {
                    "description": "The pop resource URI.",
                    "example": "{{pop}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "popName": {
                    "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                    "example": "{{popName}}",
                    "type": "string"
                  },
                  "resource": {
                    "description": "The IDP directory resource name.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP resources.",
                    "properties": {
                      "directories": {
                        "description": "The directories resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The href resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "idp": {
                        "description": "The IDP resource URI.",
                        "type": "string"
                      },
                      "pop": {
                        "description": "The pop resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "services": {
                        "description": "The services resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "sites": {
                        "description": "The sites resource URI.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "saml_url": {
                    "description": "The URL of the service provider SAML interface.",
                    "example": "{{saml_url}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "settings": {
                    "additionalProperties": false,
                    "description": "Login portal settings for an IDP configuration.",
                    "properties": {
                      "client_cert_auth": {
                        "description": "Enables client certificate authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "client_cert_auth_onboard_criteria": {
                        "description": "The client onboarding criteria for the IDP.",
                        "type": "string"
                      },
                      "client_cert_auth_onboard_url": {
                        "description": "Enter the URL where the user is redirected if no certificate is provided.",
                        "type": "string"
                      },
                      "client_cert_auth_validation_method": {
                        "description": "The client certificate validation method. Either `none` or `ocsp`.",
                        "enum": [
                          "none",
                          "ocsp"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "client_cert_auth_validation_responder": {
                        "description": "The URL of the OCSP validation responder. ",
                        "type": "string"
                      },
                      "client_cert_exp_warn_interval": {
                        "description": "The warning interval for certificate expiration in days.",
                        "type": "integer"
                      },
                      "client_cert_identity_username": {
                        "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "client_cert_renewal": {
                        "description": "Enables client certificate renewal. ",
                        "type": "string"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant certificate parameters for client authentication.",
                        "type": "string"
                      },
                      "eaac_bin_base_url": {
                        "description": "The base URL to download the EAA client.",
                        "type": "string"
                      },
                      "enable_authorization": {
                        "description": "Enables authorization. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "enable_device_posture": {
                        "description": "Enables device posture. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "enable_favrt": {
                        "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "enable_oidc_saml_bridging": {
                        "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "force_login": {
                        "description": "Forces user login. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "force_login_after": {
                        "description": "The timeout after which the IDP forces a re-login, in seconds.",
                        "type": "string"
                      },
                      "form_text": {
                        "additionalProperties": false,
                        "description": "Form placeholder text settings.",
                        "properties": {
                          "user_placeholder": {
                            "description": "Placeholder text to display in the form.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "g2o_enabled": {
                        "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "g2o_key": {
                        "description": "The G2O key to share with your ION configuration.",
                        "nullable": true,
                        "type": "string"
                      },
                      "g2o_nonce": {
                        "description": "The G2O nonce to share with your ION configuration.",
                        "nullable": true,
                        "type": "string"
                      },
                      "group_attr_name": {
                        "description": "IDP group attribute names.",
                        "type": "string"
                      },
                      "idp_iwa_check_cert": {
                        "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "idp_iwa_check_os": {
                        "description": "A regex pattern applied to the user agent string to include user agents.",
                        "type": "string"
                      },
                      "idp_iwa_check_prem": {
                        "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "idp_iwa_check_ua": {
                        "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "idp_iwa_krb5_spn": {
                        "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                        "type": "string"
                      },
                      "idp_iwa_mode": {
                        "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                        "enum": [
                          "always",
                          "if-capable",
                          "off"
                        ],
                        "type": "string"
                      },
                      "idp_iwa_onpremise_path": {
                        "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "infra_prem_gateways": {
                        "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "description": "The outbound gateways used by on-premise devices.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "login_terms": {
                        "description": "The terms and conditions text to display in the login portal.",
                        "nullable": true,
                        "type": "string"
                      },
                      "login_title": {
                        "description": "The text to display in the login portal tab.",
                        "nullable": true,
                        "type": "string"
                      },
                      "persistent_cookie": {
                        "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                        "type": "string"
                      },
                      "portal_background": {
                        "description": "Sets the login portal's background image file.",
                        "type": "string"
                      },
                      "portal_change_password_url": {
                        "description": "The URL for the password reset link.",
                        "type": "string"
                      },
                      "portal_logo_height": {
                        "description": "The portal logo's width in pixels.",
                        "type": "string"
                      },
                      "portal_logo_url": {
                        "description": "The URL for the portal logo image file.",
                        "type": "string"
                      },
                      "portal_logo_width": {
                        "description": "The portal logo's width in pixels.",
                        "type": "string"
                      },
                      "portal_new_user_signup_url": {
                        "description": "The URL for the new user signup link.",
                        "type": "string"
                      },
                      "portal_terms_box": {
                        "description": "Enables the login portal terms box. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "portal_theme": {
                        "description": "Sets the login portal theme name.",
                        "type": "string"
                      },
                      "portal_title_box": {
                        "description": "Enables the login portal's title box. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "single_logout_supported": {
                        "description": "Enables single logout. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "xframe_options": {
                        "description": "Enables xframe embedding. Either `true` or `false`.",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "type": "string"
                      },
                      "xframe_urls": {
                        "description": "The URLs of the sites to embed in the portal using xframes.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "url": {
                              "description": "The URLs using xframe.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "default": 1,
                    "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "trust_expiry": {
                    "description": "The number of seconds to expire the authentication request.",
                    "example": "{{trust_expiry}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "uuid_url": {
                    "description": "The unique UUID URL of the IDP configuration.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "idp_type"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/idp.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "attribute_map": {},
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "background_image": null,
                  "background_image_file_name": null,
                  "cert": null,
                  "client_cert": null,
                  "client_principle_name": "<sAMAccountName>",
                  "company_id": "regv3ds",
                  "cookie_expiry": 120,
                  "created_at": "2019-07-08T10:31:20.007541",
                  "default_language": "english",
                  "description": null,
                  "directory_count": 0,
                  "directory_list": [],
                  "dns_added": false,
                  "domain_suffix": "login.stage.sohacloud.net",
                  "domains": [],
                  "enable_access_client": false,
                  "enable_mfa": false,
                  "favicon_image": null,
                  "helpdesk_email": "contact@mail.com",
                  "idp_deployed": false,
                  "idp_operational": 1,
                  "idp_status": 1,
                  "idp_type": 2,
                  "iwa_keytab": [],
                  "lockout_interval": 1,
                  "login_cname": null,
                  "login_dialin_server": null,
                  "login_domain": 2,
                  "login_host": null,
                  "login_lockout": "off",
                  "login_suffix": "login.stage.sohacloud.net",
                  "logo": null,
                  "logo_file_name": null,
                  "logout_url": null,
                  "max_login_failures": 5,
                  "metadata": null,
                  "mfa_settings": {
                    "duo_akey": "",
                    "duo_api_hostname": "",
                    "duo_integration_key": "",
                    "duo_secret_key": "",
                    "duo_umap": "user.email",
                    "idp_notification_org_name": "",
                    "mfa_email_immutable": "false",
                    "mfa_email_preset": "false",
                    "mfa_factor_duo": "false",
                    "mfa_factor_email": "true",
                    "mfa_factor_sms": "true",
                    "mfa_factor_totp": "false",
                    "mfa_pci_dss": "false",
                    "mfa_sms_immutable": "false",
                    "mfa_sms_preset": "false"
                  },
                  "modified_at": "2019-07-08T10:31:20.139938",
                  "multilang_fields": null,
                  "name": "IDP",
                  "ocsp": null,
                  "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                  "popName": "us-west-coast-1",
                  "resource": "idp",
                  "resource_uri": {
                    "href": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A",
                    "idp": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A/idp/"
                  },
                  "saml_url": null,
                  "settings": {
                    "captive_portal": "true",
                    "client_cert_auth": "false",
                    "client_cert_auth_onboard_criteria": "nocert",
                    "client_cert_auth_onboard_url": "",
                    "client_cert_auth_validation_method": null,
                    "client_cert_auth_validation_responder": "",
                    "client_cert_exp_warn_interval": 0,
                    "client_cert_identity_username": "false",
                    "client_cert_renewal": "",
                    "client_cert_user_param": "",
                    "eaac_bin_base_url": "https://www.myclient.com/eaaclient",
                    "enable_authorization": "false",
                    "enable_device_posture": "false",
                    "enable_favrt": "false",
                    "enable_oidc_saml_bridging": "false",
                    "force_login": "true",
                    "force_login_after": 7200,
                    "form_text": {
                      "user_placeholder": "Username"
                    },
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "group_attr_name": "Group",
                    "idp_cdn_enabled": "false",
                    "idp_iwa_check_cert": "false",
                    "idp_iwa_check_os": "",
                    "idp_iwa_check_prem": "false",
                    "idp_iwa_check_ua": "false",
                    "idp_iwa_krb5_spn": "",
                    "idp_iwa_mode": "off",
                    "idp_iwa_onpremise_path": "false",
                    "infra_prem_gateways": [],
                    "login_terms": null,
                    "login_title": null,
                    "persistent_cookie": "true",
                    "portal_background": "./assets/img/body-bg.png",
                    "portal_change_password_url": "",
                    "portal_logo_height": "256",
                    "portal_logo_url": "./assets/img/logo.png",
                    "portal_logo_width": "256",
                    "portal_new_user_signup_url": "",
                    "portal_terms_box": "false",
                    "portal_theme": "bubblewrapp",
                    "portal_title_box": "false",
                    "single_logout_supported": "false",
                    "trusted_network_enable": "false",
                    "trusted_network_hostname_ip": "",
                    "trusted_network_searchdomain": "",
                    "xframe_options": "false",
                    "xframe_urls": null
                  },
                  "status": 1,
                  "trust_expiry": 365,
                  "uuid_url": "ZVZU1zvGRieOyLibfcKc-A"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "properties": {
                    "app_count": {
                      "description": "Count of applications associated with the IDP.",
                      "type": "integer"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "Additional attributes to include with the `access_token` response.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "cert": {
                      "description": "Body of the certificate.",
                      "nullable": true,
                      "type": "string"
                    },
                    "client_cert": {
                      "description": "The client certificate.",
                      "nullable": true,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directory_count": {
                      "description": "The directory count.",
                      "type": "integer"
                    },
                    "directory_list": {
                      "description": "Directory IDs for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "domains": {
                      "description": "Domains for the IDP.",
                      "items": {
                        "nullable": true,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "type": "string"
                    },
                    "idp_deployed": {
                      "description": "Whether the IDP is deployed.",
                      "type": "boolean"
                    },
                    "idp_operational": {
                      "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "idp_status": {
                      "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ],
                      "type": "integer"
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "enum": [
                        1,
                        2
                      ],
                      "nullable": true,
                      "type": "integer"
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "login_suffix": {
                      "description": "The login suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The metadata of the SAML type IDP.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "properties": {
                        "duo_akey": {
                          "description": "The Duo authentication key.",
                          "type": "string"
                        },
                        "duo_api_hostname": {
                          "description": "The hostname of the Duo API to contact for authentication.",
                          "type": "string"
                        },
                        "duo_integration_key": {
                          "description": "The unique client ID to integrate with Duo Security's MFA service.",
                          "type": "string"
                        },
                        "duo_secret_key": {
                          "description": "The secret key for Duo MFA requests.",
                          "type": "string"
                        },
                        "duo_umap": {
                          "description": "The user email used by Duo to map authentication requests.",
                          "type": "string"
                        },
                        "idp_notification_org_name": {
                          "description": "The name of the IDP authentication organization to notify.",
                          "type": "string"
                        },
                        "mfa_email_immutable": {
                          "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_email_preset": {
                          "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_duo": {
                          "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_email": {
                          "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_sms": {
                          "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_totp": {
                          "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_pci_dss": {
                          "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_sms_immutable": {
                          "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_sms_preset": {
                          "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/idp-mfa-settings.yaml"
                      }
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ocsp": {
                      "description": "Unicode string data.",
                      "nullable": true,
                      "type": "string"
                    },
                    "oidcclients": {
                      "description": "The unique ID of the OIDC client.",
                      "type": "string"
                    },
                    "pop": {
                      "description": "The pop resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "type": "string"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "settings": {
                      "additionalProperties": false,
                      "description": "Login portal settings for an IDP configuration.",
                      "properties": {
                        "captive_portal": {
                          "description": "Whether the IDP uses captive portal. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_auth_onboard_criteria": {
                          "description": "The client onboarding criteria for the IDP. ",
                          "type": "string"
                        },
                        "client_cert_auth_onboard_url": {
                          "description": "Enter the URL where the user is redirected if no certificate is provided.",
                          "type": "string"
                        },
                        "client_cert_auth_validation_method": {
                          "description": "The client certificate validation method. Either `none` or `ocsp`.",
                          "enum": [
                            "none",
                            "ocsp"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "client_cert_auth_validation_responder": {
                          "description": "The URL of the OCSP validation responder. ",
                          "type": "string"
                        },
                        "client_cert_exp_warn_interval": {
                          "description": "The warning interval for certificate expiration in days.",
                          "type": "integer"
                        },
                        "client_cert_identity_username": {
                          "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_renewal": {
                          "description": "Enables client certificate renewal. ",
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant certificate parameters for client authentication.",
                          "type": "string"
                        },
                        "eaac_bin_base_url": {
                          "description": "The base URL to download the EAA client.",
                          "type": "string"
                        },
                        "enable_authorization": {
                          "description": "Enables authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_device_posture": {
                          "description": "Enables device posture. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_favrt": {
                          "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_oidc_saml_bridging": {
                          "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "force_login": {
                          "description": "Forces user login. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "force_login_after": {
                          "description": "The timeout after which the IDP forces a re-login, in seconds.",
                          "type": "integer"
                        },
                        "form_text": {
                          "additionalProperties": false,
                          "description": "Form placeholder text settings.",
                          "properties": {
                            "user_placeholder": {
                              "description": "Placeholder text to display in the form.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "g2o_enabled": {
                          "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_key": {
                          "description": "The G2O key to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "g2o_nonce": {
                          "description": "The G2O nonce to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "group_attr_name": {
                          "description": "IDP group attribute names.",
                          "type": "string"
                        },
                        "idp_cdn_enabled": {
                          "description": "Whether CDN is enabled for the IDP. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_cert": {
                          "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_os": {
                          "description": "A regex pattern applied to the user agent string to include user agents.",
                          "type": "string"
                        },
                        "idp_iwa_check_prem": {
                          "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_ua": {
                          "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_krb5_spn": {
                          "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                          "type": "string"
                        },
                        "idp_iwa_mode": {
                          "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                          "enum": [
                            "always",
                            "if-capable",
                            "off"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_onpremise_path": {
                          "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "infra_prem_gateways": {
                          "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "description": "The outbound gateways used by on-premise devices.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "login_terms": {
                          "description": "The terms and conditions text to display in the login portal.",
                          "nullable": true,
                          "type": "string"
                        },
                        "login_title": {
                          "description": "The text to display in the login portal tab.",
                          "nullable": true,
                          "type": "string"
                        },
                        "persistent_cookie": {
                          "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                          "type": "string"
                        },
                        "portal_background": {
                          "description": "Sets the login portal's background image file.",
                          "type": "string"
                        },
                        "portal_change_password_url": {
                          "description": "The URL for the password reset link.",
                          "type": "string"
                        },
                        "portal_logo_height": {
                          "description": "The portal logo's height in pixels.",
                          "type": "string"
                        },
                        "portal_logo_url": {
                          "description": "The URL for the portal logo image file.",
                          "type": "string"
                        },
                        "portal_logo_width": {
                          "description": "The portal logo's width in pixels.",
                          "type": "string"
                        },
                        "portal_new_user_signup_url": {
                          "description": "The URL for the new user sign up link.",
                          "type": "string"
                        },
                        "portal_terms_box": {
                          "description": "Enables the login portal terms box. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "portal_theme": {
                          "description": "Sets the login portal theme name.",
                          "type": "string"
                        },
                        "portal_title_box": {
                          "description": "Enables the login portal's title box. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_logout_supported": {
                          "description": "Enables single logout. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "trusted_network_enable": {
                          "description": "Whether the IDP has enabled trusted networks. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "trusted_network_hostname_ip": {
                          "description": "The hostname or IP for the trusted networks.",
                          "type": "string"
                        },
                        "trusted_network_searchdomain": {
                          "description": "The search domain for the trusted networks.",
                          "type": "string"
                        },
                        "xframe_options": {
                          "description": "Enables xframe embedding. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "xframe_urls": {
                          "description": "The URLs of the sites to embed in the portal using xframes.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "url": {
                                "description": "The URLs using xframe.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-create-put-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create an IDP",
        "tags": [
          "IDPs"
        ]
      },
      "get": {
        "description": "Lists IDPs.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idps"
        },
        "operationId": "get-idps",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 2
                  },
                  "objects": [
                    {
                      "app_count": 0,
                      "attribute_map": {},
                      "auth_request_signed": false,
                      "auth_response_encrypt": false,
                      "background_image": null,
                      "background_image_file_name": null,
                      "cert": null,
                      "client_cert": null,
                      "client_principle_name": "<sAMAccountName>",
                      "company_id": "regv3ds",
                      "cookie_expiry": 120,
                      "created_at": "2019-07-08T10:31:20.007541",
                      "default_language": "english",
                      "description": null,
                      "directory_count": 0,
                      "directory_list": [],
                      "dns_added": false,
                      "domain_suffix": "login.stage.sohacloud.net",
                      "domains": [],
                      "enable_access_client": false,
                      "enable_mfa": false,
                      "favicon_image": null,
                      "helpdesk_email": "contact@mail.com",
                      "idp_deployed": false,
                      "idp_operational": 1,
                      "idp_status": 1,
                      "idp_type": 2,
                      "iwa_keytab": [],
                      "lockout_interval": 1,
                      "login_cname": null,
                      "login_dialin_server": null,
                      "login_domain": 2,
                      "login_host": null,
                      "login_lockout": "off",
                      "login_suffix": "login.stage.sohacloud.net",
                      "logo": null,
                      "logo_file_name": null,
                      "logout_url": null,
                      "max_login_failures": 5,
                      "metadata": null,
                      "mfa_settings": {
                        "duo_akey": "",
                        "duo_api_hostname": "",
                        "duo_integration_key": "",
                        "duo_secret_key": "",
                        "duo_umap": "user.email",
                        "idp_notification_org_name": "",
                        "mfa_email_immutable": "false",
                        "mfa_email_preset": "false",
                        "mfa_factor_duo": "false",
                        "mfa_factor_email": "true",
                        "mfa_factor_sms": "true",
                        "mfa_factor_totp": "false",
                        "mfa_pci_dss": "false",
                        "mfa_sms_immutable": "false",
                        "mfa_sms_preset": "false"
                      },
                      "modified_at": "2019-07-08T10:31:20.139938",
                      "multilang_fields": null,
                      "name": "IDP",
                      "ocsp": null,
                      "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                      "popName": "us-west-coast-1",
                      "resource": "idp",
                      "resource_uri": {
                        "href": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A",
                        "idp": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A/idp/"
                      },
                      "saml_url": null,
                      "settings": {
                        "captive_portal": "true",
                        "client_cert_auth": "false",
                        "client_cert_auth_onboard_criteria": "nocert",
                        "client_cert_auth_onboard_url": "",
                        "client_cert_auth_validation_method": null,
                        "client_cert_auth_validation_responder": "",
                        "client_cert_exp_warn_interval": 0,
                        "client_cert_identity_username": "false",
                        "client_cert_renewal": "",
                        "client_cert_user_param": "",
                        "eaac_bin_base_url": "",
                        "enable_authorization": "false",
                        "enable_device_posture": "false",
                        "enable_favrt": "false",
                        "enable_oidc_saml_bridging": "false",
                        "force_login": "true",
                        "force_login_after": 7200,
                        "form_text": {
                          "user_placeholder": "Username"
                        },
                        "g2o_enabled": "false",
                        "g2o_key": null,
                        "g2o_nonce": null,
                        "group_attr_name": "Group",
                        "idp_cdn_enabled": "false",
                        "idp_iwa_check_cert": "false",
                        "idp_iwa_check_os": "",
                        "idp_iwa_check_prem": "false",
                        "idp_iwa_check_ua": "false",
                        "idp_iwa_krb5_spn": "",
                        "idp_iwa_mode": "off",
                        "idp_iwa_onpremise_path": "false",
                        "infra_prem_gateways": [],
                        "login_terms": null,
                        "login_title": null,
                        "persistent_cookie": "true",
                        "portal_background": "./assets/img/body-bg.png",
                        "portal_change_password_url": "",
                        "portal_logo_height": "256",
                        "portal_logo_url": "./assets/img/logo.png",
                        "portal_logo_width": "256",
                        "portal_new_user_signup_url": "",
                        "portal_terms_box": "false",
                        "portal_theme": "bubblewrapp",
                        "portal_title_box": "false",
                        "single_logout_supported": "false",
                        "trusted_network_enable": "false",
                        "trusted_network_hostname_ip": "",
                        "trusted_network_searchdomain": "",
                        "xframe_options": "false",
                        "xframe_urls": null
                      },
                      "status": 1,
                      "trust_expiry": 365,
                      "uuid_url": "ZVZU1zvGRieOyLibfcKc-A"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access IDPs.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "IDPs.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Identity provider (IDP) configuration settings.",
                        "properties": {
                          "app_count": {
                            "description": "Count of applications associated with the IDP.",
                            "type": "integer"
                          },
                          "attribute_map": {
                            "additionalProperties": false,
                            "description": "Additional attributes to include with the `access_token` response.",
                            "properties": {
                              "eaa.demo": {
                                "description": "The user's EAA demo name.",
                                "type": "string"
                              },
                              "eaa.test": {
                                "description": "The user's EAA test name.",
                                "type": "string"
                              },
                              "user.countryCode": {
                                "description": "The user's country code.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "user.firstName": {
                                "description": "The user's first name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.groups": {
                                "description": "The groups the user belongs to.",
                                "type": "string"
                              },
                              "user.lastName": {
                                "description": "The user's last name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.netbios": {
                                "description": "The user's NetBIOS name.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "user.persistentId": {
                                "description": "The user persistent ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.phoneNumber": {
                                "description": "The user's phone number.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.samAccountName": {
                                "description": "The user's Security Account Manager (SAM) account name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.userPrincipleName": {
                                "description": "The user's principle name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "auth_request_signed": {
                            "description": "Whether the authentication request is signed.",
                            "type": "boolean"
                          },
                          "auth_response_encrypt": {
                            "description": "Enables authentication response encryption.",
                            "type": "boolean"
                          },
                          "background_image": {
                            "description": "The name of the background image.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "background_image_file_name": {
                            "description": "The filename of the portal background image.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "cert": {
                            "description": "Body of the certificate.",
                            "nullable": true,
                            "type": "string"
                          },
                          "client_cert": {
                            "description": "The client certificate.",
                            "nullable": true,
                            "type": "string"
                          },
                          "client_principle_name": {
                            "description": "The principle name expected by the server in order to authenticate a client request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "company_id": {
                            "description": "The company ID.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "cookie_expiry": {
                            "description": "The number of minutes the session cookie expires.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
                            "type": "string"
                          },
                          "default_language": {
                            "description": "The default language.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the IDP configuration.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "directory_count": {
                            "description": "The directory count.",
                            "type": "integer"
                          },
                          "directory_list": {
                            "description": "Directory IDs for the IDP.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "dns_added": {
                            "description": "Whether the authentication request includes the DNS information.",
                            "type": "boolean"
                          },
                          "domain_suffix": {
                            "description": "The domain suffix. For example, `.com`.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "domains": {
                            "description": "Domains for the IDP.",
                            "items": {
                              "nullable": true,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "enable_access_client": {
                            "description": "Enables the access client.",
                            "type": "boolean"
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication.",
                            "type": "boolean"
                          },
                          "favicon_image": {
                            "description": "The filename of the portal favicon image.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "helpdesk_email": {
                            "description": "The email address for contacting helpdesk with issues.",
                            "type": "string"
                          },
                          "idp_deployed": {
                            "description": "Whether the IDP is deployed.",
                            "type": "boolean"
                          },
                          "idp_operational": {
                            "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "idp_status": {
                            "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "idp_type": {
                            "default": 1,
                            "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ],
                            "type": "integer"
                          },
                          "iwa_keytab": {
                            "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "lockout_interval": {
                            "default": 15,
                            "description": "The number of minutes to lock out the user, `15` by default.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "login_cname": {
                            "description": "The login cname URL.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "login_dialin_server": {
                            "description": "The URL of the login dialin server.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "login_domain": {
                            "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                            "enum": [
                              1,
                              2
                            ],
                            "nullable": true,
                            "type": "integer"
                          },
                          "login_host": {
                            "description": "The service provider login host.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "login_lockout": {
                            "default": "off",
                            "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
                            "enum": [
                              "on",
                              "off"
                            ],
                            "type": "string"
                          },
                          "login_suffix": {
                            "description": "The login suffix. For example, `.com`.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "logo": {
                            "description": "The name of the portal logo.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "logo_file_name": {
                            "description": "The portal logo filename.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "logout_url": {
                            "description": "The single logout URL for SSO.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "max_login_failures": {
                            "default": 5,
                            "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "metadata": {
                            "description": "The metadata of the SAML type IDP.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "mfa_settings": {
                            "additionalProperties": false,
                            "description": "Multifactor authentication settings for the IDP configuration.",
                            "properties": {
                              "duo_akey": {
                                "description": "The Duo authentication key.",
                                "type": "string"
                              },
                              "duo_api_hostname": {
                                "description": "The hostname of the Duo API to contact for authentication.",
                                "type": "string"
                              },
                              "duo_integration_key": {
                                "description": "The unique client ID to integrate with Duo Security's MFA service.",
                                "type": "string"
                              },
                              "duo_secret_key": {
                                "description": "The secret key for Duo MFA requests.",
                                "type": "string"
                              },
                              "duo_umap": {
                                "description": "The user email used by Duo to map authentication requests.",
                                "type": "string"
                              },
                              "idp_notification_org_name": {
                                "description": "The name of the IDP authentication organization to notify.",
                                "type": "string"
                              },
                              "mfa_email_immutable": {
                                "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_email_preset": {
                                "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_factor_duo": {
                                "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_factor_email": {
                                "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_factor_sms": {
                                "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_factor_totp": {
                                "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_pci_dss": {
                                "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_sms_immutable": {
                                "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "mfa_sms_preset": {
                                "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/idp-mfa-settings.yaml"
                            }
                          },
                          "modified_at": {
                            "description": "The ISO 8601 timestamp marking the last modification.",
                            "nullable": true,
                            "type": "string"
                          },
                          "multilang_fields": {
                            "description": "Multi language field for SAML message configuration.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the IDP configuration.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "ocsp": {
                            "description": "Unicode string data.",
                            "nullable": true,
                            "type": "string"
                          },
                          "oidcclients": {
                            "description": "The unique ID of the OIDC client.",
                            "type": "string"
                          },
                          "pop": {
                            "description": "The pop resource URI.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "popName": {
                            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "The IDP directory resource name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of various IDP resources.",
                            "properties": {
                              "directories": {
                                "description": "The directories resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "groups": {
                                "description": "The groups resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "idp": {
                                "description": "The IDP resource URI.",
                                "type": "string"
                              },
                              "pop": {
                                "description": "The pop resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The services resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sites": {
                                "description": "The sites resource URI.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "saml_url": {
                            "description": "The URL of the service provider SAML interface.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "settings": {
                            "additionalProperties": false,
                            "description": "Login portal settings for an IDP configuration.",
                            "properties": {
                              "captive_portal": {
                                "description": "Whether the IDP uses captive portal. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_auth": {
                                "description": "Enables client certificate authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_auth_onboard_criteria": {
                                "description": "The client onboarding criteria for the IDP. ",
                                "type": "string"
                              },
                              "client_cert_auth_onboard_url": {
                                "description": "Enter the URL where the user is redirected if no certificate is provided.",
                                "type": "string"
                              },
                              "client_cert_auth_validation_method": {
                                "description": "The client certificate validation method. Either `none` or `ocsp`.",
                                "enum": [
                                  "none",
                                  "ocsp"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "client_cert_auth_validation_responder": {
                                "description": "The URL of the OCSP validation responder. ",
                                "type": "string"
                              },
                              "client_cert_exp_warn_interval": {
                                "description": "The warning interval for certificate expiration in days.",
                                "type": "integer"
                              },
                              "client_cert_identity_username": {
                                "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "client_cert_renewal": {
                                "description": "Enables client certificate renewal. ",
                                "type": "string"
                              },
                              "client_cert_user_param": {
                                "description": "Relevant certificate parameters for client authentication.",
                                "type": "string"
                              },
                              "eaac_bin_base_url": {
                                "description": "The base URL to download the EAA client.",
                                "type": "string"
                              },
                              "enable_authorization": {
                                "description": "Enables authorization. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "enable_device_posture": {
                                "description": "Enables device posture. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "enable_favrt": {
                                "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "enable_oidc_saml_bridging": {
                                "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "force_login": {
                                "description": "Forces user login. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "force_login_after": {
                                "description": "The timeout after which the IDP forces a re-login, in seconds.",
                                "type": "integer"
                              },
                              "form_text": {
                                "additionalProperties": false,
                                "description": "Form placeholder text settings.",
                                "properties": {
                                  "user_placeholder": {
                                    "description": "Placeholder text to display in the form.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "g2o_enabled": {
                                "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "g2o_key": {
                                "description": "The G2O key to share with your ION configuration.",
                                "nullable": true,
                                "type": "string"
                              },
                              "g2o_nonce": {
                                "description": "The G2O nonce to share with your ION configuration.",
                                "nullable": true,
                                "type": "string"
                              },
                              "group_attr_name": {
                                "description": "IDP group attribute names.",
                                "type": "string"
                              },
                              "idp_cdn_enabled": {
                                "description": "Whether CDN is enabled for the IDP. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "idp_iwa_check_cert": {
                                "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "idp_iwa_check_os": {
                                "description": "A regex pattern applied to the user agent string to include user agents.",
                                "type": "string"
                              },
                              "idp_iwa_check_prem": {
                                "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "idp_iwa_check_ua": {
                                "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "idp_iwa_krb5_spn": {
                                "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                                "type": "string"
                              },
                              "idp_iwa_mode": {
                                "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                                "enum": [
                                  "always",
                                  "if-capable",
                                  "off"
                                ],
                                "type": "string"
                              },
                              "idp_iwa_onpremise_path": {
                                "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "infra_prem_gateways": {
                                "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "value": {
                                      "description": "The outbound gateways used by on-premise devices.",
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "login_terms": {
                                "description": "The terms and conditions text to display in the login portal.",
                                "nullable": true,
                                "type": "string"
                              },
                              "login_title": {
                                "description": "The text to display in the login portal tab.",
                                "nullable": true,
                                "type": "string"
                              },
                              "persistent_cookie": {
                                "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                                "type": "string"
                              },
                              "portal_background": {
                                "description": "Sets the login portal's background image file.",
                                "type": "string"
                              },
                              "portal_change_password_url": {
                                "description": "The URL for the password reset link.",
                                "type": "string"
                              },
                              "portal_logo_height": {
                                "description": "The portal logo's height in pixels.",
                                "type": "string"
                              },
                              "portal_logo_url": {
                                "description": "The URL for the portal logo image file.",
                                "type": "string"
                              },
                              "portal_logo_width": {
                                "description": "The portal logo's width in pixels.",
                                "type": "string"
                              },
                              "portal_new_user_signup_url": {
                                "description": "The URL for the new user sign up link.",
                                "type": "string"
                              },
                              "portal_terms_box": {
                                "description": "Enables the login portal terms box. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "portal_theme": {
                                "description": "Sets the login portal theme name.",
                                "type": "string"
                              },
                              "portal_title_box": {
                                "description": "Enables the login portal's title box. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "single_logout_supported": {
                                "description": "Enables single logout. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "trusted_network_enable": {
                                "description": "Whether the IDP has enabled trusted networks. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "trusted_network_hostname_ip": {
                                "description": "The hostname or IP for the trusted networks.",
                                "type": "string"
                              },
                              "trusted_network_searchdomain": {
                                "description": "The search domain for the trusted networks.",
                                "type": "string"
                              },
                              "xframe_options": {
                                "description": "Enables xframe embedding. Either `true` or `false`.",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "string"
                              },
                              "xframe_urls": {
                                "description": "The URLs of the sites to embed in the portal using xframes.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "url": {
                                      "description": "The URLs using xframe.",
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "default": 1,
                            "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7
                            ],
                            "type": "integer"
                          },
                          "trust_expiry": {
                            "description": "The number of seconds to expire the authentication request.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The unique UUID URL of the IDP configuration.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "idp_type"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/idp-create-put-response.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-list.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List IDPs",
        "tags": [
          "IDPs"
        ]
      },
      "x-akamai": {
        "file-path": "paths/idps.yaml",
        "path-info": "/mgmt-pop/idp"
      }
    },
    "/mgmt-pop/idp/{idp_id}": {
      "get": {
        "description": "Gets a single IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp"
        },
        "operationId": "get-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_count": 2,
                  "attribute_map": {},
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "background_image": "",
                  "background_image_file_name": "",
                  "cert": null,
                  "client_cert": null,
                  "client_principle_name": "<sAMAccountName>",
                  "company_id": "regv3ds",
                  "cookie_expiry": 120,
                  "created_at": "2019-03-20T10:28:23.080189",
                  "default_language": "english",
                  "description": null,
                  "directory_count": 1,
                  "directory_list": [
                    "GbIfrXwtTKaqBrXD0ZkGBA"
                  ],
                  "dns_added": false,
                  "domain_suffix": "login.stage.sohacloud.net",
                  "domains": [],
                  "enable_access_client": true,
                  "enable_mfa": false,
                  "favicon_image": null,
                  "helpdesk_email": "contact@mail.com",
                  "idp_deployed": false,
                  "idp_operational": 1,
                  "idp_status": 4,
                  "idp_type": 1,
                  "iwa_keytab": [],
                  "lockout_interval": 1,
                  "login_cname": "regv3ds.login.stage.sohacloud.net",
                  "login_dialin_server": "regv3ds.login.dialin.stage.sohacloud.net",
                  "login_domain": 2,
                  "login_host": "regv3ds",
                  "login_lockout": "off",
                  "login_suffix": "login.stage.sohacloud.net",
                  "logo": "",
                  "logo_file_name": "",
                  "logout_url": "",
                  "max_login_failures": 5,
                  "metadata": null,
                  "mfa_settings": {
                    "duo_akey": "",
                    "duo_api_hostname": "",
                    "duo_integration_key": "",
                    "duo_secret_key": "",
                    "duo_umap": "user.email",
                    "idp_notification_org_name": "",
                    "mfa_email_immutable": "false",
                    "mfa_email_preset": "false",
                    "mfa_factor_duo": "false",
                    "mfa_factor_email": "true",
                    "mfa_factor_sms": "true",
                    "mfa_factor_totp": "false",
                    "mfa_pci_dss": "false",
                    "mfa_sms_immutable": "false",
                    "mfa_sms_preset": "false"
                  },
                  "modified_at": "2019-05-28T08:05:43.330112",
                  "multilang_fields": null,
                  "name": "regv3ds",
                  "ocsp": null,
                  "oidcclients": "vD2FCQeaRlieatrLStp3xw",
                  "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                  "popName": "us-west-coast-1",
                  "resource": "idp",
                  "resource_uri": {
                    "href": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw",
                    "idp": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw/idp/"
                  },
                  "saml_url": "",
                  "settings": {
                    "client_cert_auth": "false",
                    "client_cert_auth_onboard_criteria": "nocert",
                    "client_cert_auth_onboard_url": "",
                    "client_cert_auth_validation_method": null,
                    "client_cert_auth_validation_responder": "",
                    "client_cert_exp_warn_interval": 0,
                    "client_cert_identity_username": "false",
                    "client_cert_renewal": "",
                    "client_cert_user_param": "",
                    "eaac_bin_base_url": "",
                    "enable_authorization": "false",
                    "enable_device_posture": "false",
                    "enable_favrt": "false",
                    "enable_oidc_saml_bridging": "false",
                    "force_login": "true",
                    "force_login_after": "7200",
                    "form_text": {
                      "user_placeholder": "Username"
                    },
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "group_attr_name": "Group",
                    "idp_iwa_check_cert": "false",
                    "idp_iwa_check_os": "",
                    "idp_iwa_check_prem": "false",
                    "idp_iwa_check_ua": "false",
                    "idp_iwa_krb5_spn": "",
                    "idp_iwa_mode": "off",
                    "idp_iwa_onpremise_path": "false",
                    "infra_prem_gateways": [
                      {
                        "value": ""
                      }
                    ],
                    "login_terms": null,
                    "login_title": null,
                    "persistent_cookie": "true",
                    "portal_background": "./assets/img/body-bg.png",
                    "portal_change_password_url": "",
                    "portal_logo_height": "256",
                    "portal_logo_url": "./assets/img/logo.png",
                    "portal_logo_width": "256",
                    "portal_new_user_signup_url": "",
                    "portal_terms_box": "false",
                    "portal_theme": "bubblewrapp",
                    "portal_title_box": "false",
                    "single_logout_supported": "false",
                    "xframe_options": "false",
                    "xframe_urls": [
                      {
                        "url": ""
                      }
                    ]
                  },
                  "status": 4,
                  "trust_expiry": 365,
                  "uuid_url": "6IlO8WcjS3iOgWYi55bMOw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "properties": {
                    "app_count": {
                      "description": "Count of applications associated with the IDP.",
                      "type": "integer"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "Additional attributes to include with the `access_token` response.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "cert": {
                      "description": "Body of the certificate.",
                      "nullable": true,
                      "type": "string"
                    },
                    "client_cert": {
                      "description": "The client certificate.",
                      "nullable": true,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directory_count": {
                      "description": "The directory count.",
                      "type": "integer"
                    },
                    "directory_list": {
                      "description": "Directory IDs for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "domains": {
                      "description": "Domains for the IDP.",
                      "items": {
                        "nullable": true,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "type": "string"
                    },
                    "idp_deployed": {
                      "description": "Whether the IDP is deployed.",
                      "type": "boolean"
                    },
                    "idp_operational": {
                      "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "idp_status": {
                      "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ],
                      "type": "integer"
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "enum": [
                        1,
                        2
                      ],
                      "nullable": true,
                      "type": "integer"
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "login_suffix": {
                      "description": "The login suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The metadata of the SAML type IDP.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "properties": {
                        "duo_akey": {
                          "description": "The Duo authentication key.",
                          "type": "string"
                        },
                        "duo_api_hostname": {
                          "description": "The hostname of the Duo API to contact for authentication.",
                          "type": "string"
                        },
                        "duo_integration_key": {
                          "description": "The unique client ID to integrate with Duo Security's MFA service.",
                          "type": "string"
                        },
                        "duo_secret_key": {
                          "description": "The secret key for Duo MFA requests.",
                          "type": "string"
                        },
                        "duo_umap": {
                          "description": "The user email used by Duo to map authentication requests.",
                          "type": "string"
                        },
                        "idp_notification_org_name": {
                          "description": "The name of the IDP authentication organization to notify.",
                          "type": "string"
                        },
                        "mfa_email_immutable": {
                          "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_email_preset": {
                          "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_duo": {
                          "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_email": {
                          "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_sms": {
                          "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_totp": {
                          "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_pci_dss": {
                          "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_sms_immutable": {
                          "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_sms_preset": {
                          "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/idp-mfa-settings.yaml"
                      }
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ocsp": {
                      "description": "Unicode string data.",
                      "nullable": true,
                      "type": "string"
                    },
                    "oidcclients": {
                      "description": "The unique ID of the OIDC client.",
                      "type": "string"
                    },
                    "pop": {
                      "description": "The pop resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "type": "string"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "settings": {
                      "additionalProperties": false,
                      "description": "Login portal settings for an IDP configuration.",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_auth_onboard_criteria": {
                          "description": "The client onboarding criteria for the IDP. ",
                          "type": "string"
                        },
                        "client_cert_auth_onboard_url": {
                          "description": "Enter the URL where the user is redirected if no certificate is provided.",
                          "type": "string"
                        },
                        "client_cert_auth_validation_method": {
                          "description": "The client certificate validation method. Either `none` or `ocsp`.",
                          "enum": [
                            "none",
                            "ocsp"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "client_cert_auth_validation_responder": {
                          "description": "The URL of the OCSP validation responder. ",
                          "type": "string"
                        },
                        "client_cert_exp_warn_interval": {
                          "description": "The warning interval for certificate expiration in days.",
                          "type": "integer"
                        },
                        "client_cert_identity_username": {
                          "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_renewal": {
                          "description": "Enables client certificate renewal. ",
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant certificate parameters for client authentication.",
                          "type": "string"
                        },
                        "eaac_bin_base_url": {
                          "description": "The base URL to download the EAA client.",
                          "type": "string"
                        },
                        "enable_authorization": {
                          "description": "Enables authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_device_posture": {
                          "description": "Enables device posture. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_favrt": {
                          "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_oidc_saml_bridging": {
                          "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "force_login": {
                          "description": "Forces user login. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "force_login_after": {
                          "description": "The timeout after which the IDP forces a re-login, in seconds.",
                          "type": "string"
                        },
                        "form_text": {
                          "additionalProperties": false,
                          "description": "Form placeholder text settings.",
                          "properties": {
                            "user_placeholder": {
                              "description": "Placeholder text to display in the form.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "g2o_enabled": {
                          "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_key": {
                          "description": "The G2O key to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "g2o_nonce": {
                          "description": "The G2O nonce to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "group_attr_name": {
                          "description": "IDP group attribute names.",
                          "type": "string"
                        },
                        "idp_iwa_check_cert": {
                          "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_os": {
                          "description": "A regex pattern applied to the user agent string to include user agents.",
                          "type": "string"
                        },
                        "idp_iwa_check_prem": {
                          "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_ua": {
                          "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_krb5_spn": {
                          "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                          "type": "string"
                        },
                        "idp_iwa_mode": {
                          "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                          "enum": [
                            "always",
                            "if-capable",
                            "off"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_onpremise_path": {
                          "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "infra_prem_gateways": {
                          "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "description": "The outbound gateways used by on-premise devices.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "login_terms": {
                          "description": "The terms and conditions text to display in the login portal.",
                          "nullable": true,
                          "type": "string"
                        },
                        "login_title": {
                          "description": "The text to display in the login portal tab.",
                          "nullable": true,
                          "type": "string"
                        },
                        "persistent_cookie": {
                          "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                          "type": "string"
                        },
                        "portal_background": {
                          "description": "Sets the login portal's background image file.",
                          "type": "string"
                        },
                        "portal_change_password_url": {
                          "description": "The URL for the password reset link.",
                          "type": "string"
                        },
                        "portal_logo_height": {
                          "description": "The portal logo's width in pixels.",
                          "type": "string"
                        },
                        "portal_logo_url": {
                          "description": "The URL for the portal logo image file.",
                          "type": "string"
                        },
                        "portal_logo_width": {
                          "description": "The portal logo's width in pixels.",
                          "type": "string"
                        },
                        "portal_new_user_signup_url": {
                          "description": "The URL for the new user sign up link.",
                          "type": "string"
                        },
                        "portal_terms_box": {
                          "description": "Enables the login portal terms box. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "portal_theme": {
                          "description": "Sets the login portal theme name.",
                          "type": "string"
                        },
                        "portal_title_box": {
                          "description": "Enables the login portal's title box. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_logout_supported": {
                          "description": "Enables single logout. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "xframe_options": {
                          "description": "Enables xframe embedding. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "xframe_urls": {
                          "description": "The URLs of the sites to embed in the portal using xframes.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "url": {
                                "description": "The URLs using xframe.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-get-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an IDP",
        "tags": [
          "IDPs"
        ]
      },
      "put": {
        "description": "Updates an existing IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-idp"
        },
        "operationId": "put-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "app_count": 2,
                  "attribute_map": {},
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "background_image": "",
                  "background_image_file_name": "",
                  "cert": null,
                  "client_cert": null,
                  "client_principle_name": "<sAMAccountName>",
                  "company_id": "regv3ds",
                  "cookie_expiry": 120,
                  "created_at": "2019-03-20T10:28:23.080189",
                  "default_language": "english",
                  "description": null,
                  "directory_count": 1,
                  "directory_list": [
                    "GbIfrXwtTKaqBrXD0ZkGBA"
                  ],
                  "dns_added": false,
                  "domain_suffix": "login.stage.sohacloud.net",
                  "domains": [],
                  "enable_access_client": true,
                  "enable_mfa": false,
                  "favicon_image": null,
                  "helpdesk_email": "contact@mail.com",
                  "idp_deployed": false,
                  "idp_operational": 1,
                  "idp_status": 4,
                  "idp_type": 1,
                  "iwa_keytab": [],
                  "lockout_interval": 1,
                  "login_cname": "regv3ds.login.stage.sohacloud.net",
                  "login_dialin_server": "regv3ds.login.dialin.stage.sohacloud.net",
                  "login_domain": 2,
                  "login_host": "regv3ds",
                  "login_lockout": "off",
                  "login_suffix": "login.stage.sohacloud.net",
                  "logo": "",
                  "logo_file_name": "",
                  "logout_url": "",
                  "max_login_failures": 5,
                  "metadata": null,
                  "mfa_settings": {
                    "duo_akey": "",
                    "duo_api_hostname": "",
                    "duo_integration_key": "",
                    "duo_secret_key": "",
                    "duo_umap": "user.email",
                    "idp_notification_org_name": "",
                    "mfa_email_immutable": "false",
                    "mfa_email_preset": "false",
                    "mfa_factor_duo": "false",
                    "mfa_factor_email": "true",
                    "mfa_factor_sms": "true",
                    "mfa_factor_totp": "false",
                    "mfa_pci_dss": "false",
                    "mfa_sms_immutable": "false",
                    "mfa_sms_preset": "false"
                  },
                  "modified_at": "2019-05-28T08:05:43.330112",
                  "multilang_fields": null,
                  "name": "regv3ds",
                  "ocsp": null,
                  "oidcclients": "vD2FCQeaRlieatrLStp3xw",
                  "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                  "popName": "us-west-coast-1",
                  "resource": "idp",
                  "resource_uri": {
                    "href": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw",
                    "idp": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw/idp/"
                  },
                  "saml_url": "",
                  "settings": {
                    "client_cert_auth": "false",
                    "client_cert_auth_onboard_criteria": "nocert",
                    "client_cert_auth_onboard_url": "",
                    "client_cert_auth_validation_method": null,
                    "client_cert_auth_validation_responder": "",
                    "client_cert_exp_warn_interval": 0,
                    "client_cert_identity_username": "false",
                    "client_cert_renewal": "",
                    "client_cert_user_param": "",
                    "eaac_bin_base_url": "",
                    "enable_authorization": "false",
                    "enable_device_posture": "false",
                    "enable_favrt": "false",
                    "enable_oidc_saml_bridging": "false",
                    "force_login": "true",
                    "force_login_after": "7200",
                    "form_text": {
                      "user_placeholder": "Username"
                    },
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "group_attr_name": "Group",
                    "idp_iwa_check_cert": "false",
                    "idp_iwa_check_os": "",
                    "idp_iwa_check_prem": "false",
                    "idp_iwa_check_ua": "false",
                    "idp_iwa_krb5_spn": "",
                    "idp_iwa_mode": "off",
                    "idp_iwa_onpremise_path": "false",
                    "infra_prem_gateways": [
                      {
                        "value": ""
                      }
                    ],
                    "login_terms": null,
                    "login_title": null,
                    "persistent_cookie": "true",
                    "portal_background": "./assets/img/body-bg.png",
                    "portal_change_password_url": "",
                    "portal_logo_height": "256",
                    "portal_logo_url": "./assets/img/logo.png",
                    "portal_logo_width": "256",
                    "portal_new_user_signup_url": "",
                    "portal_terms_box": "false",
                    "portal_theme": "bubblewrapp",
                    "portal_title_box": "false",
                    "single_logout_supported": "false",
                    "xframe_options": "false",
                    "xframe_urls": [
                      {
                        "url": ""
                      }
                    ]
                  },
                  "status": 4,
                  "trust_expiry": 365,
                  "uuid_url": "6IlO8WcjS3iOgWYi55bMOw"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "properties": {
                    "app_count": {
                      "description": "Count of applications associated with the IDP.",
                      "type": "integer"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "Additional attributes to include with the `access_token` response.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "cert": {
                      "description": "Body of the certificate.",
                      "nullable": true,
                      "type": "string"
                    },
                    "client_cert": {
                      "description": "The client certificate.",
                      "nullable": true,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation.",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directory_count": {
                      "description": "The directory count.",
                      "type": "integer"
                    },
                    "directory_list": {
                      "description": "Directory IDs for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "domains": {
                      "description": "Domains for the IDP.",
                      "items": {
                        "nullable": true,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "type": "string"
                    },
                    "idp_deployed": {
                      "description": "Whether the IDP is deployed.",
                      "type": "boolean"
                    },
                    "idp_operational": {
                      "description": "Whether the IDP is operational. Either `0` for no or `1` for yes.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "idp_status": {
                      "description": "The status of the IDP. Either `1` for `2` for `3` for `4` or `5` for deploy failed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ],
                      "type": "integer"
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "enum": [
                        1,
                        2
                      ],
                      "nullable": true,
                      "type": "integer"
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts. Either `on` or `off`. The default value is `off`.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "login_suffix": {
                      "description": "The login suffix. For example, `.com`.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The metadata of the SAML type IDP.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "properties": {
                        "duo_akey": {
                          "description": "The Duo authentication key.",
                          "type": "string"
                        },
                        "duo_api_hostname": {
                          "description": "The hostname of the Duo API to contact for authentication.",
                          "type": "string"
                        },
                        "duo_integration_key": {
                          "description": "The unique client ID to integrate with Duo Security's MFA service.",
                          "type": "string"
                        },
                        "duo_secret_key": {
                          "description": "The secret key for Duo MFA requests.",
                          "type": "string"
                        },
                        "duo_umap": {
                          "description": "The user email used by Duo to map authentication requests.",
                          "type": "string"
                        },
                        "idp_notification_org_name": {
                          "description": "The name of the IDP authentication organization to notify.",
                          "type": "string"
                        },
                        "mfa_email_immutable": {
                          "description": "Whether the Duo email factor is immutable, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_email_preset": {
                          "description": "Whether MFA has a pre-set email address. Either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_duo": {
                          "description": "Whether MFA uses Duo authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_email": {
                          "description": "Whether MFA uses email authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_sms": {
                          "description": "Whether MFA uses SMS authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_factor_totp": {
                          "description": "Whether MFA uses Time-based One Time Password (TOTP) authentication factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_pci_dss": {
                          "description": "Whether MFA uses additional authentication for PCI DSS compliance, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_sms_immutable": {
                          "description": "Whether the Duo SMS factor is immutable, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "mfa_sms_preset": {
                          "description": "Whether MFA uses an SMS verification factor, either a `true` or `false` string.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/idp-mfa-settings.yaml"
                      }
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ocsp": {
                      "description": "Unicode string data.",
                      "nullable": true,
                      "type": "string"
                    },
                    "oidcclients": {
                      "description": "The unique ID of the OIDC client.",
                      "type": "string"
                    },
                    "pop": {
                      "description": "The pop resource URI.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "type": "string"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "settings": {
                      "additionalProperties": false,
                      "description": "Login portal settings for an IDP configuration.",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables client certificate authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_auth_onboard_criteria": {
                          "description": "The client onboarding criteria for the IDP. ",
                          "type": "string"
                        },
                        "client_cert_auth_onboard_url": {
                          "description": "Enter the URL where the user is redirected if no certificate is provided.",
                          "type": "string"
                        },
                        "client_cert_auth_validation_method": {
                          "description": "The client certificate validation method. Either `none` or `ocsp`.",
                          "enum": [
                            "none",
                            "ocsp"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "client_cert_auth_validation_responder": {
                          "description": "The URL of the OCSP validation responder. ",
                          "type": "string"
                        },
                        "client_cert_exp_warn_interval": {
                          "description": "The warning interval for certificate expiration in days.",
                          "type": "integer"
                        },
                        "client_cert_identity_username": {
                          "description": "Enables user login based on username instead of requiring cert validation. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "client_cert_renewal": {
                          "description": "Enables client certificate renewal. ",
                          "type": "string"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant certificate parameters for client authentication.",
                          "type": "string"
                        },
                        "eaac_bin_base_url": {
                          "description": "The base URL to download the EAA client.",
                          "type": "string"
                        },
                        "enable_authorization": {
                          "description": "Enables authorization. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_device_posture": {
                          "description": "Enables device posture. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_favrt": {
                          "description": "Enables adding applications to a favorites list. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "enable_oidc_saml_bridging": {
                          "description": "Enables OIDC to SAML bridging. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "force_login": {
                          "description": "Forces user login. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "force_login_after": {
                          "description": "The timeout after which the IDP forces a re-login, in seconds.",
                          "type": "string"
                        },
                        "form_text": {
                          "additionalProperties": false,
                          "description": "Form placeholder text settings.",
                          "properties": {
                            "user_placeholder": {
                              "description": "Placeholder text to display in the form.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "g2o_enabled": {
                          "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "g2o_key": {
                          "description": "The G2O key to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "g2o_nonce": {
                          "description": "The G2O nonce to share with your ION configuration.",
                          "nullable": true,
                          "type": "string"
                        },
                        "group_attr_name": {
                          "description": "IDP group attribute names.",
                          "type": "string"
                        },
                        "idp_iwa_check_cert": {
                          "description": "Enables certificate checking for Integrated Windows Authentication. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_os": {
                          "description": "A regex pattern applied to the user agent string to include user agents.",
                          "type": "string"
                        },
                        "idp_iwa_check_prem": {
                          "description": "Enables IWA authentication only when a device is on-premise. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_check_ua": {
                          "description": "Enables the IdP to use IWA to check user access. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_krb5_spn": {
                          "description": "The registered Service Principal Name for the service account bound to the IDP. The SPN is either the IDP hostname's A record or CNAME.",
                          "type": "string"
                        },
                        "idp_iwa_mode": {
                          "description": "Enables Integrated Windows Authentication. Either `always`, `if-capable`, or `off`.",
                          "enum": [
                            "always",
                            "if-capable",
                            "off"
                          ],
                          "type": "string"
                        },
                        "idp_iwa_onpremise_path": {
                          "description": "Whether the IDP uses a service principle name (SPN) used for Integrated Windows Authentication (IWA). Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "infra_prem_gateways": {
                          "description": "One or more IP subnet of the outbound gateways used by on-premise devices.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "description": "The outbound gateways used by on-premise devices.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "login_terms": {
                          "description": "The terms and conditions text to display in the login portal.",
                          "nullable": true,
                          "type": "string"
                        },
                        "login_title": {
                          "description": "The text to display in the login portal tab.",
                          "nullable": true,
                          "type": "string"
                        },
                        "persistent_cookie": {
                          "description": "Enables persistent cookies which allow the IdP to remember your credentials over multiple sessions.",
                          "type": "string"
                        },
                        "portal_background": {
                          "description": "Sets the login portal's background image file.",
                          "type": "string"
                        },
                        "portal_change_password_url": {
                          "description": "The URL for the password reset link.",
                          "type": "string"
                        },
                        "portal_logo_height": {
                          "description": "The portal logo's width in pixels.",
                          "type": "string"
                        },
                        "portal_logo_url": {
                          "description": "The URL for the portal logo image file.",
                          "type": "string"
                        },
                        "portal_logo_width": {
                          "description": "The portal logo's width in pixels.",
                          "type": "string"
                        },
                        "portal_new_user_signup_url": {
                          "description": "The URL for the new user sign up link.",
                          "type": "string"
                        },
                        "portal_terms_box": {
                          "description": "Enables the login portal terms box. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "portal_theme": {
                          "description": "Sets the login portal theme name.",
                          "type": "string"
                        },
                        "portal_title_box": {
                          "description": "Enables the login portal's title box. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "single_logout_supported": {
                          "description": "Enables single logout. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "xframe_options": {
                          "description": "Enables xframe embedding. Either `true` or `false`.",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "type": "string"
                        },
                        "xframe_urls": {
                          "description": "The URLs of the sites to embed in the portal using xframes.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "url": {
                                "description": "The URLs using xframe.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-get-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify an IDP",
        "tags": [
          "IDPs"
        ]
      },
      "delete": {
        "description": "Deletes an existing IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-idp"
        },
        "operationId": "delete-idp",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete an IDP",
        "tags": [
          "IDPs"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/idp.yaml",
        "path-info": "/mgmt-pop/idp/{idp_id}"
      }
    },
    "/mgmt-pop/idp/{idp_id}/deploy": {
      "post": {
        "description": "Deploys an IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-deploy"
        },
        "operationId": "post-idp-deploy",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "cmdid": "dc846223-4b84-4dca-aaef-d280c788ce7b"
                  }
                ],
                "schema": {
                  "description": "Commands for the task.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Command ID for the task.",
                    "properties": {
                      "cmdid": {
                        "description": "A unique identifier to track command progress.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "dir_status": {
                        "description": "The directory status.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The request status.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "cmdid"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/idp-cmdid.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Deploy an IDP",
        "tags": [
          "IDPs"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/deploy-idp.yaml",
        "path-info": "/mgmt-pop/idp/{idp_id}/deploy"
      }
    },
    "/mgmt-pop/idp/{idp_id}/directories_membership": {
      "get": {
        "description": "Retrieves associated directory membership of an IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-directories-membership"
        },
        "operationId": "get-idp-directories-membership",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1
                  },
                  "objects": [
                    {
                      "directory": {
                        "directory_uuid_url": "GbIfrXwtTKaqBrXD0ZkGBA",
                        "name": "Cloud Directory"
                      },
                      "idp": {
                        "idp_uuid_url": "6IlO8WcjS3iOgWYi55bMOw",
                        "name": "regv3ds"
                      },
                      "resource": "idpdirectory",
                      "resource_uri": {
                        "directory": "/api/v1/directory/GbIfrXwtTKaqBrXD0ZkGBA",
                        "href": "/api/v1/idpdirectory/hp7EQTGxThCzRmWFNsd-1A",
                        "idp": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw"
                      },
                      "uuid_url": "hp7EQTGxThCzRmWFNsd-1A"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "IDP directory memberships.",
                  "properties": {
                    "ListView": {
                      "additionalProperties": false,
                      "description": "List view properties.",
                      "properties": {
                        "meta": {
                          "description": "Paging properties.",
                          "type": "string"
                        },
                        "objects": {
                          "description": "IDP directory properties.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging properties.",
                      "properties": {
                        "limit": {
                          "description": "Used for pagination. The total number of list members after the offset in the request.",
                          "type": "integer"
                        },
                        "next": {
                          "description": "URI of the next page relative to the current page settings.",
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "Used for pagination. Indicates the first member of the underlying object list in the request.",
                          "type": "integer"
                        },
                        "previous": {
                          "description": "URI of the previous page relative to the current page settings.",
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "Total item count for the collection.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "objects": {
                      "description": "Directory memberships.",
                      "items": {
                        "additionalProperties": false,
                        "description": "List of IDP associated directories.",
                        "properties": {
                          "directory": {
                            "additionalProperties": false,
                            "description": "IDP directory properties.",
                            "properties": {
                              "directory_uuid_url": {
                                "description": "The directory's unique ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "IDP properties.",
                            "properties": {
                              "idp_uuid_url": {
                                "description": "The unique IDP ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The IDP name.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "resource": {
                            "description": "The resource name.",
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Resource URIs for the IDP.",
                            "properties": {
                              "directory": {
                                "description": "The directory's resource ID.",
                                "type": "string"
                              },
                              "href": {
                                "description": "The resource's URL.",
                                "type": "string"
                              },
                              "idp": {
                                "description": "The IDP's resource ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "uuid_url": {
                            "description": "The resource ID.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/idp-directories-membership.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-directories-memberships.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get an IDP directory membership",
        "tags": [
          "Directory membership"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/directories-membership.yaml",
        "path-info": "/mgmt-pop/idp/{idp_id}/directories_membership"
      }
    },
    "/mgmt-pop/idp/{idp_id}/g2o": {
      "post": {
        "description": "Enable G2O for an IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-g2o"
        },
        "operationId": "post-idp-g2o",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "g2o_enabled": "true",
                  "g2o_key": "2557853b61e3962e2e0b8646c9a7794f",
                  "g2o_nonce": "0862646f"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Ghost to Origin (G2O) credentials.",
                  "properties": {
                    "g2o_enabled": {
                      "description": "Enables G2O on an application configuration. Either `true` or `false`.",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "type": "string"
                    },
                    "g2o_key": {
                      "description": "The G2O key to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "g2o_nonce": {
                      "description": "The G2O nonce to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "g2o_enabled",
                    "g2o_key",
                    "g2o_nonce"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/g2o.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Enable ghost to origin (G2O) for an IDP",
        "tags": [
          "Ghost to origin"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/g2o-per-idp.yaml",
        "path-info": "/mgmt-pop/idp/{idp_id}/g2o"
      }
    },
    "/mgmt-pop/idp/{idp_id}/metadata": {
      "post": {
        "description": "Uploads metadata to add or update to the IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-metadata"
        },
        "operationId": "post-idp-metadata",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "metadata": "..."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "IDP metadata.",
                  "properties": {
                    "metadata": {
                      "description": "IDP metadata.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "metadata"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-metadata.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Upload metadata of an IDP",
        "tags": [
          "Metadata"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/metadata.yaml",
        "path-info": "/mgmt-pop/idp/{idp_id}/metadata"
      }
    },
    "/mgmt-pop/idp/{idp_id}/status": {
      "get": {
        "description": "Retrieves the current IDP status.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-status"
        },
        "operationId": "get-idp-status",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "idp_deployed": true,
                  "login_cert_status": 6,
                  "login_directories_status": 6,
                  "login_host_dns_status": 6,
                  "login_oidc_status": 2,
                  "login_pop_status": 2,
                  "login_saml_status": 2,
                  "manual_override": false
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "idp_deployed": {
                      "description": "If `true`, the IDP deployed successfully.",
                      "type": "boolean"
                    },
                    "login_cert_status": {
                      "default": 1,
                      "description": "Login certificate status. Either `1` for not added, `2` for expired, `3` for invalid CNAME, `4` for invalid CA, `5` for no private key), `6` for OK, `7` for invalid CA user parameter, or `8` for about to expire.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ],
                      "type": "integer"
                    },
                    "login_directories_status": {
                      "default": 1,
                      "description": "Login directories status. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for OK.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "login_host_dns_status": {
                      "default": 1,
                      "description": "Login host DNS status. Either `1` for not configured, `2` for configured, `3` for ready, `4` for not resolved, `5` for not created, `6` for OK, or `7` for CNAME mismatch.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ],
                      "type": "integer"
                    },
                    "login_oidc_status": {
                      "default": 1,
                      "description": "Login OIDC status. Either `1` for not added or `2` for added.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "login_pop_status": {
                      "default": 1,
                      "description": "Login POP status. Either `1` for not configured or `2` for OK.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "login_saml_status": {
                      "default": 1,
                      "description": "Login SAML status. Either `1` for not added or `2` for added.",
                      "enum": [
                        1,
                        2
                      ],
                      "type": "integer"
                    },
                    "manual_override": {
                      "description": "Indicates a manual override of the IDP.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "idp_deployed",
                    "login_cert_status",
                    "login_directories_status",
                    "login_host_dns_status",
                    "login_oidc_status",
                    "login_pop_status",
                    "login_saml_status",
                    "manual_override"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-actions.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Get an IDP status",
        "tags": [
          "Status"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/status-per-idp.yaml",
        "path-info": "/mgmt-pop/idp/{idp_id}/status"
      }
    },
    "/mgmt-pop/idpblockuser/idp/{idp_id}/block": {
      "post": {
        "description": "Blocks a user from accessing an IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-user-block-idp-access"
        },
        "operationId": "post-user-block-idp-access",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  {
                    "directory_id": "U59wJq3dQNuanDH8VMc1Gg",
                    "user_id": "UcxX2qmATBeyADMt2oRxNw"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "IDP user unblock request.",
                "properties": {
                  "user_list": {
                    "description": "IDP users to unblock.",
                    "items": {
                      "additionalProperties": false,
                      "description": "User properties for each user to unblock.",
                      "properties": {
                        "directory_id": {
                          "description": "The unique IDP directory ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user_id": {
                          "description": "A unique ID for the user's account.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_id",
                        "directory_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/idp-user-block-unblock-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "failed_details": [],
                  "success": 1,
                  "total": 1
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "IDP user block/unblock outcome.",
                  "properties": {
                    "failed": {
                      "description": "Count of failed user block/unblocks requested. Refer to `failed_details` for more information.",
                      "type": "integer"
                    },
                    "failed_details": {
                      "description": "Details about any failed block/unblock requests.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "success": {
                      "description": "Count of successful user block/unblocks requested.",
                      "type": "integer"
                    },
                    "total": {
                      "description": "Count of total user block/unblocks requested.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-user-block-unblock-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Block a user from accessing an IDP",
        "tags": [
          "Block user"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/block.yaml",
        "path-info": "/mgmt-pop/idpblockuser/idp/{idp_id}/block"
      }
    },
    "/mgmt-pop/idpblockuser/idp/{idp_id}/unblock": {
      "post": {
        "description": "Unblocks a user from accessing an IDP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-user-unblock-idp-access"
        },
        "operationId": "post-user-unblock-idp-access",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  {
                    "directory_id": "U59wJq3dQNuanDH8VMc1Gg",
                    "user_id": "UcxX2qmATBeyFELt2oRxNw"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "IDP user unblock request.",
                "properties": {
                  "user_list": {
                    "description": "IDP users to unblock.",
                    "items": {
                      "additionalProperties": false,
                      "description": "User properties for each user to unblock.",
                      "properties": {
                        "directory_id": {
                          "description": "The unique IDP directory ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user_id": {
                          "description": "A unique ID for the user's account.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_id",
                        "directory_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/idp-user-block-unblock-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "failed_details": [],
                  "success": 1,
                  "total": 1
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "IDP user block/unblock outcome.",
                  "properties": {
                    "failed": {
                      "description": "Count of failed user block/unblocks requested. Refer to `failed_details` for more information.",
                      "type": "integer"
                    },
                    "failed_details": {
                      "description": "Details about any failed block/unblock requests.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "success": {
                      "description": "Count of successful user block/unblocks requested.",
                      "type": "integer"
                    },
                    "total": {
                      "description": "Count of total user block/unblocks requested.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idp-user-block-unblock-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Unblock a user from accessing an IDP",
        "tags": [
          "Unblock user"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/unblock.yaml",
        "path-info": "/mgmt-pop/idpblockuser/idp/{idp_id}/unblock"
      }
    },
    "/mgmt-pop/idpdirectory": {
      "post": {
        "description": "Creates a new IDP directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-directory"
        },
        "operationId": "post-idp-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "directories": [
                  "AtjdKbXqQFmp0TDD9TtaHg"
                ],
                "idp": "xz_HqmAdSNeSnoCWss9Phg"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access IDP directory information.",
                "properties": {
                  "admin_pwd": {
                    "description": "The administrator user password for the IDP directory.",
                    "example": "{{admin_pwd}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "admin_user": {
                    "description": "The administrator user account for the IDP directory.",
                    "example": "{{admin_user}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "agents": {
                    "description": "Connectors assigned to this IDP directory.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "api_key": {
                    "description": "The API key of the IDP directory.",
                    "example": "{{api_key}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "attribute_map": {
                    "additionalProperties": false,
                    "description": "The attribute mapping for the IDP directory.",
                    "properties": {
                      "eaa.demo": {
                        "description": "The user's EAA demo name.",
                        "type": "string"
                      },
                      "eaa.test": {
                        "description": "The user's EAA test name.",
                        "type": "string"
                      },
                      "user.countryCode": {
                        "description": "The user's country code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.email": {
                        "description": "The user's email address.",
                        "type": "string"
                      },
                      "user.firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.groups": {
                        "description": "The groups the user belongs to.",
                        "type": "string"
                      },
                      "user.lastName": {
                        "description": "The user's last name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.netbios": {
                        "description": "The user's NetBIOS name.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "user.persistentId": {
                        "description": "The user persistent ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.phoneNumber": {
                        "description": "The user's phone number.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.samAccountName": {
                        "description": "The user's Security Account Manager (SAM) account name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.userName": {
                        "description": "The username.",
                        "type": "string"
                      },
                      "user.userPrincipleName": {
                        "description": "The user's principle name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "user.countryCode",
                      "user.email",
                      "user.firstName",
                      "user.lastName",
                      "user.netbios",
                      "user.persistentId",
                      "user.phoneNumber",
                      "user.samAccountName",
                      "user.userPrincipleName"
                    ],
                    "type": "object"
                  },
                  "auth_request_signed": {
                    "description": "Indicates a signed authentication request.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Enables authentication response encryption.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "chase_referral": {
                    "description": "Enables referral chasing.",
                    "example": "{{chase_referral}}",
                    "type": "boolean"
                  },
                  "cname": {
                    "description": "The IDP directory cname.",
                    "example": "{{cname}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID of the IDP directory.",
                    "example": "{{company_id}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "conf_state": {
                    "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{conf_state}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{created_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the directory object.",
                    "example": "{{description}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "dialin_sni": {
                    "description": "The dial-in SNI for the IDP directory.",
                    "example": "{{dialin_sni}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "directories": {
                    "description": "The unique IDs of the directories for the IDP.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "directory_status": {
                    "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{directory_status}}",
                    "type": "integer"
                  },
                  "directory_type": {
                    "default": 2,
                    "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": "{{directory_type}}",
                    "type": "integer"
                  },
                  "domains": {
                    "description": "The directory's domains.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The domain name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "global_catalog": {
                    "description": "Enables global catalog.",
                    "example": "{{global_catalog}}",
                    "type": "boolean"
                  },
                  "group_base_dn": {
                    "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{group_base_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "group_count": {
                    "description": "The number of groups for the IDP directory.",
                    "example": "{{group_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "group_members": {
                    "description": "The members of the group.",
                    "example": "{{group_members}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_name": {
                    "description": "The name of the group.",
                    "example": "{{group_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_object_classes": {
                    "description": "Group object classes that define custom LDAP mappings of users and groups.",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "group_search_filter": {
                    "description": "The search filter for the group, such as `(objectClass=group)`.",
                    "example": "{{group_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_token": {
                    "description": "The primary group token.",
                    "example": "{{group_token}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The IDP directory host.",
                    "example": "{{host}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "idp": {
                    "description": "The unique ID of the IDP to assign to the directory.",
                    "example": "{{idp}}",
                    "type": "string"
                  },
                  "kerb_realms": {
                    "description": "Kerberos realms for the IDP directory.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "kdclist": {
                          "additionalProperties": false,
                          "description": "Kerberos Key Distribution Centers (KDC) information.",
                          "properties": {
                            "ip": {
                              "description": "The IP address of the KDC.",
                              "type": "string"
                            },
                            "port": {
                              "description": "The port number of the KDC.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "ip",
                            "port"
                          ],
                          "type": "object"
                        },
                        "realm": {
                          "description": "The kerberos realm.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "kdclist",
                        "realm"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "last_sync": {
                    "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                    "example": "{{last_sync}}",
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The logout URL for the directory.",
                    "example": "{{logout_url}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "metadata": {
                    "description": "The IDP directory metadata.",
                    "example": "{{metadata}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "mfa": {
                    "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                    "enum": [
                      "on",
                      "off"
                    ],
                    "example": "{{mfa}}",
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the directory's last modification.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP directory.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameidformat": {
                    "description": "The name ID format.",
                    "example": "{{nameidformat}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_attr": {
                    "description": "The organization unit's attributes.",
                    "example": "{{ou_attr}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_filter": {
                    "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                    "example": "{{ou_filter}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_object_classes": {
                    "description": "The organization unit's object classes.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "password_change_allow": {
                    "description": "Allows password changes.",
                    "example": "{{password_change_allow}}",
                    "type": "boolean"
                  },
                  "password_change_threshold": {
                    "description": "The password change threshold in seconds.",
                    "example": "{{password_change_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_complexity_message": {
                    "description": "The password complexity message.",
                    "example": "{{password_complexity_message}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "password_expire_warn_threshold": {
                    "description": "The password expiration warning threshold in seconds.",
                    "example": "{{password_expire_warn_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_filter": {
                    "additionalProperties": false,
                    "description": "The password format requirement filters.",
                    "properties": {
                      "min-char-groups": {
                        "description": "Minimum number of character groups for the password.",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-lower": {
                        "description": "Minimum number of lowercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-num": {
                        "description": "Minimum number of digits for the password.",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-other": {
                        "description": "Minimum number of other characters for the password.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "min-special": {
                        "description": "Minimum number of special characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-upper": {
                        "description": "Minimum number of uppercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "name-check": {
                        "description": "Checks whether the password contains the user's name.",
                        "type": "boolean"
                      },
                      "uid-check": {
                        "description": "Checks whether the password contains the user ID.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "password_policy_default": {
                    "description": "The default password policy for the IDP directory.",
                    "example": "{{password_policy_default}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "password_reset_allow": {
                    "description": "Whether to allow password reset.",
                    "example": "{{password_reset_allow}}",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The port number of the IDP directory.",
                    "example": "{{port}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "resource": {
                    "description": "The IDP directory resource name.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP directory resources.",
                    "properties": {
                      "groups": {
                        "description": "The URL for group details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URL for IDP directory details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "idp": {
                        "description": "The URL for the IDP.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "users": {
                        "description": "The URL for the list of users.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "groups",
                      "href",
                      "users"
                    ],
                    "type": "object"
                  },
                  "root_dn": {
                    "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{root_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "schema_attributes": {
                    "description": "The directory schema attributes.",
                    "example": "{{schema_attributes}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "server_cert_validate": {
                    "description": "Whether to validate server certificates.",
                    "example": "{{server_cert_validate}}",
                    "type": "boolean"
                  },
                  "service": {
                    "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ],
                    "example": "{{service}}",
                    "type": "integer"
                  },
                  "signed_request": {
                    "description": "Whether the request is signed.",
                    "example": "{{signed_request}}",
                    "type": "boolean"
                  },
                  "ssl": {
                    "description": "Enables SSL.",
                    "example": "{{ssl}}",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "sync_interval": {
                    "description": "The synchronization interval of the IDP directory in seconds.",
                    "example": "{{sync_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sync_state": {
                    "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{sync_state}}",
                    "type": "integer"
                  },
                  "user_base_dn": {
                    "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{user_base_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "user_count": {
                    "description": "The total count of users in the IDP directory.",
                    "example": "{{user_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "user_display_name": {
                    "description": "The display name of a user.",
                    "example": "{{user_display_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_email": {
                    "description": "The email of a user.",
                    "example": "{{user_email}}",
                    "type": "string"
                  },
                  "user_fname": {
                    "description": "The first name of a user.",
                    "example": "{{user_fname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_lname": {
                    "description": "The last name of a user.",
                    "example": "{{user_lname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberof": {
                    "description": "The member status of a user.",
                    "example": "{{user_memberof}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberuid": {
                    "description": "The member UID of a user.",
                    "example": "{{user_memberuid}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_object_classes": {
                    "description": "The user's object class.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "user_phone_num": {
                    "description": "The phone number of a user.",
                    "example": "{{user_phone_num}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_principal": {
                    "description": "The login of a user.",
                    "example": "{{user_principal}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_samaccountname": {
                    "description": "The kerberos client principal name.",
                    "example": "{{user_samaccountname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_search_filter": {
                    "description": "The search filter for a user.",
                    "example": "{{user_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_upn": {
                    "description": "The principal name of a user.",
                    "example": "{{user_upn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the directory.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/idpdirectory.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "directory": "AtjdKbXqQFmp0TDD9TtaHg",
                    "resource": "idpdirectory",
                    "resource_uri": {
                      "directory": "/api/v1/directory/AtjdKbXqQFmp0TDD9TtaHg",
                      "href": "/api/v1/idpdirectory/dDg9SKXXQgugaNCB3x8nrg",
                      "idp": "/api/v1/idp/xz_HqmAdSNeSnoCWss9Phg"
                    },
                    "uuid_url": "dDg9SKXXQgugaNCB3x8nrg"
                  }
                ],
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "directory": {
                        "description": "The unique ID of the directory created.",
                        "type": "string"
                      },
                      "resource": {
                        "description": "The IDP directory resource name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "resource_uri": {
                        "additionalProperties": false,
                        "description": "Specifies the location of various IDP directory resources.",
                        "properties": {
                          "directory": {
                            "description": "The URL for the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "groups": {
                            "description": "The URL for group details.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "href": {
                            "description": "The URL for IDP directory details.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "idp": {
                            "description": "The URL for the IDP.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "users": {
                            "description": "The URL for the list of users.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "directory",
                          "href",
                          "idp"
                        ],
                        "type": "object"
                      },
                      "uuid_url": {
                        "description": "A unique identifier for the directory.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/create-idpdirectory-200.yaml"
                  }
                }
              }
            },
            "description": "Successful operation."
          }
        },
        "summary": "Create an IDP directory",
        "tags": [
          "IDP directories"
        ]
      },
      "get": {
        "description": "Gets a list of IDP directories.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-directories"
        },
        "operationId": "get-idp-directories",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 250,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "admin_user": null,
                      "agents": [],
                      "api_key": null,
                      "attribute_map": {
                        "user.countryCode": "cloud.country_code",
                        "user.email": "cloud.email",
                        "user.firstName": "cloud.first_name",
                        "user.lastName": "cloud.last_name",
                        "user.netbios": "cloud.netbios",
                        "user.persistentId": "cloud.uuid",
                        "user.phoneNumber": "cloud.phone_number",
                        "user.samAccountName": "cloud.samaccountname",
                        "user.userPrincipleName": "cloud.user_principle_name"
                      },
                      "auth_request_signed": false,
                      "auth_response_encrypt": false,
                      "chase_referral": false,
                      "cname": null,
                      "company_id": null,
                      "conf_state": 1,
                      "created_at": "2017-01-04T14:58:29.884927",
                      "description": null,
                      "dialin_sni": null,
                      "directory_status": 3,
                      "directory_type": 1,
                      "domains": [],
                      "global_catalog": false,
                      "group_base_dn": null,
                      "group_count": 11,
                      "group_members": "member",
                      "group_name": "cn",
                      "group_object_classes": [
                        "group",
                        "groupOfNames"
                      ],
                      "group_search_filter": "(objectClass=group)",
                      "group_token": "primaryGroupToken",
                      "host": null,
                      "kerb_realms": [],
                      "last_sync": "2017-01-04T14:58:29.885037",
                      "logout_url": null,
                      "metadata": null,
                      "mfa": "off",
                      "modified_at": "2018-05-18T04:37:13.487706",
                      "name": "Cloud Directory",
                      "nameidformat": null,
                      "ou_attr": null,
                      "ou_filter": null,
                      "ou_object_classes": [
                        "organizationalUnit"
                      ],
                      "password_change_allow": false,
                      "password_change_threshold": 0,
                      "password_complexity_message": null,
                      "password_expire_warn_threshold": 0,
                      "password_filter": {},
                      "password_policy_default": "",
                      "password_reset_allow": false,
                      "port": 636,
                      "resource": "directories",
                      "resource_uri": {
                        "groups": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/groups/",
                        "href": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg",
                        "users": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/users/"
                      },
                      "root_dn": null,
                      "schema_attributes": "{}",
                      "server_cert_validate": true,
                      "service": 6,
                      "signed_request": false,
                      "ssl": true,
                      "status": 1,
                      "sync_interval": 21600,
                      "sync_state": 1,
                      "user_base_dn": null,
                      "user_count": 11,
                      "user_display_name": "displayName",
                      "user_email": "mail",
                      "user_fname": "givenName",
                      "user_lname": "sn",
                      "user_memberof": "memberOf",
                      "user_memberuid": "memberUid",
                      "user_object_classes": [
                        "person",
                        "organizationalPerson",
                        "user",
                        "inetOrgPerson"
                      ],
                      "user_phone_num": "telephoneNumber",
                      "user_principal": "sAMAccountName",
                      "user_samaccountname": "sAMAccountName",
                      "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                      "user_upn": "userPrincipalName",
                      "uuid_url": "U59wJq3dQNuanDH8VMc1Gg"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory data.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "IDP directory data.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise Access IDP directory information.",
                        "properties": {
                          "admin_pwd": {
                            "description": "The administrator user password for the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "admin_user": {
                            "description": "The administrator user account for the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "agents": {
                            "description": "Connectors assigned to this IDP directory.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The name of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "api_key": {
                            "description": "The API key of the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "attribute_map": {
                            "additionalProperties": false,
                            "description": "The attribute mapping for the IDP directory.",
                            "properties": {
                              "eaa.demo": {
                                "description": "The user's EAA demo name.",
                                "type": "string"
                              },
                              "eaa.test": {
                                "description": "The user's EAA test name.",
                                "type": "string"
                              },
                              "user.countryCode": {
                                "description": "The user's country code.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.email": {
                                "description": "The user's email address.",
                                "type": "string"
                              },
                              "user.firstName": {
                                "description": "The user's first name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.groups": {
                                "description": "The groups the user belongs to.",
                                "type": "string"
                              },
                              "user.lastName": {
                                "description": "The user's last name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.netbios": {
                                "description": "The user's NetBIOS name.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "user.persistentId": {
                                "description": "The user persistent ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.phoneNumber": {
                                "description": "The user's phone number.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.samAccountName": {
                                "description": "The user's Security Account Manager (SAM) account name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.userName": {
                                "description": "The username.",
                                "type": "string"
                              },
                              "user.userPrincipleName": {
                                "description": "The user's principle name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "user.countryCode",
                              "user.email",
                              "user.firstName",
                              "user.lastName",
                              "user.netbios",
                              "user.persistentId",
                              "user.phoneNumber",
                              "user.samAccountName",
                              "user.userPrincipleName"
                            ],
                            "type": "object"
                          },
                          "auth_request_signed": {
                            "description": "Indicates a signed authentication request.",
                            "type": "boolean"
                          },
                          "auth_response_encrypt": {
                            "description": "Enables authentication response encryption.",
                            "type": "boolean"
                          },
                          "chase_referral": {
                            "description": "Enables referral chasing.",
                            "type": "boolean"
                          },
                          "cname": {
                            "description": "The IDP directory cname.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "company_id": {
                            "description": "The company ID of the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "conf_state": {
                            "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                            "nullable": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the directory object.",
                            "nullable": true,
                            "type": "string"
                          },
                          "dialin_sni": {
                            "description": "The dial-in SNI for the IDP directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "directories": {
                            "description": "The unique IDs of the directories for the IDP.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "directory_status": {
                            "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "directory_type": {
                            "default": 2,
                            "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "type": "integer"
                          },
                          "domains": {
                            "description": "The directory's domains.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "description": "The domain name.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "global_catalog": {
                            "description": "Enables global catalog.",
                            "type": "boolean"
                          },
                          "group_base_dn": {
                            "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "group_count": {
                            "description": "The number of groups for the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "group_members": {
                            "description": "The members of the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_name": {
                            "description": "The name of the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_object_classes": {
                            "description": "Group object classes that define custom LDAP mappings of users and groups.",
                            "items": {
                              "minLength": 0,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "group_search_filter": {
                            "description": "The search filter for the group, such as `(objectClass=group)`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_token": {
                            "description": "The primary group token.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "host": {
                            "description": "The IDP directory host.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "idp": {
                            "description": "The unique ID of the IDP to assign to the directory.",
                            "type": "string"
                          },
                          "kerb_realms": {
                            "description": "Kerberos realms for the IDP directory.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "kdclist": {
                                  "additionalProperties": false,
                                  "description": "Kerberos Key Distribution Centers (KDC) information.",
                                  "properties": {
                                    "ip": {
                                      "description": "The IP address of the KDC.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The port number of the KDC.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "ip",
                                    "port"
                                  ],
                                  "type": "object"
                                },
                                "realm": {
                                  "description": "The kerberos realm.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kdclist",
                                "realm"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "last_sync": {
                            "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                            "type": "string"
                          },
                          "logout_url": {
                            "description": "The logout URL for the directory.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "metadata": {
                            "description": "The IDP directory metadata.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "mfa": {
                            "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                            "enum": [
                              "on",
                              "off"
                            ],
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the directory's last modification.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "nameidformat": {
                            "description": "The name ID format.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_attr": {
                            "description": "The organization unit's attributes.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_filter": {
                            "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_object_classes": {
                            "description": "The organization unit's object classes.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "password_change_allow": {
                            "description": "Allows password changes.",
                            "type": "boolean"
                          },
                          "password_change_threshold": {
                            "description": "The password change threshold in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "password_complexity_message": {
                            "description": "The password complexity message.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "password_expire_warn_threshold": {
                            "description": "The password expiration warning threshold in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "password_filter": {
                            "additionalProperties": false,
                            "description": "The password format requirement filters.",
                            "properties": {
                              "min-char-groups": {
                                "description": "Minimum number of character groups for the password.",
                                "minimum": 2,
                                "type": "integer"
                              },
                              "min-lower": {
                                "description": "Minimum number of lowercase characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-num": {
                                "description": "Minimum number of digits for the password.",
                                "minimum": 2,
                                "type": "integer"
                              },
                              "min-other": {
                                "description": "Minimum number of other characters for the password.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "min-special": {
                                "description": "Minimum number of special characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-upper": {
                                "description": "Minimum number of uppercase characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "name-check": {
                                "description": "Checks whether the password contains the user's name.",
                                "type": "boolean"
                              },
                              "uid-check": {
                                "description": "Checks whether the password contains the user ID.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "password_policy_default": {
                            "description": "The default password policy for the IDP directory.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "password_reset_allow": {
                            "description": "Whether to allow password reset.",
                            "type": "boolean"
                          },
                          "port": {
                            "description": "The port number of the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "resource": {
                            "description": "The IDP directory resource name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of various IDP directory resources.",
                            "properties": {
                              "groups": {
                                "description": "The URL for group details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URL for IDP directory details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "idp": {
                                "description": "The URL for the IDP.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "users": {
                                "description": "The URL for the list of users.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "groups",
                              "href",
                              "users"
                            ],
                            "type": "object"
                          },
                          "root_dn": {
                            "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "schema_attributes": {
                            "description": "The directory schema attributes.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "server_cert_validate": {
                            "description": "Whether to validate server certificates.",
                            "type": "boolean"
                          },
                          "service": {
                            "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11
                            ],
                            "type": "integer"
                          },
                          "signed_request": {
                            "description": "Whether the request is signed.",
                            "type": "boolean"
                          },
                          "ssl": {
                            "description": "Enables SSL.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "sync_interval": {
                            "description": "The synchronization interval of the IDP directory in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sync_state": {
                            "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "user_base_dn": {
                            "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 0,
                            "nullable": true,
                            "type": "string"
                          },
                          "user_count": {
                            "description": "The total count of users in the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "user_display_name": {
                            "description": "The display name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_email": {
                            "description": "The email of a user.",
                            "type": "string"
                          },
                          "user_fname": {
                            "description": "The first name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_lname": {
                            "description": "The last name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_memberof": {
                            "description": "The member status of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_memberuid": {
                            "description": "The member UID of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_object_classes": {
                            "description": "The user's object class.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                          },
                          "user_phone_num": {
                            "description": "The phone number of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_principal": {
                            "description": "The login of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_samaccountname": {
                            "description": "The kerberos client principal name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_search_filter": {
                            "description": "The search filter for a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_upn": {
                            "description": "The principal name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/idpdirectory.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectories.yaml"
                  }
                }
              }
            },
            "description": "Successful operation."
          }
        },
        "summary": "List IDP directories",
        "tags": [
          "IDP directories"
        ]
      },
      "x-akamai": {
        "file-path": "paths/idp-directories.yaml",
        "path-info": "/mgmt-pop/idpdirectory"
      }
    },
    "/mgmt-pop/idpdirectory/{idpdirectory_id}": {
      "get": {
        "description": "Gets the specified IDP directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-directory"
        },
        "operationId": "get-idp-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "admin_user": null,
                  "agents": [],
                  "api_key": null,
                  "attribute_map": {
                    "user.countryCode": "cloud.US",
                    "user.email": "cloud.asmith@tech.com",
                    "user.firstName": "cloud.anne",
                    "user.lastName": "cloud.smith",
                    "user.netbios": "cloud.netbios",
                    "user.persistentId": "cloud.uuid",
                    "user.phoneNumber": "cloud.8005551213",
                    "user.samAccountName": "cloud.annesmith",
                    "user.userPrincipleName": "cloud.annesmith"
                  },
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": null,
                  "company_id": null,
                  "conf_state": 1,
                  "created_at": "2017-01-04T14:58:29.884927",
                  "description": null,
                  "dialin_sni": null,
                  "directory_status": 3,
                  "directory_type": 1,
                  "domains": [],
                  "global_catalog": false,
                  "group_base_dn": null,
                  "group_count": 11,
                  "group_members": "asmith",
                  "group_name": "cn",
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primaryGroupToken",
                  "host": null,
                  "kerb_realms": [],
                  "last_sync": "2017-01-04T14:58:29.885037",
                  "logout_url": null,
                  "metadata": null,
                  "mfa": "off",
                  "modified_at": "2018-05-18T04:37:13.487706",
                  "name": "Cloud Directory",
                  "nameidformat": null,
                  "ou_attr": null,
                  "ou_filter": null,
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "password_change_allow": false,
                  "password_change_threshold": 0,
                  "password_complexity_message": null,
                  "password_expire_warn_threshold": 0,
                  "password_filter": {
                    "min-char-groups": 2,
                    "min-lower": 1,
                    "min-num": 2,
                    "min-other": 0,
                    "min-special": 1,
                    "min-upper": 1,
                    "name-check": true,
                    "uid-check": true
                  },
                  "password_policy_default": "",
                  "password_reset_allow": false,
                  "port": 636,
                  "resource": "directories",
                  "resource_uri": {
                    "groups": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/groups/",
                    "href": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg",
                    "users": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/users/"
                  },
                  "root_dn": null,
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 6,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": null,
                  "user_count": 11,
                  "user_display_name": "Anne Smith",
                  "user_email": "asmith@tech.com",
                  "user_fname": "Anne",
                  "user_lname": "smith",
                  "user_memberof": "US_IT",
                  "user_memberuid": "asmith",
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "user_phone_num": "8005551213",
                  "user_principal": "asmith",
                  "user_samaccountname": "asmith",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "asmith",
                  "uuid_url": "U59wJq3dQNuanDH8VMc1Gg"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "properties": {
                    "admin_pwd": {
                      "description": "The administrator user password for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Indicates a signed authentication request.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Enables referral chasing.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the directory object.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directories": {
                      "description": "The unique IDs of the directories for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "domains": {
                      "description": "The directory's domains.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The domain name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "items": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The unique ID of the IDP to assign to the directory.",
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object"
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "password_change_allow": {
                      "description": "Allows password changes.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of digits for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The URL for the IDP.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "type": "object"
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            },
            "description": "Successful operation."
          }
        },
        "summary": "Get an IDP directory",
        "tags": [
          "IDP directories"
        ]
      },
      "put": {
        "description": "Updates an existing IDP directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-idp-directory"
        },
        "operationId": "put-idp-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "admin_pwd": "3244234323",
                "admin_user": "admmin",
                "agents": [],
                "api_key": null,
                "attribute_map": {
                  "user.countryCode": "countryCode",
                  "user.email": "mail",
                  "user.firstName": "givenName",
                  "user.groups": "member",
                  "user.lastName": "sn",
                  "user.netbios": "",
                  "user.persistentId": "entryUUID",
                  "user.phoneNumber": "telephoneNumber",
                  "user.samAccountName": "uid",
                  "user.userPrincipleName": "userPrincipalName"
                },
                "auth_request_signed": false,
                "auth_response_encrypt": false,
                "chase_referral": false,
                "cname": "dir-jex2kaugr-gimcthdupzza.login.stage.akamai-access.com",
                "company_id": null,
                "conf_state": 1,
                "created_at": "2019-07-23T05:55:18.577022",
                "description": null,
                "dialin_sni": "dir-jex2kaugr-gimcthdupzza.login.dialin.stage.akamai-access.com",
                "directory_status": 3,
                "directory_type": 2,
                "domains": [
                  {
                    "name": ""
                  }
                ],
                "global_catalog": false,
                "group_base_dn": "ldapdomain",
                "group_count": 0,
                "group_members": "member",
                "group_name": "cn",
                "group_object_classes": [
                  "group",
                  "groupOfNames",
                  "posixGroup"
                ],
                "group_search_filter": "(|(objectClass=posixGroup)(objectClass=groupOfNames))",
                "group_token": "gidNumber",
                "host": "ldap.company.com",
                "kerb_realms": [],
                "last_sync": "2019-07-23T05:55:18.577146",
                "logout_url": null,
                "metadata": null,
                "mfa": "off",
                "name": "idpDirectory#1",
                "nameidformat": null,
                "ou_attr": null,
                "ou_filter": null,
                "ou_object_classes": [
                  "organizationalUnit"
                ],
                "password_change_allow": false,
                "password_change_threshold": 0,
                "password_complexity_message": "",
                "password_expire_warn_threshold": 0,
                "password_filter": {},
                "password_policy_default": "",
                "password_reset_allow": false,
                "port": 636,
                "resource": "directories",
                "root_dn": "ldapdomain",
                "schema_attributes": "{}",
                "server_cert_validate": true,
                "service": 2,
                "signed_request": false,
                "ssl": true,
                "status": 1,
                "sync_interval": 21600,
                "sync_state": 1,
                "user_base_dn": "ldapdomain",
                "user_count": 0,
                "user_display_name": "displayName",
                "user_email": "mail",
                "user_fname": "givenName",
                "user_lname": "sn",
                "user_memberof": "gidNumber",
                "user_memberuid": "memberUid",
                "user_object_classes": [
                  "person",
                  "organizationalPerson",
                  "user",
                  "inetOrgPerson"
                ],
                "user_phone_num": "telephoneNumber",
                "user_principal": "uid",
                "user_samaccountname": "uid",
                "user_search_filter": "(&(objectClass=inetOrgPerson)(objectClass=posixAccount))",
                "user_upn": "userPrincipalName"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access IDP directory information.",
                "properties": {
                  "admin_pwd": {
                    "description": "The administrator user password for the IDP directory.",
                    "example": "{{admin_pwd}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "admin_user": {
                    "description": "The administrator user account for the IDP directory.",
                    "example": "{{admin_user}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "agents": {
                    "description": "Connectors assigned to this IDP directory.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "api_key": {
                    "description": "The API key of the IDP directory.",
                    "example": "{{api_key}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "attribute_map": {
                    "additionalProperties": false,
                    "description": "The attribute mapping for the IDP directory.",
                    "properties": {
                      "eaa.demo": {
                        "description": "The user's EAA demo name.",
                        "type": "string"
                      },
                      "eaa.test": {
                        "description": "The user's EAA test name.",
                        "type": "string"
                      },
                      "user.countryCode": {
                        "description": "The user's country code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.email": {
                        "description": "The user's email address.",
                        "type": "string"
                      },
                      "user.firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.groups": {
                        "description": "The groups the user belongs to.",
                        "type": "string"
                      },
                      "user.lastName": {
                        "description": "The user's last name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.netbios": {
                        "description": "The user's NetBIOS name.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "user.persistentId": {
                        "description": "The user persistent ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.phoneNumber": {
                        "description": "The user's phone number.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.samAccountName": {
                        "description": "The user's Security Account Manager (SAM) account name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.userName": {
                        "description": "The username.",
                        "type": "string"
                      },
                      "user.userPrincipleName": {
                        "description": "The user's principle name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "user.countryCode",
                      "user.email",
                      "user.firstName",
                      "user.lastName",
                      "user.netbios",
                      "user.persistentId",
                      "user.phoneNumber",
                      "user.samAccountName",
                      "user.userPrincipleName"
                    ],
                    "type": "object"
                  },
                  "auth_request_signed": {
                    "description": "Indicates a signed authentication request.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Enables authentication response encryption.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "chase_referral": {
                    "description": "Enables referral chasing.",
                    "example": "{{chase_referral}}",
                    "type": "boolean"
                  },
                  "cname": {
                    "description": "The IDP directory cname.",
                    "example": "{{cname}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID of the IDP directory.",
                    "example": "{{company_id}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "conf_state": {
                    "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{conf_state}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{created_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the directory object.",
                    "example": "{{description}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "dialin_sni": {
                    "description": "The dial-in SNI for the IDP directory.",
                    "example": "{{dialin_sni}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "directories": {
                    "description": "The unique IDs of the directories for the IDP.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "directory_status": {
                    "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{directory_status}}",
                    "type": "integer"
                  },
                  "directory_type": {
                    "default": 2,
                    "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": "{{directory_type}}",
                    "type": "integer"
                  },
                  "domains": {
                    "description": "The directory's domains.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "The domain name.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "global_catalog": {
                    "description": "Enables global catalog.",
                    "example": "{{global_catalog}}",
                    "type": "boolean"
                  },
                  "group_base_dn": {
                    "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{group_base_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "group_count": {
                    "description": "The number of groups for the IDP directory.",
                    "example": "{{group_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "group_members": {
                    "description": "The members of the group.",
                    "example": "{{group_members}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_name": {
                    "description": "The name of the group.",
                    "example": "{{group_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_object_classes": {
                    "description": "Group object classes that define custom LDAP mappings of users and groups.",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "group_search_filter": {
                    "description": "The search filter for the group, such as `(objectClass=group)`.",
                    "example": "{{group_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_token": {
                    "description": "The primary group token.",
                    "example": "{{group_token}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The IDP directory host.",
                    "example": "{{host}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "idp": {
                    "description": "The unique ID of the IDP to assign to the directory.",
                    "example": "{{idp}}",
                    "type": "string"
                  },
                  "kerb_realms": {
                    "description": "Kerberos realms for the IDP directory.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "kdclist": {
                          "additionalProperties": false,
                          "description": "Kerberos Key Distribution Centers (KDC) information.",
                          "properties": {
                            "ip": {
                              "description": "The IP address of the KDC.",
                              "type": "string"
                            },
                            "port": {
                              "description": "The port number of the KDC.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "ip",
                            "port"
                          ],
                          "type": "object"
                        },
                        "realm": {
                          "description": "The kerberos realm.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "kdclist",
                        "realm"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "last_sync": {
                    "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                    "example": "{{last_sync}}",
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The logout URL for the directory.",
                    "example": "{{logout_url}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "metadata": {
                    "description": "The IDP directory metadata.",
                    "example": "{{metadata}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "mfa": {
                    "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                    "enum": [
                      "on",
                      "off"
                    ],
                    "example": "{{mfa}}",
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the directory's last modification.",
                    "example": "{{modified_at}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP directory.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameidformat": {
                    "description": "The name ID format.",
                    "example": "{{nameidformat}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_attr": {
                    "description": "The organization unit's attributes.",
                    "example": "{{ou_attr}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_filter": {
                    "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                    "example": "{{ou_filter}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_object_classes": {
                    "description": "The organization unit's object classes.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "password_change_allow": {
                    "description": "Allows password changes.",
                    "example": "{{password_change_allow}}",
                    "type": "boolean"
                  },
                  "password_change_threshold": {
                    "description": "The password change threshold in seconds.",
                    "example": "{{password_change_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_complexity_message": {
                    "description": "The password complexity message.",
                    "example": "{{password_complexity_message}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "password_expire_warn_threshold": {
                    "description": "The password expiration warning threshold in seconds.",
                    "example": "{{password_expire_warn_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_filter": {
                    "additionalProperties": false,
                    "description": "The password format requirement filters.",
                    "properties": {
                      "min-char-groups": {
                        "description": "Minimum number of character groups for the password.",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-lower": {
                        "description": "Minimum number of lowercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-num": {
                        "description": "Minimum number of digits for the password.",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-other": {
                        "description": "Minimum number of other characters for the password.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "min-special": {
                        "description": "Minimum number of special characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-upper": {
                        "description": "Minimum number of uppercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "name-check": {
                        "description": "Checks whether the password contains the user's name.",
                        "type": "boolean"
                      },
                      "uid-check": {
                        "description": "Checks whether the password contains the user ID.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "password_policy_default": {
                    "description": "The default password policy for the IDP directory.",
                    "example": "{{password_policy_default}}",
                    "minLength": 0,
                    "type": "string"
                  },
                  "password_reset_allow": {
                    "description": "Whether to allow password reset.",
                    "example": "{{password_reset_allow}}",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The port number of the IDP directory.",
                    "example": "{{port}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "resource": {
                    "description": "The IDP directory resource name.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP directory resources.",
                    "properties": {
                      "groups": {
                        "description": "The URL for group details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URL for IDP directory details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "idp": {
                        "description": "The URL for the IDP.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "users": {
                        "description": "The URL for the list of users.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "groups",
                      "href",
                      "users"
                    ],
                    "type": "object"
                  },
                  "root_dn": {
                    "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{root_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "schema_attributes": {
                    "description": "The directory schema attributes.",
                    "example": "{{schema_attributes}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "server_cert_validate": {
                    "description": "Whether to validate server certificates.",
                    "example": "{{server_cert_validate}}",
                    "type": "boolean"
                  },
                  "service": {
                    "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ],
                    "example": "{{service}}",
                    "type": "integer"
                  },
                  "signed_request": {
                    "description": "Whether the request is signed.",
                    "example": "{{signed_request}}",
                    "type": "boolean"
                  },
                  "ssl": {
                    "description": "Enables SSL.",
                    "example": "{{ssl}}",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "sync_interval": {
                    "description": "The synchronization interval of the IDP directory in seconds.",
                    "example": "{{sync_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sync_state": {
                    "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{sync_state}}",
                    "type": "integer"
                  },
                  "user_base_dn": {
                    "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{user_base_dn}}",
                    "minLength": 0,
                    "nullable": true,
                    "type": "string"
                  },
                  "user_count": {
                    "description": "The total count of users in the IDP directory.",
                    "example": "{{user_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "user_display_name": {
                    "description": "The display name of a user.",
                    "example": "{{user_display_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_email": {
                    "description": "The email of a user.",
                    "example": "{{user_email}}",
                    "type": "string"
                  },
                  "user_fname": {
                    "description": "The first name of a user.",
                    "example": "{{user_fname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_lname": {
                    "description": "The last name of a user.",
                    "example": "{{user_lname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberof": {
                    "description": "The member status of a user.",
                    "example": "{{user_memberof}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberuid": {
                    "description": "The member UID of a user.",
                    "example": "{{user_memberuid}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_object_classes": {
                    "description": "The user's object class.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "user_phone_num": {
                    "description": "The phone number of a user.",
                    "example": "{{user_phone_num}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_principal": {
                    "description": "The login of a user.",
                    "example": "{{user_principal}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_samaccountname": {
                    "description": "The kerberos client principal name.",
                    "example": "{{user_samaccountname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_search_filter": {
                    "description": "The search filter for a user.",
                    "example": "{{user_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_upn": {
                    "description": "The principal name of a user.",
                    "example": "{{user_upn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the directory.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/idpdirectory.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "admin_pwd": "3244234323",
                  "admin_user": "admmin",
                  "agents": [],
                  "api_key": null,
                  "attribute_map": {
                    "user.countryCode": "countryCode",
                    "user.email": "mail",
                    "user.firstName": "givenName",
                    "user.groups": "member",
                    "user.lastName": "sn",
                    "user.netbios": "",
                    "user.persistentId": "entryUUID",
                    "user.phoneNumber": "telephoneNumber",
                    "user.samAccountName": "uid",
                    "user.userPrincipleName": "userPrincipalName"
                  },
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-jex2kaugr-gimcthdupzza.login.stage.akamai-access.com",
                  "company_id": null,
                  "conf_state": 1,
                  "created_at": "2019-07-23T05:55:18.577022",
                  "description": null,
                  "dialin_sni": "dir-jex2kaugr-gimcthdupzza.login.dialin.stage.akamai-access.com",
                  "directory_status": 3,
                  "directory_type": 2,
                  "domains": [],
                  "global_catalog": false,
                  "group_base_dn": "ldapdomain",
                  "group_count": 0,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_object_classes": [
                    "group",
                    "groupOfNames",
                    "posixGroup"
                  ],
                  "group_search_filter": "(|(objectClass=posixGroup)(objectClass=groupOfNames))",
                  "group_token": "gidNumber",
                  "host": "ldap.company.com",
                  "kerb_realms": [],
                  "last_sync": "2019-07-23T05:55:18.577146",
                  "logout_url": "",
                  "metadata": null,
                  "mfa": "off",
                  "modified_at": "2019-07-23T06:02:33.582676",
                  "name": "idpDirectory#1",
                  "nameidformat": null,
                  "ou_attr": null,
                  "ou_filter": null,
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "password_change_allow": false,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_filter": {},
                  "password_policy_default": "",
                  "password_reset_allow": false,
                  "port": 636,
                  "resource": "directories",
                  "resource_uri": {
                    "groups": "/api/v1/directories/JEX2kaugR-GImctHdUpZzA/groups/",
                    "href": "/api/v1/directories/JEX2kaugR-GImctHdUpZzA",
                    "users": "/api/v1/directories/JEX2kaugR-GImctHdUpZzA/users/"
                  },
                  "root_dn": "ldapdomain",
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 2,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": "ldapdomain",
                  "user_count": 0,
                  "user_display_name": "displayName",
                  "user_email": "mail",
                  "user_fname": "givenName",
                  "user_lname": "sn",
                  "user_memberof": "gidNumber",
                  "user_memberuid": "memberUid",
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "user_phone_num": "telephoneNumber",
                  "user_principal": "uid",
                  "user_samaccountname": "uid",
                  "user_search_filter": "(&(objectClass=inetOrgPerson)(objectClass=posixAccount))",
                  "user_upn": "userPrincipalName",
                  "uuid_url": "JEX2kaugR-GImctHdUpZzA"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "properties": {
                    "admin_pwd": {
                      "description": "The administrator user password for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The username.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "type": "object"
                    },
                    "auth_request_signed": {
                      "description": "Indicates a signed authentication request.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Enables referral chasing.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "nullable": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the directory object.",
                      "nullable": true,
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "directories": {
                      "description": "The unique IDs of the directories for the IDP.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "type": "integer"
                    },
                    "domains": {
                      "description": "The directory's domains.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "The domain name.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "items": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "idp": {
                      "description": "The unique ID of the IDP to assign to the directory.",
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object"
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "enum": [
                        "on",
                        "off"
                      ],
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "password_change_allow": {
                      "description": "Allows password changes.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of digits for the password.",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The URL for the IDP.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "type": "object"
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ],
                      "type": "integer"
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. A series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            },
            "description": "Successful operation."
          }
        },
        "summary": "Modify an IDP directory",
        "tags": [
          "IDP directories"
        ]
      },
      "delete": {
        "description": "Deletes an existing IDP directory.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-idp-directory"
        },
        "operationId": "delete-idp-directory",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful operation."
          }
        },
        "summary": "Delete an IDP directory",
        "tags": [
          "IDP directories"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each IDP directory.",
          "example": "{{idpdirectory_id}}",
          "in": "path",
          "name": "idpdirectory_id",
          "required": true,
          "schema": {
            "example": "xz_Hq325SNeSno6Wss9Phg",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idpdirectory-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/idp-directory.yaml",
        "path-info": "/mgmt-pop/idpdirectory/{idpdirectory_id}"
      }
    },
    "/mgmt-pop/services": {
      "post": {
        "description": "Creates a new rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-rule"
        },
        "operationId": "post-rule",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "name": "rule#1",
                "rule_type": 1
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access rule settings to update.",
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128,
                      256,
                      512
                    ],
                    "example": "{{action}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether the rule is global.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge global rules.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the last rule modification.",
                    "example": "{{modified_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "partner_uuid": {
                    "description": "The unique partner ID.",
                    "example": "{{partner_uuid}}",
                    "type": "string"
                  },
                  "partner_uuid_url": {
                    "description": "The unique partner URI.",
                    "example": "{{partner_uuid_url}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "A plural bundle of navigable hypermedia links to other API resources.",
                    "properties": {
                      "href": {
                        "description": "The href resource URI.",
                        "type": "string"
                      },
                      "service": {
                        "description": "The service resource URI.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "href",
                      "service"
                    ],
                    "type": "object"
                  },
                  "rule_type": {
                    "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{rule_type}}",
                    "type": "integer"
                  },
                  "service": {
                    "description": "The unique service ID.",
                    "example": "{{service}}",
                    "type": "string"
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "tenant_uuid": {
                    "description": "The unique ID of the tenant.",
                    "example": "{{tenant_uuid}}",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "Unique URL for the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "rule_type"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/rules-post.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": 1,
                  "created_at": "2019-07-17T10:47:25.588550",
                  "description": null,
                  "global_rule": false,
                  "merge_global": true,
                  "modified_at": "2019-07-17T10:47:25.588564",
                  "name": "rule#1",
                  "partner_uuid": "e2901d96-cc1b-41fc-906c-e29135cc1fe0",
                  "partner_uuid_url": "4pAdlswbQfyQbOKRNcwf4A",
                  "resource_uri": {
                    "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                    "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                  },
                  "rule_type": 1,
                  "service": "b-IAzsVvQfeTT5DTEiXZuw",
                  "status": 1,
                  "tenant_uuid": "bfaecce4-2b73-4768-9f5c-e8da2479d8e2",
                  "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access rule settings to update.",
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether the rule is global.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge global rules.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the last rule modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "partner_uuid": {
                      "description": "The unique partner ID.",
                      "type": "string"
                    },
                    "partner_uuid_url": {
                      "description": "The unique partner URI.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "properties": {
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service resource URI.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "service"
                      ],
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "service": {
                      "description": "The unique service ID.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "tenant_uuid": {
                      "description": "The unique ID of the tenant.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "Unique URL for the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "rule_type"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/rules-post.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Create a rule",
        "tags": [
          "Rules"
        ]
      },
      "get": {
        "description": "Lists rules.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-rules"
        },
        "operationId": "get-rules",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable-offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 250,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1
                  },
                  "objects": [
                    {
                      "action": 1,
                      "created_at": "2019-07-17T10:47:25.588550",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2019-07-17T10:48:23.377706",
                      "name": "rule#1",
                      "resource_uri": {
                        "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                        "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "operator": "==",
                          "type": "user",
                          "value": "sd"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access rules.",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Enterprise Access rule details.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "action": {
                            "description": "The action the rule takes. Refer to [ref:rule-types-actions](Rule types & actions) for more information.",
                            "enum": [
                              1,
                              2,
                              4,
                              8,
                              16,
                              32,
                              64,
                              128,
                              256,
                              512
                            ],
                            "type": "integer"
                          },
                          "created_at": {
                            "description": "__Read-only__ ISO 8601 timestamp marking the rule's creation.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the rule.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "global_rule": {
                            "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                            "type": "boolean"
                          },
                          "merge_global": {
                            "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path, while applying global rules to non-specified content.",
                            "type": "boolean"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the rule's last modification.",
                            "nullable": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The rule's name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "A plural bundle of navigable hypermedia links to other API resources.",
                            "properties": {
                              "href": {
                                "description": "The href resource URI.",
                                "type": "string"
                              },
                              "service": {
                                "description": "The service resource URI.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "href",
                              "service"
                            ],
                            "type": "object"
                          },
                          "rule_type": {
                            "description": "The rule type. Refer to [ref:rule-types-actions](Rule types & actions) for the complete list.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ],
                            "type": "integer"
                          },
                          "status": {
                            "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                            "enum": [
                              0,
                              1
                            ],
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The unique ID of the rule.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "action",
                          "description",
                          "global_rule",
                          "merge_global",
                          "name",
                          "resource_uri",
                          "rule_type",
                          "status",
                          "uuid_url"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/rules.yaml"
                        }
                      },
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/rules-list.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "List rules",
        "tags": [
          "Rules"
        ]
      },
      "x-akamai": {
        "file-path": "paths/services.yaml",
        "path-info": "/mgmt-pop/services"
      }
    },
    "/mgmt-pop/services/{id}": {
      "get": {
        "description": "Gets a single rule by ID.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-rule"
        },
        "operationId": "get-rule",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": 1,
                  "created_at": "2019-07-17T10:47:25.588550",
                  "description": null,
                  "global_rule": false,
                  "merge_global": true,
                  "modified_at": "2019-07-17T10:48:23.377706",
                  "name": "DB apps",
                  "resource_uri": {
                    "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                    "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                  },
                  "rule_type": 1,
                  "settings": [
                    {
                      "operator": "==",
                      "type": "user",
                      "value": "sd"
                    }
                  ],
                  "status": 1,
                  "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg"
                },
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [ref:rule-types-actions](Rule types & actions) for more information.",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "__Read-only__ ISO 8601 timestamp marking the rule's creation.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path, while applying global rules to non-specified content.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the rule's last modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule's name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "properties": {
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service resource URI.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "service"
                      ],
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [ref:rule-types-actions](Rule types & actions) for the complete list.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique ID of the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "resource_uri",
                    "rule_type",
                    "status",
                    "uuid_url"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/rules.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Get a rule",
        "tags": [
          "Rules"
        ]
      },
      "put": {
        "description": "Updates an existing rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-rule"
        },
        "operationId": "put-rule",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "action": 1,
                "created_at": "2019-07-17T10:47:25.588550",
                "description": null,
                "global_rule": false,
                "merge_global": true,
                "modified_at": "2019-07-17T10:47:25.588564",
                "name": "rule#1",
                "partner_uuid": "e2901d96-cc1b-41fc-906c-e29135cc1fe0",
                "partner_uuid_url": "4pAdlswbQfyQbOKRNcwf4A",
                "rule_type": 1,
                "service": "b-IAzsVvQfeTT5DTEiXZuw",
                "settings": [
                  {
                    "operator": "==",
                    "type": "user",
                    "value": "sd"
                  }
                ],
                "status": 1,
                "tenant_uuid": "bfaecce4-2b73-4768-9f5c-e8da2479d8e2"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access rule settings.",
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128
                    ],
                    "example": "{{action}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether the rule is global.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge global rules.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the last rule modification.",
                    "example": "{{modified_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "partner_uuid": {
                    "description": "The unique partner ID.",
                    "example": "{{partner_uuid}}",
                    "type": "string"
                  },
                  "partner_uuid_url": {
                    "description": "The unique partner URI.",
                    "example": "{{partner_uuid_url}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "A plural bundle of navigable hypermedia links to other API resources.",
                    "properties": {
                      "href": {
                        "description": "The href resource URI.",
                        "type": "string"
                      },
                      "service": {
                        "description": "The service resource URI.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "href",
                      "service"
                    ],
                    "type": "object"
                  },
                  "rule_type": {
                    "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "example": "{{rule_type}}",
                    "type": "integer"
                  },
                  "service": {
                    "description": "The unique service ID.",
                    "example": "{{service}}",
                    "type": "string"
                  },
                  "settings": {
                    "description": "Defined rule settings, such as rule type, operator, and value.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "The logical operator, either `==` for equals, or `!=` for doesn't equal.",
                          "enum": [
                            "==",
                            "!="
                          ],
                          "type": "string"
                        },
                        "type": {
                          "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, `time` or `url`.",
                          "enum": [
                            "method",
                            "group",
                            "client_IP",
                            "user",
                            "region",
                            "country",
                            "time",
                            "url"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The values for the selected `type`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "tenant_uuid": {
                    "description": "The unique ID of the tenant.",
                    "example": "{{tenant_uuid}}",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "Unique URL for the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "action",
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "rule_type",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/rules-put.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "action": 1,
                  "created_at": "2019-07-17T10:47:25.588550",
                  "description": null,
                  "global_rule": false,
                  "merge_global": true,
                  "modified_at": "2019-07-17T10:48:23.377706",
                  "name": "DB apps",
                  "resource_uri": {
                    "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                    "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                  },
                  "rule_type": 1,
                  "settings": [
                    {
                      "operator": "==",
                      "type": "user",
                      "value": "sd"
                    }
                  ],
                  "status": 1,
                  "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access rule settings.",
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether the rule is global.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge global rules.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the last rule modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "partner_uuid": {
                      "description": "The unique partner ID.",
                      "type": "string"
                    },
                    "partner_uuid_url": {
                      "description": "The unique partner URI.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "properties": {
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service resource URI.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "service"
                      ],
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "type": "integer"
                    },
                    "service": {
                      "description": "The unique service ID.",
                      "type": "string"
                    },
                    "settings": {
                      "description": "Defined rule settings, such as rule type, operator, and value.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "custom": {
                            "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                            "type": "boolean"
                          },
                          "operator": {
                            "description": "The logical operator, either `==` for equals, or `!=` for doesn't equal.",
                            "enum": [
                              "==",
                              "!="
                            ],
                            "type": "string"
                          },
                          "type": {
                            "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, `time` or `url`.",
                            "enum": [
                              "method",
                              "group",
                              "client_IP",
                              "user",
                              "region",
                              "country",
                              "time",
                              "url"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "The values for the selected `type`.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "tenant_uuid": {
                      "description": "The unique ID of the tenant.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "Unique URL for the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "rule_type",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/rules-put.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Modify a rule",
        "tags": [
          "Rules"
        ]
      },
      "delete": {
        "description": "Deletes an existing rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-rule"
        },
        "operationId": "delete-rule",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {},
            "description": "Successful response."
          }
        },
        "summary": "Delete a rule",
        "tags": [
          "Rules"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each access control rule.",
          "example": "{{id}}",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "example": "HaYkWaXESw34nFi6VevZmA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/id.yaml",
        "path-info": "/mgmt-pop/services/{id}"
      }
    },
    "/mgmt-pop/services/{id}/rules": {
      "post": {
        "description": "Creates a new access control rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-access-control-rule"
        },
        "operationId": "post-access-control-rule",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "deny-group-rule": {
                  "summary": "Deny group rule",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:19:56.370497",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:19:56.370509",
                    "name": "aak-group-rule",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "settings": [
                      {
                        "operator": "==",
                        "type": "group",
                        "value": "group_name"
                      }
                    ],
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1"
                  }
                },
                "deny-method": {
                  "summary": "Deny method",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:25:02.679301",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:25:02.679313",
                    "name": "aak-rule-3",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "settings": [
                      {
                        "operator": "!=",
                        "type": "method",
                        "value": "GET"
                      }
                    ],
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1"
                  }
                },
                "deny-region-rule": {
                  "summary": "Deny region rule",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:28:35.212008",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:28:35.212021",
                    "name": "aak-rule-4",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "settings": [
                      {
                        "operator": "!=",
                        "type": "country",
                        "value": "US"
                      }
                    ],
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1"
                  }
                },
                "deny-url": {
                  "summary": "Deny URL",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:12:55.194840",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:12:55.194855",
                    "name": "aak-test-rule",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "settings": [
                      {
                        "operator": "==",
                        "type": "url",
                        "value": "www.google.com"
                      }
                    ],
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1"
                  }
                },
                "deny-user": {
                  "summary": "Deny user",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:22:41.685670",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:22:41.685685",
                    "name": "denyusers_US",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "settings": [
                      {
                        "operator": "!=",
                        "type": "user",
                        "value": "username"
                      }
                    ],
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Properties to create and assign rules to restrict access to an application. Filters are based on username, group name, time, or other conditions.",
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. Use `1` for access rules.",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128,
                      256,
                      512
                    ],
                    "example": "{{action}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the rule's last modification.",
                    "example": "{{modified_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule's name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "partner_uuid": {
                    "description": "The unique partner ID.",
                    "example": "{{partner_uuid}}",
                    "type": "string"
                  },
                  "partner_uuid_url": {
                    "description": "The unique partner URI.",
                    "example": "{{partner_uuid_url}}",
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "A plural bundle of navigable hypermedia links to other API resources.",
                    "properties": {
                      "href": {
                        "description": "The href resource URI.",
                        "type": "string"
                      },
                      "service": {
                        "description": "The service resource URI.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "href",
                      "service"
                    ],
                    "type": "object"
                  },
                  "rule_type": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. For access rules, rule type is `1`.",
                    "enum": [
                      1
                    ],
                    "example": "{{rule_type}}",
                    "type": "integer"
                  },
                  "service": {
                    "description": "The unique service ID.",
                    "example": "{{service}}",
                    "type": "string"
                  },
                  "settings": {
                    "description": "Defined rule settings, such as rule type, operator, and value.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "The logical operator, either `==` for equals, or `!=` for doesn't equal.",
                          "enum": [
                            "==",
                            "!="
                          ],
                          "type": "string"
                        },
                        "type": {
                          "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, `time` or `url`.",
                          "enum": [
                            "method",
                            "group",
                            "client_IP",
                            "user",
                            "region",
                            "country",
                            "time",
                            "url"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The values for the selected `type`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "tenant_uuid": {
                    "description": "The unique ID of the tenant.",
                    "example": "{{tenant_uuid}}",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "The unique ID of the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "rule_type",
                  "settings",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/access-rule.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "deny-group-rule": {
                    "summary": "Deny group rule",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:19:56.370497",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:20:19.750670",
                      "name": "aak-group-rule",
                      "resource_uri": {
                        "href": "/api/v1/rules/NuAt1yMGSM6oKdEuMq4WbA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "group",
                          "value": "group_name"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "NuAt1yMGSM6oKdEuMq4WbA"
                    }
                  },
                  "deny-method": {
                    "summary": "Deny method",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:25:02.679301",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:25:42.202627",
                      "name": "aak-rule-3",
                      "resource_uri": {
                        "href": "/api/v1/rules/SAzHpIoFQP-nCu3dfUtO4A",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "method",
                          "value": "GET"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "SAzHpIoFQP-nCu3dfUtO4A"
                    }
                  },
                  "deny-region-rule": {
                    "summary": "Deny region rule",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:28:35.212008",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:29:27.419958",
                      "name": "aak-rule-4",
                      "resource_uri": {
                        "href": "/api/v1/rules/tVDo1UhZRde_7WZjj7txuQ",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "country",
                          "value": "US"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "tVDo1UhZRde_7WZjj7txuQ"
                    }
                  },
                  "deny-url": {
                    "summary": "Deny URL",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:12:55.194840",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:13:27.853937",
                      "name": "aak-rule",
                      "resource_uri": {
                        "href": "/api/v1/rules/sF-OF7fLTxC895h_l9LouA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "url",
                          "value": "www.google.com"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "sF-OF7fLTxC895h_l9LouA"
                    }
                  },
                  "deny-user": {
                    "summary": "Deny user",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:22:41.685670",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:22:56.308761",
                      "name": "aak-rule-2",
                      "resource_uri": {
                        "href": "/api/v1/rules/hJVLit4FSpyU16llVByXxg",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "user",
                          "value": "username"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "hJVLit4FSpyU16llVByXxg"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Properties to create and assign rules to restrict access to an application. Filters are based on username, group name, time, or other conditions.",
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. Use `1` for access rules.",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule's creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the rule's last modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule's name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "partner_uuid": {
                      "description": "The unique partner ID.",
                      "type": "string"
                    },
                    "partner_uuid_url": {
                      "description": "The unique partner URI.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "properties": {
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service resource URI.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "service"
                      ],
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. For access rules, rule type is `1`.",
                      "enum": [
                        1
                      ],
                      "type": "integer"
                    },
                    "service": {
                      "description": "The unique service ID.",
                      "type": "string"
                    },
                    "settings": {
                      "description": "Defined rule settings, such as rule type, operator, and value.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "custom": {
                            "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                            "type": "boolean"
                          },
                          "operator": {
                            "description": "The logical operator, either `==` for equals, or `!=` for doesn't equal.",
                            "enum": [
                              "==",
                              "!="
                            ],
                            "type": "string"
                          },
                          "type": {
                            "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, `time` or `url`.",
                            "enum": [
                              "method",
                              "group",
                              "client_IP",
                              "user",
                              "region",
                              "country",
                              "time",
                              "url"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "The values for the selected `type`.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "tenant_uuid": {
                      "description": "The unique ID of the tenant.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "The unique ID of the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "rule_type",
                    "settings",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/access-rule.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Create an access control rule",
        "tags": [
          "Rules"
        ]
      },
      "put": {
        "description": "Updates an existing access control rule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-access-control-rule"
        },
        "operationId": "put-access-control-rule",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "update-deny-group": {
                  "summary": "Update deny group",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:19:56.370497",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:20:19.750670",
                    "name": "aak-group-rule",
                    "rule_type": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "==",
                        "type": "group",
                        "value": "group_name_changed"
                      }
                    ],
                    "status": 1
                  }
                },
                "update-deny-region": {
                  "summary": "Update deny region",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:28:35.212008",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:29:27.419958",
                    "name": "aak-rule-4",
                    "rule_type": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "!=",
                        "type": "country",
                        "value": "VN"
                      }
                    ],
                    "status": 1
                  }
                },
                "update-deny-url": {
                  "summary": "Update deny URL",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:22:41.685670",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:22:56.308761",
                    "name": "aak-rule-2",
                    "rule_type": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "!=",
                        "type": "user",
                        "value": "username_changed"
                      }
                    ],
                    "status": 1
                  }
                },
                "update-deny-user": {
                  "summary": "Update deny user",
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:12:55.194840",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:13:27.853937",
                    "name": "aak-rule",
                    "rule_type": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "==",
                        "type": "url",
                        "value": "www.yahoo.com"
                      }
                    ],
                    "status": 1
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Properties to create and assign rules to restrict access to an application. Filters are based on username, group name, time, or other conditions.",
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. Use `1` for access rules.",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128,
                      256,
                      512
                    ],
                    "example": "{{action}}",
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule's creation.",
                    "example": "{{created_at}}",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the rule's last modification.",
                    "example": "{{modified_at}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule's name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "A plural bundle of navigable hypermedia links to other API resources.",
                    "properties": {
                      "href": {
                        "description": "The href resource URI.",
                        "type": "string"
                      },
                      "service": {
                        "description": "The service resource URI.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "href",
                      "service"
                    ],
                    "type": "object"
                  },
                  "rule_type": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. Use `1` for access rules.",
                    "enum": [
                      1
                    ],
                    "example": "{{rule_type}}",
                    "type": "integer"
                  },
                  "settings": {
                    "description": "The defined rule settings, such as rule type, operator and value.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "custom": {
                          "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "The logical operator, either `==` for is, or `!=` for is not.",
                          "enum": [
                            "==",
                            "!="
                          ],
                          "type": "string"
                        },
                        "type": {
                          "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, `time` or `url`.",
                          "enum": [
                            "method",
                            "group",
                            "client_IP",
                            "user",
                            "region",
                            "country",
                            "time",
                            "url"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The values for the selected `type`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "enum": [
                      0,
                      1
                    ],
                    "example": "{{status}}",
                    "type": "integer"
                  },
                  "tenant_uuid": {
                    "description": "The unique ID of the tenant.",
                    "example": "{{tenant_uuid}}",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "The unique ID of the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "action",
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "rule_type",
                  "settings",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-access-control-rule.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "update-deny-group": {
                    "summary": "Update deny group",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:19:56.370497",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:09:09.709250",
                      "name": "aak-group-rule",
                      "resource_uri": {
                        "href": "/api/v1/rules/NuAt1yMGSM6oKdEuMq4WbA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "group",
                          "value": "group_name_changed"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "NuAt1yMGSM6oKdEuMq4WbA"
                    }
                  },
                  "update-deny-region": {
                    "summary": "Update deny region",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:28:35.212008",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:18:34.995927",
                      "name": "aak-rule-4",
                      "resource_uri": {
                        "href": "/api/v1/rules/tVDo1UhZRde_7WZjj7txuQ",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "country",
                          "value": "VN"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "tVDo1UhZRde_7WZjj7txuQ"
                    }
                  },
                  "update-deny-url": {
                    "summary": "Update deny URL",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:12:55.194840",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:13:37.615065",
                      "name": "aak-rule",
                      "resource_uri": {
                        "href": "/api/v1/rules/sF-OF7fLTxC895h_l9LouA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "url",
                          "value": "www.yahoo.com"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "sF-OF7fLTxC895h_l9LouA"
                    }
                  },
                  "update-deny-user": {
                    "summary": "Update deny user",
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:22:41.685670",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:15:53.502949",
                      "name": "aak-rule-2",
                      "resource_uri": {
                        "href": "/api/v1/rules/hJVLit4FSpyU16llVByXxg",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "rule_type": 1,
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "user",
                          "value": "username_changed"
                        }
                      ],
                      "status": 1,
                      "uuid_url": "hJVLit4FSpyU16llVByXxg"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Properties to create and assign rules to restrict access to an application. Filters are based on username, group name, time, or other conditions.",
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. Use `1` for access rules.",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ],
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule's creation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the rule's last modification.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule's name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "properties": {
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service resource URI.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "service"
                      ],
                      "type": "object"
                    },
                    "rule_type": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. Use `1` for access rules.",
                      "enum": [
                        1
                      ],
                      "type": "integer"
                    },
                    "settings": {
                      "description": "The defined rule settings, such as rule type, operator and value.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "custom": {
                            "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                            "type": "boolean"
                          },
                          "operator": {
                            "description": "The logical operator, either `==` for is, or `!=` for is not.",
                            "enum": [
                              "==",
                              "!="
                            ],
                            "type": "string"
                          },
                          "type": {
                            "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, `time` or `url`.",
                            "enum": [
                              "method",
                              "group",
                              "client_IP",
                              "user",
                              "region",
                              "country",
                              "time",
                              "url"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "description": "The values for the selected `type`.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "tenant_uuid": {
                      "description": "The unique ID of the tenant.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "The unique ID of the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "rule_type",
                    "settings",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/update-access-control-rule.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "bad.request",
                  "details": [
                    {
                      "code": "bad.request",
                      "message": "The server cannot or will not process the request due to an apparent client error"
                    }
                  ],
                  "status": 400,
                  "title": "Bad Request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/eaa-api/reference/400).",
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "unauthorized",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The request requires authentication"
                    }
                  ],
                  "status": 401,
                  "title": "Unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized](https://techdocs.akamai.com/eaa-api/reference/401).",
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "forbidden",
                  "details": [
                    {
                      "code": "invalid.role",
                      "message": "User is not authorized"
                    }
                  ],
                  "status": 403,
                  "title": "Forbidden"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/eaa-api/reference/403).",
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "not.found",
                  "details": [
                    {
                      "code": "invalid.data",
                      "message": "The requested resource could not be found"
                    }
                  ],
                  "status": 404,
                  "title": "Not Found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/eaa-api/reference/404).",
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          },
          "405": {
            "content": {
              "application/problem+json": {
                "example": {
                  "code": "method.not.allowed",
                  "details": [
                    {
                      "code": "method.not.supported",
                      "message": "A request method is not supported for the requested resource"
                    }
                  ],
                  "status": 405,
                  "title": "Method Not Allowed"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Method not allowed](https://techdocs.akamai.com/eaa-api/reference/405).",
            "x-akamai": {
              "file-path": "errors/405.yaml"
            }
          },
          "415": {
            "content": {
              "application/problem+json": {
                "example": {
                  "details": [
                    {
                      "code": "unsupported.media.type",
                      "message": "The request entity has a media type which the server or resource doesn't support"
                    }
                  ],
                  "status": 415,
                  "title": "Unsupported Media Type"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                  "properties": {
                    "detail": {
                      "description": "Diagnostic instructions to locate and fix the problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "For errors with more than one detected problem, this represents each separately as a nested Problem Details object.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents error data in the [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457) Problem Details format.",
                        "properties": {
                          "detail": {
                            "description": "Diagnostic instructions to locate and fix the problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "description": "Unique value generated with each API call.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP status code that categorizes this error case.",
                            "maximum": 600,
                            "minimum": 100,
                            "type": "integer"
                          },
                          "title": {
                            "description": "A summary of each error case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies each error case.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "status",
                          "detail",
                          "instance"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/problem-nested.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "instance": {
                      "description": "Unique value generated with each API call.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The HTTP status code that categorizes this error case.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "A summary of each error case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Identifies each error case.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unsupported media type](https://techdocs.akamai.com/eaa-api/reference/415).",
            "x-akamai": {
              "file-path": "errors/415.yaml"
            }
          }
        },
        "summary": "Modify an access control rule",
        "tags": [
          "Rules"
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each access control rule.",
          "example": "{{id}}",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "example": "HaYkWaXESw34nFi6VevZmA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/rules-per-service.yaml",
        "path-info": "/mgmt-pop/services/{id}/rules"
      }
    },
    "/mgmt-pop/tenant/mfa/reset": {
      "post": {
        "description": "Resets the one time password (OTP) of a user.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-tenant-mfa-reset"
        },
        "operationId": "post-tenant-mfa-reset",
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contract-id-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "otp_type": "login_mfa",
                "user_id": "UcxX2qmATBeyADMt2oRxNw"
              },
              "schema": {
                "additionalProperties": false,
                "description": "MFA user settings.",
                "properties": {
                  "otp_type": {
                    "description": "The one-time password type. Either `login_mfa` or `admin_mfa`. Use `login_mfa` for this operation.",
                    "enum": [
                      "login_mfa",
                      "admin_mfa"
                    ],
                    "example": "{{otp_type}}",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of the reset request.",
                    "example": "{{status}}",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "The user's unique identifier.",
                    "example": "{{user_id}}",
                    "minLength": 0,
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/mfauser-reset.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "status": "success"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "MFA user settings.",
                  "properties": {
                    "otp_type": {
                      "description": "The one-time password type. Either `login_mfa` or `admin_mfa`. Use `login_mfa` for this operation.",
                      "enum": [
                        "login_mfa",
                        "admin_mfa"
                      ],
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the reset request.",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "The user's unique identifier.",
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/mfauser-reset.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          }
        },
        "summary": "Reset MFA user password",
        "tags": [
          "User administration"
        ]
      },
      "x-akamai": {
        "file-path": "paths/reset.yaml",
        "path-info": "/mgmt-pop/tenant/mfa/reset"
      }
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/crux/v1"
    }
  ],
  "tags": [],
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  }
}