{
  "components": {
    "schemas": {
      "access-map.collection": {
        "additionalProperties": false,
        "description": "Access Map collection.",
        "properties": {
          "maps": {
            "description": "TBD. A page of AccessMap objects matching the specified filtering and sorting criteria.",
            "items": {
              "additionalProperties": false,
              "description": "Access Map summary read schema.",
              "properties": {
                "mapId": {
                  "description": "The unique identifier for an entity.",
                  "minimum": 1,
                  "readOnly": true,
                  "type": "integer"
                },
                "name": {
                  "description": "A unique name for the entity.",
                  "maxLength": 128,
                  "minLength": 1,
                  "pattern": "[a-zA-z0-9\\-_]*",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "mapId"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/access-map.read-summary.yaml"
              }
            },
            "type": "array"
          },
          "page": {
            "additionalProperties": false,
            "description": "Common page properties for search results.",
            "properties": {
              "pageNumber": {
                "description": "Indicates the page number of the current results, given the page size.",
                "type": "integer"
              },
              "pageSize": {
                "description": "Indicates the page size for the current results.",
                "type": "integer"
              },
              "totalPages": {
                "description": "Indicates the total number of pages, taking the pages size into consideration.",
                "type": "integer"
              },
              "totalResults": {
                "description": "Indicates the total number of results from the search.",
                "type": "integer"
              }
            },
            "required": [
              "pageNumber",
              "pageSize"
            ],
            "type": "object"
          }
        },
        "required": [
          "maps",
          "page"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/access-map.collection.yaml"
        }
      },
      "access-map.create": {
        "additionalProperties": false,
        "description": "Access Map create schema.",
        "properties": {
          "description": {
            "description": "A description for the entity.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          },
          "name": {
            "description": "A unique name for the entity.",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/access-map.create.yaml"
        }
      },
      "access-map.read-detailed": {
        "additionalProperties": false,
        "description": "Access Map object definitions.",
        "properties": {
          "description": {
            "description": "A description for the entity.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          },
          "mapId": {
            "description": "The unique identifier for an entity.",
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "A unique name for the entity.",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          }
        },
        "required": [
          "name",
          "mapId"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/access-map.read-detailed.yaml"
        }
      },
      "access-map.read-summary": {
        "additionalProperties": false,
        "description": "Access Map summary read schema.",
        "properties": {
          "mapId": {
            "description": "The unique identifier for an entity.",
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "A unique name for the entity.",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          }
        },
        "required": [
          "name",
          "mapId"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/access-map.read-summary.yaml"
        }
      },
      "access-map.update": {
        "additionalProperties": false,
        "description": "Access Map update schema.",
        "properties": {
          "description": {
            "description": "A description for the entity.",
            "maxLength": 256,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          },
          "mapId": {
            "description": "The unique identifier for an entity.",
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "A unique name for the entity.",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "[a-zA-z0-9\\-_]*",
            "type": "string"
          }
        },
        "required": [
          "name",
          "mapId"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/access-map.update.yaml"
        }
      }
    },
    "securitySchemes": {
      "oauth_v2": {
        "description": "This API uses OAuth 2 with the implicit grant flow.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/api/identity/v1/oauth/authorize",
            "scopes": {
              "coblitz.co": "This scope is automatically assigned to users with the `CO` role.",
              "coblitz.obs": "This scope is automatically assigned to users with the `Observer` role.",
              "lcdn-mapping.admin": "This scope can be assigned to applications to grant administrative permission for LCDN mapping configuration.",
              "lcdn-mapping.read": "This scope can be assigned to applications to grant read-only permission for LCDN mapping configuration."
            },
            "tokenUrl": "/api/identity/v1/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "externalDocs": {
    "description": "See documentation for Akamai's Aura LCDN Mapping API",
    "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference"
  },
  "info": {
    "description": "Manage mapping configuration objects for the LCDN product on the Aura platform.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Akamai: Aura LCDN Mapping API",
    "version": "v1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/access-maps": {
      "post": {
        "description": "This operation creates a new Access Map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/createAccessMap"
        },
        "operationId": "createAccessMap",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "config": {
                  "contentType": "text/plain"
                },
                "metadata": {
                  "contentType": "application/json"
                }
              },
              "example": "--Boundary_1_590503263_1680290024614\nContent-Type: application/json\nContent-Disposition: form-data; name=\"metadata\"\n\n{\n  \"description\": \"Default access map.\",\n  \"name\": \"access_map1\"\n}\n--Boundary_1_590503263_1680290024614\nContent-Type: text/plain\nContent-Disposition: form-data; name=\"access_map1.map\"\n\nmap 0.0.0.0/0 : allow\n\n--Boundary_1_590503263_1680290024614--",
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "description": "An access map in its native format, as described in Aura documentation.",
                    "example": "map 0.0.0.0/0 : allow",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "description": "Access Map create schema.",
                    "properties": {
                      "description": {
                        "description": "A description for the entity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "name": {
                        "description": "A unique name for the entity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/access-map.create.yaml"
                    }
                  }
                },
                "required": [
                  "config",
                  "metadata"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Default access map.",
                  "mapId": 1863,
                  "name": "access_map1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Access Map object definitions.",
                  "properties": {
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "mapId": {
                      "description": "The unique identifier for an entity.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "mapId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/access-map.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 201 will be returned if the request is successfully processed, and a new access-map object is created.  The location of the new object will be specified in the location header.",
            "headers": {
              "Location": {
                "description": "The location header specifies a URI pointing to the newly created resource.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Create a new access map",
        "tags": [
          "Access maps"
        ]
      },
      "get": {
        "description": "This operation returns a list of all configured access maps.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/listAccessMaps"
        },
        "operationId": "listAccessMaps",
        "parameters": [
          {
            "description": "Filters the returned collection.",
            "example": "{{filter}}",
            "in": "query",
            "name": "filter",
            "schema": {
              "example": "name==foo",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_filter.yaml"
            }
          },
          {
            "description": "__Enum__ Specifies that either the `detailed` or default `summary` view be returned.",
            "example": "{{view}}",
            "in": "query",
            "name": "view",
            "schema": {
              "default": "summary",
              "enum": [
                "summary",
                "detailed"
              ],
              "example": "summary",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_view.yaml"
            }
          },
          {
            "description": "Specifies the sort order of the returned collection.",
            "example": "{{sortBy}}",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "example": "name",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_sortBy.yaml"
            }
          },
          {
            "description": "Specifies an offset into the results.  Use in conjunction with `pageSize`.  Page number offset is 1-based.",
            "example": "{{pageNumber}}",
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "default": 1,
              "example": 2,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageNumber.yaml"
            }
          },
          {
            "description": "Specifies the number of results per page.  Use in conjunction with `pageNumber`.",
            "example": "{{pageSize}}",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "default": 100,
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageSize.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "maps": [
                    {
                      "mapId": 1863,
                      "name": "access_map1"
                    }
                  ],
                  "page": {
                    "pageNumber": 1,
                    "pageSize": 100,
                    "totalPages": 1,
                    "totalResults": 1
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Access Map collection.",
                  "properties": {
                    "maps": {
                      "description": "TBD. A page of AccessMap objects matching the specified filtering and sorting criteria.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Access Map summary read schema.",
                        "properties": {
                          "mapId": {
                            "description": "The unique identifier for an entity.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "name": {
                            "description": "A unique name for the entity.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-z0-9\\-_]*",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "mapId"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/access-map.read-summary.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Common page properties for search results.",
                      "properties": {
                        "pageNumber": {
                          "description": "Indicates the page number of the current results, given the page size.",
                          "type": "integer"
                        },
                        "pageSize": {
                          "description": "Indicates the page size for the current results.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Indicates the total number of pages, taking the pages size into consideration.",
                          "type": "integer"
                        },
                        "totalResults": {
                          "description": "Indicates the total number of results from the search.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "pageNumber",
                        "pageSize"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "maps",
                    "page"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/access-map.collection.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "List access maps",
        "tags": [
          "Access maps"
        ]
      }
    },
    "/access-maps/validate": {
      "post": {
        "description": "This operation validates an access map, and may be used to ensure\ncorrect syntax when preparing to apply a map.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/validateAccessMap"
        },
        "operationId": "validateAccessMap",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "config": {
                  "contentType": "text/plain"
                },
                "metadata": {
                  "contentType": "application/json"
                }
              },
              "example": "--Boundary_1_590503263_1680290024614\nContent-Type: application/json\nContent-Disposition: form-data; name=\"metadata\"\n\n{\n  \"description\": \"Default access map.\",\n  \"name\": \"access_map1\"\n}\n--Boundary_1_590503263_1680290024614\nContent-Type: text/plain\nContent-Disposition: form-data; name=\"access_map1.map\"\n\nmap 0.0.0.0/0 : allow\n\n--Boundary_1_590503263_1680290024614--",
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "description": "An access map in its native format, as described in Aura documentation.",
                    "example": "map 0.0.0.0/0 : allow",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "description": "Access Map create schema.",
                    "properties": {
                      "description": {
                        "description": "A description for the entity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "name": {
                        "description": "A unique name for the entity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/access-map.create.yaml"
                    }
                  }
                },
                "required": [
                  "config",
                  "metadata"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "An HTTP 200 will be returned if the map is successfully validated."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Validate an access map",
        "tags": [
          "Access maps"
        ]
      }
    },
    "/access-maps/{mapId}": {
      "get": {
        "description": "This operation gets the details of an access map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readAccessMap"
        },
        "operationId": "readAccessMap",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Default access map.",
                  "mapId": 1863,
                  "name": "access_map1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Access Map object definitions.",
                  "properties": {
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "mapId": {
                      "description": "The unique identifier for an entity.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "mapId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/access-map.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get an access map",
        "tags": [
          "Access maps"
        ]
      },
      "put": {
        "description": "This operation updates the details of an access map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateAccessMap"
        },
        "operationId": "updateAccessMap",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Default access map.",
                "mapId": 1863,
                "name": "access_map1"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Access Map update schema.",
                "properties": {
                  "description": {
                    "description": "A description for the entity.",
                    "example": "{{description}}",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  },
                  "mapId": {
                    "description": "The unique identifier for an entity.",
                    "example": "{{mapId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "name": {
                    "description": "A unique name for the entity.",
                    "example": "{{name}}",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "mapId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/access-map.update.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Default access map.",
                  "mapId": 1863,
                  "name": "access_map1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Access Map object definitions.",
                  "properties": {
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "mapId": {
                      "description": "The unique identifier for an entity.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "mapId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/access-map.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 200 will signify the successful update of an access-map instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update an access map",
        "tags": [
          "Access maps"
        ]
      },
      "delete": {
        "description": "This operation removes an access map.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/deleteAccessMap"
        },
        "operationId": "deleteAccessMap",
        "responses": {
          "204": {
            "content": {},
            "description": "The access map instance was successfully removed."
          },
          "400": {
            "content": {},
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request could not be processed.  For example, if another entity is referring to this entity, and the delete could not be processed."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Remove an access map",
        "tags": [
          "Access maps"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a site map instance.",
          "example": "{{mapId}}",
          "in": "path",
          "name": "mapId",
          "required": true,
          "schema": {
            "example": 1863,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/mapId-path.yaml"
          }
        }
      ]
    },
    "/access-maps/{mapId}/map": {
      "get": {
        "description": "This operation gets the content of an access map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readAccessMapContent"
        },
        "operationId": "readAccessMapContent",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "map 0.0.0.0/0 : allow"
              }
            },
            "description": "An HTTP 200 will signify the successful read of an access map instance."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get contents of an access map",
        "tags": [
          "Access map contents"
        ]
      },
      "put": {
        "description": "This operation updates the content of an access map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateAccessMapContent"
        },
        "operationId": "updateAccessMapContent",
        "requestBody": {
          "content": {
            "text/plain": {
              "example": "map 0.0.0.0/0 : allow",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {},
            "description": "An HTTP 200 will signify the successful update of an access map instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update contents of an access map",
        "tags": [
          "Access map contents"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a site map instance.",
          "example": "{{mapId}}",
          "in": "path",
          "name": "mapId",
          "required": true,
          "schema": {
            "example": 1863,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/mapId-path.yaml"
          }
        }
      ]
    },
    "/bgp-configs": {
      "post": {
        "description": "This operation creates a new BGP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/createBgpConfig"
        },
        "operationId": "createBgpConfig",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "config": {
                  "contentType": "text/plain"
                },
                "metadata": {
                  "contentType": "application/json"
                }
              },
              "example": "--Boundary_1_590503263_1680290024614\nContent-Type: application/json\nContent-Disposition: form-data; name=\"metadata\"\n\n{\n  \"name\": \"bgp_config_1\",\n  \"description\": \"Configuration for BGP integration.\"\n}\n\n--Boundary_1_590503263_1680290024614\nContent-Type: text/plain\nContent-Disposition: form-data; name=\"bgp_config_1.config\"\n\nrouter bgp 1112\n bgp router-id 127.0.0.1\n bgp dampening 15 750 2000 61\n\n--Boundary_1_590503263_1680290024614--",
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "description": "A BGP configuration, as described in FRR documentation.",
                    "example": "router bgp 1112 bgp router-id 127.0.0.1 bgp dampening 15 750 2000 61",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "description": "BGP config create schema.",
                    "properties": {
                      "description": {
                        "description": "A description for the entity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "name": {
                        "description": "A unique name for the entity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/bgp-config.create.yaml"
                    }
                  }
                },
                "required": [
                  "config",
                  "metadata"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "bgpConfigId": 2072,
                  "dateCreated": "2020-06-18T01:55:39.000+0000",
                  "description": "Configuration for BGP integration.",
                  "lastUpdated": "2020-06-18T01:55:39.000+0000",
                  "name": "bgp_config_1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "BGP configuration object descriptions.",
                  "properties": {
                    "bgpConfigId": {
                      "description": "The unique identifier for a BGP configuration.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "dateCreated": {
                      "description": "Timestamp of when the configuration was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "lastUpdated": {
                      "description": "Timestamp of when the configuration was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "bgpConfigId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/bgp-config.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 201 will be returned if the request is successfully processed, and a new bgp-config object is created.  The location of the new object will be specified in the location header.",
            "headers": {
              "Location": {
                "description": "The location header specifies a URI pointing to the newly created resource.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Create a new BGP configuration",
        "tags": [
          "BGP configurations"
        ]
      },
      "get": {
        "description": "This operation returns a list of all BGP configurations.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/listBgpConfigs"
        },
        "operationId": "listBgpConfigs",
        "parameters": [
          {
            "description": "Filters the returned collection.",
            "example": "{{filter}}",
            "in": "query",
            "name": "filter",
            "schema": {
              "example": "name==foo",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_filter.yaml"
            }
          },
          {
            "description": "__Enum__ Specifies that either the `detailed` or default `summary` view be returned.",
            "example": "{{view}}",
            "in": "query",
            "name": "view",
            "schema": {
              "default": "summary",
              "enum": [
                "summary",
                "detailed"
              ],
              "example": "summary",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_view.yaml"
            }
          },
          {
            "description": "Specifies the sort order of the returned collection.",
            "example": "{{sortBy}}",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "example": "name",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_sortBy.yaml"
            }
          },
          {
            "description": "Specifies an offset into the results.  Use in conjunction with `pageSize`.  Page number offset is 1-based.",
            "example": "{{pageNumber}}",
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "default": 1,
              "example": 2,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageNumber.yaml"
            }
          },
          {
            "description": "Specifies the number of results per page.  Use in conjunction with `pageNumber`.",
            "example": "{{pageSize}}",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "default": 100,
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageSize.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "bgpConfigs": [
                    {
                      "bgpConfigId": 2072,
                      "name": "bgp_config_1"
                    }
                  ],
                  "page": {
                    "pageNumber": 1,
                    "pageSize": 100,
                    "totalPages": 1,
                    "totalResults": 1
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "BGP config collection.",
                  "properties": {
                    "bgpConfigs": {
                      "description": "TBD. A page of BgpConfig objects matching the specified filtering and sorting criteria.",
                      "items": {
                        "additionalProperties": false,
                        "description": "BGP config summary read schema.",
                        "properties": {
                          "bgpConfigId": {
                            "description": "The unique identifier for a BGP configuration.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "name": {
                            "description": "A unique name for the entity.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-z0-9\\-_]*",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "bgpConfigId"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/bgp-config.read-summary.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Common page properties for search results.",
                      "properties": {
                        "pageNumber": {
                          "description": "Indicates the page number of the current results, given the page size.",
                          "type": "integer"
                        },
                        "pageSize": {
                          "description": "Indicates the page size for the current results.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Indicates the total number of pages, taking the pages size into consideration.",
                          "type": "integer"
                        },
                        "totalResults": {
                          "description": "Indicates the total number of results from the search.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "pageNumber",
                        "pageSize"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "bgpConfigs",
                    "page"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/bgp-config.collection.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "List BGP configurations",
        "tags": [
          "BGP configurations"
        ]
      }
    },
    "/bgp-configs/{bgpConfigId}": {
      "get": {
        "description": "This operation gets the details of a BGP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readBgpConfig"
        },
        "operationId": "readBgpConfig",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "bgpConfigId": 2072,
                  "dateCreated": "2020-06-18T01:55:39.000+0000",
                  "description": "Configuration for BGP integration.",
                  "lastUpdated": "2020-06-18T01:55:39.000+0000",
                  "name": "bgp_config_1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "BGP configuration object descriptions.",
                  "properties": {
                    "bgpConfigId": {
                      "description": "The unique identifier for a BGP configuration.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "dateCreated": {
                      "description": "Timestamp of when the configuration was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "lastUpdated": {
                      "description": "Timestamp of when the configuration was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "bgpConfigId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/bgp-config.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get a BGP configuration",
        "tags": [
          "BGP configurations"
        ]
      },
      "put": {
        "description": "This operation updates the details of a BGP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateBgpConfig"
        },
        "operationId": "updateBgpConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "bgpConfigId": 2072,
                "description": "Configuration for BGP integration.",
                "name": "bgp_config_1"
              },
              "schema": {
                "additionalProperties": false,
                "description": "BGP config update schema.",
                "properties": {
                  "bgpConfigId": {
                    "description": "The unique identifier for a BGP configuration.",
                    "example": "{{bgpConfigId}}",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "description": {
                    "description": "A description for the entity.",
                    "example": "{{description}}",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  },
                  "name": {
                    "description": "A unique name for the entity.",
                    "example": "{{name}}",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "bgpConfigId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/bgp-config.update.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "bgpConfigId": 2072,
                  "dateCreated": "2020-06-18T01:55:39.000+0000",
                  "description": "Configuration for BGP integration.",
                  "lastUpdated": "2020-06-18T01:55:39.000+0000",
                  "name": "bgp_config_1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "BGP configuration object descriptions.",
                  "properties": {
                    "bgpConfigId": {
                      "description": "The unique identifier for a BGP configuration.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "dateCreated": {
                      "description": "Timestamp of when the configuration was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "lastUpdated": {
                      "description": "Timestamp of when the configuration was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "bgpConfigId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/bgp-config.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 200 will signify the successful update of an bgp-config instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update a BGP configuration",
        "tags": [
          "BGP configurations"
        ]
      },
      "delete": {
        "description": "This operation removes a BGP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/deleteBgpConfig"
        },
        "operationId": "deleteBgpConfig",
        "responses": {
          "204": {
            "content": {},
            "description": "The BGP configuration instance was successfully removed."
          },
          "400": {
            "content": {},
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request could not be processed.  For example, if another entity is referring to this entity, and the delete could not be processed."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Remove a BGP configuration",
        "tags": [
          "BGP configurations"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a BGP configuration instance.",
          "example": "{{bgpConfigId}}",
          "in": "path",
          "name": "bgpConfigId",
          "required": true,
          "schema": {
            "example": 2072,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/bgpConfigId-path.yaml"
          }
        }
      ]
    },
    "/bgp-configs/{bgpConfigId}/bgp-config": {
      "get": {
        "description": "This operation gets the content of a BgpConfig instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readBgpConfigContent"
        },
        "operationId": "readBgpConfigContent",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "router bgp 1112 bgp router-id 127.0.0.1 bgp dampening 15 750 2000 61"
              }
            },
            "description": "An HTTP 200 will signify the successful read of an access map instance."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get contents of a BGP configuration",
        "tags": [
          "BGP configuration contents"
        ]
      },
      "put": {
        "description": "This operation updates the content of a BgpConfig instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateBgpConfigContent"
        },
        "operationId": "updateBgpConfigContent",
        "requestBody": {
          "content": {
            "text/plain": {
              "example": "router bgp 1112 bgp router-id 127.0.0.1 bgp dampening 15 750 2000 61",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {},
            "description": "An HTTP 200 will signify the successful update of a BgpConfig instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update BGP configuration contents",
        "tags": [
          "BGP configuration contents"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a BGP configuration instance.",
          "example": "{{bgpConfigId}}",
          "in": "path",
          "name": "bgpConfigId",
          "required": true,
          "schema": {
            "example": 2072,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/bgpConfigId-path.yaml"
          }
        }
      ]
    },
    "/geoip-configs": {
      "post": {
        "description": "This operation creates a new Geo IP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/createGeoIpConfig"
        },
        "operationId": "createGeoIpConfig",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "config": {
                  "contentType": "text/csv"
                },
                "metadata": {
                  "contentType": "application/json"
                }
              },
              "example": "--Boundary_1_590503263_1680290024614\nContent-Type: application/json\nContent-Disposition: form-data; name=\"metadata\"\n\n{\n  \"name\": \"geoip_config_1\",\n  \"description\": \"Configuration for GeoIP integration.\",\n  \"type\": \"IPV4\"\n}\n\n--Boundary_1_590503263_1680290024614\nContent-Type: text/plain\nContent-Disposition: form-data; name=\"geoip_config_1.config\"\n\n\"1.0.0.0\",\"1.0.0.253\",\"16777216\",\"16777471\",\"AU\",\"Australia\"\n\n--Boundary_1_590503263_1680290024614--",
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "description": "The metadata portion is the JSON configuration describing the mapping object.",
                    "example": "\"1.0.0.0\",\"1.0.0.253\",\"16777216\",\"16777471\",\"AU\",\"Australia\"",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "description": "GeoIP config create schema.",
                    "properties": {
                      "description": {
                        "description": "A description for the entity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "name": {
                        "description": "A unique name for the entity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of GeoIP data. Specifies the address type used in the GeoIP configuration file. `IPV4` indicates the GeoIP configuration file uses an IPv4 address. `IPV6` indicates the GeoIP configuration file uses an IPv6 address, `ZIP` indicates a MaxMind GeoIP2 zip file of both.",
                        "enum": [
                          "IPV4",
                          "IPV6",
                          "ZIP"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "type"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/geoip-config.create.yaml"
                    }
                  }
                },
                "required": [
                  "config",
                  "metadata"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "dateCreated": "2020-06-18T01:55:39.000+0000",
                  "description": "Configuration for GeoIP integration.",
                  "geoIpConfigId": 2001,
                  "lastUpdated": "2020-06-18T01:55:39.000+0000",
                  "name": "geoip_config_1",
                  "type": "IPV4"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "GeoIP configuration object.",
                  "properties": {
                    "dateCreated": {
                      "description": "Timestamp of when the configuration was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "geoIpConfigId": {
                      "description": "The unique identifier for a GeoIP configuration.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "lastUpdated": {
                      "description": "Timestamp of when the configuration was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of GeoIP data. Specifies the address type used in the GeoIP configuration file. `IPV4` indicates the GeoIP configuration file uses an IPv4 address. `IPV6` indicates the GeoIP configuration file uses an IPv6 address, `ZIP` indicates a MaxMind GeoIP2 zip file of both.",
                      "enum": [
                        "IPV4",
                        "IPV6",
                        "ZIP"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "geoIpConfigId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/geoip-config.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 201 will be returned if the request is successfully processed, and a new geoip-config object is created.  The location of the new object will be specified in the location header.",
            "headers": {
              "Location": {
                "description": "The location header specifies a URI pointing to the newly created resource.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Create a new Geo IP configuration",
        "tags": [
          "Geo IP configurations"
        ]
      },
      "get": {
        "description": "This operation returns a list of all Geo IP configurations.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/listGeoIpConfigs"
        },
        "operationId": "listGeoIpConfigs",
        "parameters": [
          {
            "description": "Filters the returned collection.",
            "example": "{{filter}}",
            "in": "query",
            "name": "filter",
            "schema": {
              "example": "name==foo",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_filter.yaml"
            }
          },
          {
            "description": "__Enum__ Specifies that either the `detailed` or default `summary` view be returned.",
            "example": "{{view}}",
            "in": "query",
            "name": "view",
            "schema": {
              "default": "summary",
              "enum": [
                "summary",
                "detailed"
              ],
              "example": "summary",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_view.yaml"
            }
          },
          {
            "description": "Specifies the sort order of the returned collection.",
            "example": "{{sortBy}}",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "example": "name",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_sortBy.yaml"
            }
          },
          {
            "description": "Specifies an offset into the results.  Use in conjunction with `pageSize`.  Page number offset is 1-based.",
            "example": "{{pageNumber}}",
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "default": 1,
              "example": 2,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageNumber.yaml"
            }
          },
          {
            "description": "Specifies the number of results per page.  Use in conjunction with `pageNumber`.",
            "example": "{{pageSize}}",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "default": 100,
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageSize.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "geoIpConfigs": [
                    {
                      "geoIpConfigId": 2001,
                      "name": "geoip_config_1"
                    }
                  ],
                  "page": {
                    "pageNumber": 1,
                    "pageSize": 100,
                    "totalPages": 1,
                    "totalResults": 1
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "GeoIP config collection.",
                  "properties": {
                    "bgpConfigs": {
                      "description": "TBD. A page of GeoIpConfig objects matching the specified filtering and sorting criteria.",
                      "items": {
                        "additionalProperties": false,
                        "description": "GeoIP config summary read schema.",
                        "properties": {
                          "geoipConfigId": {
                            "description": "The unique identifier for a GeoIP configuration.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "name": {
                            "description": "A unique name for the entity.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-z0-9\\-_]*",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of GeoIP data. Specifies the address type used in the GeoIP configuration file. `IPV4` indicates the GeoIP configuration file uses an IPv4 address. `IPV6` indicates the GeoIP configuration file uses an IPv6 address, `ZIP` indicates a MaxMind GeoIP2 zip file of both.",
                            "enum": [
                              "IPV4",
                              "IPV6",
                              "ZIP"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "geoIpConfigId"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/geoip-config.read-summary.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Common page properties for search results.",
                      "properties": {
                        "pageNumber": {
                          "description": "Indicates the page number of the current results, given the page size.",
                          "type": "integer"
                        },
                        "pageSize": {
                          "description": "Indicates the page size for the current results.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Indicates the total number of pages, taking the pages size into consideration.",
                          "type": "integer"
                        },
                        "totalResults": {
                          "description": "Indicates the total number of results from the search.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "pageNumber",
                        "pageSize"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "geoIpConfigs",
                    "page"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/geoip-config.collection.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "List Geo IP configurations",
        "tags": [
          "Geo IP configurations"
        ]
      }
    },
    "/geoip-configs/{geoIpConfigId}": {
      "get": {
        "description": "This operation retrieves the details of a Geo IP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readGeoIpConfig"
        },
        "operationId": "readGeoIpConfig",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "dateCreated": "2020-06-18T01:55:39.000+0000",
                  "description": "Configuration for GeoIP integration.",
                  "geoIpConfigId": 2001,
                  "lastUpdated": "2020-06-18T01:55:39.000+0000",
                  "name": "geoip_config_1",
                  "type": "IPV4"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "GeoIP configuration object.",
                  "properties": {
                    "dateCreated": {
                      "description": "Timestamp of when the configuration was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "geoIpConfigId": {
                      "description": "The unique identifier for a GeoIP configuration.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "lastUpdated": {
                      "description": "Timestamp of when the configuration was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of GeoIP data. Specifies the address type used in the GeoIP configuration file. `IPV4` indicates the GeoIP configuration file uses an IPv4 address. `IPV6` indicates the GeoIP configuration file uses an IPv6 address, `ZIP` indicates a MaxMind GeoIP2 zip file of both.",
                      "enum": [
                        "IPV4",
                        "IPV6",
                        "ZIP"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "geoIpConfigId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/geoip-config.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get a Geo IP configuration",
        "tags": [
          "Geo IP configurations"
        ]
      },
      "put": {
        "description": "This operation updates the details of a Geo IP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateGeoIpConfig"
        },
        "operationId": "updateGeoIpConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Configuration for GeoIP integration.",
                "geoIpConfigId": 2001,
                "name": "geoip_config_1",
                "type": "IPV4"
              },
              "schema": {
                "additionalProperties": false,
                "description": "GeoIP config update schema.",
                "properties": {
                  "description": {
                    "description": "A description for the entity.",
                    "example": "{{description}}",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  },
                  "geoIpConfigId": {
                    "description": "The unique identifier for a GeoIP configuration.",
                    "example": "{{geoIpConfigId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "name": {
                    "description": "A unique name for the entity.",
                    "example": "{{name}}",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of GeoIP data. Specifies the address type used in the GeoIP configuration file. `IPV4` indicates the GeoIP configuration file uses an IPv4 address. `IPV6` indicates the GeoIP configuration file uses an IPv6 address, `ZIP` indicates a MaxMind GeoIP2 zip file of both.",
                    "enum": [
                      "IPV4",
                      "IPV6",
                      "ZIP"
                    ],
                    "example": "{{type}}",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "geoIpConfigId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/geoip-config.update.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "dateCreated": "2020-06-18T01:55:39.000+0000",
                  "description": "Configuration for GeoIP integration.",
                  "geoIpConfigId": 2001,
                  "lastUpdated": "2020-06-18T01:55:39.000+0000",
                  "name": "geoip_config_1",
                  "type": "IPV4"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "GeoIP configuration object.",
                  "properties": {
                    "dateCreated": {
                      "description": "Timestamp of when the configuration was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "geoIpConfigId": {
                      "description": "The unique identifier for a GeoIP configuration.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "lastUpdated": {
                      "description": "Timestamp of when the configuration was last updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of GeoIP data. Specifies the address type used in the GeoIP configuration file. `IPV4` indicates the GeoIP configuration file uses an IPv4 address. `IPV6` indicates the GeoIP configuration file uses an IPv6 address, `ZIP` indicates a MaxMind GeoIP2 zip file of both.",
                      "enum": [
                        "IPV4",
                        "IPV6",
                        "ZIP"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "geoIpConfigId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/geoip-config.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 200 will signify the successful update of an geoip-config instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update a Geo IP configuration",
        "tags": [
          "Geo IP configurations"
        ]
      },
      "delete": {
        "description": "This operation removes a Geo IP configuration instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/deleteGeoIpConfig"
        },
        "operationId": "deleteGeoIpConfig",
        "responses": {
          "204": {
            "content": {},
            "description": "The Geo IP configuration instance was successfully removed."
          },
          "400": {
            "content": {},
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request could not be processed.  For example, if another entity is referring to this entity, and the delete could not be processed."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Remove a Geo IP configuration",
        "tags": [
          "Geo IP configurations"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a GeoIP configuration instance.",
          "example": "{{geoIpConfigId}}",
          "in": "path",
          "name": "geoIpConfigId",
          "required": true,
          "schema": {
            "example": 2001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/geoIpConfigId-path.yaml"
          }
        }
      ]
    },
    "/geoip-configs/{geoIpConfigId}/geoip-config": {
      "get": {
        "description": "This operation gets the content of a GeoIpConfig instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readGeoIpConfigContent"
        },
        "operationId": "readGeoIpConfigContent",
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "example": "\"1.0.0.0\",\"1.0.0.253\",\"16777216\",\"16777471\",\"AU\",\"Australia\""
              }
            },
            "description": "An HTTP 200 will signify the successful read of an access map instance."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get contents of a Geo IP configuration",
        "tags": [
          "Geo IP configuration contents"
        ]
      },
      "put": {
        "description": "This operation updates the content of a GeoIpConfig instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateGeoIpConfigContent"
        },
        "operationId": "updateGeoIpConfigContent",
        "requestBody": {
          "content": {
            "text/csv": {
              "example": "\"1.0.0.0\",\"1.0.0.253\",\"16777216\",\"16777471\",\"AU\",\"Australia\"",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {},
            "description": "An HTTP 200 will signify the successful update of a GeoIpConfig instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update Geo IP configuration contents",
        "tags": [
          "Geo IP configuration contents"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a GeoIP configuration instance.",
          "example": "{{geoIpConfigId}}",
          "in": "path",
          "name": "geoIpConfigId",
          "required": true,
          "schema": {
            "example": 2001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/geoIpConfigId-path.yaml"
          }
        }
      ]
    },
    "/site-maps": {
      "post": {
        "description": "This operation creates a new site map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/createSiteMap"
        },
        "operationId": "createSiteMap",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "config": {
                  "contentType": "text/plain"
                },
                "metadata": {
                  "contentType": "application/json"
                }
              },
              "example": "--Boundary_1_590503263_1680290024614\nContent-Type: application/json\nContent-Disposition: form-data; name=\"metadata\"\n\n{\n  \"description\": \"Default site map.\",\n  \"name\": \"site_map1\"\n}\n--Boundary_1_590503263_1680290024614\nContent-Type: text/plain\nContent-Disposition: form-data; name=\"site_map1.map\"\n\nmap 0.0.0.0/0 : zone \"Primary Site\" || zone \"Site Central\"\n\n--Boundary_1_590503263_1680290024614--",
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "description": "The metadata portion is the JSON configuration describing the mapping object.",
                    "example": "map 0.0.0.0/0 : zone \"Primary Site\" || zone \"Site Central\"",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "description": "Site Map create schema.",
                    "properties": {
                      "description": {
                        "description": "A description for the entity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "name": {
                        "description": "A unique name for the entity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/site-map.create.yaml"
                    }
                  }
                },
                "required": [
                  "config",
                  "metadata"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Default site map.",
                  "mapId": 1864,
                  "name": "site_map1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Site map object descriptions.",
                  "properties": {
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "mapId": {
                      "description": "The unique identifier for an entity.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "mapId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/site-map.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 201 will be returned if the request is successfully processed, and a new site-map object is created.  The location of the new object will be specified in the location header.",
            "headers": {
              "Location": {
                "description": "The location header specifies a URI pointing to the newly created resource.",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Create a new site map",
        "tags": [
          "Site maps"
        ]
      },
      "get": {
        "description": "This operation returns a list of all configured site maps.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/listSiteMaps"
        },
        "operationId": "listSiteMaps",
        "parameters": [
          {
            "description": "Filters the returned collection.",
            "example": "{{filter}}",
            "in": "query",
            "name": "filter",
            "schema": {
              "example": "name==foo",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_filter.yaml"
            }
          },
          {
            "description": "__Enum__ Specifies that either the `detailed` or default `summary` view be returned.",
            "example": "{{view}}",
            "in": "query",
            "name": "view",
            "schema": {
              "default": "summary",
              "enum": [
                "summary",
                "detailed"
              ],
              "example": "summary",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_view.yaml"
            }
          },
          {
            "description": "Specifies the sort order of the returned collection.",
            "example": "{{sortBy}}",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "example": "name",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/collection_sortBy.yaml"
            }
          },
          {
            "description": "Specifies an offset into the results.  Use in conjunction with `pageSize`.  Page number offset is 1-based.",
            "example": "{{pageNumber}}",
            "in": "query",
            "name": "pageNumber",
            "schema": {
              "default": 1,
              "example": 2,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageNumber.yaml"
            }
          },
          {
            "description": "Specifies the number of results per page.  Use in conjunction with `pageNumber`.",
            "example": "{{pageSize}}",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "default": 100,
              "example": 2,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/collection_pageSize.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "maps": [
                    {
                      "mapId": 1864,
                      "name": "site_map1"
                    }
                  ],
                  "page": {
                    "pageNumber": 1,
                    "pageSize": 100,
                    "totalPages": 1,
                    "totalResults": 1
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Site Map collection.",
                  "properties": {
                    "maps": {
                      "description": "TBD. A page of SiteMap objects matching the specified filtering and sorting criteria.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Site map summary read schema.",
                        "properties": {
                          "mapId": {
                            "description": "The unique identifier for an entity.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "name": {
                            "description": "A unique name for the entity.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-z0-9\\-_]*",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "mapId"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/site-map.read-summary.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Common page properties for search results.",
                      "properties": {
                        "pageNumber": {
                          "description": "Indicates the page number of the current results, given the page size.",
                          "type": "integer"
                        },
                        "pageSize": {
                          "description": "Indicates the page size for the current results.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Indicates the total number of pages, taking the pages size into consideration.",
                          "type": "integer"
                        },
                        "totalResults": {
                          "description": "Indicates the total number of results from the search.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "pageNumber",
                        "pageSize"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "maps",
                    "page"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/site-map.collection.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "List site maps",
        "tags": [
          "Site maps"
        ]
      }
    },
    "/site-maps/validate": {
      "post": {
        "description": "This operation validates a site map, and may be used to ensure\ncorrect syntax when preparing to apply a map.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/validateSiteMap"
        },
        "operationId": "validateSiteMap",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "encoding": {
                "config": {
                  "contentType": "text/plain"
                },
                "metadata": {
                  "contentType": "application/json"
                }
              },
              "example": "--Boundary_1_590503263_1680290024614\nContent-Type: application/json\nContent-Disposition: form-data; name=\"metadata\"\n\n{\n  \"description\": \"Default site map.\",\n  \"name\": \"site_map1\"\n}\n--Boundary_1_590503263_1680290024614\nContent-Type: text/plain\nContent-Disposition: form-data; name=\"site_map1.map\"\n\nmap 0.0.0.0/0 : zone \"Primary Site\" || zone \"Site Central\"\n\n--Boundary_1_590503263_1680290024614--",
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "description": "A site map in its native format, as described in Aura documentation.",
                    "example": "map 0.0.0.0/0 : zone \"Primary Site\" || zone \"Site Central\"",
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "description": "Site Map create schema.",
                    "properties": {
                      "description": {
                        "description": "A description for the entity.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      },
                      "name": {
                        "description": "A unique name for the entity.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-z0-9\\-_]*",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/site-map.create.yaml"
                    }
                  }
                },
                "required": [
                  "config",
                  "metadata"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {},
            "description": "An HTTP 200 will be returned if the map is successfully validated."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Validate a site map",
        "tags": [
          "Site maps"
        ]
      }
    },
    "/site-maps/{mapId}": {
      "get": {
        "description": "This operation gets the details of a site map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readSiteMap"
        },
        "operationId": "readSiteMap",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Default site map.",
                  "mapId": 1864,
                  "name": "site_map1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Site map object descriptions.",
                  "properties": {
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "mapId": {
                      "description": "The unique identifier for an entity.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "mapId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/site-map.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get a site map",
        "tags": [
          "Site maps"
        ]
      },
      "put": {
        "description": "This operation updates the details of a site map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateSiteMap"
        },
        "operationId": "updateSiteMap",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Default site map.",
                "mapId": 1864,
                "name": "site_map1"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Site Map update schema.",
                "properties": {
                  "description": {
                    "description": "A description for the entity.",
                    "example": "{{description}}",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  },
                  "mapId": {
                    "description": "The unique identifier for an entity.",
                    "example": "{{mapId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "name": {
                    "description": "A unique name for the entity.",
                    "example": "{{name}}",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[a-zA-z0-9\\-_]*",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "mapId"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/site-map.update.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "description": "Default site map.",
                  "mapId": 1864,
                  "name": "site_map1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Site map object descriptions.",
                  "properties": {
                    "description": {
                      "description": "A description for the entity.",
                      "maxLength": 256,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    },
                    "mapId": {
                      "description": "The unique identifier for an entity.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "name": {
                      "description": "A unique name for the entity.",
                      "maxLength": 128,
                      "minLength": 1,
                      "pattern": "[a-zA-z0-9\\-_]*",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "mapId"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/site-map.read-detailed.yaml"
                  }
                }
              }
            },
            "description": "An HTTP 200 will signify the successful update of an site-map instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update a site map",
        "tags": [
          "Site maps"
        ]
      },
      "delete": {
        "description": "This operation removes a site map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/deleteSiteMap"
        },
        "operationId": "deleteSiteMap",
        "responses": {
          "204": {
            "content": {},
            "description": "The site map instance was successfully removed."
          },
          "400": {
            "content": {},
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request could not be processed.  For example, if another entity is referring to this entity, and the delete could not be processed."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Remove a site map",
        "tags": [
          "Site maps"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a site map instance.",
          "example": "{{mapId}}",
          "in": "path",
          "name": "mapId",
          "required": true,
          "schema": {
            "example": 1863,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/mapId-path.yaml"
          }
        }
      ]
    },
    "/site-maps/{mapId}/map": {
      "get": {
        "description": "This operation gets the content of a site map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/readSiteMapContent"
        },
        "operationId": "readSiteMapContent",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "map 0.0.0.0/0 : zone \"Primary Site\" || zone \"Site Central\""
              }
            },
            "description": "An HTTP 200 will signify the successful read of a site map instance."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "coblitz.obs",
              "lcdn-mapping.admin",
              "lcdn-mapping.read"
            ]
          }
        ],
        "summary": "Get contents of a site map",
        "tags": [
          "Site map contents"
        ]
      },
      "put": {
        "description": "This operation updates the content of a site map instance.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Aura LCDN Mapping API",
          "url": "https://techdocs.akamai.com/aura-lcdn-mapping/reference/updateSiteMapContent"
        },
        "operationId": "updateSiteMapContent",
        "requestBody": {
          "content": {
            "text/plain": {
              "example": "map 0.0.0.0/0 : zone \"Primary Site\" || zone \"Site Central\"",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {},
            "description": "An HTTP 200 will signify the successful update of an site map instance."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Constraint violations were detected",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#7284f092-f2f1-4131-a9dc-f8a5b7b6980f",
                  "title": "The request entity is invalid",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.constraint-violation",
                  "violations": [
                    {
                      "detail": "may not be null",
                      "property": "#/hostname",
                      "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.not-null-violation"
                    }
                  ]
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "JSON mapping HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "property"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/json-mapping-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "pathParamName": {
                              "type": "string"
                            },
                            "pathParamValue": {
                              "description": "The value supplied in the request."
                            }
                          }
                        }
                      ],
                      "description": "Invalid path param HTTP problem.  Used when the server can't process a path param due to incorrect type/formatting.",
                      "required": [
                        "type",
                        "instance",
                        "pathParamName",
                        "pathParamValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-path-param-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "property": {
                              "description": "The name of the field in the entity that must match the URI param.",
                              "type": "string"
                            },
                            "propertyValue": {
                              "description": "The supplied value of the field."
                            },
                            "uriParameterName": {
                              "description": "The name of the URI parameter.",
                              "type": "string"
                            },
                            "uriParameterValue": {
                              "description": "The supplied value of the URI parameter."
                            }
                          }
                        }
                      ],
                      "description": "Path-param/entity-field mismatch HTTP problem.  In many situations, we have entities referenced via a URI that includes their identifier.  That identifier may also be in the body.  If they don't match, it's unclear what the intended operation is, so this error is used.",
                      "required": [
                        "type",
                        "instance",
                        "uriParameterName",
                        "uriParameterValue",
                        "property",
                        "propertyValue"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/path-param-field-mismatch-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "parameter": {
                              "description": "The parameter that is in error.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that was provided."
                            }
                          }
                        }
                      ],
                      "description": "Invalid parameter HTTP problem.",
                      "required": [
                        "type",
                        "instance",
                        "parameter",
                        "value"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/invalid-parameter-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "violations": {
                              "items": {
                                "anyOf": [
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the minimum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "min"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable value for the given property.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "max"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "min": {
                                            "description": "Specifies the maximum allowable size for the given property.  For strings this is the string length.",
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "size"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Specifies the allowable pattern for a property.  This would usually be a regular expression.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "pattern"
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "detail": {
                                            "description": "Human readable description of the problem.",
                                            "type": "string"
                                          },
                                          "property": {
                                            "description": "The property in the request that has caused a violation.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Uniquely identifies this HTTP problem.",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The value in the request that has caused a violation."
                                          }
                                        },
                                        "required": [
                                          "property",
                                          "type"
                                        ]
                                      },
                                      {
                                        "properties": {
                                          "requiredValue": {
                                            "description": "Specifies the allowable condition value for a property.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "property",
                                      "type",
                                      "value",
                                      "requiredValue"
                                    ]
                                  }
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "x-akamai": {
                        "file-path": "schemas/constraint-violation-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 400 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/bad-request-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/aura-lcdn-mapping/reference/400). An HTTP 400 will be returned if the request is badly formed or has constraint violations."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "The principal does not have authority to access the requested entity",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/v1/site-maps#81e98f22da7d22de",
                  "title": "The principal is not authorized to access the requested resource",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/lcdn-mapping/errors#core.access-denied"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entity": {
                          "description": "A summary of an entity involved in a problem.",
                          "properties": {
                            "entityHref": {
                              "description": "URI pointing to the entity.",
                              "format": "uri",
                              "type": "string"
                            },
                            "entityId": {
                              "description": "ID of the entity in question."
                            },
                            "entityName": {
                              "description": "Human readable name of the entity, if provided by the entity type.",
                              "type": "string"
                            },
                            "entityType": {
                              "description": "Name of the entity type.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entityType",
                            "entityId",
                            "entityHref"
                          ]
                        },
                        "permission": {
                          "description": "The permission required to access the entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Unauthorized access HTTP problem.",
                  "required": [
                    "type",
                    "instance",
                    "entity",
                    "permission"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/unauthorized-access-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/aura-lcdn-mapping/reference/403). An HTTP 403 will be returned if the principal is not authorized to access the instance of access-map that the request was made against."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Node 1 does not exist",
                  "entityId": 1,
                  "entityType": "Node",
                  "title": "The requested entity could not be found",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-not-found"
                },
                "schema": {
                  "allOf": [
                    {
                      "description": "Base HTTP problem type.",
                      "properties": {
                        "detail": {
                          "description": "Human readable description of the class of problem that occurred.",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Unique identifier for an instance of a problem.",
                          "format": "uri",
                          "type": "string"
                        },
                        "status": {
                          "description": "Optionally specified HTTP status code.",
                          "type": "integer"
                        },
                        "title": {
                          "description": "Human readable title of the class of problem that occurred.",
                          "type": "string"
                        },
                        "type": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "instance"
                      ]
                    },
                    {
                      "properties": {
                        "entityId": {
                          "description": "The ID of the referenced entity."
                        },
                        "entityType": {
                          "description": "The type of entity.",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "description": "Entity not found HTTP problem.  Used when an attempt is made against an entity that does not exist.",
                  "required": [
                    "type",
                    "instance",
                    "entityType",
                    "entityId"
                  ],
                  "x-akamai": {
                    "file-path": "schemas/entity-not-found-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/aura-lcdn-mapping/reference/404). An HTTP 404 will be returned if the access-map with the specified entityId is not found."
          },
          "409": {
            "content": {
              "application/problem+json": {
                "example": {
                  "conflictingEntity": {
                    "entityHref": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes/1",
                    "entityId": 1,
                    "entityType": "Node"
                  },
                  "conflictingProperty": "#/hostname",
                  "conflictingValue": "test.akamai.com",
                  "detail": "An entity with property 'hostname' of 'test.akamai.com' already exists",
                  "instance": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/v1/nodes#a4e84e37-ec37-4a13-83d7-ba1d75a36029",
                  "title": "The request has conflicting properties with existing configuration",
                  "type": "https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/infrastructure/errors#core.entity-property-conflict"
                },
                "schema": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "conflictingEntity": {
                              "allOf": [
                                {
                                  "description": "The existing entity which the proposed change is in conflict with."
                                },
                                {
                                  "description": "A summary of an entity involved in a problem.",
                                  "properties": {
                                    "entityHref": {
                                      "description": "URI pointing to the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "entityId": {
                                      "description": "ID of the entity in question."
                                    },
                                    "entityName": {
                                      "description": "Human readable name of the entity, if provided by the entity type.",
                                      "type": "string"
                                    },
                                    "entityType": {
                                      "description": "Name of the entity type.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "entityType",
                                    "entityId",
                                    "entityHref"
                                  ]
                                }
                              ]
                            },
                            "conflictingProperty": {
                              "type": "string"
                            },
                            "conflictingValue": {
                              "description": "The supplied value."
                            }
                          }
                        }
                      ],
                      "description": "Entity property conflict HTTP problem.  Used when an attempt is made to set a property on an entity that would cause conflict with an existent entity.  For example, attempting to set duplicate surrogate identifiers.",
                      "required": [
                        "type",
                        "instance",
                        "conflictingProperty",
                        "conflictingValue",
                        "conflictingEntity"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-property-conflict-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedEntity": {
                              "description": "A summary of an entity involved in a problem.",
                              "properties": {
                                "entityHref": {
                                  "description": "URI pointing to the entity.",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "entityId": {
                                  "description": "ID of the entity in question."
                                },
                                "entityName": {
                                  "description": "Human readable name of the entity, if provided by the entity type.",
                                  "type": "string"
                                },
                                "entityType": {
                                  "description": "Name of the entity type.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "entityType",
                                "entityId",
                                "entityHref"
                              ]
                            },
                            "referringEntities": {
                              "items": {
                                "description": "A summary of an entity involved in a problem.",
                                "properties": {
                                  "entityHref": {
                                    "description": "URI pointing to the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "entityId": {
                                    "description": "ID of the entity in question."
                                  },
                                  "entityName": {
                                    "description": "Human readable name of the entity, if provided by the entity type.",
                                    "type": "string"
                                  },
                                  "entityType": {
                                    "description": "Name of the entity type.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "entityType",
                                  "entityId",
                                  "entityHref"
                                ]
                              },
                              "type": "array"
                            }
                          }
                        }
                      ],
                      "description": "Entity referenced HTTP problem.  Used in cases where an attempt is made to delete an entity that other entities are referring to, and simply removing the reference would not lead to a valid state.",
                      "required": [
                        "type",
                        "instance",
                        "referencedEntity",
                        "referringEntities"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/entity-referenced-problem.schema.yaml"
                      }
                    },
                    {
                      "allOf": [
                        {
                          "description": "Base HTTP problem type.",
                          "properties": {
                            "detail": {
                              "description": "Human readable description of the class of problem that occurred.",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Unique identifier for an instance of a problem.",
                              "format": "uri",
                              "type": "string"
                            },
                            "status": {
                              "description": "Optionally specified HTTP status code.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Human readable title of the class of problem that occurred.",
                              "type": "string"
                            },
                            "type": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "instance"
                          ]
                        },
                        {
                          "properties": {
                            "referencedId": {
                              "description": "The ID of the object that was referenced."
                            },
                            "referencedType": {
                              "description": "The type of the object that was referenced.",
                              "type": "string"
                            }
                          }
                        }
                      ],
                      "description": "Non-existent reference HTTP problem.  Used when a mutable operation attempts to refer to another resource that does not exist.",
                      "x-akamai": {
                        "file-path": "schemas/non-existent-reference-problem.schema.yaml"
                      }
                    }
                  ],
                  "description": "Super type to enumerate 409 class errors.",
                  "x-akamai": {
                    "file-path": "schemas/conflict-problem.schema.yaml"
                  }
                }
              }
            },
            "description": "[Conflict](https://techdocs.akamai.com/aura-lcdn-mapping/reference/409). An HTTP 409 will be returned if the access-map offered for create/update would lead to a conflicting state."
          }
        },
        "security": [
          {
            "oauth_v2": [
              "coblitz.co",
              "lcdn-mapping.admin"
            ]
          }
        ],
        "summary": "Update contents of a site map",
        "tags": [
          "Site map contents"
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a site map instance.",
          "example": "{{mapId}}",
          "in": "path",
          "name": "mapId",
          "required": true,
          "schema": {
            "example": 1863,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/mapId-path.yaml"
          }
        }
      ]
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/api/lcdn-mapping/v1"
    }
  ],
  "tags": [],
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  }
}