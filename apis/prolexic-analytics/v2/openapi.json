{
  "components": {
    "parameters": {
      "attack-id-path": {
        "description": "A unique ID for each attack.",
        "in": "path",
        "name": "attackId",
        "required": true,
        "schema": {
          "example": 1966,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/attack-id-path.yaml"
        }
      },
      "contract-path": {
        "description": "The policy domain name of the data center or proxy that the events belong to. This is not the account contract ID. ",
        "in": "path",
        "name": "contract",
        "required": true,
        "schema": {
          "example": "coral",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/contract-path.yaml"
        }
      },
      "destinations-query": {
        "description": "A comma-separated list of destinations. These can be individual IP addresses or CIDR blocks to specify a range of addresses.",
        "in": "query",
        "name": "destinations",
        "required": true,
        "schema": {
          "example": "147.114.46.0/23,147.104.46.0/23",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/destinations-query.yaml"
        }
      },
      "end-path": {
        "description": "Unix timestamp for end of attack report search.",
        "in": "path",
        "name": "end",
        "required": true,
        "schema": {
          "example": 1399641518,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/end-path.yaml"
        }
      },
      "end-time-query": {
        "description": "The end time for the requested data in epoch seconds. Shows the current time by default.",
        "in": "query",
        "name": "endTime",
        "required": true,
        "schema": {
          "example": 1596220115,
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/end-time-query.yaml"
        }
      },
      "locations-query": {
        "description": "A comma-separated list of data center names to filter the results by. The currently available data centers are: `mia4`, `lga3`, `lax3`, `dfw3`, `ord3`, `vie3`, `par3`, `ams3`, `sto3`, `sjc2`, `dca2`, `lon2`, `fra2`, `hkg2`, `tyo2`, and `syd2`. Set to `agr` to show aggregated data from all data centers.",
        "in": "query",
        "name": "locations",
        "required": true,
        "schema": {
          "example": "mia4,lga3",
          "pattern": "^(([a-z]{3}[0-9])|(agr))([,](([a-z]{3}[0-9])*)|(agr))$",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/locations-query.yaml"
        }
      },
      "sampling-size-query": {
        "description": "The number of timestamps to get the usage data for. If not specified, the API returns all the data available for a selected time period.",
        "in": "query",
        "name": "samplingSize",
        "required": true,
        "schema": {
          "example": 2,
          "minimum": 1,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/sampling-size-query.yaml"
        }
      },
      "source-query": {
        "description": "The router type the data went through. Either `access_flow` for an Akamai router, `border_flow` for a customer router, or `both`. The default value is `both`.",
        "in": "query",
        "name": "source",
        "required": true,
        "schema": {
          "default": "both",
          "enum": [
            "both",
            "access_flow",
            "border_flow"
          ],
          "example": "access_flow",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/source-query.yaml"
        }
      },
      "start-path": {
        "description": "Unix timestamp for beginning of attack report search.",
        "in": "path",
        "name": "start",
        "required": true,
        "schema": {
          "example": 1397049511,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/start-path.yaml"
        }
      },
      "start-time-query": {
        "description": "The start time for the requested data in epoch seconds. Shows the current time minus two hours by default.",
        "in": "query",
        "name": "startTime",
        "required": true,
        "schema": {
          "example": 1596133715,
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/start-time-query.yaml"
        }
      },
      "sum-query": {
        "description": "Whether to return `aggregationData` in the response.",
        "in": "query",
        "name": "sum",
        "required": true,
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/sum-query.yaml"
        }
      }
    },
    "responses": {
      "error-400": {
        "content": {
          "application/problem+json": {
            "example": {
              "args": [
                "customerName",
                "ABC_corp"
              ],
              "data": "customerName is required.",
              "errorCode": "PARAMETER_MISSING",
              "errorPaths": [
                {
                  "message": "Customer not found",
                  "path": "customerName"
                }
              ],
              "status": 404
            },
            "schema": {
              "additionalProperties": true,
              "description": "Contains complete error data.",
              "properties": {
                "args": {
                  "description": "The customer data sent in the request.",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "data": {
                  "description": "A detailed message regarding the cause of the error.",
                  "type": "string"
                },
                "errorCode": {
                  "description": "A short description of the error.",
                  "type": "string"
                },
                "errorPaths": {
                  "description": "The data requested and a detailed error message.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "message": {
                        "description": "A detailed error message about the request.",
                        "type": "string"
                      },
                      "path": {
                        "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                },
                "status": {
                  "description": "The error's HTTP response code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                }
              },
              "required": [
                "status",
                "errorCode",
                "data",
                "args",
                "errorPaths"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
        "x-akamai": {
          "file-path": "errors/error-400.yaml"
        }
      },
      "error-403": {
        "content": {
          "application/problem+json": {
            "example": {
              "args": [
                "customerName"
              ],
              "data": "Insufficient privileges to access object customerName ABC_corp.",
              "errorCode": "INSUFFICIENT_PRIVILEGES",
              "errorPaths": [
                {
                  "message": "You don't have permission to read customer name",
                  "path": "customerName"
                }
              ],
              "status": 403
            },
            "schema": {
              "additionalProperties": true,
              "description": "Contains complete error data.",
              "properties": {
                "args": {
                  "description": "The customer data sent in the request.",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "data": {
                  "description": "A detailed message regarding the cause of the error.",
                  "type": "string"
                },
                "errorCode": {
                  "description": "A short description of the error.",
                  "type": "string"
                },
                "errorPaths": {
                  "description": "The data requested and a detailed error message.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "message": {
                        "description": "A detailed error message about the request.",
                        "type": "string"
                      },
                      "path": {
                        "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                },
                "status": {
                  "description": "The error's HTTP response code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                }
              },
              "required": [
                "status",
                "errorCode",
                "data",
                "args",
                "errorPaths"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
        "x-akamai": {
          "file-path": "errors/error-403.yaml"
        }
      },
      "error-404": {
        "content": {
          "application/problem+json": {
            "example": {
              "args": [
                "customerName",
                "ABC_corp"
              ],
              "data": "customerName is required.",
              "errorCode": "PARAMETER_MISSING",
              "errorPaths": [
                {
                  "message": "Customer not found",
                  "path": "customerName"
                }
              ],
              "status": 404
            },
            "schema": {
              "additionalProperties": true,
              "description": "Contains complete error data.",
              "properties": {
                "args": {
                  "description": "The customer data sent in the request.",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "data": {
                  "description": "A detailed message regarding the cause of the error.",
                  "type": "string"
                },
                "errorCode": {
                  "description": "A short description of the error.",
                  "type": "string"
                },
                "errorPaths": {
                  "description": "The data requested and a detailed error message.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "message": {
                        "description": "A detailed error message about the request.",
                        "type": "string"
                      },
                      "path": {
                        "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                },
                "status": {
                  "description": "The error's HTTP response code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                }
              },
              "required": [
                "status",
                "errorCode",
                "data",
                "args",
                "errorPaths"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/problem.yaml"
              }
            }
          }
        },
        "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
        "x-akamai": {
          "file-path": "errors/error-404.yaml"
        }
      }
    },
    "schemas": {
      "attack-report": {
        "additionalProperties": false,
        "description": "Detailed attack report including location, time, and type of attack.",
        "properties": {
          "currentContract": {
            "description": "The policy name of the data center or proxy that reported the attack.",
            "type": "string"
          },
          "data": {
            "description": "A detailed list of recorded attacks.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "attackId": {
                  "description": "The unique ID of the attack.",
                  "type": "integer"
                },
                "attackTypeName": {
                  "description": "The type of attack. These values also appear in `eventTypes`. Refer to [Attack types](https://techdocs.akamai.com/prolexic/reference/attack-types) for a complete list.",
                  "enum": [
                    "ACK Flood",
                    "CLDAP Reflection",
                    "CharGEN Attack",
                    "Connection Flood",
                    "DNS Flood",
                    "FIN Flood",
                    "FIN PUSH Flood",
                    "GET Flood",
                    "GRE Protocol Flood",
                    "HEAD Flood",
                    "ICMP Flood",
                    "IGMP Flood",
                    "mDNS Flood",
                    "NTP FLOOD",
                    "Netbios Flood",
                    "POST Flood",
                    "PUSH Flood",
                    "PUT Flood",
                    "RESET Flood",
                    "RIP Flood",
                    "RPC Flood",
                    "Reserved Protocol Flood",
                    "SNMP Flood",
                    "SQL Server Reflection",
                    "SSDP Flood",
                    "SSL GET Flood",
                    "SSL POST Flood",
                    "SYN Flood",
                    "SYN PUSH",
                    "Sentinel Flood",
                    "TCP Anomaly",
                    "TCP Fragment",
                    "TFTP Flood",
                    "UDP Flood",
                    "UDP Fragment",
                    "XMAS"
                  ],
                  "type": "string"
                },
                "destinationPort": {
                  "description": "The destination port for the attack traffic.",
                  "nullable": true,
                  "type": "string"
                },
                "endTime": {
                  "description": "When the attack stopped, as a UNIX UTC epoch timestamp.",
                  "type": "integer"
                },
                "eventBw": {
                  "description": "The peak bandwidth for the event.",
                  "type": "integer"
                },
                "eventCON": {
                  "description": "The peak number of connections for the event.",
                  "type": "integer"
                },
                "eventEndTime": {
                  "description": "The end time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "eventId": {
                  "description": "A unique identifier for the event.",
                  "type": "integer"
                },
                "eventPeakId": {
                  "description": "The peak value of ID for the event.",
                  "type": "integer"
                },
                "eventPps": {
                  "description": "The peak packets per second for the event.",
                  "type": "integer"
                },
                "eventStartTime": {
                  "description": "The start time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "ip": {
                  "description": "The target IP address of the event.",
                  "type": "string"
                },
                "location": {
                  "description": "Indicates where the alert originated from in the Prolexic network.",
                  "type": "string"
                },
                "netmask": {
                  "description": "CIDR notation indicating the subnet's mask size. Valid values for IPv4 are between `1` and `32`. Valid values for IPv6 are between `1` and `128`.",
                  "type": "integer"
                },
                "startTime": {
                  "description": "The start time of the attack in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "ticketId": {
                  "description": "A unique identifier for the ticket assigned to this attack.",
                  "type": "integer"
                }
              },
              "required": [
                "attackId",
                "eventBw",
                "eventId",
                "eventPps",
                "ip",
                "location",
                "netmask",
                "startTime"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "status": {
            "description": "Whether the attack information retrieval was successful.",
            "type": "boolean"
          },
          "statusMsg": {
            "description": "A status message indicating the success or failure of attack information retrieval.",
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/attack-report.yaml"
        }
      },
      "attack-reports": {
        "additionalProperties": false,
        "description": "Contains details about an attack, including location, time, and type of attack.",
        "properties": {
          "currentContract": {
            "description": "The policy name of the data center or proxy that reported the attack.",
            "type": "string"
          },
          "data": {
            "description": "A detailed list of recorded attacks.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "attackId": {
                  "description": "A unique identifier for the attack.",
                  "type": "integer"
                },
                "customerShortName": {
                  "description": "A nickname for the customer.",
                  "type": "string"
                },
                "destinationPort": {
                  "description": "The targeted port of the attack, if applicable. Returns `null` when not applicable.",
                  "nullable": true,
                  "type": "string"
                },
                "destinations": {
                  "description": "The set of targeted IP addresses or Subnets for the attack.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "ip": {
                        "description": "A targeted IP address.",
                        "type": "string"
                      },
                      "netmask": {
                        "description": "A targeted subnet.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "ip",
                      "netmask"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "endTime": {
                  "description": "The end time of the attack in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "eventEndTime": {
                  "description": "The end time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "eventEndTimeAsString": {
                  "description": "The end time of the event in `yyyy-MM-dd HH:mm:ss` format.",
                  "type": "string"
                },
                "eventId": {
                  "description": "A unique identifier for the event.",
                  "type": "integer"
                },
                "eventStartTime": {
                  "description": "The start time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "eventStartTimeAsString": {
                  "description": "The start time of the event in `yyyy-MM-dd HH:mm:ss` format.",
                  "type": "string"
                },
                "eventType": {
                  "description": "The type of event. Either `alert` or `attack`.",
                  "enum": [
                    "alert",
                    "attack"
                  ],
                  "type": "string"
                },
                "eventTypes": {
                  "description": "The types of attacks, also used in `attackTypeName` or `attackType`. Refer to [Attack types](https://techdocs.akamai.com/prolexic/reference/attack-types) for a complete list.",
                  "items": {
                    "enum": [
                      "ACK Flood",
                      "CLDAP Reflection",
                      "CharGEN Attack",
                      "Connection Flood",
                      "DNS Flood",
                      "FIN Flood",
                      "FIN PUSH Flood",
                      "GET Flood",
                      "GRE Protocol Flood",
                      "HEAD Flood",
                      "ICMP Flood",
                      "IGMP Flood",
                      "mDNS Flood",
                      "NTP FLOOD",
                      "Netbios Flood",
                      "POST Flood",
                      "PUSH Flood",
                      "PUT Flood",
                      "RESET Flood",
                      "RIP Flood",
                      "RPC Flood",
                      "Reserved Protocol Flood",
                      "SNMP Flood",
                      "SQL Server Reflection",
                      "SSDP Flood",
                      "SSL GET Flood",
                      "SSL POST Flood",
                      "SYN Flood",
                      "SYN PUSH",
                      "Sentinel Flood",
                      "TCP Anomaly",
                      "TCP Fragment",
                      "TFTP Flood",
                      "UDP Flood",
                      "UDP Fragment",
                      "XMAS"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "peaks": {
                  "description": "Contains peak statistics from the attack data.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "bandwidth": {
                        "description": "The peak measurement of bandwidth.",
                        "type": "integer"
                      },
                      "connections": {
                        "description": "The peak number of connections.",
                        "type": "integer"
                      },
                      "location": {
                        "description": "Indicates where the alert originated from in the Prolexic network.",
                        "type": "string"
                      },
                      "peakId": {
                        "description": "The peak value for ID.",
                        "type": "integer"
                      },
                      "pps": {
                        "description": "The peak measurement of packets per second.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "bandwidth",
                      "location",
                      "peakId",
                      "pps"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "startTime": {
                  "description": "The start time of the attack in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "ticketId": {
                  "description": "A unique identifier for the ticket assigned to this attack.",
                  "type": "integer"
                }
              },
              "required": [
                "attackId",
                "eventEndTimeAsString",
                "eventId",
                "eventStartTime",
                "eventStartTimeAsString",
                "eventTypes",
                "startTime"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "status": {
            "description": "Whether the request for the attack information was successful.",
            "type": "boolean"
          },
          "statusMsg": {
            "description": "A status message that indicates the successful or failed retrieval of the attack information.",
            "type": "string"
          }
        },
        "required": [
          "currentContract",
          "data",
          "status",
          "statusMsg"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/attack-reports.yaml"
        }
      },
      "connect-and-routed-metric": {
        "additionalProperties": false,
        "description": "Valid routed and connect metrics.",
        "properties": {
          "metrics": {
            "additionalProperties": false,
            "description": "Contains a list of available routed or connect metrics.",
            "properties": {
              "bandwidthIn": {
                "additionalProperties": false,
                "description": "The customer inbound traffic measured in bits per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the inbound bandwidth.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "packetsIn": {
                "additionalProperties": false,
                "description": "The customer inbound traffic measured in packets per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the inbound packet traffic.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              }
            },
            "required": [
              "bandwidthIn",
              "packetsIn"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/connect-and-routed-metrics-data.yaml"
            }
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/connect-and-routed-metric.yaml"
        }
      },
      "connect-and-routed-metrics-data": {
        "additionalProperties": false,
        "description": "Contains a list of available routed or connect metrics.",
        "properties": {
          "bandwidthIn": {
            "additionalProperties": false,
            "description": "The customer inbound traffic measured in bits per second.",
            "properties": {
              "desc": {
                "description": "Describes the inbound bandwidth.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "packetsIn": {
            "additionalProperties": false,
            "description": "The customer inbound traffic measured in packets per second.",
            "properties": {
              "desc": {
                "description": "Describes the inbound packet traffic.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          }
        },
        "required": [
          "bandwidthIn",
          "packetsIn"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/connect-and-routed-metrics-data.yaml"
        }
      },
      "critical-event": {
        "additionalProperties": false,
        "properties": {
          "currentContract": {
            "description": "The policy name of the data center or proxy that reported the event.",
            "type": "string"
          },
          "data": {
            "description": "A detailed list of critical event attributes.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "acknowledged": {
                  "description": "Indicates the event's acknowledgement status.",
                  "type": "integer"
                },
                "attackId": {
                  "description": "The unique ID of the attack.",
                  "type": "string"
                },
                "count": {
                  "description": "The number of critical events.",
                  "type": "integer"
                },
                "description": {
                  "description": "A helpful description of the event.",
                  "type": "string"
                },
                "eventId": {
                  "description": "A unique identifier for the event.",
                  "type": "string"
                },
                "expires": {
                  "description": "The expiration time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "firstOccur": {
                  "description": "The time when the event first occurred in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "importance": {
                  "description": "A value indicating the event's importance.",
                  "type": "integer"
                },
                "instance": {
                  "description": "Name of the customer instance on which the event occurred.",
                  "type": "string"
                },
                "interfaceName": {
                  "description": "Name of the interface on which the event occurred.",
                  "type": "string"
                },
                "ip": {
                  "description": "The interface's IP address on which the event occurred.",
                  "type": "string"
                },
                "location": {
                  "description": "Indicates where the alert originated from in the Prolexic network.",
                  "type": "string"
                },
                "node": {
                  "description": "Hostname of the node on which the event occurred.",
                  "type": "string"
                },
                "notes": {
                  "description": "Notes about the event.",
                  "type": "string"
                },
                "recentOccur": {
                  "description": "Epoch timestamp marking when the event most recently occurred.",
                  "type": "integer"
                },
                "siteCustomerName": {
                  "description": "Name of the customer on which the event occurred.",
                  "type": "string"
                },
                "siteName": {
                  "description": "Name of the customer site on which the event occurred.",
                  "type": "string"
                },
                "siteType": {
                  "description": "The site type.",
                  "type": "string"
                },
                "source": {
                  "description": "The source of the event.",
                  "type": "string"
                },
                "state": {
                  "description": "The state of the event.",
                  "type": "integer"
                },
                "summary": {
                  "description": "An event summary.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "status": {
            "description": "Whether the critical events were acquired.",
            "type": "boolean"
          },
          "statusMsg": {
            "description": "Message about the critical events status.",
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/critical-event.yaml"
        }
      },
      "customer-names-response": {
        "additionalProperties": false,
        "description": "Customer name details.",
        "properties": {
          "customerNames": {
            "description": "Customer name details.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "accountName": {
                  "description": "Account name.",
                  "type": "string"
                },
                "contractId": {
                  "description": "Contract ID.",
                  "type": "string"
                },
                "inUse": {
                  "description": "Whether the customer has an associated config set.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Customer name.",
                  "type": "string"
                }
              },
              "required": [
                "contractId",
                "name",
                "accountName",
                "inUse"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/customer-names-response.yaml"
        }
      },
      "event-response": {
        "additionalProperties": false,
        "description": "Encapsulates the details of an event and the associated attack information.",
        "properties": {
          "currentContract": {
            "description": "The policy name of the data center or proxy that reported the event.",
            "type": "string"
          },
          "data": {
            "description": "Attack details for each event.",
            "items": {
              "additionalProperties": true,
              "description": "Contains the attack details of the event.",
              "properties": {
                "eventEndTime": {
                  "description": "The end time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "eventInfo": {
                  "description": "Detailed information about the event.",
                  "type": "object"
                },
                "eventStartTime": {
                  "description": "The start time of the event in UNIX epoch seconds (UTC).",
                  "type": "integer"
                },
                "eventTitle": {
                  "description": "A title that briefly describes the event.",
                  "type": "string"
                },
                "eventType": {
                  "description": "The type of event. Valid values are `alert` or `attack`.",
                  "enum": [
                    "alert",
                    "attack"
                  ],
                  "type": "string"
                },
                "isOngoing": {
                  "description": "Indicates whether the event is currently ongoing.",
                  "type": "boolean"
                },
                "service": {
                  "description": "The service type for the event. Returns `Mitigation` for an attack report type event. For alert type events, returns: `abm`, `abr`, `arb`, `bgp`, `fbm`, `int` or `man`.",
                  "enum": [
                    "Mitigation",
                    "abm",
                    "abr",
                    "arb",
                    "bgp",
                    "fbm",
                    "int",
                    "man"
                  ],
                  "type": "string"
                },
                "severity": {
                  "description": "The severity level of the event.",
                  "type": "integer"
                }
              },
              "required": [
                "eventStartTime",
                "eventType",
                "isOngoing",
                "service",
                "severity"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/events.yaml"
              }
            },
            "type": "array"
          },
          "status": {
            "description": "Whether the request for the events list was successful.",
            "type": "boolean"
          },
          "statusMsg": {
            "description": "A status message that indicates the successful or failed retrieval of the events list.",
            "type": "string"
          }
        },
        "required": [
          "currentContract",
          "data",
          "status",
          "statusMsg"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/event-response.yaml"
        }
      },
      "events": {
        "additionalProperties": true,
        "description": "Contains the attack details of the event.",
        "properties": {
          "eventEndTime": {
            "description": "The end time of the event in UNIX epoch seconds (UTC).",
            "type": "integer"
          },
          "eventInfo": {
            "description": "Detailed information about the event.",
            "type": "object"
          },
          "eventStartTime": {
            "description": "The start time of the event in UNIX epoch seconds (UTC).",
            "type": "integer"
          },
          "eventTitle": {
            "description": "A title that briefly describes the event.",
            "type": "string"
          },
          "eventType": {
            "description": "The type of event. Valid values are `alert` or `attack`.",
            "enum": [
              "alert",
              "attack"
            ],
            "type": "string"
          },
          "isOngoing": {
            "description": "Indicates whether the event is currently ongoing.",
            "type": "boolean"
          },
          "service": {
            "description": "The service type for the event. Returns `Mitigation` for an attack report type event. For alert type events, returns: `abm`, `abr`, `arb`, `bgp`, `fbm`, `int` or `man`.",
            "enum": [
              "Mitigation",
              "abm",
              "abr",
              "arb",
              "bgp",
              "fbm",
              "int",
              "man"
            ],
            "type": "string"
          },
          "severity": {
            "description": "The severity level of the event.",
            "type": "integer"
          }
        },
        "required": [
          "eventStartTime",
          "eventType",
          "isOngoing",
          "service",
          "severity"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/events.yaml"
        }
      },
      "fbm-data": {
        "additionalProperties": false,
        "properties": {
          "desc": {
            "description": "Describes the Flow Based Monitoring (FBM) data.",
            "type": "string"
          },
          "protocols": {
            "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
            "items": {
              "enum": [
                "total",
                "icmp",
                "igmp",
                "udp",
                "tcp"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "subnets": {
            "description": "The subnets available to your contract.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "desc",
          "protocols",
          "subnets"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/fbm-data.yaml"
        }
      },
      "fbm-metric": {
        "additionalProperties": false,
        "description": "Valid metrics for Flow Based Monitoring (FBM).",
        "properties": {
          "metrics": {
            "additionalProperties": false,
            "description": "Contains a list of available Flow Based Monitoring (FBM) metrics.",
            "properties": {
              "bandwidth": {
                "additionalProperties": false,
                "description": "Customer traffic measured in bits per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the Flow Based Monitoring (FBM) data.",
                    "type": "string"
                  },
                  "protocols": {
                    "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                    "items": {
                      "enum": [
                        "total",
                        "icmp",
                        "igmp",
                        "udp",
                        "tcp"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subnets": {
                    "description": "The subnets available to your contract.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "desc",
                  "protocols",
                  "subnets"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/fbm-data.yaml"
                }
              },
              "packets": {
                "additionalProperties": false,
                "description": "Customer traffic measured in packets per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the Flow Based Monitoring (FBM) data.",
                    "type": "string"
                  },
                  "protocols": {
                    "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                    "items": {
                      "enum": [
                        "total",
                        "icmp",
                        "igmp",
                        "udp",
                        "tcp"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subnets": {
                    "description": "The subnets available to your contract.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "desc",
                  "protocols",
                  "subnets"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/fbm-data.yaml"
                }
              }
            },
            "required": [
              "bandwidth",
              "packets"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/fbm-metric-data.yaml"
            }
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/fbm-metric.yaml"
        }
      },
      "fbm-metric-data": {
        "additionalProperties": false,
        "description": "Contains a list of available Flow Based Monitoring (FBM) metrics.",
        "properties": {
          "bandwidth": {
            "additionalProperties": false,
            "description": "Customer traffic measured in bits per second.",
            "properties": {
              "desc": {
                "description": "Describes the Flow Based Monitoring (FBM) data.",
                "type": "string"
              },
              "protocols": {
                "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                "items": {
                  "enum": [
                    "total",
                    "icmp",
                    "igmp",
                    "udp",
                    "tcp"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "subnets": {
                "description": "The subnets available to your contract.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "required": [
              "desc",
              "protocols",
              "subnets"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/fbm-data.yaml"
            }
          },
          "packets": {
            "additionalProperties": false,
            "description": "Customer traffic measured in packets per second.",
            "properties": {
              "desc": {
                "description": "Describes the Flow Based Monitoring (FBM) data.",
                "type": "string"
              },
              "protocols": {
                "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                "items": {
                  "enum": [
                    "total",
                    "icmp",
                    "igmp",
                    "udp",
                    "tcp"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "subnets": {
                "description": "The subnets available to your contract.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "required": [
              "desc",
              "protocols",
              "subnets"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/fbm-data.yaml"
            }
          }
        },
        "required": [
          "bandwidth",
          "packets"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/fbm-metric-data.yaml"
        }
      },
      "fbm-type": {
        "additionalProperties": false,
        "description": "Array of objects with requested metric, protocol, IP, or subnet. The response are valid subnets for your configuration.",
        "properties": {
          "ip": {
            "description": "The requested IP address. You can only specify a single `ip` or `subnet` per metric.",
            "type": "string"
          },
          "metric": {
            "description": "The metric to display traffic data. Select `bandwidth` to return traffic bits per second, or `packets` to return traffic packets per second.",
            "enum": [
              "bandwidth",
              "packets"
            ],
            "type": "string"
          },
          "protocol": {
            "description": "The protocol to use in the metric. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
            "enum": [
              "total",
              "icmp",
              "igmp",
              "udp",
              "tcp"
            ],
            "type": "string"
          },
          "subnet": {
            "description": "The requested subnet. You can only specify a single `subnet` or `ip` per metric.",
            "type": "string"
          }
        },
        "required": [
          "metric",
          "protocol"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/fbm-type.yaml"
        }
      },
      "funnel-bgp-session-response": {
        "items": {
          "additionalProperties": false,
          "properties": {
            "akamaiBgpPeerIpv4": {
              "description": "Akamai BGP peering IPv4 address.",
              "type": "string"
            },
            "akamaiBgpPeerIpv6": {
              "description": "Akamai BGP peering IPv6 address.",
              "type": "string"
            },
            "akamaiGreEndpointIpv4": {
              "description": "Akamai GRE endpoint IPv4 address.",
              "type": "string"
            },
            "akamaiGreEndpointIpv6": {
              "description": "Akamai GRE endpoint IPv6 address.",
              "type": "string"
            },
            "asn": {
              "description": "Autonomous System Number (ASN) that identifies the network.",
              "type": "integer"
            },
            "customerBgpPeerIpv4": {
              "description": "Customer BGP peering IPv4 address.",
              "type": "string"
            },
            "customerBgpPeerIpv6": {
              "description": "Customer BGP peering IPv6 address.",
              "type": "string"
            },
            "customerGreEndpointIpv4": {
              "description": "Customer GRE endpoint IPv4 address.",
              "type": "string"
            },
            "customerGreEndpointIpv6": {
              "description": "Customer GRE endpoint IPv6 address.",
              "type": "string"
            },
            "dataCenter": {
              "description": "Customer data center.",
              "type": "string"
            },
            "healthIpv4": {
              "description": "BGP session health for IPv4 traffic.",
              "type": "string"
            },
            "healthIpv6": {
              "description": "BGP session health for IPv6 traffic.",
              "type": "string"
            },
            "mtu": {
              "description": "Maximum transmission unit value when the tunnel type is `GRE_OVER_ADC`.",
              "type": "integer"
            },
            "routerName": {
              "description": "Customer router.",
              "type": "string"
            },
            "tunnelType": {
              "description": "Whether the tunnel is Routed 3.0 GRE or Routed 3.0 GRE over ADC. Either `GRE` or `GRE_OVER_ADC`.",
              "enum": [
                "GRE",
                "GRE_OVER_ADC"
              ],
              "type": "string"
            }
          },
          "required": [
            "asn",
            "dataCenter",
            "routerName",
            "akamaiGreEndpointIpv4",
            "customerGreEndpointIpv4",
            "akamaiBgpPeerIpv4",
            "customerBgpPeerIpv4",
            "healthIpv4"
          ],
          "type": "object"
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/funnel-bgp-session-response.yaml"
        }
      },
      "funnel-health-request": {
        "additionalProperties": false,
        "description": "Routed health details.",
        "properties": {
          "customerNames": {
            "description": "Routed health customer name details.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "customerNames"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/funnel-health-request.yaml"
        }
      },
      "funnel-health-response": {
        "items": {
          "additionalProperties": false,
          "properties": {
            "akamaiLocation": {
              "description": "Akamai location.",
              "type": "string"
            },
            "healthyAdcFunnels": {
              "description": "Number of healthy tunnels over ADC per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
              "type": "integer"
            },
            "healthyFunnels": {
              "description": "Number of healthy tunnels per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
              "type": "integer"
            },
            "routerName": {
              "description": "Customer router.",
              "type": "string"
            },
            "totalAdcFunnels": {
              "description": "Total number of healthy tunnels over ADC per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
              "type": "integer"
            },
            "totalFunnels": {
              "description": "Total number of healthy tunnels per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
              "type": "integer"
            }
          },
          "required": [
            "akamaiLocation",
            "routerName",
            "totalFunnels"
          ],
          "type": "object"
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/funnel-health-response.yaml"
        }
      },
      "funnel-routes-response": {
        "description": "Routed tunnel traffic details.",
        "items": {
          "additionalProperties": false,
          "properties": {
            "akamaiLocation": {
              "description": "Akamai location name.",
              "type": "string"
            },
            "asPath": {
              "description": "BGP Autonomous System (AS) number path.",
              "type": "string"
            },
            "community": {
              "description": "BGP community configuration.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "customerBgpPeerIp": {
              "description": "The BGP peer IP that corresponds to `customerBgpPeerIp4` or `customerBgpPeerIp6` fields for the bgp-sessions endpoint.",
              "type": "string"
            },
            "customerName": {
              "description": "Customer name.",
              "type": "string"
            },
            "dataCenter": {
              "description": "Data center name.",
              "type": "string"
            },
            "localPref": {
              "description": "BGP local preference value.",
              "type": "integer"
            },
            "med": {
              "description": "BGP Multi Exit Discriminator (MED) value.",
              "type": "integer"
            },
            "mtu": {
              "description": "Maximum transmission unit (MTU) value when `tunnelType` is `GRE_OVER_ADC`.",
              "type": "integer"
            },
            "prefix": {
              "description": "Customer BGP peer IP address with CIDR prefix.",
              "type": "string"
            },
            "routerName": {
              "description": "Router name.",
              "type": "string"
            },
            "tunnelType": {
              "description": "Whether the tunnel is Routed 3.0 GRE or Routed 3.0 GRE over ADC. Either `GRE` or `GRE_OVER_ADC`.",
              "enum": [
                "GRE",
                "GRE_OVER_ADC"
              ],
              "type": "string"
            }
          },
          "required": [
            "akamaiLocation",
            "prefix",
            "customerName",
            "routerName",
            "asPath",
            "customerBgpPeerIp"
          ],
          "type": "object"
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/funnel-routes-response.yaml"
        }
      },
      "metric-data-input": {
        "additionalProperties": false,
        "description": "Encapsulates the target contract and time constraints for the specified metrics.",
        "properties": {
          "contract": {
            "description": "The policy name of the data center or proxy that reported the metrics.",
            "type": "string"
          },
          "end": {
            "description": "The end time of the requested metric in UNIX epoch seconds (UTC), with a maximum range of 90 days between `start` and `end`.",
            "type": "integer"
          },
          "samples": {
            "description": "The number of data points to return.",
            "type": "integer"
          },
          "start": {
            "description": "The start time of the requested metric in UNIX epoch seconds (UTC), with a maximum range of 90 days between `start` and `end`.",
            "type": "integer"
          },
          "type": {
            "additionalProperties": false,
            "description": "Defines the types of requested metrics.",
            "properties": {
              "connect": {
                "description": "The metric to display connect traffic. Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
                "items": {
                  "enum": [
                    "bandwidthIn",
                    "packetsIn"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "fbm": {
                "description": "Flow Based Monitoring metrics based on protocol, IP, or subnet. The response includes valid subnets for your configuration.",
                "items": {
                  "additionalProperties": false,
                  "description": "Array of objects with requested metric, protocol, IP, or subnet. The response are valid subnets for your configuration.",
                  "properties": {
                    "ip": {
                      "description": "The requested IP address. You can only specify a single `ip` or `subnet` per metric.",
                      "type": "string"
                    },
                    "metric": {
                      "description": "The metric to display traffic data. Select `bandwidth` to return traffic bits per second, or `packets` to return traffic packets per second.",
                      "enum": [
                        "bandwidth",
                        "packets"
                      ],
                      "type": "string"
                    },
                    "protocol": {
                      "description": "The protocol to use in the metric. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
                      "enum": [
                        "total",
                        "icmp",
                        "igmp",
                        "udp",
                        "tcp"
                      ],
                      "type": "string"
                    },
                    "subnet": {
                      "description": "The requested subnet. You can only specify a single `subnet` or `ip` per metric.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "metric",
                    "protocol"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/fbm-type.yaml"
                  }
                },
                "type": "array"
              },
              "mitigationPost": {
                "description": "Mitigation return traffic data details. Select `packets` to return traffic packets per second or `bandwidth` to return traffic bits per second.",
                "items": {
                  "enum": [
                    "packets",
                    "bandwidth"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "mitigationPre": {
                "description": "Mitigation request traffic data details. Select `packets` to return traffic packets per second or select `bandwidth` to return traffic bits per second.",
                "items": {
                  "enum": [
                    "packets",
                    "bandwidth"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "proxy": {
                "description": "A list of proxy data. Select `latency` for average latency of request, `bandwidthIn` for inbound traffic in bits per second, `bandwidthOut` for outbound traffic in bits per second, `connections` for a connections count, `packetsOut` for outbound traffic in packets per second, `requests` for a request count, and `packetsIn` for inbound traffic in packets per second.",
                "items": {
                  "enum": [
                    "latency",
                    "bandwidthIn",
                    "bandwidthOut",
                    "connections",
                    "packetsOut",
                    "requests",
                    "packetsIn"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "routed": {
                "description": "A list of routed traffic metrics. Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
                "items": {
                  "enum": [
                    "bandwidthIn",
                    "packetsIn"
                  ],
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/metric-query.yaml"
            }
          }
        },
        "required": [
          "contract",
          "end",
          "samples",
          "start",
          "type"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metric-data-input.yaml"
        }
      },
      "metric-query": {
        "additionalProperties": false,
        "description": "Defines the types of requested metrics.",
        "properties": {
          "connect": {
            "description": "The metric to display connect traffic. Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
            "items": {
              "enum": [
                "bandwidthIn",
                "packetsIn"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "fbm": {
            "description": "Flow Based Monitoring metrics based on protocol, IP, or subnet. The response includes valid subnets for your configuration.",
            "items": {
              "additionalProperties": false,
              "description": "Array of objects with requested metric, protocol, IP, or subnet. The response are valid subnets for your configuration.",
              "properties": {
                "ip": {
                  "description": "The requested IP address. You can only specify a single `ip` or `subnet` per metric.",
                  "type": "string"
                },
                "metric": {
                  "description": "The metric to display traffic data. Select `bandwidth` to return traffic bits per second, or `packets` to return traffic packets per second.",
                  "enum": [
                    "bandwidth",
                    "packets"
                  ],
                  "type": "string"
                },
                "protocol": {
                  "description": "The protocol to use in the metric. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
                  "enum": [
                    "total",
                    "icmp",
                    "igmp",
                    "udp",
                    "tcp"
                  ],
                  "type": "string"
                },
                "subnet": {
                  "description": "The requested subnet. You can only specify a single `subnet` or `ip` per metric.",
                  "type": "string"
                }
              },
              "required": [
                "metric",
                "protocol"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/fbm-type.yaml"
              }
            },
            "type": "array"
          },
          "mitigationPost": {
            "description": "Mitigation return traffic data details. Select `packets` to return traffic packets per second or `bandwidth` to return traffic bits per second.",
            "items": {
              "enum": [
                "packets",
                "bandwidth"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "mitigationPre": {
            "description": "Mitigation request traffic data details. Select `packets` to return traffic packets per second or select `bandwidth` to return traffic bits per second.",
            "items": {
              "enum": [
                "packets",
                "bandwidth"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "proxy": {
            "description": "A list of proxy data. Select `latency` for average latency of request, `bandwidthIn` for inbound traffic in bits per second, `bandwidthOut` for outbound traffic in bits per second, `connections` for a connections count, `packetsOut` for outbound traffic in packets per second, `requests` for a request count, and `packetsIn` for inbound traffic in packets per second.",
            "items": {
              "enum": [
                "latency",
                "bandwidthIn",
                "bandwidthOut",
                "connections",
                "packetsOut",
                "requests",
                "packetsIn"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "routed": {
            "description": "A list of routed traffic metrics. Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
            "items": {
              "enum": [
                "bandwidthIn",
                "packetsIn"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metric-query.yaml"
        }
      },
      "metric-response": {
        "additionalProperties": false,
        "properties": {
          "currentContract": {
            "description": "The policy name of the data center or proxy that reported the metrics.",
            "type": "string"
          },
          "data": {
            "description": "Metric response data details.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "ip": {
                  "description": "The corresponding IP address for the metric data.",
                  "type": "string"
                },
                "metric": {
                  "description": "The type of metric used. Either `bandwidth`, `bandwidthOut`, `bandwidthIn`, `packets`, or `total`.",
                  "enum": [
                    "bandwidth",
                    "bandwidthOut",
                    "bandwidthIn",
                    "packets",
                    "total"
                  ],
                  "type": "string"
                },
                "points": {
                  "description": "Data points for the event metrics.",
                  "items": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                "protocol": {
                  "description": "The IP protocol for the object data, or `total` if a total for given the `metric` value.",
                  "type": "string"
                },
                "service": {
                  "description": "The type of Prolexic service used to gather metrics. Either `routed` or `fbm`.",
                  "enum": [
                    "routed",
                    "fbm"
                  ],
                  "type": "string"
                },
                "subnet": {
                  "description": "The corresponding IP subnet or IP address and CIDR mask combination for the metric data.",
                  "type": "string"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/metrics.yaml"
              }
            },
            "type": "array"
          },
          "status": {
            "description": "Whether the metrics were acquired.",
            "type": "boolean"
          },
          "statusMsg": {
            "description": "A message about the metric status.",
            "type": "string"
          }
        },
        "required": [
          "currentContract",
          "data",
          "status",
          "statusMsg"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metric-response.yaml"
        }
      },
      "metric-type": {
        "additionalProperties": false,
        "description": "Encapsulates information on the types of metrics available to the contract.",
        "properties": {
          "currentContract": {
            "description": "The policy name of the data center or proxy that reported the metrics.",
            "type": "string"
          },
          "data": {
            "additionalProperties": false,
            "description": "The types of metrics you can request.",
            "properties": {
              "connect": {
                "additionalProperties": false,
                "description": "Valid routed and connect metrics.",
                "properties": {
                  "metrics": {
                    "additionalProperties": false,
                    "description": "Contains a list of available routed or connect metrics.",
                    "properties": {
                      "bandwidthIn": {
                        "additionalProperties": false,
                        "description": "The customer inbound traffic measured in bits per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound bandwidth.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "packetsIn": {
                        "additionalProperties": false,
                        "description": "The customer inbound traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound packet traffic.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "bandwidthIn",
                      "packetsIn"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/connect-and-routed-metrics-data.yaml"
                    }
                  }
                },
                "required": [
                  "metrics"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/connect-and-routed-metric.yaml"
                }
              },
              "fbm": {
                "additionalProperties": false,
                "description": "Valid metrics for Flow Based Monitoring (FBM).",
                "properties": {
                  "metrics": {
                    "additionalProperties": false,
                    "description": "Contains a list of available Flow Based Monitoring (FBM) metrics.",
                    "properties": {
                      "bandwidth": {
                        "additionalProperties": false,
                        "description": "Customer traffic measured in bits per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the Flow Based Monitoring (FBM) data.",
                            "type": "string"
                          },
                          "protocols": {
                            "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                            "items": {
                              "enum": [
                                "total",
                                "icmp",
                                "igmp",
                                "udp",
                                "tcp"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "subnets": {
                            "description": "The subnets available to your contract.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "desc",
                          "protocols",
                          "subnets"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/fbm-data.yaml"
                        }
                      },
                      "packets": {
                        "additionalProperties": false,
                        "description": "Customer traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the Flow Based Monitoring (FBM) data.",
                            "type": "string"
                          },
                          "protocols": {
                            "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                            "items": {
                              "enum": [
                                "total",
                                "icmp",
                                "igmp",
                                "udp",
                                "tcp"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "subnets": {
                            "description": "The subnets available to your contract.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "desc",
                          "protocols",
                          "subnets"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/fbm-data.yaml"
                        }
                      }
                    },
                    "required": [
                      "bandwidth",
                      "packets"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/fbm-metric-data.yaml"
                    }
                  }
                },
                "required": [
                  "metrics"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/fbm-metric.yaml"
                }
              },
              "mitigationPost": {
                "additionalProperties": false,
                "description": "Valid mitigation metrics.",
                "properties": {
                  "metrics": {
                    "additionalProperties": false,
                    "description": "A list of available mitigation metrics.",
                    "properties": {
                      "bandwidth": {
                        "additionalProperties": false,
                        "description": "The peak measurement of bandwidth.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound mitigation bandwidth.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "packets": {
                        "additionalProperties": false,
                        "description": "Customer traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound mitigation traffic in packets per second.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "bandwidth",
                      "packets"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/mitigation-data.yaml"
                    }
                  }
                },
                "required": [
                  "metrics"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/mitigation-metric.yaml"
                }
              },
              "mitigationPre": {
                "additionalProperties": false,
                "description": "Valid mitigation metrics.",
                "properties": {
                  "metrics": {
                    "additionalProperties": false,
                    "description": "A list of available mitigation metrics.",
                    "properties": {
                      "bandwidth": {
                        "additionalProperties": false,
                        "description": "The peak measurement of bandwidth.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound mitigation bandwidth.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "packets": {
                        "additionalProperties": false,
                        "description": "Customer traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound mitigation traffic in packets per second.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "bandwidth",
                      "packets"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/mitigation-data.yaml"
                    }
                  }
                },
                "required": [
                  "metrics"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/mitigation-metric.yaml"
                }
              },
              "proxy": {
                "additionalProperties": false,
                "description": "Valid proxy metrics.",
                "properties": {
                  "metrics": {
                    "additionalProperties": false,
                    "description": "Contains a list of available proxy metrics.",
                    "properties": {
                      "bandwidthIn": {
                        "additionalProperties": false,
                        "description": "Customer inbound bandwidth measured in bits per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the customer inbound proxy bandwidth.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "bandwidthOut": {
                        "additionalProperties": false,
                        "description": "Customer outbound proxy traffic measured in bits per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the customer inbound proxy traffic.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "connections": {
                        "additionalProperties": false,
                        "description": "The total connections count.",
                        "properties": {
                          "desc": {
                            "description": "Describes the proxy connections.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "latency": {
                        "additionalProperties": false,
                        "description": "Average latency of a request.",
                        "properties": {
                          "desc": {
                            "description": "Describes the proxy connection latency.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "packetsIn": {
                        "additionalProperties": false,
                        "description": "Customer outbound traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound proxy bandwidth.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "packetsOut": {
                        "additionalProperties": false,
                        "description": "Customer outbound proxy traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound proxy traffic in packets per second.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "requests": {
                        "additionalProperties": false,
                        "description": "The total request count.",
                        "properties": {
                          "desc": {
                            "description": "Describes the proxy requests.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "bandwidthIn",
                      "bandwidthOut",
                      "connections",
                      "latency",
                      "packetsIn",
                      "packetsOut",
                      "requests"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/proxy-data.yaml"
                    }
                  }
                },
                "required": [
                  "metrics"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/proxy-metric.yaml"
                }
              },
              "routed": {
                "additionalProperties": false,
                "description": "Valid routed and connect metrics.",
                "properties": {
                  "metrics": {
                    "additionalProperties": false,
                    "description": "Contains a list of available routed or connect metrics.",
                    "properties": {
                      "bandwidthIn": {
                        "additionalProperties": false,
                        "description": "The customer inbound traffic measured in bits per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound bandwidth.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      },
                      "packetsIn": {
                        "additionalProperties": false,
                        "description": "The customer inbound traffic measured in packets per second.",
                        "properties": {
                          "desc": {
                            "description": "Describes the inbound packet traffic.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "desc"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "bandwidthIn",
                      "packetsIn"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/connect-and-routed-metrics-data.yaml"
                    }
                  }
                },
                "required": [
                  "metrics"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/connect-and-routed-metric.yaml"
                }
              }
            },
            "required": [
              "connect",
              "fbm",
              "mitigationPre",
              "mitigationPost",
              "proxy",
              "routed"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/metrics-type-object.yaml"
            }
          },
          "status": {
            "description": "Whether the request for the metrics type list was successful.",
            "type": "boolean"
          },
          "statusMsg": {
            "description": "A status message that indicates the successful or failed retrieval of the metric types list.",
            "type": "string"
          }
        },
        "required": [
          "currentContract",
          "data",
          "status",
          "statusMsg"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metric-type.yaml"
        }
      },
      "metrics": {
        "additionalProperties": false,
        "properties": {
          "ip": {
            "description": "The corresponding IP address for the metric data.",
            "type": "string"
          },
          "metric": {
            "description": "The type of metric used. Either `bandwidth`, `bandwidthOut`, `bandwidthIn`, `packets`, or `total`.",
            "enum": [
              "bandwidth",
              "bandwidthOut",
              "bandwidthIn",
              "packets",
              "total"
            ],
            "type": "string"
          },
          "points": {
            "description": "Data points for the event metrics.",
            "items": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "type": "array"
          },
          "protocol": {
            "description": "The IP protocol for the object data, or `total` if a total for given the `metric` value.",
            "type": "string"
          },
          "service": {
            "description": "The type of Prolexic service used to gather metrics. Either `routed` or `fbm`.",
            "enum": [
              "routed",
              "fbm"
            ],
            "type": "string"
          },
          "subnet": {
            "description": "The corresponding IP subnet or IP address and CIDR mask combination for the metric data.",
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metrics.yaml"
        }
      },
      "metrics-type-object": {
        "additionalProperties": false,
        "description": "The types of metrics you can request.",
        "properties": {
          "connect": {
            "additionalProperties": false,
            "description": "Valid routed and connect metrics.",
            "properties": {
              "metrics": {
                "additionalProperties": false,
                "description": "Contains a list of available routed or connect metrics.",
                "properties": {
                  "bandwidthIn": {
                    "additionalProperties": false,
                    "description": "The customer inbound traffic measured in bits per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound bandwidth.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "packetsIn": {
                    "additionalProperties": false,
                    "description": "The customer inbound traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound packet traffic.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "bandwidthIn",
                  "packetsIn"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/connect-and-routed-metrics-data.yaml"
                }
              }
            },
            "required": [
              "metrics"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/connect-and-routed-metric.yaml"
            }
          },
          "fbm": {
            "additionalProperties": false,
            "description": "Valid metrics for Flow Based Monitoring (FBM).",
            "properties": {
              "metrics": {
                "additionalProperties": false,
                "description": "Contains a list of available Flow Based Monitoring (FBM) metrics.",
                "properties": {
                  "bandwidth": {
                    "additionalProperties": false,
                    "description": "Customer traffic measured in bits per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the Flow Based Monitoring (FBM) data.",
                        "type": "string"
                      },
                      "protocols": {
                        "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                        "items": {
                          "enum": [
                            "total",
                            "icmp",
                            "igmp",
                            "udp",
                            "tcp"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "subnets": {
                        "description": "The subnets available to your contract.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "desc",
                      "protocols",
                      "subnets"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/fbm-data.yaml"
                    }
                  },
                  "packets": {
                    "additionalProperties": false,
                    "description": "Customer traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the Flow Based Monitoring (FBM) data.",
                        "type": "string"
                      },
                      "protocols": {
                        "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                        "items": {
                          "enum": [
                            "total",
                            "icmp",
                            "igmp",
                            "udp",
                            "tcp"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "subnets": {
                        "description": "The subnets available to your contract.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "desc",
                      "protocols",
                      "subnets"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/fbm-data.yaml"
                    }
                  }
                },
                "required": [
                  "bandwidth",
                  "packets"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/fbm-metric-data.yaml"
                }
              }
            },
            "required": [
              "metrics"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/fbm-metric.yaml"
            }
          },
          "mitigationPost": {
            "additionalProperties": false,
            "description": "Valid mitigation metrics.",
            "properties": {
              "metrics": {
                "additionalProperties": false,
                "description": "A list of available mitigation metrics.",
                "properties": {
                  "bandwidth": {
                    "additionalProperties": false,
                    "description": "The peak measurement of bandwidth.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound mitigation bandwidth.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "packets": {
                    "additionalProperties": false,
                    "description": "Customer traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound mitigation traffic in packets per second.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "bandwidth",
                  "packets"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/mitigation-data.yaml"
                }
              }
            },
            "required": [
              "metrics"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/mitigation-metric.yaml"
            }
          },
          "mitigationPre": {
            "additionalProperties": false,
            "description": "Valid mitigation metrics.",
            "properties": {
              "metrics": {
                "additionalProperties": false,
                "description": "A list of available mitigation metrics.",
                "properties": {
                  "bandwidth": {
                    "additionalProperties": false,
                    "description": "The peak measurement of bandwidth.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound mitigation bandwidth.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "packets": {
                    "additionalProperties": false,
                    "description": "Customer traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound mitigation traffic in packets per second.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "bandwidth",
                  "packets"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/mitigation-data.yaml"
                }
              }
            },
            "required": [
              "metrics"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/mitigation-metric.yaml"
            }
          },
          "proxy": {
            "additionalProperties": false,
            "description": "Valid proxy metrics.",
            "properties": {
              "metrics": {
                "additionalProperties": false,
                "description": "Contains a list of available proxy metrics.",
                "properties": {
                  "bandwidthIn": {
                    "additionalProperties": false,
                    "description": "Customer inbound bandwidth measured in bits per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the customer inbound proxy bandwidth.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "bandwidthOut": {
                    "additionalProperties": false,
                    "description": "Customer outbound proxy traffic measured in bits per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the customer inbound proxy traffic.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "connections": {
                    "additionalProperties": false,
                    "description": "The total connections count.",
                    "properties": {
                      "desc": {
                        "description": "Describes the proxy connections.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "latency": {
                    "additionalProperties": false,
                    "description": "Average latency of a request.",
                    "properties": {
                      "desc": {
                        "description": "Describes the proxy connection latency.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "packetsIn": {
                    "additionalProperties": false,
                    "description": "Customer outbound traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound proxy bandwidth.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "packetsOut": {
                    "additionalProperties": false,
                    "description": "Customer outbound proxy traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound proxy traffic in packets per second.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "requests": {
                    "additionalProperties": false,
                    "description": "The total request count.",
                    "properties": {
                      "desc": {
                        "description": "Describes the proxy requests.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "bandwidthIn",
                  "bandwidthOut",
                  "connections",
                  "latency",
                  "packetsIn",
                  "packetsOut",
                  "requests"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/proxy-data.yaml"
                }
              }
            },
            "required": [
              "metrics"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/proxy-metric.yaml"
            }
          },
          "routed": {
            "additionalProperties": false,
            "description": "Valid routed and connect metrics.",
            "properties": {
              "metrics": {
                "additionalProperties": false,
                "description": "Contains a list of available routed or connect metrics.",
                "properties": {
                  "bandwidthIn": {
                    "additionalProperties": false,
                    "description": "The customer inbound traffic measured in bits per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound bandwidth.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  },
                  "packetsIn": {
                    "additionalProperties": false,
                    "description": "The customer inbound traffic measured in packets per second.",
                    "properties": {
                      "desc": {
                        "description": "Describes the inbound packet traffic.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "bandwidthIn",
                  "packetsIn"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/connect-and-routed-metrics-data.yaml"
                }
              }
            },
            "required": [
              "metrics"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/connect-and-routed-metric.yaml"
            }
          }
        },
        "required": [
          "connect",
          "fbm",
          "mitigationPre",
          "mitigationPost",
          "proxy",
          "routed"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metrics-type-object.yaml"
        }
      },
      "mitigation-data": {
        "additionalProperties": false,
        "description": "A list of available mitigation metrics.",
        "properties": {
          "bandwidth": {
            "additionalProperties": false,
            "description": "The peak measurement of bandwidth.",
            "properties": {
              "desc": {
                "description": "Describes the inbound mitigation bandwidth.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "packets": {
            "additionalProperties": false,
            "description": "Customer traffic measured in packets per second.",
            "properties": {
              "desc": {
                "description": "Describes the inbound mitigation traffic in packets per second.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          }
        },
        "required": [
          "bandwidth",
          "packets"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/mitigation-data.yaml"
        }
      },
      "mitigation-metric": {
        "additionalProperties": false,
        "description": "Valid mitigation metrics.",
        "properties": {
          "metrics": {
            "additionalProperties": false,
            "description": "A list of available mitigation metrics.",
            "properties": {
              "bandwidth": {
                "additionalProperties": false,
                "description": "The peak measurement of bandwidth.",
                "properties": {
                  "desc": {
                    "description": "Describes the inbound mitigation bandwidth.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "packets": {
                "additionalProperties": false,
                "description": "Customer traffic measured in packets per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the inbound mitigation traffic in packets per second.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              }
            },
            "required": [
              "bandwidth",
              "packets"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/mitigation-data.yaml"
            }
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/mitigation-metric.yaml"
        }
      },
      "problem": {
        "additionalProperties": true,
        "description": "Contains complete error data.",
        "properties": {
          "args": {
            "description": "The customer data sent in the request.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "data": {
            "description": "A detailed message regarding the cause of the error.",
            "type": "string"
          },
          "errorCode": {
            "description": "A short description of the error.",
            "type": "string"
          },
          "errorPaths": {
            "description": "The data requested and a detailed error message.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "message": {
                  "description": "A detailed error message about the request.",
                  "type": "string"
                },
                "path": {
                  "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "status": {
            "description": "The error's HTTP response code.",
            "maximum": 600,
            "minimum": 100,
            "type": "integer"
          }
        },
        "required": [
          "status",
          "errorCode",
          "data",
          "args",
          "errorPaths"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/problem.yaml"
        }
      },
      "proxy-data": {
        "additionalProperties": false,
        "description": "Contains a list of available proxy metrics.",
        "properties": {
          "bandwidthIn": {
            "additionalProperties": false,
            "description": "Customer inbound bandwidth measured in bits per second.",
            "properties": {
              "desc": {
                "description": "Describes the customer inbound proxy bandwidth.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "bandwidthOut": {
            "additionalProperties": false,
            "description": "Customer outbound proxy traffic measured in bits per second.",
            "properties": {
              "desc": {
                "description": "Describes the customer inbound proxy traffic.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "connections": {
            "additionalProperties": false,
            "description": "The total connections count.",
            "properties": {
              "desc": {
                "description": "Describes the proxy connections.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "latency": {
            "additionalProperties": false,
            "description": "Average latency of a request.",
            "properties": {
              "desc": {
                "description": "Describes the proxy connection latency.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "packetsIn": {
            "additionalProperties": false,
            "description": "Customer outbound traffic measured in packets per second.",
            "properties": {
              "desc": {
                "description": "Describes the inbound proxy bandwidth.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "packetsOut": {
            "additionalProperties": false,
            "description": "Customer outbound proxy traffic measured in packets per second.",
            "properties": {
              "desc": {
                "description": "Describes the inbound proxy traffic in packets per second.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          },
          "requests": {
            "additionalProperties": false,
            "description": "The total request count.",
            "properties": {
              "desc": {
                "description": "Describes the proxy requests.",
                "type": "string"
              }
            },
            "required": [
              "desc"
            ],
            "type": "object"
          }
        },
        "required": [
          "bandwidthIn",
          "bandwidthOut",
          "connections",
          "latency",
          "packetsIn",
          "packetsOut",
          "requests"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/proxy-data.yaml"
        }
      },
      "proxy-metric": {
        "additionalProperties": false,
        "description": "Valid proxy metrics.",
        "properties": {
          "metrics": {
            "additionalProperties": false,
            "description": "Contains a list of available proxy metrics.",
            "properties": {
              "bandwidthIn": {
                "additionalProperties": false,
                "description": "Customer inbound bandwidth measured in bits per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the customer inbound proxy bandwidth.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "bandwidthOut": {
                "additionalProperties": false,
                "description": "Customer outbound proxy traffic measured in bits per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the customer inbound proxy traffic.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "connections": {
                "additionalProperties": false,
                "description": "The total connections count.",
                "properties": {
                  "desc": {
                    "description": "Describes the proxy connections.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "latency": {
                "additionalProperties": false,
                "description": "Average latency of a request.",
                "properties": {
                  "desc": {
                    "description": "Describes the proxy connection latency.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "packetsIn": {
                "additionalProperties": false,
                "description": "Customer outbound traffic measured in packets per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the inbound proxy bandwidth.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "packetsOut": {
                "additionalProperties": false,
                "description": "Customer outbound proxy traffic measured in packets per second.",
                "properties": {
                  "desc": {
                    "description": "Describes the inbound proxy traffic in packets per second.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              },
              "requests": {
                "additionalProperties": false,
                "description": "The total request count.",
                "properties": {
                  "desc": {
                    "description": "Describes the proxy requests.",
                    "type": "string"
                  }
                },
                "required": [
                  "desc"
                ],
                "type": "object"
              }
            },
            "required": [
              "bandwidthIn",
              "bandwidthOut",
              "connections",
              "latency",
              "packetsIn",
              "packetsOut",
              "requests"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/proxy-data.yaml"
            }
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/proxy-metric.yaml"
        }
      },
      "time-series-data-response": {
        "additionalProperties": {
          "additionalProperties": {
            "additionalProperties": {
              "description": "Network traffic statistics by epoch timestamp.",
              "type": "number"
            },
            "description": "Epoch timestamps with network traffic count data.",
            "type": "object"
          },
          "description": "Time series network flow data.",
          "properties": {
            "aggregatedData": {
              "additionalProperties": {
                "description": "Aggregated network traffic statistics.",
                "type": "number"
              },
              "description": "Aggregated time series network flow groupings.",
              "type": "object"
            }
          },
          "type": "object"
        },
        "description": "Attack and individual usage information for selected destination IP addresses or CIDR blocks in a three-level mapping object. An IP address or CIDR block keys appear at the top-level. The nested keys represent different report data facets. The lowest level shows keys for each data point's individual epoch timestamp.",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/time-series-data-response.yaml"
        }
      }
    }
  },
  "externalDocs": {
    "description": "See documentation for Akamai's Prolexic Analytics API",
    "url": "https://techdocs.akamai.com/prolexic/reference"
  },
  "info": {
    "description": "View and analyze data about DDoS attack activity, diverted traffic, and scrubbed network packets, and network health. \n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Akamai: Prolexic Analytics API",
    "version": "2"
  },
  "openapi": "3.0.0",
  "paths": {
    "/attack-reports/contract/{contract}/attack-id/{attackId}": {
      "get": {
        "description": "Generates an attack report for the specified customer and `attackId`.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-attack-report"
        },
        "operationId": "get-attack-report",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "data": [
                    {
                      "attackId": 1966,
                      "attackTypeName": "RESET Flood",
                      "destinationPort": "8080",
                      "endTime": 1390261538,
                      "eventBw": 500000,
                      "eventEndTime": 1390261538,
                      "eventId": 2744,
                      "eventPeakId": 18594,
                      "eventPps": 1200,
                      "eventStartTime": 1390244438,
                      "ip": "192.0.2.234",
                      "location": "SJC",
                      "netmask": 32,
                      "startTime": 1390244438,
                      "ticketId": 70946
                    },
                    {
                      "attackId": 1966,
                      "attackTypeName": "RESET Flood",
                      "destinationPort": "8080",
                      "endTime": 1390261538,
                      "eventBw": 90000000,
                      "eventEndTime": 1390261538,
                      "eventId": 2744,
                      "eventPeakId": 18595,
                      "eventPps": 200000,
                      "eventStartTime": 1390244438,
                      "ip": "192.0.2.243",
                      "location": "LON",
                      "netmask": 32,
                      "startTime": 1390244438,
                      "ticketId": 70946
                    }
                  ],
                  "status": true,
                  "statusMsg": "Attack report acquired successfully"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Detailed attack report including location, time, and type of attack.",
                  "properties": {
                    "currentContract": {
                      "description": "The policy name of the data center or proxy that reported the attack.",
                      "type": "string"
                    },
                    "data": {
                      "description": "A detailed list of recorded attacks.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "attackId": {
                            "description": "The unique ID of the attack.",
                            "type": "integer"
                          },
                          "attackTypeName": {
                            "description": "The type of attack. These values also appear in `eventTypes`. Refer to [Attack types](https://techdocs.akamai.com/prolexic/reference/attack-types) for a complete list.",
                            "enum": [
                              "ACK Flood",
                              "CLDAP Reflection",
                              "CharGEN Attack",
                              "Connection Flood",
                              "DNS Flood",
                              "FIN Flood",
                              "FIN PUSH Flood",
                              "GET Flood",
                              "GRE Protocol Flood",
                              "HEAD Flood",
                              "ICMP Flood",
                              "IGMP Flood",
                              "mDNS Flood",
                              "NTP FLOOD",
                              "Netbios Flood",
                              "POST Flood",
                              "PUSH Flood",
                              "PUT Flood",
                              "RESET Flood",
                              "RIP Flood",
                              "RPC Flood",
                              "Reserved Protocol Flood",
                              "SNMP Flood",
                              "SQL Server Reflection",
                              "SSDP Flood",
                              "SSL GET Flood",
                              "SSL POST Flood",
                              "SYN Flood",
                              "SYN PUSH",
                              "Sentinel Flood",
                              "TCP Anomaly",
                              "TCP Fragment",
                              "TFTP Flood",
                              "UDP Flood",
                              "UDP Fragment",
                              "XMAS"
                            ],
                            "type": "string"
                          },
                          "destinationPort": {
                            "description": "The destination port for the attack traffic.",
                            "nullable": true,
                            "type": "string"
                          },
                          "endTime": {
                            "description": "When the attack stopped, as a UNIX UTC epoch timestamp.",
                            "type": "integer"
                          },
                          "eventBw": {
                            "description": "The peak bandwidth for the event.",
                            "type": "integer"
                          },
                          "eventCON": {
                            "description": "The peak number of connections for the event.",
                            "type": "integer"
                          },
                          "eventEndTime": {
                            "description": "The end time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventId": {
                            "description": "A unique identifier for the event.",
                            "type": "integer"
                          },
                          "eventPeakId": {
                            "description": "The peak value of ID for the event.",
                            "type": "integer"
                          },
                          "eventPps": {
                            "description": "The peak packets per second for the event.",
                            "type": "integer"
                          },
                          "eventStartTime": {
                            "description": "The start time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "ip": {
                            "description": "The target IP address of the event.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Indicates where the alert originated from in the Prolexic network.",
                            "type": "string"
                          },
                          "netmask": {
                            "description": "CIDR notation indicating the subnet's mask size. Valid values for IPv4 are between `1` and `32`. Valid values for IPv6 are between `1` and `128`.",
                            "type": "integer"
                          },
                          "startTime": {
                            "description": "The start time of the attack in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "ticketId": {
                            "description": "A unique identifier for the ticket assigned to this attack.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "attackId",
                          "eventBw",
                          "eventId",
                          "eventPps",
                          "ip",
                          "location",
                          "netmask",
                          "startTime"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Whether the attack information retrieval was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message indicating the success or failure of attack information retrieval.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/attack-report.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {},
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403)."
          },
          "404": {
            "content": {},
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404)."
          }
        },
        "summary": "Get an attack report",
        "tags": [
          "Attack reports"
        ]
      },
      "parameters": [
        {
          "description": "A unique ID for each attack.",
          "example": "{{attackId}}",
          "in": "path",
          "name": "attackId",
          "required": true,
          "schema": {
            "example": 1966,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/attack-id-path.yaml"
          }
        },
        {
          "description": "The policy domain name of the data center or proxy that the events belong to. This is not the account contract ID. ",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/attack.yaml",
        "path-info": "/attack-reports/contract/{contract}/attack-id/{attackId}"
      }
    },
    "/attack-reports/contract/{contract}/start/{start}/end/{end}": {
      "get": {
        "description": "Retrieves a list of attack reports for a customer within the specified time range.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-attack-reports"
        },
        "operationId": "get-attack-reports",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "data": [
                    {
                      "attackId": 2985,
                      "destinationPort": "80",
                      "destinations": [
                        {
                          "ip": "192.0.2.148",
                          "netmask": 32
                        },
                        {
                          "ip": "192.0.2.235",
                          "netmask": 32
                        }
                      ],
                      "endTime": 1381363451,
                      "eventEndTime": 1381349454,
                      "eventEndTimeAsString": "2013-10-09 20:10:54",
                      "eventId": 4202,
                      "eventStartTime": 1381320180,
                      "eventStartTimeAsString": "2013-10-09 12:03:00",
                      "eventTypes": [
                        "DNS Flood",
                        "ICMP Flood",
                        "UDP Fragment"
                      ],
                      "peaks": [
                        {
                          "bandwidth": 6500000000,
                          "location": "DCA",
                          "peakId": 17277,
                          "pps": 700000
                        },
                        {
                          "bandwidth": 3000000000,
                          "location": "HKG",
                          "peakId": 17276,
                          "pps": 600000
                        }
                      ],
                      "startTime": 1381063041,
                      "ticketId": 97585
                    },
                    {
                      "attackId": 2974,
                      "destinationPort": "80",
                      "destinations": [
                        {
                          "ip": "192.0.2.214",
                          "netmask": 32
                        }
                      ],
                      "endTime": 1380847367,
                      "eventEndTime": 1380752215,
                      "eventEndTimeAsString": "2013-10-02 22:16:55",
                      "eventId": 4170,
                      "eventStartTime": 1380714180,
                      "eventStartTimeAsString": "2013-10-02 11:43:00",
                      "eventTypes": [
                        "SYN Flood"
                      ],
                      "peaks": [
                        {
                          "bandwidth": 300000000,
                          "location": "DCA",
                          "peakId": 17093,
                          "pps": 200
                        },
                        {
                          "bandwidth": 3000000,
                          "location": "HKG",
                          "peakId": 17092,
                          "pps": 1000
                        }
                      ],
                      "startTime": 1380714180,
                      "ticketId": 97368
                    }
                  ],
                  "status": true,
                  "statusMsg": "Attack reports acquired successfully"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains details about an attack, including location, time, and type of attack.",
                  "properties": {
                    "currentContract": {
                      "description": "The policy name of the data center or proxy that reported the attack.",
                      "type": "string"
                    },
                    "data": {
                      "description": "A detailed list of recorded attacks.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "attackId": {
                            "description": "A unique identifier for the attack.",
                            "type": "integer"
                          },
                          "customerShortName": {
                            "description": "A nickname for the customer.",
                            "type": "string"
                          },
                          "destinationPort": {
                            "description": "The targeted port of the attack, if applicable. Returns `null` when not applicable.",
                            "nullable": true,
                            "type": "string"
                          },
                          "destinations": {
                            "description": "The set of targeted IP addresses or Subnets for the attack.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "ip": {
                                  "description": "A targeted IP address.",
                                  "type": "string"
                                },
                                "netmask": {
                                  "description": "A targeted subnet.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "ip",
                                "netmask"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "endTime": {
                            "description": "The end time of the attack in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventEndTime": {
                            "description": "The end time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventEndTimeAsString": {
                            "description": "The end time of the event in `yyyy-MM-dd HH:mm:ss` format.",
                            "type": "string"
                          },
                          "eventId": {
                            "description": "A unique identifier for the event.",
                            "type": "integer"
                          },
                          "eventStartTime": {
                            "description": "The start time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventStartTimeAsString": {
                            "description": "The start time of the event in `yyyy-MM-dd HH:mm:ss` format.",
                            "type": "string"
                          },
                          "eventType": {
                            "description": "The type of event. Either `alert` or `attack`.",
                            "enum": [
                              "alert",
                              "attack"
                            ],
                            "type": "string"
                          },
                          "eventTypes": {
                            "description": "The types of attacks, also used in `attackTypeName` or `attackType`. Refer to [Attack types](https://techdocs.akamai.com/prolexic/reference/attack-types) for a complete list.",
                            "items": {
                              "enum": [
                                "ACK Flood",
                                "CLDAP Reflection",
                                "CharGEN Attack",
                                "Connection Flood",
                                "DNS Flood",
                                "FIN Flood",
                                "FIN PUSH Flood",
                                "GET Flood",
                                "GRE Protocol Flood",
                                "HEAD Flood",
                                "ICMP Flood",
                                "IGMP Flood",
                                "mDNS Flood",
                                "NTP FLOOD",
                                "Netbios Flood",
                                "POST Flood",
                                "PUSH Flood",
                                "PUT Flood",
                                "RESET Flood",
                                "RIP Flood",
                                "RPC Flood",
                                "Reserved Protocol Flood",
                                "SNMP Flood",
                                "SQL Server Reflection",
                                "SSDP Flood",
                                "SSL GET Flood",
                                "SSL POST Flood",
                                "SYN Flood",
                                "SYN PUSH",
                                "Sentinel Flood",
                                "TCP Anomaly",
                                "TCP Fragment",
                                "TFTP Flood",
                                "UDP Flood",
                                "UDP Fragment",
                                "XMAS"
                              ],
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "peaks": {
                            "description": "Contains peak statistics from the attack data.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "bandwidth": {
                                  "description": "The peak measurement of bandwidth.",
                                  "type": "integer"
                                },
                                "connections": {
                                  "description": "The peak number of connections.",
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "Indicates where the alert originated from in the Prolexic network.",
                                  "type": "string"
                                },
                                "peakId": {
                                  "description": "The peak value for ID.",
                                  "type": "integer"
                                },
                                "pps": {
                                  "description": "The peak measurement of packets per second.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "bandwidth",
                                "location",
                                "peakId",
                                "pps"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "startTime": {
                            "description": "The start time of the attack in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "ticketId": {
                            "description": "A unique identifier for the ticket assigned to this attack.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "attackId",
                          "eventEndTimeAsString",
                          "eventId",
                          "eventStartTime",
                          "eventStartTimeAsString",
                          "eventTypes",
                          "startTime"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Whether the request for the attack information was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message that indicates the successful or failed retrieval of the attack information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/attack-reports.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          }
        },
        "summary": "List attack reports",
        "tags": [
          "Attack reports"
        ]
      },
      "parameters": [
        {
          "description": "Unix timestamp for end of attack report search.",
          "example": "{{end}}",
          "in": "path",
          "name": "end",
          "required": true,
          "schema": {
            "example": 1399641518,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/end-path.yaml"
          }
        },
        {
          "description": "Unix timestamp for beginning of attack report search.",
          "example": "{{start}}",
          "in": "path",
          "name": "start",
          "required": true,
          "schema": {
            "example": 1397049511,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/start-path.yaml"
          }
        },
        {
          "description": "The policy domain name of the data center or proxy that the events belong to. This is not the account contract ID. ",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/attack-reports.yaml",
        "path-info": "/attack-reports/contract/{contract}/start/{start}/end/{end}"
      }
    },
    "/critical-events/contract/{contract}": {
      "get": {
        "description": "Retrieves a critical events list for a customer.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-critical-events-contract"
        },
        "operationId": "get-critical-events-contract",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "data": [
                    {
                      "acknowledged": 0,
                      "count": 11,
                      "description": "WBM LEVEL 5",
                      "eventId": "05ngsdca1--lr1.dca1.plx-wbm_monitor-34610029-systems",
                      "expires": 3600,
                      "firstOccur": 1393657985,
                      "importance": 5,
                      "instance": "01",
                      "interfaceName": "unknown",
                      "ip": "192.0.2.213",
                      "location": "dca1",
                      "node": "lr1.dca1.plx",
                      "notes": "wbm5",
                      "recentOccur": 1395842910,
                      "siteCustomerName": "coral",
                      "siteName": "dca1",
                      "siteType": "DC",
                      "source": "wbm",
                      "state": 1,
                      "summary": "WBM 5"
                    }
                  ],
                  "status": true,
                  "statusMsg": "Events acquired successfully"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "currentContract": {
                      "description": "The policy name of the data center or proxy that reported the event.",
                      "type": "string"
                    },
                    "data": {
                      "description": "A detailed list of critical event attributes.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "acknowledged": {
                            "description": "Indicates the event's acknowledgement status.",
                            "type": "integer"
                          },
                          "attackId": {
                            "description": "The unique ID of the attack.",
                            "type": "string"
                          },
                          "count": {
                            "description": "The number of critical events.",
                            "type": "integer"
                          },
                          "description": {
                            "description": "A helpful description of the event.",
                            "type": "string"
                          },
                          "eventId": {
                            "description": "A unique identifier for the event.",
                            "type": "string"
                          },
                          "expires": {
                            "description": "The expiration time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "firstOccur": {
                            "description": "The time when the event first occurred in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "importance": {
                            "description": "A value indicating the event's importance.",
                            "type": "integer"
                          },
                          "instance": {
                            "description": "Name of the customer instance on which the event occurred.",
                            "type": "string"
                          },
                          "interfaceName": {
                            "description": "Name of the interface on which the event occurred.",
                            "type": "string"
                          },
                          "ip": {
                            "description": "The interface's IP address on which the event occurred.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Indicates where the alert originated from in the Prolexic network.",
                            "type": "string"
                          },
                          "node": {
                            "description": "Hostname of the node on which the event occurred.",
                            "type": "string"
                          },
                          "notes": {
                            "description": "Notes about the event.",
                            "type": "string"
                          },
                          "recentOccur": {
                            "description": "Epoch timestamp marking when the event most recently occurred.",
                            "type": "integer"
                          },
                          "siteCustomerName": {
                            "description": "Name of the customer on which the event occurred.",
                            "type": "string"
                          },
                          "siteName": {
                            "description": "Name of the customer site on which the event occurred.",
                            "type": "string"
                          },
                          "siteType": {
                            "description": "The site type.",
                            "type": "string"
                          },
                          "source": {
                            "description": "The source of the event.",
                            "type": "string"
                          },
                          "state": {
                            "description": "The state of the event.",
                            "type": "integer"
                          },
                          "summary": {
                            "description": "An event summary.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Whether the critical events were acquired.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "Message about the critical events status.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/critical-event.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          }
        },
        "summary": "List critical events",
        "tags": [
          "Critical events"
        ]
      },
      "parameters": [
        {
          "description": "The policy domain name of the data center or proxy that the events belong to. This is not the account contract ID. ",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/critical-event-contract.yaml",
        "path-info": "/critical-events/contract/{contract}"
      }
    },
    "/customer/names": {
      "get": {
        "description": "Retrieves contract and account details for customer names.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-customer-names"
        },
        "operationId": "get-customer-names",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "customerNames": [
                    {
                      "accountName": "High Street Company",
                      "contractId": "C-0N7RAC7",
                      "inUse": true,
                      "name": "Big Bank"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Customer name details.",
                  "properties": {
                    "customerNames": {
                      "description": "Customer name details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "accountName": {
                            "description": "Account name.",
                            "type": "string"
                          },
                          "contractId": {
                            "description": "Contract ID.",
                            "type": "string"
                          },
                          "inUse": {
                            "description": "Whether the customer has an associated config set.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Customer name.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "contractId",
                          "name",
                          "accountName",
                          "inUse"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/customer-names-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-400.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          },
          "500": {
            "content": {},
            "description": "[Internal error](https://techdocs.akamai.com/prolexic/reference/500)."
          }
        },
        "summary": "Get active customer names",
        "tags": [
          "Customer names"
        ]
      },
      "x-akamai": {
        "file-path": "paths/names.yaml",
        "path-info": "/customer/names"
      }
    },
    "/events/contract/{contract}": {
      "get": {
        "description": "Retrieves an events list for a customer.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-events-contract"
        },
        "operationId": "get-events-contract",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "data": [
                    {
                      "eventEndTime": 1393236546,
                      "eventInfo": {
                        "attackId": "05ngsdca1--lr1.dca1.plx-wbm_monitor-34610029-systems",
                        "lastOccurred": 1393236546,
                        "location": "mia1"
                      },
                      "eventStartTime": 1390975985,
                      "eventTitle": "chkInt: Interface GigabitEthernet0/18 is down.",
                      "eventType": "alert",
                      "isOngoing": false,
                      "service": "man",
                      "severity": 80
                    },
                    {
                      "eventEndTime": 0,
                      "eventInfo": {
                        "attackEventId": "2707",
                        "attackType": "[\"SYN Flood\"]",
                        "destinationIPs": "[178.132.240.114/32, 178.132.240.155/32, 178.132.240.203/32]",
                        "endTime": false,
                        "eventTicketId": "70167",
                        "startTime": 1392922838
                      },
                      "eventStartTime": 1392922838,
                      "eventTitle": "[\"SYN Flood\"]",
                      "eventType": "attack",
                      "isOngoing": true,
                      "service": "Mitigation",
                      "severity": 100
                    }
                  ],
                  "status": true,
                  "statusMsg": "Events acquired successfully"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the details of an event and the associated attack information.",
                  "properties": {
                    "currentContract": {
                      "description": "The policy name of the data center or proxy that reported the event.",
                      "type": "string"
                    },
                    "data": {
                      "description": "Attack details for each event.",
                      "items": {
                        "additionalProperties": true,
                        "description": "Contains the attack details of the event.",
                        "properties": {
                          "eventEndTime": {
                            "description": "The end time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventInfo": {
                            "description": "Detailed information about the event.",
                            "type": "object"
                          },
                          "eventStartTime": {
                            "description": "The start time of the event in UNIX epoch seconds (UTC).",
                            "type": "integer"
                          },
                          "eventTitle": {
                            "description": "A title that briefly describes the event.",
                            "type": "string"
                          },
                          "eventType": {
                            "description": "The type of event. Valid values are `alert` or `attack`.",
                            "enum": [
                              "alert",
                              "attack"
                            ],
                            "type": "string"
                          },
                          "isOngoing": {
                            "description": "Indicates whether the event is currently ongoing.",
                            "type": "boolean"
                          },
                          "service": {
                            "description": "The service type for the event. Returns `Mitigation` for an attack report type event. For alert type events, returns: `abm`, `abr`, `arb`, `bgp`, `fbm`, `int` or `man`.",
                            "enum": [
                              "Mitigation",
                              "abm",
                              "abr",
                              "arb",
                              "bgp",
                              "fbm",
                              "int",
                              "man"
                            ],
                            "type": "string"
                          },
                          "severity": {
                            "description": "The severity level of the event.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "eventStartTime",
                          "eventType",
                          "isOngoing",
                          "service",
                          "severity"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/events.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Whether the request for the events list was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message that indicates the successful or failed retrieval of the events list.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/event-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          }
        },
        "summary": "List events",
        "tags": [
          "Events"
        ]
      },
      "parameters": [
        {
          "description": "The policy domain name of the data center or proxy that the events belong to. This is not the account contract ID. ",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/event-contract.yaml",
        "path-info": "/events/contract/{contract}"
      }
    },
    "/metric-types/{contract}": {
      "get": {
        "description": "Retrieve a list of metric types for a specific customer.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-metric-types-contract"
        },
        "operationId": "get-metric-types-contract",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "data": {
                    "connect": {
                      "metrics": {
                        "bandwidthIn": {
                          "desc": "Customer inbound traffic, bits per second"
                        },
                        "packetsIn": {
                          "desc": "Customer inbound packets, packets per second"
                        }
                      }
                    },
                    "fbm": {
                      "metrics": {
                        "bandwidth": {
                          "desc": "Customer traffic bits per second",
                          "protocols": [
                            "total",
                            "icmp",
                            "igmp",
                            "udp",
                            "tcp"
                          ],
                          "subnets": [
                            "192.0.2.68/24"
                          ]
                        },
                        "packets": {
                          "desc": "Customer traffic packets per second",
                          "protocols": [
                            "total",
                            "icmp",
                            "igmp",
                            "udp",
                            "tcp"
                          ],
                          "subnets": [
                            "192.0.2.187/24"
                          ]
                        }
                      }
                    },
                    "mitigationPost": {
                      "metrics": {
                        "bandwidth": {
                          "desc": "Customer traffic bits per second"
                        },
                        "packets": {
                          "desc": "Customer traffic packets per second"
                        }
                      }
                    },
                    "mitigationPre": {
                      "metrics": {
                        "bandwidth": {
                          "desc": "Customer traffic bits per second"
                        },
                        "packets": {
                          "desc": "Customer traffic packets per second"
                        }
                      }
                    },
                    "proxy": {
                      "metrics": {
                        "bandwidthIn": {
                          "desc": "Customer inbound traffic, bits per second"
                        },
                        "bandwidthOut": {
                          "desc": "Customer outbound traffic, bits per second"
                        },
                        "connections": {
                          "desc": "Connections count"
                        },
                        "latency": {
                          "desc": "Average latency of request"
                        },
                        "packetsIn": {
                          "desc": "Customer inbound traffic, packets per second"
                        },
                        "packetsOut": {
                          "desc": "Customer outbound traffic, packets per second"
                        },
                        "requests": {
                          "desc": "Requests count"
                        }
                      }
                    },
                    "routed": {
                      "metrics": {
                        "bandwidthIn": {
                          "desc": "Customer inbound traffic, bits per second"
                        },
                        "packetsIn": {
                          "desc": "Customer inbound traffic, packets per second"
                        }
                      }
                    }
                  },
                  "status": true,
                  "statusMsg": "Metric Types list acquired successfully"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information on the types of metrics available to the contract.",
                  "properties": {
                    "currentContract": {
                      "description": "The policy name of the data center or proxy that reported the metrics.",
                      "type": "string"
                    },
                    "data": {
                      "additionalProperties": false,
                      "description": "The types of metrics you can request.",
                      "properties": {
                        "connect": {
                          "additionalProperties": false,
                          "description": "Valid routed and connect metrics.",
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available routed or connect metrics.",
                              "properties": {
                                "bandwidthIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in bits per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound bandwidth.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "packetsIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound packet traffic.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "bandwidthIn",
                                "packetsIn"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/connect-and-routed-metrics-data.yaml"
                              }
                            }
                          },
                          "required": [
                            "metrics"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/connect-and-routed-metric.yaml"
                          }
                        },
                        "fbm": {
                          "additionalProperties": false,
                          "description": "Valid metrics for Flow Based Monitoring (FBM).",
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available Flow Based Monitoring (FBM) metrics.",
                              "properties": {
                                "bandwidth": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in bits per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the Flow Based Monitoring (FBM) data.",
                                      "type": "string"
                                    },
                                    "protocols": {
                                      "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                                      "items": {
                                        "enum": [
                                          "total",
                                          "icmp",
                                          "igmp",
                                          "udp",
                                          "tcp"
                                        ],
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "subnets": {
                                      "description": "The subnets available to your contract.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "desc",
                                    "protocols",
                                    "subnets"
                                  ],
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/fbm-data.yaml"
                                  }
                                },
                                "packets": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the Flow Based Monitoring (FBM) data.",
                                      "type": "string"
                                    },
                                    "protocols": {
                                      "description": "The FBM flow protocols in the report. Use `total` to list all, `icmp` for ICMP flows, `igmp` for IGMP flow, `udp` for UDP flows, and `tcp` for TCP flows.",
                                      "items": {
                                        "enum": [
                                          "total",
                                          "icmp",
                                          "igmp",
                                          "udp",
                                          "tcp"
                                        ],
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "subnets": {
                                      "description": "The subnets available to your contract.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "desc",
                                    "protocols",
                                    "subnets"
                                  ],
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/fbm-data.yaml"
                                  }
                                }
                              },
                              "required": [
                                "bandwidth",
                                "packets"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/fbm-metric-data.yaml"
                              }
                            }
                          },
                          "required": [
                            "metrics"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/fbm-metric.yaml"
                          }
                        },
                        "mitigationPost": {
                          "additionalProperties": false,
                          "description": "Valid mitigation metrics.",
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "A list of available mitigation metrics.",
                              "properties": {
                                "bandwidth": {
                                  "additionalProperties": false,
                                  "description": "The peak measurement of bandwidth.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound mitigation bandwidth.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "packets": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound mitigation traffic in packets per second.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "bandwidth",
                                "packets"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/mitigation-data.yaml"
                              }
                            }
                          },
                          "required": [
                            "metrics"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/mitigation-metric.yaml"
                          }
                        },
                        "mitigationPre": {
                          "additionalProperties": false,
                          "description": "Valid mitigation metrics.",
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "A list of available mitigation metrics.",
                              "properties": {
                                "bandwidth": {
                                  "additionalProperties": false,
                                  "description": "The peak measurement of bandwidth.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound mitigation bandwidth.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "packets": {
                                  "additionalProperties": false,
                                  "description": "Customer traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound mitigation traffic in packets per second.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "bandwidth",
                                "packets"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/mitigation-data.yaml"
                              }
                            }
                          },
                          "required": [
                            "metrics"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/mitigation-metric.yaml"
                          }
                        },
                        "proxy": {
                          "additionalProperties": false,
                          "description": "Valid proxy metrics.",
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available proxy metrics.",
                              "properties": {
                                "bandwidthIn": {
                                  "additionalProperties": false,
                                  "description": "Customer inbound bandwidth measured in bits per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the customer inbound proxy bandwidth.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "bandwidthOut": {
                                  "additionalProperties": false,
                                  "description": "Customer outbound proxy traffic measured in bits per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the customer inbound proxy traffic.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "connections": {
                                  "additionalProperties": false,
                                  "description": "The total connections count.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the proxy connections.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "latency": {
                                  "additionalProperties": false,
                                  "description": "Average latency of a request.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the proxy connection latency.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "packetsIn": {
                                  "additionalProperties": false,
                                  "description": "Customer outbound traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound proxy bandwidth.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "packetsOut": {
                                  "additionalProperties": false,
                                  "description": "Customer outbound proxy traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound proxy traffic in packets per second.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "requests": {
                                  "additionalProperties": false,
                                  "description": "The total request count.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the proxy requests.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "bandwidthIn",
                                "bandwidthOut",
                                "connections",
                                "latency",
                                "packetsIn",
                                "packetsOut",
                                "requests"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/proxy-data.yaml"
                              }
                            }
                          },
                          "required": [
                            "metrics"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/proxy-metric.yaml"
                          }
                        },
                        "routed": {
                          "additionalProperties": false,
                          "description": "Valid routed and connect metrics.",
                          "properties": {
                            "metrics": {
                              "additionalProperties": false,
                              "description": "Contains a list of available routed or connect metrics.",
                              "properties": {
                                "bandwidthIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in bits per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound bandwidth.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                },
                                "packetsIn": {
                                  "additionalProperties": false,
                                  "description": "The customer inbound traffic measured in packets per second.",
                                  "properties": {
                                    "desc": {
                                      "description": "Describes the inbound packet traffic.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "desc"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "bandwidthIn",
                                "packetsIn"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/connect-and-routed-metrics-data.yaml"
                              }
                            }
                          },
                          "required": [
                            "metrics"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/connect-and-routed-metric.yaml"
                          }
                        }
                      },
                      "required": [
                        "connect",
                        "fbm",
                        "mitigationPre",
                        "mitigationPost",
                        "proxy",
                        "routed"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/metrics-type-object.yaml"
                      }
                    },
                    "status": {
                      "description": "Whether the request for the metrics type list was successful.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A status message that indicates the successful or failed retrieval of the metric types list.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/metric-type.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          }
        },
        "summary": "List metric types",
        "tags": [
          "Metric types"
        ]
      },
      "parameters": [
        {
          "description": "The policy domain name of the data center or proxy that the events belong to. This is not the account contract ID. ",
          "example": "{{contract}}",
          "in": "path",
          "name": "contract",
          "required": true,
          "schema": {
            "example": "coral",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contract-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/metric-contract.yaml",
        "path-info": "/metric-types/{contract}"
      }
    },
    "/metrics": {
      "post": {
        "description": "Lists metrics specified in the `type` object, between the given `start` and `end` times, sampled at the given rate and attached to given contract. Responses only contain data for valid requests. More meaningful errors result when requesting data for only one type at a time.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/post-metrics"
        },
        "operationId": "post-metrics",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "contract": "venus",
                "end": 1400385899,
                "samples": 100,
                "start": 1322390037,
                "type": {
                  "fbm": [
                    {
                      "metric": "bandwidth",
                      "protocol": "total",
                      "subnet": "192.0.2.107/24"
                    },
                    {
                      "ip": "192.0.2.227",
                      "metric": "packets",
                      "protocol": "tcp"
                    }
                  ],
                  "routed": [
                    "bandwidthIn"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the target contract and time constraints for the specified metrics.",
                "properties": {
                  "contract": {
                    "description": "The policy name of the data center or proxy that reported the metrics.",
                    "example": "{{contract}}",
                    "type": "string"
                  },
                  "end": {
                    "description": "The end time of the requested metric in UNIX epoch seconds (UTC), with a maximum range of 90 days between `start` and `end`.",
                    "example": "{{end}}",
                    "type": "integer"
                  },
                  "samples": {
                    "description": "The number of data points to return.",
                    "example": "{{samples}}",
                    "type": "integer"
                  },
                  "start": {
                    "description": "The start time of the requested metric in UNIX epoch seconds (UTC), with a maximum range of 90 days between `start` and `end`.",
                    "example": "{{start}}",
                    "type": "integer"
                  },
                  "type": {
                    "additionalProperties": false,
                    "description": "Defines the types of requested metrics.",
                    "properties": {
                      "connect": {
                        "description": "The metric to display connect traffic. Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
                        "items": {
                          "enum": [
                            "bandwidthIn",
                            "packetsIn"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "fbm": {
                        "description": "Flow Based Monitoring metrics based on protocol, IP, or subnet. The response includes valid subnets for your configuration.",
                        "items": {
                          "additionalProperties": false,
                          "description": "Array of objects with requested metric, protocol, IP, or subnet. The response are valid subnets for your configuration.",
                          "properties": {
                            "ip": {
                              "description": "The requested IP address. You can only specify a single `ip` or `subnet` per metric.",
                              "type": "string"
                            },
                            "metric": {
                              "description": "The metric to display traffic data. Select `bandwidth` to return traffic bits per second, or `packets` to return traffic packets per second.",
                              "enum": [
                                "bandwidth",
                                "packets"
                              ],
                              "type": "string"
                            },
                            "protocol": {
                              "description": "The protocol to use in the metric. Valid values are `total`, `icmp`, `igmp`, `udp`, and `tcp`.",
                              "enum": [
                                "total",
                                "icmp",
                                "igmp",
                                "udp",
                                "tcp"
                              ],
                              "type": "string"
                            },
                            "subnet": {
                              "description": "The requested subnet. You can only specify a single `subnet` or `ip` per metric.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "metric",
                            "protocol"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/fbm-type.yaml"
                          }
                        },
                        "type": "array"
                      },
                      "mitigationPost": {
                        "description": "Mitigation return traffic data details. Select `packets` to return traffic packets per second or `bandwidth` to return traffic bits per second.",
                        "items": {
                          "enum": [
                            "packets",
                            "bandwidth"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "mitigationPre": {
                        "description": "Mitigation request traffic data details. Select `packets` to return traffic packets per second or select `bandwidth` to return traffic bits per second.",
                        "items": {
                          "enum": [
                            "packets",
                            "bandwidth"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "proxy": {
                        "description": "A list of proxy data. Select `latency` for average latency of request, `bandwidthIn` for inbound traffic in bits per second, `bandwidthOut` for outbound traffic in bits per second, `connections` for a connections count, `packetsOut` for outbound traffic in packets per second, `requests` for a request count, and `packetsIn` for inbound traffic in packets per second.",
                        "items": {
                          "enum": [
                            "latency",
                            "bandwidthIn",
                            "bandwidthOut",
                            "connections",
                            "packetsOut",
                            "requests",
                            "packetsIn"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "routed": {
                        "description": "A list of routed traffic metrics. Select `bandwidthIn` to return inbound traffic measured in bits per second or select `packetsIn` to include inbound packets measured in packets per second.",
                        "items": {
                          "enum": [
                            "bandwidthIn",
                            "packetsIn"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/metric-query.yaml"
                    }
                  }
                },
                "required": [
                  "contract",
                  "end",
                  "samples",
                  "start",
                  "type"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/metric-data-input.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "currentContract": "coral",
                  "data": [
                    {
                      "metric": "bandwidthIn",
                      "points": [
                        [
                          1392609960,
                          211014
                        ],
                        [
                          1396886760,
                          202529
                        ]
                      ],
                      "service": "routed"
                    },
                    {
                      "metric": "bandwidthIn",
                      "points": [
                        [
                          1392609960,
                          211014
                        ],
                        [
                          1396886760,
                          202529
                        ]
                      ],
                      "protocol": "total",
                      "service": "fbm",
                      "subnet": "192.0.2.24/24"
                    },
                    {
                      "ip": "192.0.2.176",
                      "metric": "bandwidthIn",
                      "points": [
                        [
                          1392609960,
                          211014
                        ],
                        [
                          1396886760,
                          202529
                        ]
                      ],
                      "protocol": "tcp",
                      "service": "routed"
                    }
                  ],
                  "status": true,
                  "statusMsg": "Metrics acquired successfully"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "currentContract": {
                      "description": "The policy name of the data center or proxy that reported the metrics.",
                      "type": "string"
                    },
                    "data": {
                      "description": "Metric response data details.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "ip": {
                            "description": "The corresponding IP address for the metric data.",
                            "type": "string"
                          },
                          "metric": {
                            "description": "The type of metric used. Either `bandwidth`, `bandwidthOut`, `bandwidthIn`, `packets`, or `total`.",
                            "enum": [
                              "bandwidth",
                              "bandwidthOut",
                              "bandwidthIn",
                              "packets",
                              "total"
                            ],
                            "type": "string"
                          },
                          "points": {
                            "description": "Data points for the event metrics.",
                            "items": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "type": "array"
                          },
                          "protocol": {
                            "description": "The IP protocol for the object data, or `total` if a total for given the `metric` value.",
                            "type": "string"
                          },
                          "service": {
                            "description": "The type of Prolexic service used to gather metrics. Either `routed` or `fbm`.",
                            "enum": [
                              "routed",
                              "fbm"
                            ],
                            "type": "string"
                          },
                          "subnet": {
                            "description": "The corresponding IP subnet or IP address and CIDR mask combination for the metric data.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/metrics.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "Whether the metrics were acquired.",
                      "type": "boolean"
                    },
                    "statusMsg": {
                      "description": "A message about the metric status.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currentContract",
                    "data",
                    "status",
                    "statusMsg"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/metric-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Bad request](https://techdocs.akamai.com/prolexic/reference/400).",
            "x-akamai": {
              "file-path": "errors/error-400.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Forbidden](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          },
          "500": {
            "content": {},
            "description": "[Internal error](https://techdocs.akamai.com/prolexic/reference/500)."
          }
        },
        "summary": "Get metrics data",
        "tags": [
          "Metrics"
        ]
      },
      "x-akamai": {
        "file-path": "paths/metrics.yaml",
        "path-info": "/metrics"
      }
    },
    "/routed/tunnel/bgp-sessions": {
      "post": {
        "description": "Lists BGP session information for Routed 3.0 GRE and Routed 3.0 GRE over ADC tunnels in all specified policy domains. Use the `customerBgpPeerIp4` or `customerBgpPeerIp6` from this response to match with `customerBgpPeerIp` and `prefix` based on the IP version in the routes response.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/post-routed-bgp-sessions"
        },
        "operationId": "post-routed-bgp-sessions",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "customerNames": [
                  "ABC_corp"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Routed health details.",
                "properties": {
                  "customerNames": {
                    "description": "Routed health customer name details.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "customerNames"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/funnel-health-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "akamaiBgpPeerIpv4": "192.0.2.214",
                    "akamaiBgpPeerIpv6": "2001:0db8:0:0:0:0:0:0",
                    "akamaiGreEndpointIpv4": "192.0.2.83",
                    "akamaiGreEndpointIpv6": "2001:0db8:0:0:0:1:0:0",
                    "asn": 32757,
                    "customerBgpPeerIpv4": "192.0.2.169",
                    "customerBgpPeerIpv6": "2001:0db8:0:0:0:0:0:1",
                    "customerGreEndpointIpv4": "192.0.2.121",
                    "customerGreEndpointIpv6": "2001:0db8:0:0:0:1:0:1",
                    "dataCenter": "Coral Gables",
                    "healthIpv4": "Established",
                    "healthIpv6": "Established",
                    "mtu": 1500,
                    "routerName": "SCHPISPR01",
                    "tunnelType": "GRE_OVER_ADC"
                  }
                ],
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "akamaiBgpPeerIpv4": {
                        "description": "Akamai BGP peering IPv4 address.",
                        "type": "string"
                      },
                      "akamaiBgpPeerIpv6": {
                        "description": "Akamai BGP peering IPv6 address.",
                        "type": "string"
                      },
                      "akamaiGreEndpointIpv4": {
                        "description": "Akamai GRE endpoint IPv4 address.",
                        "type": "string"
                      },
                      "akamaiGreEndpointIpv6": {
                        "description": "Akamai GRE endpoint IPv6 address.",
                        "type": "string"
                      },
                      "asn": {
                        "description": "Autonomous System Number (ASN) that identifies the network.",
                        "type": "integer"
                      },
                      "customerBgpPeerIpv4": {
                        "description": "Customer BGP peering IPv4 address.",
                        "type": "string"
                      },
                      "customerBgpPeerIpv6": {
                        "description": "Customer BGP peering IPv6 address.",
                        "type": "string"
                      },
                      "customerGreEndpointIpv4": {
                        "description": "Customer GRE endpoint IPv4 address.",
                        "type": "string"
                      },
                      "customerGreEndpointIpv6": {
                        "description": "Customer GRE endpoint IPv6 address.",
                        "type": "string"
                      },
                      "dataCenter": {
                        "description": "Customer data center.",
                        "type": "string"
                      },
                      "healthIpv4": {
                        "description": "BGP session health for IPv4 traffic.",
                        "type": "string"
                      },
                      "healthIpv6": {
                        "description": "BGP session health for IPv6 traffic.",
                        "type": "string"
                      },
                      "mtu": {
                        "description": "Maximum transmission unit value when the tunnel type is `GRE_OVER_ADC`.",
                        "type": "integer"
                      },
                      "routerName": {
                        "description": "Customer router.",
                        "type": "string"
                      },
                      "tunnelType": {
                        "description": "Whether the tunnel is Routed 3.0 GRE or Routed 3.0 GRE over ADC. Either `GRE` or `GRE_OVER_ADC`.",
                        "enum": [
                          "GRE",
                          "GRE_OVER_ADC"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "asn",
                      "dataCenter",
                      "routerName",
                      "akamaiGreEndpointIpv4",
                      "customerGreEndpointIpv4",
                      "akamaiBgpPeerIpv4",
                      "customerBgpPeerIpv4",
                      "healthIpv4"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/funnel-bgp-session-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-400.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          },
          "500": {
            "content": {},
            "description": "[Internal error](https://techdocs.akamai.com/prolexic/reference/500)."
          }
        },
        "summary": "Routed tunnel BGP sessions",
        "tags": [
          "Routed BGP sessions"
        ]
      },
      "x-akamai": {
        "file-path": "paths/bgp-sessions.yaml",
        "path-info": "/routed/tunnel/bgp-sessions"
      }
    },
    "/routed/tunnel/health": {
      "post": {
        "description": "Lists total and healthy tunnel counts for Routed 3.0 GRE and Routed 3.0 GRE over ADC tunnels. Counts are per Akamai location and customer router combination for the unique pair of Akamai IP and remote IP.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/post-routed-health"
        },
        "operationId": "post-routed-health",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "customerNames": [
                  "ABC_corp"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Routed health details.",
                "properties": {
                  "customerNames": {
                    "description": "Routed health customer name details.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "customerNames"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/funnel-health-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "akamaiLocation": "dev1",
                    "healthyAdcFunnels": 3,
                    "healthyFunnels": 6,
                    "routerName": "NYC-ROUTER",
                    "totalAdcFunnels": 5,
                    "totalFunnels": 8
                  }
                ],
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "akamaiLocation": {
                        "description": "Akamai location.",
                        "type": "string"
                      },
                      "healthyAdcFunnels": {
                        "description": "Number of healthy tunnels over ADC per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
                        "type": "integer"
                      },
                      "healthyFunnels": {
                        "description": "Number of healthy tunnels per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
                        "type": "integer"
                      },
                      "routerName": {
                        "description": "Customer router.",
                        "type": "string"
                      },
                      "totalAdcFunnels": {
                        "description": "Total number of healthy tunnels over ADC per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
                        "type": "integer"
                      },
                      "totalFunnels": {
                        "description": "Total number of healthy tunnels per Akamai endpoint IP and remote endpoint IP, per Akamai location and customer router combination.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "akamaiLocation",
                      "routerName",
                      "totalFunnels"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/funnel-health-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-400.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          },
          "500": {
            "content": {},
            "description": "[Internal error](https://techdocs.akamai.com/prolexic/reference/500)."
          }
        },
        "summary": "Routed tunnel health",
        "tags": [
          "Routed health"
        ]
      },
      "x-akamai": {
        "file-path": "paths/health.yaml",
        "path-info": "/routed/tunnel/health"
      }
    },
    "/routed/tunnel/routes": {
      "post": {
        "description": "Lists Routed 3.0 GRE and Routed 3.0 GRE over ADC tunnel routes data for all specified policy domains. Use the `prefix` in the response to match with the `bgp-sessions` response.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/post-routed-routes"
        },
        "operationId": "post-routed-routes",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "customerNames": [
                  "ABC_corp"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Routed health details.",
                "properties": {
                  "customerNames": {
                    "description": "Routed health customer name details.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "customerNames"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/funnel-health-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "akamaiLocation": "DEV",
                    "asPath": "65502",
                    "community": [
                      "1235:0",
                      "4564:24515"
                    ],
                    "customerBgpPeerIp": "192.0.2.74",
                    "customerName": "COR_pd",
                    "dataCenter": "Coral Gables",
                    "localPref": 200,
                    "med": 2000,
                    "mtu": 1500,
                    "prefix": "192.0.2.1/24",
                    "routerName": "SCHPISPR01",
                    "tunnelType": "GRE_OVER_ADC"
                  }
                ],
                "schema": {
                  "description": "Routed tunnel traffic details.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "akamaiLocation": {
                        "description": "Akamai location name.",
                        "type": "string"
                      },
                      "asPath": {
                        "description": "BGP Autonomous System (AS) number path.",
                        "type": "string"
                      },
                      "community": {
                        "description": "BGP community configuration.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "customerBgpPeerIp": {
                        "description": "The BGP peer IP that corresponds to `customerBgpPeerIp4` or `customerBgpPeerIp6` fields for the bgp-sessions endpoint.",
                        "type": "string"
                      },
                      "customerName": {
                        "description": "Customer name.",
                        "type": "string"
                      },
                      "dataCenter": {
                        "description": "Data center name.",
                        "type": "string"
                      },
                      "localPref": {
                        "description": "BGP local preference value.",
                        "type": "integer"
                      },
                      "med": {
                        "description": "BGP Multi Exit Discriminator (MED) value.",
                        "type": "integer"
                      },
                      "mtu": {
                        "description": "Maximum transmission unit (MTU) value when `tunnelType` is `GRE_OVER_ADC`.",
                        "type": "integer"
                      },
                      "prefix": {
                        "description": "Customer BGP peer IP address with CIDR prefix.",
                        "type": "string"
                      },
                      "routerName": {
                        "description": "Router name.",
                        "type": "string"
                      },
                      "tunnelType": {
                        "description": "Whether the tunnel is Routed 3.0 GRE or Routed 3.0 GRE over ADC. Either `GRE` or `GRE_OVER_ADC`.",
                        "enum": [
                          "GRE",
                          "GRE_OVER_ADC"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "akamaiLocation",
                      "prefix",
                      "customerName",
                      "routerName",
                      "asPath",
                      "customerBgpPeerIp"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/funnel-routes-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-400.yaml"
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName"
                  ],
                  "data": "Insufficient privileges to access object customerName ABC_corp.",
                  "errorCode": "INSUFFICIENT_PRIVILEGES",
                  "errorPaths": [
                    {
                      "message": "You don't have permission to read customer name",
                      "path": "customerName"
                    }
                  ],
                  "status": 403
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Unauthorized request](https://techdocs.akamai.com/prolexic/reference/403).",
            "x-akamai": {
              "file-path": "errors/error-403.yaml"
            }
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "args": [
                    "customerName",
                    "ABC_corp"
                  ],
                  "data": "customerName is required.",
                  "errorCode": "PARAMETER_MISSING",
                  "errorPaths": [
                    {
                      "message": "Customer not found",
                      "path": "customerName"
                    }
                  ],
                  "status": 404
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Contains complete error data.",
                  "properties": {
                    "args": {
                      "description": "The customer data sent in the request.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "data": {
                      "description": "A detailed message regarding the cause of the error.",
                      "type": "string"
                    },
                    "errorCode": {
                      "description": "A short description of the error.",
                      "type": "string"
                    },
                    "errorPaths": {
                      "description": "The data requested and a detailed error message.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "description": "A detailed error message about the request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "A concatenated string of the requested `customerName` and `name` attributes.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "status": {
                      "description": "The error's HTTP response code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "status",
                    "errorCode",
                    "data",
                    "args",
                    "errorPaths"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "description": "[Not found](https://techdocs.akamai.com/prolexic/reference/404).",
            "x-akamai": {
              "file-path": "errors/error-404.yaml"
            }
          },
          "500": {
            "content": {},
            "description": "[Internal error](https://techdocs.akamai.com/prolexic/reference/500)."
          }
        },
        "summary": "List Routed tunnel routes",
        "tags": [
          "Routed tunnel routes"
        ]
      },
      "x-akamai": {
        "file-path": "paths/routes.yaml",
        "path-info": "/routed/tunnel/routes"
      }
    },
    "/time-series-data": {
      "get": {
        "description": "Lists usage and attack data for individual destination IP addresses. Optionally specify the `startTime` and `endTime` to get data from a specific period. The maximum date range is the last seven days, and by default you get data from the last two hours. Specify `locations` to include only traffic coming through specific data centers, or `source` for specific router types. Indicate the `samplingSize` to determine the number of timestamps to get data for. Enable `sum` to get aggregated data.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Prolexic Analytics API",
          "url": "https://techdocs.akamai.com/prolexic/reference/get-time-series-data"
        },
        "operationId": "get-time-series-data",
        "parameters": [
          {
            "description": "A comma-separated list of destinations. These can be individual IP addresses or CIDR blocks to specify a range of addresses.",
            "example": "{{destinations}}",
            "in": "query",
            "name": "destinations",
            "required": true,
            "schema": {
              "example": "147.114.46.0/23,147.104.46.0/23",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/destinations-query.yaml"
            }
          },
          {
            "description": "The end time for the requested data in epoch seconds. Shows the current time by default.",
            "example": "{{endTime}}",
            "in": "query",
            "name": "endTime",
            "required": true,
            "schema": {
              "example": 1596220115,
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-time-query.yaml"
            }
          },
          {
            "description": "A comma-separated list of data center names to filter the results by. The currently available data centers are: `mia4`, `lga3`, `lax3`, `dfw3`, `ord3`, `vie3`, `par3`, `ams3`, `sto3`, `sjc2`, `dca2`, `lon2`, `fra2`, `hkg2`, `tyo2`, and `syd2`. Set to `agr` to show aggregated data from all data centers.",
            "example": "{{locations}}",
            "in": "query",
            "name": "locations",
            "required": true,
            "schema": {
              "example": "mia4,lga3",
              "pattern": "^(([a-z]{3}[0-9])|(agr))([,](([a-z]{3}[0-9])*)|(agr))$",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/locations-query.yaml"
            }
          },
          {
            "description": "The number of timestamps to get the usage data for. If not specified, the API returns all the data available for a selected time period.",
            "example": "{{samplingSize}}",
            "in": "query",
            "name": "samplingSize",
            "required": true,
            "schema": {
              "example": 2,
              "minimum": 1,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/sampling-size-query.yaml"
            }
          },
          {
            "description": "__Enum__ The router type the data went through. Either `access_flow` for an Akamai router, `border_flow` for a customer router, or `both`. The default value is `both`.",
            "example": "{{source}}",
            "in": "query",
            "name": "source",
            "required": true,
            "schema": {
              "default": "both",
              "enum": [
                "both",
                "access_flow",
                "border_flow"
              ],
              "example": "access_flow",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/source-query.yaml"
            }
          },
          {
            "description": "The start time for the requested data in epoch seconds. Shows the current time minus two hours by default.",
            "example": "{{startTime}}",
            "in": "query",
            "name": "startTime",
            "required": true,
            "schema": {
              "example": 1596133715,
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-time-query.yaml"
            }
          },
          {
            "description": "Whether to return `aggregationData` in the response.",
            "example": "{{sum}}",
            "in": "query",
            "name": "sum",
            "required": true,
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/sum-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "142.205.0.0/16": {
                    "ACCESS_FLOW_DFW3_ESP_BPS": {
                      "1594148700000": 183500.8,
                      "1594148820000": 10110020.267,
                      "1594148880000": 3023394.133,
                      "1594148940000": 11543868.4,
                      "1594149000000": 5758845.867,
                      "1594149060000": 11029211.467,
                      "1594149120000": 11703461.067,
                      "1594149180000": 4535091.2,
                      "1594149480000": 183500.8,
                      "1594151160000": 200977.067,
                      "1594152000000": 113595.733
                    },
                    "BORDER_FLOW_DFW3_ESP_BPS": {
                      "1594148700000": 183500.8,
                      "1594148820000": 10110020.267,
                      "1594148880000": 3023394.133,
                      "1594148940000": 11543868.4,
                      "1594149000000": 5758845.867,
                      "1594149060000": 11029211.467,
                      "1594149120000": 11703461.067,
                      "1594149180000": 4535091.2,
                      "1594149480000": 183500.8,
                      "1594151160000": 200977.067,
                      "1594152000000": 113595.733
                    },
                    "aggregatedData": {
                      "ACCESS_FLOW_DFW3_ESP_BPS": 1322132,
                      "ACCESS_FLOW_DFW3_ESP_PPS": 23444.1223,
                      "ACCESS_FLOW_DFW3_ICMP_BPS": 1223.22,
                      "ACCESS_FLOW_DFW3_ICMP_PPS": 1223.344,
                      "ACCESS_FLOW_DFW3_TCP_BPS": 123445.12,
                      "ACCESS_FLOW_DFW3_TCP_PPS": 76655.23,
                      "ACCESS_FLOW_DFW3_TOTAL_BPS": 1234,
                      "ACCESS_FLOW_DFW3_TOTAL_PPS": 1323,
                      "ACCESS_FLOW_DFW3_UDP_BPS": 1233,
                      "ACCESS_FLOW_DFW3_UDP_PPS": 2132,
                      "BORDER_FLOW_DFW3_ESP_BPS": 12233,
                      "BORDER_FLOW_DFW3_ESP_PPS": 2133,
                      "BORDER_FLOW_DFW3_ICMP_BPS": 1233,
                      "BORDER_FLOW_DFW3_ICMP_PPS": 167888.34,
                      "BORDER_FLOW_DFW3_TCP_BPS": 766554.23,
                      "BORDER_FLOW_DFW3_TCP_PPS": 12345.788,
                      "BORDER_FLOW_DFW3_TOTAL_BPS": 12344.77,
                      "BORDER_FLOW_DFW3_TOTAL_PPS": 659878.22,
                      "BORDER_FLOW_DFW3_UDP_BPS": 6555788,
                      "BORDER_FLOW_DFW3_UDP_PPS": 76555.865
                    }
                  }
                },
                "schema": {
                  "additionalProperties": {
                    "additionalProperties": {
                      "additionalProperties": {
                        "description": "Network traffic statistics by epoch timestamp.",
                        "type": "number"
                      },
                      "description": "Epoch timestamps with network traffic count data.",
                      "type": "object"
                    },
                    "description": "Time series network flow data.",
                    "properties": {
                      "aggregatedData": {
                        "additionalProperties": {
                          "description": "Aggregated network traffic statistics.",
                          "type": "number"
                        },
                        "description": "Aggregated time series network flow groupings.",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "description": "Attack and individual usage information for selected destination IP addresses or CIDR blocks in a three-level mapping object. An IP address or CIDR block keys appear at the top-level. The nested keys represent different report data facets. The lowest level shows keys for each data point's individual epoch timestamp.",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/time-series-data-response.yaml"
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {},
            "description": "[Bad request](https://techdocs.akamai.com/prolexic/reference/400)."
          },
          "500": {
            "content": {},
            "description": "[Internal error](https://techdocs.akamai.com/prolexic/reference/500)."
          }
        },
        "summary": "Get time series data",
        "tags": [
          "Time series data"
        ]
      },
      "x-akamai": {
        "file-path": "paths/time-series-data.yaml",
        "path-info": "/time-series-data"
      }
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/prolexic-analytics/v2"
    },
    {
      "url": "http://prolexic-analytics/v2"
    }
  ],
  "tags": [
    {
      "description": "View attack event reports.",
      "name": "Attack reports"
    },
    {
      "description": "View Routed 3.0 tunnel BGP session data.",
      "name": "Routed BGP sessions"
    },
    {
      "description": "View critical event reports.",
      "name": "Critical events"
    },
    {
      "description": "View event reports.",
      "name": "Events"
    },
    {
      "description": "View network traffic metrics.",
      "name": "Metrics"
    },
    {
      "description": "View network traffic metric types.",
      "name": "Metric types"
    },
    {
      "description": "View account and contract details for customer names.",
      "name": "Customer names"
    },
    {
      "description": "View Routed 3.0 GRE and Routed 3.0 GRE over ADC tunnel routes data.",
      "name": "Routed tunnel routes"
    },
    {
      "description": "View time series event data reports.",
      "name": "Time series data"
    }
  ],
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  }
}