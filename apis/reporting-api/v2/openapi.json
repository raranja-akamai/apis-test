{
  "components": {
    "headers": {
      "Location": {
        "description": "Specifies the relative URL that you can use in a GET data request.",
        "schema": {
          "example": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34F8J+bfK.buOpx8.W6zxjHs30d8W9zqYTM0TvF7qegG9QfCC0ltsF4QwdnCRzfaWlirMK1sdge7gIYCsgvv5ldrtlu.9kq8VL35mrBbXEltisr6xnuumhqq7X7CaqjDo5Aicev3Xd4wTOI1WvdBVSJMSveeQov58zLplvh8GYZ4MgAgmO41eb6dsYieutcoq7aEsWVGrFSX2sz3D8hQK1k7DtFCs+XN9H.2wslub3bADAHGrSI",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "headers/Location.yaml"
        }
      },
      "Retry-After": {
        "description": "The recommended wait time in seconds before calling the endpoint again.",
        "schema": {
          "example": 300,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "headers/Retry-After.yaml"
        }
      }
    },
    "parameters": {
      "async-query": {
        "description": "Enables the asynchronous flow to get the data. By default, `false`.",
        "in": "query",
        "name": "async",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/async-query.yaml"
        }
      },
      "end-query": {
        "description": "End date in ISO 8601 format. Use this parameter together with `start`, or else replace both with a fixed `timeRange`.",
        "in": "query",
        "name": "end",
        "schema": {
          "example": "2024-06-02T00:00:00Z",
          "format": "date-time",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/end-query.yaml"
        }
      },
      "productFamily-path": {
        "description": "The area of products.",
        "in": "path",
        "name": "productFamily",
        "required": true,
        "schema": {
          "example": "delivery",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/productFamily-path.yaml"
        }
      },
      "queryId-path": {
        "description": "Unique identifier of the previous asynchronous request to fetch report data.",
        "in": "path",
        "name": "queryId",
        "required": true,
        "schema": {
          "example": ".kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/queryId-path.yaml"
        }
      },
      "report-path": {
        "description": "An individual report name.",
        "in": "path",
        "name": "report",
        "required": true,
        "schema": {
          "example": "current",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/report-path.yaml"
        }
      },
      "reportingArea-path": {
        "description": "The grouping of reports related to the same area.",
        "in": "path",
        "name": "reportingArea",
        "required": true,
        "schema": {
          "example": "traffic",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/reportingArea-path.yaml"
        }
      },
      "start-query": {
        "description": "Start date in ISO 8601 format. Use this parameter together with `end`, or else replace both with a fixed `timeRange`.",
        "in": "query",
        "name": "start",
        "schema": {
          "example": "2024-06-02T00:00:00Z",
          "format": "date-time",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/start-query.yaml"
        }
      },
      "timeRange-query": {
        "description": "Predefined time range, either `LAST_15_MINUTES`, `LAST_30_MINUTES`, `LAST_1_HOUR`, `LAST_3_HOURS`, `LAST_6_HOURS`, `LAST_12_HOURS`, `LAST_1_DAY`, `LAST_2_DAYS`, `LAST_1_WEEK`, `LAST_30_DAYS`, or `LAST_90_DAYS`. Use this as an alternative to a more flexible `start` and `end` time range. Support for specific time range values may vary by report type. See the report documentation under [Available reports](https://techdocs.akamai.com/reporting/reference/available-reports).",
        "in": "query",
        "name": "timeRange",
        "schema": {
          "enum": [
            "LAST_15_MINUTES",
            "LAST_30_MINUTES",
            "LAST_1_HOUR",
            "LAST_3_HOURS",
            "LAST_6_HOURS",
            "LAST_12_HOURS",
            "LAST_1_DAY",
            "LAST_2_DAYS",
            "LAST_1_WEEK",
            "LAST_30_DAYS",
            "LAST_90_DAYS"
          ],
          "example": "LAST_1_HOUR",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/timeRange-query.yaml"
        }
      }
    },
    "responses": {
      "302": {
        "description": "The data isn't available. The response contains the `Retry-After` header.",
        "headers": {
          "Retry-After": {
            "description": "The recommended wait time in seconds before calling the endpoint again.",
            "schema": {
              "example": 300,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "headers/Retry-After.yaml"
            }
          }
        }
      },
      "303": {
        "description": "The request isn't processed. The response contains the `Location` header with the redirect link.",
        "headers": {
          "Location": {
            "description": "Specifies the relative URL that you can use in a GET data request.",
            "schema": {
              "example": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34F8J+bfK.buOpx8.W6zxjHs30d8W9zqYTM0TvF7qegG9QfCC0ltsF4QwdnCRzfaWlirMK1sdge7gIYCsgvv5ldrtlu.9kq8VL35mrBbXEltisr6xnuumhqq7X7CaqjDo5Aicev3Xd4wTOI1WvdBVSJMSveeQov58zLplvh8GYZ4MgAgmO41eb6dsYieutcoq7aEsWVGrFSX2sz3D8hQK1k7DtFCs+XN9H.2wslub3bADAHGrSI",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "headers/Location.yaml"
            }
          }
        }
      },
      "400": {
        "content": {
          "application/problem+json": {
            "example": {
              "errors": [
                {
                  "detail": "Incorrect metric name: 'incorrectMetric'",
                  "problemId": "c3f7a9d1-482e-4c3f-ba7a-5c2f8e36a2d9",
                  "title": "Validation error",
                  "type": "metrics"
                }
              ],
              "problemId": "7d6e8b4f-3a21-4b6c-9e58-1fc63b1a4a72",
              "status": 400,
              "title": "Invalid request",
              "type": "/reporting-api/error-types/invalid-request"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data.",
              "properties": {
                "detail": {
                  "description": "Details of the error encountered.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "Validation errors for the provided request.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "detail": {
                        "description": "Details of the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "problemId": {
                        "description": "ID assigned to this problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "title": {
                        "description": "Short title identifying the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies which part of the request the error corresponds to.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "detail"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "problemId": {
                  "description": "ID assigned to this problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "HTTP status code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "Short title identifying the error.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/error.yaml"
              }
            }
          }
        },
        "description": "The reporting data request is incorrect."
      },
      "403": {
        "content": {
          "application/problem+json": {
            "example": {
              "detail": "Missing access scope: 'REPORTING_REPORTS_EXECUTOR_CORE_READ'",
              "problemId": "b8a94c7e-6d2f-4f4c-a8cb-0e5d2f68f29e",
              "status": 403,
              "title": "Unauthorized",
              "type": "/reporting-api/error-types/unauthorized"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data.",
              "properties": {
                "detail": {
                  "description": "Details of the error encountered.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "Validation errors for the provided request.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "detail": {
                        "description": "Details of the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "problemId": {
                        "description": "ID assigned to this problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "title": {
                        "description": "Short title identifying the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies which part of the request the error corresponds to.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "detail"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "problemId": {
                  "description": "ID assigned to this problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "HTTP status code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "Short title identifying the error.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/error.yaml"
              }
            }
          }
        },
        "description": "You are unauthorized to make calls to the requested report."
      },
      "404": {
        "content": {
          "application/problem+json": {
            "example": {
              "detail": "Report definition '/delivery/traffic/incorrectReport' not found",
              "problemId": "e1c2d7f5-9b3a-4a6e-8c9d-2f4b1e8c7a9d",
              "status": 404,
              "title": "Report not found",
              "type": "/reporting-api/error-types/report-not-found"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data.",
              "properties": {
                "detail": {
                  "description": "Details of the error encountered.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "Validation errors for the provided request.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "detail": {
                        "description": "Details of the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "problemId": {
                        "description": "ID assigned to this problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "title": {
                        "description": "Short title identifying the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies which part of the request the error corresponds to.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "detail"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "problemId": {
                  "description": "ID assigned to this problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "HTTP status code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "Short title identifying the error.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/error.yaml"
              }
            }
          }
        },
        "description": "The requested resource doesn't exist."
      },
      "422": {
        "content": {
          "application/problem+json": {
            "example": {
              "detail": "Exceeded limit of maximum query cost",
              "problemId": "e7dc1d22-9136-487d-9808-9e1e8sb3b67c",
              "status": 422,
              "title": "Query cost exceeded",
              "type": "/reporting-api/error-types/query-cost-exceeded"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data.",
              "properties": {
                "detail": {
                  "description": "Details of the error encountered.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "Validation errors for the provided request.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "detail": {
                        "description": "Details of the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "problemId": {
                        "description": "ID assigned to this problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "title": {
                        "description": "Short title identifying the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies which part of the request the error corresponds to.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "detail"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "problemId": {
                  "description": "ID assigned to this problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "HTTP status code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "Short title identifying the error.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/error.yaml"
              }
            }
          }
        },
        "description": "The request cannot be processed, since its cost exceeds the maximum request cost limit."
      },
      "429": {
        "content": {
          "application/problem+json": {
            "example": {
              "detail": "You reached the limit for request count of 20. Once your current requests are processed, the allowed request count will refill at the rate of 20 per 1 minute(s).",
              "problemId": "4e3d2b1a-f9c8-4b7a-a6d5-e2f1c0b9a8d7",
              "rateLimit": "20",
              "rateLimitNextRequest": "Fri, 29 Mar 2024 13:40:00 Z",
              "rateLimitRefill": "20",
              "rateLimitRemaining": "0",
              "status": 429,
              "title": "Rate Limit Exceeded",
              "type": "/reporting-api/error-types/rate-limit-exceeded"
            },
            "schema": {
              "additionalProperties": true,
              "description": "Represents error data.",
              "properties": {
                "detail": {
                  "description": "Details of the error encountered.",
                  "minLength": 1,
                  "type": "string"
                },
                "errors": {
                  "description": "Validation errors for the provided request.",
                  "items": {
                    "additionalProperties": true,
                    "properties": {
                      "detail": {
                        "description": "Details of the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "problemId": {
                        "description": "ID assigned to this problem.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "title": {
                        "description": "Short title identifying the error.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Identifies which part of the request the error corresponds to.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "detail"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                },
                "problemId": {
                  "description": "ID assigned to this problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "HTTP status code.",
                  "maximum": 600,
                  "minimum": 100,
                  "type": "integer"
                },
                "title": {
                  "description": "Short title identifying the error.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "title",
                "status"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/error.yaml"
              }
            }
          }
        },
        "description": "Hit or cost based limits exceeded."
      }
    },
    "schemas": {
      "async-report-data-response": {
        "additionalProperties": false,
        "description": "Encapsulates the report's data response for the asynchronous flow.",
        "properties": {
          "data": {
            "description": "Records returned for a given request.",
            "items": {
              "type": "object"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true,
            "x-akamai": {
              "file-path": "schemas/data.yaml"
            }
          },
          "metadata": {
            "additionalProperties": false,
            "description": "Contains information about the request and the response.",
            "properties": {
              "evictionTime": {
                "description": "The time when the cached data was removed.",
                "format": "date-time",
                "type": "string"
              },
              "links": {
                "description": "Links for the requested path.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "allow": {
                      "description": "Allowed HTTP methods for the URL shown in `href`.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "describedBy": {
                      "description": "Relative URL address of the resource schema.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "href": {
                      "description": "Relative URL address of the resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rel": {
                      "description": "Relative link name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "rel",
                    "href",
                    "allow"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/links.yaml"
                }
              },
              "name": {
                "description": "Report name.",
                "minLength": 1,
                "type": "string"
              },
              "requestTime": {
                "description": "The time when the query executed.",
                "format": "date-time",
                "type": "string"
              },
              "rows": {
                "description": "The number of records for the current page.",
                "minimum": 0,
                "type": "integer"
              },
              "totalRows": {
                "description": "The total number of records returned for the query.",
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "name",
              "links",
              "rows",
              "totalRows"
            ],
            "type": "object"
          }
        },
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/async-report-data-response.yaml"
        }
      },
      "data": {
        "description": "Records returned for a given request.",
        "items": {
          "type": "object"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true,
        "x-akamai": {
          "file-path": "schemas/data.yaml"
        }
      },
      "dimension": {
        "additionalProperties": false,
        "description": "Represents a dimension.",
        "properties": {
          "authorizable": {
            "description": "Indicates whether the provided values for filtering by this dimension undergo additional authorization before processing.",
            "type": "boolean"
          },
          "description": {
            "description": "A description of the dimension.",
            "minLength": 1,
            "type": "string"
          },
          "eolDate": {
            "description": "The end of life date.",
            "format": "date-time",
            "type": "string"
          },
          "filterEnumValues": {
            "description": "Present only for dimensions with the `ENUM` filter type. This lists values you can use for filtering.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "filterType": {
            "description": "The type of filter, either `TEXT` or `ENUM`.",
            "enum": [
              "TEXT",
              "ENUM"
            ],
            "type": "string"
          },
          "filterable": {
            "description": "Indicates whether the dimension can function as a filter.",
            "type": "boolean"
          },
          "mandatory": {
            "description": "Indicates whether you have to use the dimension as a filter.",
            "type": "boolean"
          },
          "name": {
            "description": "The dimension name.",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "The dimension status.",
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "TIMESTAMP_SEC",
              "TIMESTAMP_MS",
              "DATE_ISO8601"
            ],
            "type": "string",
            "x-akamai": {
              "file-path": "schemas/type-enum.yaml"
            }
          }
        },
        "required": [
          "name",
          "type",
          "filterable",
          "filterType",
          "mandatory",
          "authorizable"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/dimension.yaml"
        }
      },
      "dimensionFilter": {
        "additionalProperties": false,
        "description": "Represents a filter for a dimension.",
        "properties": {
          "dimensionName": {
            "description": "The name of the dimension for which you want to filter.",
            "minLength": 1,
            "type": "string"
          },
          "expressions": {
            "description": "The filter values.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "operator": {
            "description": "The filtering logic, either `IN_LIST`, `MATCH_REGEXP`, `NOT_MATCH_REGEXP`, `BEGINS_WITH`, `NOT_BEGINS_WITH`, `ENDS_WITH`, `NOT_ENDS_WITH`, `CONTAINS`, `NOT_CONTAINS`, `EXACT`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).  ",
            "enum": [
              "IN_LIST",
              "MATCH_REGEXP",
              "NOT_MATCH_REGEXP",
              "BEGINS_WITH",
              "NOT_BEGINS_WITH",
              "ENDS_WITH",
              "NOT_ENDS_WITH",
              "CONTAINS",
              "NOT_CONTAINS",
              "EXACT"
            ],
            "type": "string"
          }
        },
        "required": [
          "dimensionName",
          "operator",
          "expressions"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/dimensionFilter.yaml"
        }
      },
      "error": {
        "additionalProperties": true,
        "description": "Represents error data.",
        "properties": {
          "detail": {
            "description": "Details of the error encountered.",
            "minLength": 1,
            "type": "string"
          },
          "errors": {
            "description": "Validation errors for the provided request.",
            "items": {
              "additionalProperties": true,
              "properties": {
                "detail": {
                  "description": "Details of the error.",
                  "minLength": 1,
                  "type": "string"
                },
                "problemId": {
                  "description": "ID assigned to this problem.",
                  "minLength": 1,
                  "type": "string"
                },
                "title": {
                  "description": "Short title identifying the error.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Identifies which part of the request the error corresponds to.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "type",
                "title",
                "detail"
              ],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          },
          "problemId": {
            "description": "ID assigned to this problem.",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "HTTP status code.",
            "maximum": 600,
            "minimum": 100,
            "type": "integer"
          },
          "title": {
            "description": "Short title identifying the error.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "title",
          "status"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/error.yaml"
        }
      },
      "links": {
        "description": "Links for the requested path.",
        "items": {
          "additionalProperties": false,
          "properties": {
            "allow": {
              "description": "Allowed HTTP methods for the URL shown in `href`.",
              "items": {
                "minLength": 1,
                "type": "string"
              },
              "minItems": 1,
              "type": "array",
              "uniqueItems": true
            },
            "describedBy": {
              "description": "Relative URL address of the resource schema.",
              "minLength": 1,
              "type": "string"
            },
            "href": {
              "description": "Relative URL address of the resource.",
              "minLength": 1,
              "type": "string"
            },
            "rel": {
              "description": "Relative link name.",
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "rel",
            "href",
            "allow"
          ],
          "type": "object"
        },
        "minItems": 1,
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/links.yaml"
        }
      },
      "metric": {
        "additionalProperties": false,
        "description": "Represents a metric.",
        "properties": {
          "description": {
            "description": "A description of the metric.",
            "minLength": 1,
            "type": "string"
          },
          "eolDate": {
            "description": "The end of life date.",
            "format": "date-time",
            "type": "string"
          },
          "filterable": {
            "description": "Indicates whether the metric can function as a filter.",
            "type": "boolean"
          },
          "mandatory": {
            "description": "Indicates whether you have to use the metric as a filter.",
            "type": "boolean"
          },
          "name": {
            "description": "The metric name.",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "The metric status.",
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "TIMESTAMP_SEC",
              "TIMESTAMP_MS",
              "DATE_ISO8601"
            ],
            "type": "string",
            "x-akamai": {
              "file-path": "schemas/type-enum.yaml"
            }
          }
        },
        "required": [
          "name",
          "type",
          "filterable",
          "mandatory"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metric.yaml"
        }
      },
      "metricFilter": {
        "additionalProperties": false,
        "description": "Represents a filter for a metric.",
        "properties": {
          "expression": {
            "description": "The filter value.",
            "minLength": 1,
            "type": "string"
          },
          "metricName": {
            "description": "The name of the metric for which you want to filter.",
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "description": "The filtering logic, either `EQUAL`, `NOT_EQUAL`, `LESS_THAN` or `GREATER_THAN`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).",
            "enum": [
              "EQUAL",
              "NOT_EQUAL",
              "LESS_THAN",
              "GREATER_THAN"
            ],
            "type": "string"
          }
        },
        "required": [
          "metricName",
          "operator",
          "expression"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/metricFilter.yaml"
        }
      },
      "report-data-request": {
        "additionalProperties": false,
        "description": "Specifies a report's data request.",
        "properties": {
          "dimensions": {
            "description": "Dimensions to include in the report.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "filters": {
            "description": "Filters to narrow down the report data. You can filter by metrics and dimensions. Support for specific filter types may vary by report type. See the report documentation under [Available reports](https://techdocs.akamai.com/reporting/reference/available-reports). ",
            "items": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "description": "Represents a filter for a metric.",
                  "properties": {
                    "expression": {
                      "description": "The filter value.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "metricName": {
                      "description": "The name of the metric for which you want to filter.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "operator": {
                      "description": "The filtering logic, either `EQUAL`, `NOT_EQUAL`, `LESS_THAN` or `GREATER_THAN`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).",
                      "enum": [
                        "EQUAL",
                        "NOT_EQUAL",
                        "LESS_THAN",
                        "GREATER_THAN"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "metricName",
                    "operator",
                    "expression"
                  ],
                  "title": "Metric filter",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/metricFilter.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Represents a filter for a dimension.",
                  "properties": {
                    "dimensionName": {
                      "description": "The name of the dimension for which you want to filter.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "expressions": {
                      "description": "The filter values.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "operator": {
                      "description": "The filtering logic, either `IN_LIST`, `MATCH_REGEXP`, `NOT_MATCH_REGEXP`, `BEGINS_WITH`, `NOT_BEGINS_WITH`, `ENDS_WITH`, `NOT_ENDS_WITH`, `CONTAINS`, `NOT_CONTAINS`, `EXACT`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).  ",
                      "enum": [
                        "IN_LIST",
                        "MATCH_REGEXP",
                        "NOT_MATCH_REGEXP",
                        "BEGINS_WITH",
                        "NOT_BEGINS_WITH",
                        "ENDS_WITH",
                        "NOT_ENDS_WITH",
                        "CONTAINS",
                        "NOT_CONTAINS",
                        "EXACT"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "dimensionName",
                    "operator",
                    "expressions"
                  ],
                  "title": "Dimension filter",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/dimensionFilter.yaml"
                  }
                }
              ]
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "limit": {
            "description": "Limits the number of records returned in the response. With the `async` flag set to `true`, it enables the pagination mode.",
            "minimum": 0,
            "type": "integer"
          },
          "metrics": {
            "description": "Metrics to include in the report.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "sortBys": {
            "description": "Specifies metrics or dimensions for sorting the report data.",
            "items": {
              "additionalProperties": false,
              "description": "Defines properties for sorting the data by several columns.",
              "properties": {
                "name": {
                  "description": "Name of the metric or dimension by which you want to sort.",
                  "minLength": 1,
                  "type": "string"
                },
                "sortOrder": {
                  "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
                  "enum": [
                    "ASCENDING",
                    "DESCENDING"
                  ],
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "name",
                "sortOrder"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/sortBy.yaml"
              }
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "metrics",
          "dimensions",
          "filters",
          "sortBys",
          "limit"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/report-data-request.yaml"
        }
      },
      "report-data-response": {
        "additionalProperties": false,
        "description": "Encapsulates the report's data response.",
        "properties": {
          "data": {
            "description": "Records returned for a given request.",
            "items": {
              "type": "object"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true,
            "x-akamai": {
              "file-path": "schemas/data.yaml"
            }
          },
          "metadata": {
            "additionalProperties": false,
            "description": "Contains information about the request and the response.",
            "properties": {
              "dimensions": {
                "description": "Dimensions to include in the report.",
                "items": {
                  "additionalProperties": false,
                  "description": "Represents a dimension.",
                  "properties": {
                    "authorizable": {
                      "description": "Indicates whether the provided values for filtering by this dimension undergo additional authorization before processing.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description of the dimension.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "eolDate": {
                      "description": "The end of life date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "filterEnumValues": {
                      "description": "Present only for dimensions with the `ENUM` filter type. This lists values you can use for filtering.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "filterType": {
                      "description": "The type of filter, either `TEXT` or `ENUM`.",
                      "enum": [
                        "TEXT",
                        "ENUM"
                      ],
                      "type": "string"
                    },
                    "filterable": {
                      "description": "Indicates whether the dimension can function as a filter.",
                      "type": "boolean"
                    },
                    "mandatory": {
                      "description": "Indicates whether you have to use the dimension as a filter.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The dimension name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The dimension status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                      "enum": [
                        "STRING",
                        "LONG",
                        "DOUBLE",
                        "TIMESTAMP_SEC",
                        "TIMESTAMP_MS",
                        "DATE_ISO8601"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/type-enum.yaml"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "filterable",
                    "filterType",
                    "mandatory",
                    "authorizable"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/dimension.yaml"
                  }
                },
                "minItems": 0,
                "type": "array"
              },
              "end": {
                "description": "End date used in the request.",
                "format": "date-time",
                "type": "string"
              },
              "filters": {
                "description": "Filters to narrow down the report data.",
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "description": "Represents a filter for a metric.",
                      "properties": {
                        "expression": {
                          "description": "The filter value.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "metricName": {
                          "description": "The name of the metric for which you want to filter.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "operator": {
                          "description": "The filtering logic, either `EQUAL`, `NOT_EQUAL`, `LESS_THAN` or `GREATER_THAN`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).",
                          "enum": [
                            "EQUAL",
                            "NOT_EQUAL",
                            "LESS_THAN",
                            "GREATER_THAN"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "metricName",
                        "operator",
                        "expression"
                      ],
                      "title": "Metric filter",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/metricFilter.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Represents a filter for a dimension.",
                      "properties": {
                        "dimensionName": {
                          "description": "The name of the dimension for which you want to filter.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "expressions": {
                          "description": "The filter values.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "operator": {
                          "description": "The filtering logic, either `IN_LIST`, `MATCH_REGEXP`, `NOT_MATCH_REGEXP`, `BEGINS_WITH`, `NOT_BEGINS_WITH`, `ENDS_WITH`, `NOT_ENDS_WITH`, `CONTAINS`, `NOT_CONTAINS`, `EXACT`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).  ",
                          "enum": [
                            "IN_LIST",
                            "MATCH_REGEXP",
                            "NOT_MATCH_REGEXP",
                            "BEGINS_WITH",
                            "NOT_BEGINS_WITH",
                            "ENDS_WITH",
                            "NOT_ENDS_WITH",
                            "CONTAINS",
                            "NOT_CONTAINS",
                            "EXACT"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "dimensionName",
                        "operator",
                        "expressions"
                      ],
                      "title": "Dimension filter",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/dimensionFilter.yaml"
                      }
                    }
                  ]
                },
                "minItems": 0,
                "type": "array",
                "uniqueItems": true
              },
              "hasMoreRows": {
                "description": "Indicates if there are more records meeting the criteria from the request than the list returned in the response, which is limited to the number set by the `limit` property.",
                "type": "boolean"
              },
              "limit": {
                "description": "Limits the number of records returned in the response.",
                "minimum": 1,
                "type": "integer"
              },
              "links": {
                "description": "Links for the requested path.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "allow": {
                      "description": "Allowed HTTP methods for the URL shown in `href`.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true
                    },
                    "describedBy": {
                      "description": "Relative URL address of the resource schema.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "href": {
                      "description": "Relative URL address of the resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rel": {
                      "description": "Relative link name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "rel",
                    "href",
                    "allow"
                  ],
                  "type": "object"
                },
                "minItems": 1,
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/links.yaml"
                }
              },
              "metrics": {
                "description": "Metrics to include in the report.",
                "items": {
                  "additionalProperties": false,
                  "description": "Represents a metric.",
                  "properties": {
                    "description": {
                      "description": "A description of the metric.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "eolDate": {
                      "description": "The end of life date.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "filterable": {
                      "description": "Indicates whether the metric can function as a filter.",
                      "type": "boolean"
                    },
                    "mandatory": {
                      "description": "Indicates whether you have to use the metric as a filter.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The metric name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The metric status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                      "enum": [
                        "STRING",
                        "LONG",
                        "DOUBLE",
                        "TIMESTAMP_SEC",
                        "TIMESTAMP_MS",
                        "DATE_ISO8601"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/type-enum.yaml"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "filterable",
                    "mandatory"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/metric.yaml"
                  }
                },
                "minItems": 0,
                "type": "array"
              },
              "name": {
                "description": "Report name.",
                "minLength": 1,
                "type": "string"
              },
              "sortBys": {
                "description": "Specifies metrics or dimensions for sorting the report data.",
                "items": {
                  "additionalProperties": false,
                  "description": "Defines properties for sorting the data by several columns.",
                  "properties": {
                    "name": {
                      "description": "Name of the metric or dimension by which you want to sort.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sortOrder": {
                      "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
                      "enum": [
                        "ASCENDING",
                        "DESCENDING"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "sortOrder"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/sortBy.yaml"
                  }
                },
                "minItems": 0,
                "type": "array",
                "uniqueItems": true
              },
              "start": {
                "description": "Start date used in the request.",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "name",
              "start",
              "end",
              "links",
              "hasMoreRows"
            ],
            "type": "object"
          }
        },
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/report-data-response.yaml"
        }
      },
      "report-list-response": {
        "additionalProperties": false,
        "description": "Represents a collection of available reports.",
        "properties": {
          "reports": {
            "description": "Available reports.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "reportLink": {
                  "description": "Relative URL path to the report options.",
                  "minLength": 1,
                  "type": "string"
                },
                "reportName": {
                  "description": "Report name.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
                  "enum": [
                    "PUBLISHED",
                    "DEPRECATED"
                  ],
                  "type": "string",
                  "x-akamai": {
                    "file-path": "schemas/status-enum.yaml"
                  }
                }
              },
              "required": [
                "reportName",
                "reportLink",
                "status"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "reports"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/report-list-response.yaml"
        }
      },
      "report-metadata-response": {
        "additionalProperties": false,
        "description": "Describes available options to generate the report.",
        "properties": {
          "defaults": {
            "additionalProperties": false,
            "description": "Specifies the default settings to apply when you don't provide properties in the request.",
            "properties": {
              "defaultDimensions": {
                "description": "The default dimensions.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "defaultMetrics": {
                "description": "The default metrics.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "defaultSortBys": {
                "description": "The default metrics and dimensions fo sorting the results.",
                "items": {
                  "additionalProperties": false,
                  "description": "Defines properties for sorting the data by several columns.",
                  "properties": {
                    "name": {
                      "description": "Name of the metric or dimension by which you want to sort.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sortOrder": {
                      "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
                      "enum": [
                        "ASCENDING",
                        "DESCENDING"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "sortOrder"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/sortBy.yaml"
                  }
                },
                "minItems": 0,
                "type": "array"
              },
              "defaultTimeRange": {
                "additionalProperties": false,
                "description": "The default time range.",
                "properties": {
                  "end": {
                    "description": "The ending point of the time range.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "start": {
                    "description": "The starting point of the time range.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "description": {
            "description": "A description of the report.",
            "minLength": 1,
            "type": "string"
          },
          "dimensions": {
            "description": "Supported dimensions.",
            "items": {
              "additionalProperties": false,
              "description": "Represents a dimension.",
              "properties": {
                "authorizable": {
                  "description": "Indicates whether the provided values for filtering by this dimension undergo additional authorization before processing.",
                  "type": "boolean"
                },
                "description": {
                  "description": "A description of the dimension.",
                  "minLength": 1,
                  "type": "string"
                },
                "eolDate": {
                  "description": "The end of life date.",
                  "format": "date-time",
                  "type": "string"
                },
                "filterEnumValues": {
                  "description": "Present only for dimensions with the `ENUM` filter type. This lists values you can use for filtering.",
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                },
                "filterType": {
                  "description": "The type of filter, either `TEXT` or `ENUM`.",
                  "enum": [
                    "TEXT",
                    "ENUM"
                  ],
                  "type": "string"
                },
                "filterable": {
                  "description": "Indicates whether the dimension can function as a filter.",
                  "type": "boolean"
                },
                "mandatory": {
                  "description": "Indicates whether you have to use the dimension as a filter.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The dimension name.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The dimension status.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                  "enum": [
                    "STRING",
                    "LONG",
                    "DOUBLE",
                    "TIMESTAMP_SEC",
                    "TIMESTAMP_MS",
                    "DATE_ISO8601"
                  ],
                  "type": "string",
                  "x-akamai": {
                    "file-path": "schemas/type-enum.yaml"
                  }
                }
              },
              "required": [
                "name",
                "type",
                "filterable",
                "filterType",
                "mandatory",
                "authorizable"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/dimension.yaml"
              }
            },
            "minItems": 0,
            "type": "array"
          },
          "limits": {
            "additionalProperties": false,
            "description": "Specifies limits used for validating the request.",
            "properties": {
              "dataPointsLimit": {
                "description": "Maximum number of data points in a report.",
                "minimum": 1,
                "type": "integer"
              },
              "inListFilterMaxValues": {
                "description": "Maximum number of expressions you can use in a filter.",
                "minimum": 1,
                "type": "integer"
              },
              "maxDateRangeInDays": {
                "description": "Maximum number of days from which you can get the data.",
                "minimum": 1,
                "type": "integer"
              },
              "maxDimensions": {
                "description": "Maximum number of dimensions you can use in a request.",
                "minimum": 1,
                "type": "integer"
              },
              "maxRetentionInDays": {
                "description": "The number of days for which the report's data is available.",
                "minimum": 1,
                "type": "integer"
              },
              "textFilterMaxLength": {
                "description": "Maximum length of expression you can use in a filter.",
                "minimum": 1,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "links": {
            "description": "Links for the requested path.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "allow": {
                  "description": "Allowed HTTP methods for the URL shown in `href`.",
                  "items": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                },
                "describedBy": {
                  "description": "Relative URL address of the resource schema.",
                  "minLength": 1,
                  "type": "string"
                },
                "href": {
                  "description": "Relative URL address of the resource.",
                  "minLength": 1,
                  "type": "string"
                },
                "rel": {
                  "description": "Relative link name.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "rel",
                "href",
                "allow"
              ],
              "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/links.yaml"
            }
          },
          "metrics": {
            "description": "Supported metrics.",
            "items": {
              "additionalProperties": false,
              "description": "Represents a metric.",
              "properties": {
                "description": {
                  "description": "A description of the metric.",
                  "minLength": 1,
                  "type": "string"
                },
                "eolDate": {
                  "description": "The end of life date.",
                  "format": "date-time",
                  "type": "string"
                },
                "filterable": {
                  "description": "Indicates whether the metric can function as a filter.",
                  "type": "boolean"
                },
                "mandatory": {
                  "description": "Indicates whether you have to use the metric as a filter.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The metric name.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The metric status.",
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                  "enum": [
                    "STRING",
                    "LONG",
                    "DOUBLE",
                    "TIMESTAMP_SEC",
                    "TIMESTAMP_MS",
                    "DATE_ISO8601"
                  ],
                  "type": "string",
                  "x-akamai": {
                    "file-path": "schemas/type-enum.yaml"
                  }
                }
              },
              "required": [
                "name",
                "type",
                "filterable",
                "mandatory"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/metric.yaml"
              }
            },
            "minItems": 0,
            "type": "array"
          },
          "name": {
            "description": "Report name.",
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
            "enum": [
              "PUBLISHED",
              "DEPRECATED"
            ],
            "type": "string",
            "x-akamai": {
              "file-path": "schemas/status-enum.yaml"
            }
          }
        },
        "required": [
          "name",
          "status",
          "metrics",
          "dimensions",
          "links"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/report-metadata-response.yaml"
        }
      },
      "sortBy": {
        "additionalProperties": false,
        "description": "Defines properties for sorting the data by several columns.",
        "properties": {
          "name": {
            "description": "Name of the metric or dimension by which you want to sort.",
            "minLength": 1,
            "type": "string"
          },
          "sortOrder": {
            "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "sortOrder"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/sortBy.yaml"
        }
      },
      "status-enum": {
        "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
        "enum": [
          "PUBLISHED",
          "DEPRECATED"
        ],
        "type": "string",
        "x-akamai": {
          "file-path": "schemas/status-enum.yaml"
        }
      },
      "type-enum": {
        "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
        "enum": [
          "STRING",
          "LONG",
          "DOUBLE",
          "TIMESTAMP_SEC",
          "TIMESTAMP_MS",
          "DATE_ISO8601"
        ],
        "type": "string",
        "x-akamai": {
          "file-path": "schemas/type-enum.yaml"
        }
      }
    }
  },
  "externalDocs": {
    "description": "See documentation for Akamai's Reporting API",
    "url": "https://techdocs.akamai.com/reporting/reference"
  },
  "info": {
    "description": "Generate custom reports to monitor and optimize your Akamai services.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Akamai: Reporting API",
    "version": "v2"
  },
  "openapi": "3.0.0",
  "paths": {
    "/reports": {
      "get": {
        "description": "Returns all available reports.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Reporting API",
          "url": "https://techdocs.akamai.com/reporting/reference/get-reports"
        },
        "operationId": "get-reports",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "reports": [
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea1/report1",
                      "reportName": "Report 1",
                      "status": "PUBLISHED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily2/reportingArea2/report2",
                      "reportName": "Report 2",
                      "status": "DEPRECATED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily2/reportingArea2/report3",
                      "reportName": "Report 3",
                      "status": "PUBLISHED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily2/reportingArea3/report4",
                      "reportName": "Report 4",
                      "status": "PUBLISHED"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Represents a collection of available reports.",
                  "properties": {
                    "reports": {
                      "description": "Available reports.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "reportLink": {
                            "description": "Relative URL path to the report options.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "reportName": {
                            "description": "Report name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
                            "enum": [
                              "PUBLISHED",
                              "DEPRECATED"
                            ],
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/status-enum.yaml"
                            }
                          }
                        },
                        "required": [
                          "reportName",
                          "reportLink",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "required": [
                    "reports"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/report-list-response.yaml"
                  }
                }
              }
            },
            "description": "The response shows all available reports."
          }
        },
        "summary": "List reports",
        "tags": [
          "Report list"
        ]
      }
    },
    "/reports/{productFamily}": {
      "get": {
        "description": "Returns all available reports for a product family.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Reporting API",
          "url": "https://techdocs.akamai.com/reporting/reference/get-reports-per-product-family"
        },
        "operationId": "get-reports-per-product-family",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "reports": [
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea1/report1",
                      "reportName": "Report 1",
                      "status": "PUBLISHED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea1/report2",
                      "reportName": "Report 2",
                      "status": "PUBLISHED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea2/report3",
                      "reportName": "Report 3",
                      "status": "PUBLISHED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea2/report4",
                      "reportName": "Report 4",
                      "status": "DEPRECATED"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Represents a collection of available reports.",
                  "properties": {
                    "reports": {
                      "description": "Available reports.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "reportLink": {
                            "description": "Relative URL path to the report options.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "reportName": {
                            "description": "Report name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
                            "enum": [
                              "PUBLISHED",
                              "DEPRECATED"
                            ],
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/status-enum.yaml"
                            }
                          }
                        },
                        "required": [
                          "reportName",
                          "reportLink",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "required": [
                    "reports"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/report-list-response.yaml"
                  }
                }
              }
            },
            "description": "The response shows available reports per product family."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Report definition '/delivery/traffic/incorrectReport' not found",
                  "problemId": "e1c2d7f5-9b3a-4a6e-8c9d-2f4b1e8c7a9d",
                  "status": 404,
                  "title": "Report not found",
                  "type": "/reporting-api/error-types/report-not-found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The requested resource doesn't exist."
          }
        },
        "summary": "List reports per product family",
        "tags": [
          "Report list"
        ]
      },
      "parameters": [
        {
          "description": "The area of products.",
          "example": "{{productFamily}}",
          "in": "path",
          "name": "productFamily",
          "required": true,
          "schema": {
            "example": "delivery",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/productFamily-path.yaml"
          }
        }
      ]
    },
    "/reports/{productFamily}/{reportingArea}": {
      "get": {
        "description": "Returns all available reports for a product family and reporting area.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Reporting API",
          "url": "https://techdocs.akamai.com/reporting/reference/get-reports-per-reporting-area"
        },
        "operationId": "get-reports-per-reporting-area",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "reports": [
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea1/report1",
                      "reportName": "Report 1",
                      "status": "PUBLISHED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea1/report2",
                      "reportName": "Report 2",
                      "status": "DEPRECATED"
                    },
                    {
                      "reportLink": "/reporting-api/v2/reports/productFamily1/reportingArea1/report3",
                      "reportName": "Report 3",
                      "status": "PUBLISHED"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Represents a collection of available reports.",
                  "properties": {
                    "reports": {
                      "description": "Available reports.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "reportLink": {
                            "description": "Relative URL path to the report options.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "reportName": {
                            "description": "Report name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
                            "enum": [
                              "PUBLISHED",
                              "DEPRECATED"
                            ],
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/status-enum.yaml"
                            }
                          }
                        },
                        "required": [
                          "reportName",
                          "reportLink",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true
                    }
                  },
                  "required": [
                    "reports"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/report-list-response.yaml"
                  }
                }
              }
            },
            "description": "The response shows available reports per product family and reporting area."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Report definition '/delivery/traffic/incorrectReport' not found",
                  "problemId": "e1c2d7f5-9b3a-4a6e-8c9d-2f4b1e8c7a9d",
                  "status": 404,
                  "title": "Report not found",
                  "type": "/reporting-api/error-types/report-not-found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The requested resource doesn't exist."
          }
        },
        "summary": "List reports per reporting area",
        "tags": [
          "Report list"
        ]
      },
      "parameters": [
        {
          "description": "The area of products.",
          "example": "{{productFamily}}",
          "in": "path",
          "name": "productFamily",
          "required": true,
          "schema": {
            "example": "delivery",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/productFamily-path.yaml"
          }
        },
        {
          "description": "The grouping of reports related to the same area.",
          "example": "{{reportingArea}}",
          "in": "path",
          "name": "reportingArea",
          "required": true,
          "schema": {
            "example": "traffic",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/reportingArea-path.yaml"
          }
        }
      ]
    },
    "/reports/{productFamily}/{reportingArea}/{report}": {
      "get": {
        "description": "Returns available options to generate the report.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Reporting API",
          "url": "https://techdocs.akamai.com/reporting/reference/get-report-options"
        },
        "operationId": "get-report-options",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "defaults": {
                    "defaultDimensions": [
                      "hostname",
                      "responseCode"
                    ],
                    "defaultMetrics": [
                      "edgeHitsSum",
                      "edgeBytesSum"
                    ],
                    "defaultSortBys": [
                      {
                        "name": "hostname",
                        "sortOrder": "ASCENDING"
                      },
                      {
                        "name": "edgeHitsSum",
                        "sortOrder": "DESCENDING"
                      }
                    ],
                    "defaultTimeRange": {
                      "end": "now - 9min 1sec",
                      "start": "now - 19min"
                    }
                  },
                  "dimensions": [
                    {
                      "authorizable": false,
                      "filterType": "TEXT",
                      "filterable": false,
                      "mandatory": false,
                      "name": "time5minutes",
                      "type": "TIMESTAMP_SEC"
                    },
                    {
                      "authorizable": false,
                      "filterType": "TEXT",
                      "filterable": false,
                      "mandatory": false,
                      "name": "time1hour",
                      "type": "TIMESTAMP_SEC"
                    },
                    {
                      "authorizable": false,
                      "filterType": "TEXT",
                      "filterable": false,
                      "mandatory": false,
                      "name": "time1day",
                      "type": "TIMESTAMP_SEC"
                    },
                    {
                      "authorizable": true,
                      "filterType": "TEXT",
                      "filterable": true,
                      "mandatory": false,
                      "name": "cpcode",
                      "type": "LONG"
                    },
                    {
                      "authorizable": false,
                      "filterType": "TEXT",
                      "filterable": true,
                      "mandatory": false,
                      "name": "hostname",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterType": "TEXT",
                      "filterable": true,
                      "mandatory": false,
                      "name": "responseCode",
                      "type": "LONG"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "0xx",
                        "1xx",
                        "2xx",
                        "3xx",
                        "4xx",
                        "5xx",
                        "6xx"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "responseClass",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "error",
                        "success"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "responseStatus",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "get_head",
                        "put_post"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "httpMethod",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "non_secure",
                        "secure"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "deliveryType",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "cacheable",
                        "non_cacheable"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "cacheability",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "ipv4",
                        "ipv6"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "ipVersion",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterEnumValues": [
                        "http1.1",
                        "https1.1",
                        "http2",
                        "http3"
                      ],
                      "filterType": "ENUM",
                      "filterable": true,
                      "mandatory": false,
                      "name": "httpProtocol",
                      "type": "STRING"
                    },
                    {
                      "authorizable": false,
                      "filterType": "TEXT",
                      "filterable": true,
                      "mandatory": false,
                      "name": "arlId",
                      "type": "LONG"
                    }
                  ],
                  "limits": {
                    "dataPointsLimit": 50000,
                    "maxDateRangeInDays": 92,
                    "maxDimensions": 4,
                    "maxRetentionInDays": 92,
                    "textFilterMaxLength": 100
                  },
                  "links": [
                    {
                      "allow": [
                        "GET"
                      ],
                      "describedBy": "/reporting-api/v2/reports/schema",
                      "href": "/reporting-api/v2/reports/delivery/traffic/current",
                      "rel": "self"
                    },
                    {
                      "allow": [
                        "POST"
                      ],
                      "href": "/reporting-api/v2/reports/delivery/traffic/current/data",
                      "rel": "data"
                    }
                  ],
                  "metrics": [
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "edgeBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "edgeHitsSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "edgeResponseBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "edgeRequestBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "originBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "originHitsSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "originResponseBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "originRequestBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "midgressBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "midgressHitsSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "midgressResponseBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "midgressRequestBytesSum",
                      "type": "LONG"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "offloadedHitsPercentage",
                      "type": "DOUBLE"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "offloadedBytesPercentage",
                      "type": "DOUBLE"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "offloadedRequestBytesPercentage",
                      "type": "DOUBLE"
                    },
                    {
                      "filterable": true,
                      "mandatory": false,
                      "name": "offloadedResponseBytesPercentage",
                      "type": "DOUBLE"
                    }
                  ],
                  "name": "CDN traffic report data",
                  "status": "PUBLISHED"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Describes available options to generate the report.",
                  "properties": {
                    "defaults": {
                      "additionalProperties": false,
                      "description": "Specifies the default settings to apply when you don't provide properties in the request.",
                      "properties": {
                        "defaultDimensions": {
                          "description": "The default dimensions.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "defaultMetrics": {
                          "description": "The default metrics.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "defaultSortBys": {
                          "description": "The default metrics and dimensions fo sorting the results.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Defines properties for sorting the data by several columns.",
                            "properties": {
                              "name": {
                                "description": "Name of the metric or dimension by which you want to sort.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sortOrder": {
                                "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
                                "enum": [
                                  "ASCENDING",
                                  "DESCENDING"
                                ],
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "sortOrder"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/sortBy.yaml"
                            }
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "defaultTimeRange": {
                          "additionalProperties": false,
                          "description": "The default time range.",
                          "properties": {
                            "end": {
                              "description": "The ending point of the time range.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "description": "The starting point of the time range.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "description": {
                      "description": "A description of the report.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dimensions": {
                      "description": "Supported dimensions.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents a dimension.",
                        "properties": {
                          "authorizable": {
                            "description": "Indicates whether the provided values for filtering by this dimension undergo additional authorization before processing.",
                            "type": "boolean"
                          },
                          "description": {
                            "description": "A description of the dimension.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "eolDate": {
                            "description": "The end of life date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "filterEnumValues": {
                            "description": "Present only for dimensions with the `ENUM` filter type. This lists values you can use for filtering.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "filterType": {
                            "description": "The type of filter, either `TEXT` or `ENUM`.",
                            "enum": [
                              "TEXT",
                              "ENUM"
                            ],
                            "type": "string"
                          },
                          "filterable": {
                            "description": "Indicates whether the dimension can function as a filter.",
                            "type": "boolean"
                          },
                          "mandatory": {
                            "description": "Indicates whether you have to use the dimension as a filter.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The dimension name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The dimension status.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                            "enum": [
                              "STRING",
                              "LONG",
                              "DOUBLE",
                              "TIMESTAMP_SEC",
                              "TIMESTAMP_MS",
                              "DATE_ISO8601"
                            ],
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/type-enum.yaml"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "filterable",
                          "filterType",
                          "mandatory",
                          "authorizable"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/dimension.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "limits": {
                      "additionalProperties": false,
                      "description": "Specifies limits used for validating the request.",
                      "properties": {
                        "dataPointsLimit": {
                          "description": "Maximum number of data points in a report.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "inListFilterMaxValues": {
                          "description": "Maximum number of expressions you can use in a filter.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "maxDateRangeInDays": {
                          "description": "Maximum number of days from which you can get the data.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "maxDimensions": {
                          "description": "Maximum number of dimensions you can use in a request.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "maxRetentionInDays": {
                          "description": "The number of days for which the report's data is available.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "textFilterMaxLength": {
                          "description": "Maximum length of expression you can use in a filter.",
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "links": {
                      "description": "Links for the requested path.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "allow": {
                            "description": "Allowed HTTP methods for the URL shown in `href`.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true
                          },
                          "describedBy": {
                            "description": "Relative URL address of the resource schema.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "href": {
                            "description": "Relative URL address of the resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "rel": {
                            "description": "Relative link name.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "rel",
                          "href",
                          "allow"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "metrics": {
                      "description": "Supported metrics.",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents a metric.",
                        "properties": {
                          "description": {
                            "description": "A description of the metric.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "eolDate": {
                            "description": "The end of life date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "filterable": {
                            "description": "Indicates whether the metric can function as a filter.",
                            "type": "boolean"
                          },
                          "mandatory": {
                            "description": "Indicates whether you have to use the metric as a filter.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The metric name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The metric status.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                            "enum": [
                              "STRING",
                              "LONG",
                              "DOUBLE",
                              "TIMESTAMP_SEC",
                              "TIMESTAMP_MS",
                              "DATE_ISO8601"
                            ],
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/type-enum.yaml"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "filterable",
                          "mandatory"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/metric.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "name": {
                      "description": "Report name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "Report status, either `PUBLISHED` or `DEPRECATED`.",
                      "enum": [
                        "PUBLISHED",
                        "DEPRECATED"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/status-enum.yaml"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "status",
                    "metrics",
                    "dimensions",
                    "links"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/report-metadata-response.yaml"
                  }
                }
              }
            },
            "description": "The response shows available options to generate the report."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Missing access scope: 'REPORTING_REPORTS_EXECUTOR_CORE_READ'",
                  "problemId": "b8a94c7e-6d2f-4f4c-a8cb-0e5d2f68f29e",
                  "status": 403,
                  "title": "Unauthorized",
                  "type": "/reporting-api/error-types/unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "You are unauthorized to make calls to the requested report."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Report definition '/delivery/traffic/incorrectReport' not found",
                  "problemId": "e1c2d7f5-9b3a-4a6e-8c9d-2f4b1e8c7a9d",
                  "status": 404,
                  "title": "Report not found",
                  "type": "/reporting-api/error-types/report-not-found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The requested resource doesn't exist."
          }
        },
        "summary": "Get report options",
        "tags": [
          "Report metadata"
        ]
      },
      "parameters": [
        {
          "description": "The area of products.",
          "example": "{{productFamily}}",
          "in": "path",
          "name": "productFamily",
          "required": true,
          "schema": {
            "example": "delivery",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/productFamily-path.yaml"
          }
        },
        {
          "description": "The grouping of reports related to the same area.",
          "example": "{{reportingArea}}",
          "in": "path",
          "name": "reportingArea",
          "required": true,
          "schema": {
            "example": "traffic",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/reportingArea-path.yaml"
          }
        },
        {
          "description": "An individual report name.",
          "example": "{{report}}",
          "in": "path",
          "name": "report",
          "required": true,
          "schema": {
            "example": "current",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/report-path.yaml"
          }
        }
      ]
    },
    "/reports/{productFamily}/{reportingArea}/{report}/data": {
      "post": {
        "description": "Produces a report in either JSON or CSV format.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Reporting API",
          "url": "https://techdocs.akamai.com/reporting/reference/post-report-data"
        },
        "operationId": "post-report-data",
        "parameters": [
          {
            "description": "Start date in ISO 8601 format. Use this parameter together with `end`, or else replace both with a fixed `timeRange`.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "schema": {
              "example": "2024-06-02T00:00:00Z",
              "format": "date-time",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End date in ISO 8601 format. Use this parameter together with `start`, or else replace both with a fixed `timeRange`.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "schema": {
              "example": "2024-06-02T00:00:00Z",
              "format": "date-time",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "__Enum__ Predefined time range, either `LAST_15_MINUTES`, `LAST_30_MINUTES`, `LAST_1_HOUR`, `LAST_3_HOURS`, `LAST_6_HOURS`, `LAST_12_HOURS`, `LAST_1_DAY`, `LAST_2_DAYS`, `LAST_1_WEEK`, `LAST_30_DAYS`, or `LAST_90_DAYS`. Use this as an alternative to a more flexible `start` and `end` time range. Support for specific time range values may vary by report type. See the report documentation under [Available reports](https://techdocs.akamai.com/reporting/reference/available-reports).",
            "example": "{{timeRange}}",
            "in": "query",
            "name": "timeRange",
            "schema": {
              "enum": [
                "LAST_15_MINUTES",
                "LAST_30_MINUTES",
                "LAST_1_HOUR",
                "LAST_3_HOURS",
                "LAST_6_HOURS",
                "LAST_12_HOURS",
                "LAST_1_DAY",
                "LAST_2_DAYS",
                "LAST_1_WEEK",
                "LAST_30_DAYS",
                "LAST_90_DAYS"
              ],
              "example": "LAST_1_HOUR",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/timeRange-query.yaml"
            }
          },
          {
            "description": "Enables the asynchronous flow to get the data. By default, `false`.",
            "example": "{{async}}",
            "in": "query",
            "name": "async",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/async-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "dimensions": [
                  "hostname",
                  "responseCode",
                  "time5minutes"
                ],
                "filters": [
                  {
                    "expression": "50",
                    "metricName": "edgeBytesSum",
                    "operator": "GREATER_THAN"
                  },
                  {
                    "dimensionName": "hostname",
                    "expressions": [
                      "example.com",
                      "custom.com",
                      "origin.com"
                    ],
                    "operator": "IN_LIST"
                  }
                ],
                "limit": 1000,
                "metrics": [
                  "edgeBytesSum",
                  "edgeHitsSum"
                ],
                "sortBys": [
                  {
                    "name": "hostname",
                    "sortOrder": "ASCENDING"
                  },
                  {
                    "name": "edgeHitsSum",
                    "sortOrder": "DESCENDING"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies a report's data request.",
                "properties": {
                  "dimensions": {
                    "description": "Dimensions to include in the report.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": true
                  },
                  "filters": {
                    "description": "Filters to narrow down the report data. You can filter by metrics and dimensions. Support for specific filter types may vary by report type. See the report documentation under [Available reports](https://techdocs.akamai.com/reporting/reference/available-reports). ",
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "description": "Represents a filter for a metric.",
                          "properties": {
                            "expression": {
                              "description": "The filter value.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "metricName": {
                              "description": "The name of the metric for which you want to filter.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "operator": {
                              "description": "The filtering logic, either `EQUAL`, `NOT_EQUAL`, `LESS_THAN` or `GREATER_THAN`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).",
                              "enum": [
                                "EQUAL",
                                "NOT_EQUAL",
                                "LESS_THAN",
                                "GREATER_THAN"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "metricName",
                            "operator",
                            "expression"
                          ],
                          "title": "Metric filter",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/metricFilter.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Represents a filter for a dimension.",
                          "properties": {
                            "dimensionName": {
                              "description": "The name of the dimension for which you want to filter.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "expressions": {
                              "description": "The filter values.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array",
                              "uniqueItems": true
                            },
                            "operator": {
                              "description": "The filtering logic, either `IN_LIST`, `MATCH_REGEXP`, `NOT_MATCH_REGEXP`, `BEGINS_WITH`, `NOT_BEGINS_WITH`, `ENDS_WITH`, `NOT_ENDS_WITH`, `CONTAINS`, `NOT_CONTAINS`, `EXACT`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).  ",
                              "enum": [
                                "IN_LIST",
                                "MATCH_REGEXP",
                                "NOT_MATCH_REGEXP",
                                "BEGINS_WITH",
                                "NOT_BEGINS_WITH",
                                "ENDS_WITH",
                                "NOT_ENDS_WITH",
                                "CONTAINS",
                                "NOT_CONTAINS",
                                "EXACT"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "dimensionName",
                            "operator",
                            "expressions"
                          ],
                          "title": "Dimension filter",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/dimensionFilter.yaml"
                          }
                        }
                      ]
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": true
                  },
                  "limit": {
                    "description": "Limits the number of records returned in the response. With the `async` flag set to `true`, it enables the pagination mode.",
                    "example": "{{limit}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "metrics": {
                    "description": "Metrics to include in the report.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": true
                  },
                  "sortBys": {
                    "description": "Specifies metrics or dimensions for sorting the report data.",
                    "items": {
                      "additionalProperties": false,
                      "description": "Defines properties for sorting the data by several columns.",
                      "properties": {
                        "name": {
                          "description": "Name of the metric or dimension by which you want to sort.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sortOrder": {
                          "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
                          "enum": [
                            "ASCENDING",
                            "DESCENDING"
                          ],
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "sortOrder"
                      ],
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/sortBy.yaml"
                      }
                    },
                    "minItems": 0,
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "required": [
                  "metrics",
                  "dimensions",
                  "filters",
                  "sortBys",
                  "limit"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/report-data-request.yaml"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "edgeBytesSum": 1322,
                      "edgeHitsSum": 10,
                      "hostname": "example.com",
                      "responseCode": 404
                    },
                    {
                      "edgeBytesSum": 321,
                      "edgeHitsSum": 1,
                      "hostname": "origin.com",
                      "responseCode": 404
                    },
                    {
                      "edgeBytesSum": 4331,
                      "edgeHitsSum": 122,
                      "hostname": "custom.com",
                      "responseCode": 200
                    }
                  ],
                  "metadata": {
                    "dimensions": [
                      {
                        "authorizable": false,
                        "filterType": "TEXT",
                        "filterable": true,
                        "mandatory": false,
                        "name": "hostname",
                        "type": "STRING"
                      },
                      {
                        "authorizable": false,
                        "filterType": "TEXT",
                        "filterable": true,
                        "mandatory": false,
                        "name": "responseCode",
                        "type": "LONG"
                      }
                    ],
                    "end": "2024-03-27T13:18:04.137674827Z",
                    "filters": [
                      {
                        "dimensionName": "cpcode",
                        "expressions": [
                          "1242",
                          "7802",
                          "7983"
                        ],
                        "operator": "IN_LIST"
                      }
                    ],
                    "hasMoreRows": false,
                    "limit": 1000,
                    "links": [
                      {
                        "allow": [
                          "POST"
                        ],
                        "href": "/reporting-api/v2/reports/delivery/traffic/current/data",
                        "rel": "self"
                      }
                    ],
                    "metrics": [
                      {
                        "filterable": true,
                        "mandatory": false,
                        "name": "edgeHitsSum",
                        "type": "LONG"
                      },
                      {
                        "filterable": true,
                        "mandatory": false,
                        "name": "edgeBytesSum",
                        "type": "LONG"
                      }
                    ],
                    "name": "CDN traffic report data",
                    "sortBys": [
                      {
                        "name": "hostname",
                        "sortOrder": "ASCENDING"
                      },
                      {
                        "name": "edgeHitsSum",
                        "sortOrder": "DESCENDING"
                      }
                    ],
                    "start": "2024-03-27T13:08:05.137674827Z"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the report's data response.",
                  "properties": {
                    "data": {
                      "description": "Records returned for a given request.",
                      "items": {
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true,
                      "x-akamai": {
                        "file-path": "schemas/data.yaml"
                      }
                    },
                    "metadata": {
                      "additionalProperties": false,
                      "description": "Contains information about the request and the response.",
                      "properties": {
                        "dimensions": {
                          "description": "Dimensions to include in the report.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Represents a dimension.",
                            "properties": {
                              "authorizable": {
                                "description": "Indicates whether the provided values for filtering by this dimension undergo additional authorization before processing.",
                                "type": "boolean"
                              },
                              "description": {
                                "description": "A description of the dimension.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "eolDate": {
                                "description": "The end of life date.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "filterEnumValues": {
                                "description": "Present only for dimensions with the `ENUM` filter type. This lists values you can use for filtering.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true
                              },
                              "filterType": {
                                "description": "The type of filter, either `TEXT` or `ENUM`.",
                                "enum": [
                                  "TEXT",
                                  "ENUM"
                                ],
                                "type": "string"
                              },
                              "filterable": {
                                "description": "Indicates whether the dimension can function as a filter.",
                                "type": "boolean"
                              },
                              "mandatory": {
                                "description": "Indicates whether you have to use the dimension as a filter.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The dimension name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "status": {
                                "description": "The dimension status.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                                "enum": [
                                  "STRING",
                                  "LONG",
                                  "DOUBLE",
                                  "TIMESTAMP_SEC",
                                  "TIMESTAMP_MS",
                                  "DATE_ISO8601"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/type-enum.yaml"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "filterable",
                              "filterType",
                              "mandatory",
                              "authorizable"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/dimension.yaml"
                            }
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "end": {
                          "description": "End date used in the request.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "filters": {
                          "description": "Filters to narrow down the report data.",
                          "items": {
                            "anyOf": [
                              {
                                "additionalProperties": false,
                                "description": "Represents a filter for a metric.",
                                "properties": {
                                  "expression": {
                                    "description": "The filter value.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "metricName": {
                                    "description": "The name of the metric for which you want to filter.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "The filtering logic, either `EQUAL`, `NOT_EQUAL`, `LESS_THAN` or `GREATER_THAN`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).",
                                    "enum": [
                                      "EQUAL",
                                      "NOT_EQUAL",
                                      "LESS_THAN",
                                      "GREATER_THAN"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "metricName",
                                  "operator",
                                  "expression"
                                ],
                                "title": "Metric filter",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/metricFilter.yaml"
                                }
                              },
                              {
                                "additionalProperties": false,
                                "description": "Represents a filter for a dimension.",
                                "properties": {
                                  "dimensionName": {
                                    "description": "The name of the dimension for which you want to filter.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "expressions": {
                                    "description": "The filter values.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                  },
                                  "operator": {
                                    "description": "The filtering logic, either `IN_LIST`, `MATCH_REGEXP`, `NOT_MATCH_REGEXP`, `BEGINS_WITH`, `NOT_BEGINS_WITH`, `ENDS_WITH`, `NOT_ENDS_WITH`, `CONTAINS`, `NOT_CONTAINS`, `EXACT`. Read more about the [filter operators](https://techdocs.akamai.com/reporting/reference/use-filters).  ",
                                    "enum": [
                                      "IN_LIST",
                                      "MATCH_REGEXP",
                                      "NOT_MATCH_REGEXP",
                                      "BEGINS_WITH",
                                      "NOT_BEGINS_WITH",
                                      "ENDS_WITH",
                                      "NOT_ENDS_WITH",
                                      "CONTAINS",
                                      "NOT_CONTAINS",
                                      "EXACT"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "dimensionName",
                                  "operator",
                                  "expressions"
                                ],
                                "title": "Dimension filter",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/dimensionFilter.yaml"
                                }
                              }
                            ]
                          },
                          "minItems": 0,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "hasMoreRows": {
                          "description": "Indicates if there are more records meeting the criteria from the request than the list returned in the response, which is limited to the number set by the `limit` property.",
                          "type": "boolean"
                        },
                        "limit": {
                          "description": "Limits the number of records returned in the response.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "links": {
                          "description": "Links for the requested path.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "allow": {
                                "description": "Allowed HTTP methods for the URL shown in `href`.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true
                              },
                              "describedBy": {
                                "description": "Relative URL address of the resource schema.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "Relative URL address of the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rel": {
                                "description": "Relative link name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "rel",
                              "href",
                              "allow"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array",
                          "x-akamai": {
                            "file-path": "schemas/links.yaml"
                          }
                        },
                        "metrics": {
                          "description": "Metrics to include in the report.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Represents a metric.",
                            "properties": {
                              "description": {
                                "description": "A description of the metric.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "eolDate": {
                                "description": "The end of life date.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "filterable": {
                                "description": "Indicates whether the metric can function as a filter.",
                                "type": "boolean"
                              },
                              "mandatory": {
                                "description": "Indicates whether you have to use the metric as a filter.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The metric name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "status": {
                                "description": "The metric status.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of values, either `STRING`, `LONG`, `DOUBLE`, `TIMESTAMP_SEC`, `TIMESTAMP_MS`, or `DATE_ISO8601`.",
                                "enum": [
                                  "STRING",
                                  "LONG",
                                  "DOUBLE",
                                  "TIMESTAMP_SEC",
                                  "TIMESTAMP_MS",
                                  "DATE_ISO8601"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/type-enum.yaml"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "filterable",
                              "mandatory"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/metric.yaml"
                            }
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "name": {
                          "description": "Report name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sortBys": {
                          "description": "Specifies metrics or dimensions for sorting the report data.",
                          "items": {
                            "additionalProperties": false,
                            "description": "Defines properties for sorting the data by several columns.",
                            "properties": {
                              "name": {
                                "description": "Name of the metric or dimension by which you want to sort.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sortOrder": {
                                "description": "Sorting order, either `ASCENDING` or `DESCENDING`.",
                                "enum": [
                                  "ASCENDING",
                                  "DESCENDING"
                                ],
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "sortOrder"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/sortBy.yaml"
                            }
                          },
                          "minItems": 0,
                          "type": "array",
                          "uniqueItems": true
                        },
                        "start": {
                          "description": "Start date used in the request.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "start",
                        "end",
                        "links",
                        "hasMoreRows"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/report-data-response.yaml"
                  }
                }
              },
              "text/csv": {
                "example": "\"#METADATA_START\\ngroupBy,hostname,responseCode\\nstart,2024-03-27T13:09:48.218780097Z\\nend,2024-03-27T13:19:47.218780097Z\\nrowCount,3\\ncpcode,1242,7802,7983,9764,10837\\n#METADATA_END\\n\\n#COLUMN_START\\nhostname,responseCode,edgeHitsSum,edgeBytesSum\\n#COLUMN_END\\n\\n#DATA_START\\nexample.com,404,10,1322\\norigin.com,404,1,321\\ncustom.com,200,122,4331\\n#DATA_END\"",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The request is processed. The response body contains the requested data."
          },
          "302": {
            "content": {},
            "description": "The data isn't available. The response contains the `Retry-After` header.",
            "headers": {
              "Retry-After": {
                "description": "The recommended wait time in seconds before calling the endpoint again.",
                "schema": {
                  "example": 300,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/Retry-After.yaml"
                }
              }
            }
          },
          "303": {
            "content": {},
            "description": "The request isn't processed. The response contains the `Location` header with the redirect link.",
            "headers": {
              "Location": {
                "description": "Specifies the relative URL that you can use in a GET data request.",
                "schema": {
                  "example": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34F8J+bfK.buOpx8.W6zxjHs30d8W9zqYTM0TvF7qegG9QfCC0ltsF4QwdnCRzfaWlirMK1sdge7gIYCsgvv5ldrtlu.9kq8VL35mrBbXEltisr6xnuumhqq7X7CaqjDo5Aicev3Xd4wTOI1WvdBVSJMSveeQov58zLplvh8GYZ4MgAgmO41eb6dsYieutcoq7aEsWVGrFSX2sz3D8hQK1k7DtFCs+XN9H.2wslub3bADAHGrSI",
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/problem+json": {
                "example": {
                  "errors": [
                    {
                      "detail": "Incorrect metric name: 'incorrectMetric'",
                      "problemId": "c3f7a9d1-482e-4c3f-ba7a-5c2f8e36a2d9",
                      "title": "Validation error",
                      "type": "metrics"
                    }
                  ],
                  "problemId": "7d6e8b4f-3a21-4b6c-9e58-1fc63b1a4a72",
                  "status": 400,
                  "title": "Invalid request",
                  "type": "/reporting-api/error-types/invalid-request"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The reporting data request is incorrect."
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Missing access scope: 'REPORTING_REPORTS_EXECUTOR_CORE_READ'",
                  "problemId": "b8a94c7e-6d2f-4f4c-a8cb-0e5d2f68f29e",
                  "status": 403,
                  "title": "Unauthorized",
                  "type": "/reporting-api/error-types/unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "You are unauthorized to make calls to the requested report."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Report definition '/delivery/traffic/incorrectReport' not found",
                  "problemId": "e1c2d7f5-9b3a-4a6e-8c9d-2f4b1e8c7a9d",
                  "status": 404,
                  "title": "Report not found",
                  "type": "/reporting-api/error-types/report-not-found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The requested resource doesn't exist."
          },
          "422": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Exceeded limit of maximum query cost",
                  "problemId": "e7dc1d22-9136-487d-9808-9e1e8sb3b67c",
                  "status": 422,
                  "title": "Query cost exceeded",
                  "type": "/reporting-api/error-types/query-cost-exceeded"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The request cannot be processed, since its cost exceeds the maximum request cost limit."
          },
          "429": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "You reached the limit for request count of 20. Once your current requests are processed, the allowed request count will refill at the rate of 20 per 1 minute(s).",
                  "problemId": "4e3d2b1a-f9c8-4b7a-a6d5-e2f1c0b9a8d7",
                  "rateLimit": "20",
                  "rateLimitNextRequest": "Fri, 29 Mar 2024 13:40:00 Z",
                  "rateLimitRefill": "20",
                  "rateLimitRemaining": "0",
                  "status": 429,
                  "title": "Rate Limit Exceeded",
                  "type": "/reporting-api/error-types/rate-limit-exceeded"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "Hit or cost based limits exceeded."
          }
        },
        "summary": "Generate a report",
        "tags": [
          "Report data"
        ]
      },
      "parameters": [
        {
          "description": "The area of products.",
          "example": "{{productFamily}}",
          "in": "path",
          "name": "productFamily",
          "required": true,
          "schema": {
            "example": "delivery",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/productFamily-path.yaml"
          }
        },
        {
          "description": "The grouping of reports related to the same area.",
          "example": "{{reportingArea}}",
          "in": "path",
          "name": "reportingArea",
          "required": true,
          "schema": {
            "example": "traffic",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/reportingArea-path.yaml"
          }
        },
        {
          "description": "An individual report name.",
          "example": "{{report}}",
          "in": "path",
          "name": "report",
          "required": true,
          "schema": {
            "example": "current",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/report-path.yaml"
          }
        }
      ]
    },
    "/reports/{productFamily}/{reportingArea}/{report}/queries/{queryId}": {
      "get": {
        "description": "Produces a report for an asynchronous request in either JSON or CSV format.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Reporting API",
          "url": "https://techdocs.akamai.com/reporting/reference/get-report-data-async"
        },
        "operationId": "get-report-data-async",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "edgeBytesSum": 1322,
                      "edgeHitsSum": 10,
                      "hostname": "example.com",
                      "responseCode": 404
                    },
                    {
                      "edgeBytesSum": 321,
                      "edgeHitsSum": 1,
                      "hostname": "origin.com",
                      "responseCode": 404
                    },
                    {
                      "edgeBytesSum": 4331,
                      "edgeHitsSum": 122,
                      "hostname": "custom.com",
                      "responseCode": 200
                    }
                  ],
                  "metadata": {
                    "evictionTime": "2024-04-03T13:40:58Z",
                    "links": [
                      {
                        "allow": [
                          "GET"
                        ],
                        "href": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu",
                        "rel": "first"
                      },
                      {
                        "allow": [
                          "GET"
                        ],
                        "href": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu",
                        "rel": "self"
                      },
                      {
                        "allow": [
                          "GET"
                        ],
                        "href": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfG++AQaipJ5zBKgT83AhMgEuUKZvnyG9nLz2eqMUAEVD7.lrvyrvOtUwIy9kCBd4Uw8sJKf+qhYKz3BxEZ8pNl9yqtfGreMCWmIOA3n5fKcxRP07cNb7iO5nC98cygroJk+2If7YG8MjWZ4jOMjPLsOUhIB4xeSjvkvTaNDGKhoXoO+K3BYFqSNrPxX37vbI7tFA6av4tWBoXwn4EGTa0GzenqGlx5m4FDcIxi2t2IOU",
                        "rel": "next"
                      },
                      {
                        "allow": [
                          "GET"
                        ],
                        "href": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu",
                        "rel": "last"
                      }
                    ],
                    "name": "CDN traffic report data",
                    "requestTime": "2024-03-27T13:39:05.041Z",
                    "rows": 3,
                    "totalRows": 44
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the report's data response for the asynchronous flow.",
                  "properties": {
                    "data": {
                      "description": "Records returned for a given request.",
                      "items": {
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array",
                      "uniqueItems": true,
                      "x-akamai": {
                        "file-path": "schemas/data.yaml"
                      }
                    },
                    "metadata": {
                      "additionalProperties": false,
                      "description": "Contains information about the request and the response.",
                      "properties": {
                        "evictionTime": {
                          "description": "The time when the cached data was removed.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "links": {
                          "description": "Links for the requested path.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "allow": {
                                "description": "Allowed HTTP methods for the URL shown in `href`.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true
                              },
                              "describedBy": {
                                "description": "Relative URL address of the resource schema.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "Relative URL address of the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rel": {
                                "description": "Relative link name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "rel",
                              "href",
                              "allow"
                            ],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array",
                          "x-akamai": {
                            "file-path": "schemas/links.yaml"
                          }
                        },
                        "name": {
                          "description": "Report name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "requestTime": {
                          "description": "The time when the query executed.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "rows": {
                          "description": "The number of records for the current page.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "totalRows": {
                          "description": "The total number of records returned for the query.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name",
                        "links",
                        "rows",
                        "totalRows"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "data",
                    "metadata"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/async-report-data-response.yaml"
                  }
                }
              },
              "text/csv": {
                "example": "\"#METADATA_START\\nstart,2024-03-27T13:09:48.218780097Z\\nend,2024-03-27T13:19:47.218780097Z\\nrowCount,5\\ntotalRowCount,198\\n#METADATA_END\\n\\n#LINKS_START\\nfirst,/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu\\nself,/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu\\nnext,/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfG++AQaipJ5zBKgT83AhMgEuUKZvnyG9nLz2eqMUAEVD7.lrvyrvOtUwIy9kCBd4Uw8sJKf+qhYKz3BxEZ8pNl9yqtfGreMCWmIOA3n5fKcxRP07cNb7iO5nC98cygroJk+2If7YG8MjWZ4jOMjPLsOUhIB4xeSjvkvTaNDGKhoXoO+K3BYFqSNrPxX37vbI7tFA6av4tWBoXwn4EGTa0GzenqGlx5m4FDcIxi2t2IOU\\nlast,/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu\\n#LINKS_END\\n\\n#COLUMN_START\\nhostname,responseCode,edgeHitsSum,edgeBytesSum\\n#COLUMN_END\\n\\n#DATA_START\\nexample.com,404,10,1322\\norigin.com,404,1,321\\ncustom.com,200,122,4331\\n#DATA_END\"",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The request is processed. The response body contains the requested data."
          },
          "303": {
            "content": {},
            "description": "The request isn't processed. The response contains the `Location` header with the redirect link.",
            "headers": {
              "Location": {
                "description": "Specifies the relative URL that you can use in a GET data request.",
                "schema": {
                  "example": "/reporting-api/v2/reports/delivery/traffic/current/queries/.kRGhlJDQv5gD34F8J+bfK.buOpx8.W6zxjHs30d8W9zqYTM0TvF7qegG9QfCC0ltsF4QwdnCRzfaWlirMK1sdge7gIYCsgvv5ldrtlu.9kq8VL35mrBbXEltisr6xnuumhqq7X7CaqjDo5Aicev3Xd4wTOI1WvdBVSJMSveeQov58zLplvh8GYZ4MgAgmO41eb6dsYieutcoq7aEsWVGrFSX2sz3D8hQK1k7DtFCs+XN9H.2wslub3bADAHGrSI",
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/Location.yaml"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Missing access scope: 'REPORTING_REPORTS_EXECUTOR_CORE_READ'",
                  "problemId": "b8a94c7e-6d2f-4f4c-a8cb-0e5d2f68f29e",
                  "status": 403,
                  "title": "Unauthorized",
                  "type": "/reporting-api/error-types/unauthorized"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "You are unauthorized to make calls to the requested report."
          },
          "404": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Report definition '/delivery/traffic/incorrectReport' not found",
                  "problemId": "e1c2d7f5-9b3a-4a6e-8c9d-2f4b1e8c7a9d",
                  "status": 404,
                  "title": "Report not found",
                  "type": "/reporting-api/error-types/report-not-found"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The requested resource doesn't exist."
          },
          "422": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "Exceeded limit of maximum query cost",
                  "problemId": "e7dc1d22-9136-487d-9808-9e1e8sb3b67c",
                  "status": 422,
                  "title": "Query cost exceeded",
                  "type": "/reporting-api/error-types/query-cost-exceeded"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "The request cannot be processed, since its cost exceeds the maximum request cost limit."
          },
          "429": {
            "content": {
              "application/problem+json": {
                "example": {
                  "detail": "You reached the limit for request count of 20. Once your current requests are processed, the allowed request count will refill at the rate of 20 per 1 minute(s).",
                  "problemId": "4e3d2b1a-f9c8-4b7a-a6d5-e2f1c0b9a8d7",
                  "rateLimit": "20",
                  "rateLimitNextRequest": "Fri, 29 Mar 2024 13:40:00 Z",
                  "rateLimitRefill": "20",
                  "rateLimitRemaining": "0",
                  "status": 429,
                  "title": "Rate Limit Exceeded",
                  "type": "/reporting-api/error-types/rate-limit-exceeded"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Represents error data.",
                  "properties": {
                    "detail": {
                      "description": "Details of the error encountered.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "errors": {
                      "description": "Validation errors for the provided request.",
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "detail": {
                            "description": "Details of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "problemId": {
                            "description": "ID assigned to this problem.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "title": {
                            "description": "Short title identifying the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Identifies which part of the request the error corresponds to.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "title",
                          "detail"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "problemId": {
                      "description": "ID assigned to this problem.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP status code.",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short title identifying the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            },
            "description": "Hit or cost based limits exceeded."
          }
        },
        "summary": "Get asynchronous report results",
        "tags": [
          "Report data"
        ]
      },
      "parameters": [
        {
          "description": "The area of products.",
          "example": "{{productFamily}}",
          "in": "path",
          "name": "productFamily",
          "required": true,
          "schema": {
            "example": "delivery",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/productFamily-path.yaml"
          }
        },
        {
          "description": "The grouping of reports related to the same area.",
          "example": "{{reportingArea}}",
          "in": "path",
          "name": "reportingArea",
          "required": true,
          "schema": {
            "example": "traffic",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/reportingArea-path.yaml"
          }
        },
        {
          "description": "An individual report name.",
          "example": "{{report}}",
          "in": "path",
          "name": "report",
          "required": true,
          "schema": {
            "example": "current",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/report-path.yaml"
          }
        },
        {
          "description": "Unique identifier of the previous asynchronous request to fetch report data.",
          "example": "{{queryId}}",
          "in": "path",
          "name": "queryId",
          "required": true,
          "schema": {
            "example": ".kRGhlJDQv5gD34L8J+bfDLmmm6tIipFMHeve7o2udsr1mxoqQ6yHbaNjw43lIyzGX0Pko3ZcsSdFU4iEvETAogoL2ijtS3D385hhKIeQ9fOlgLixkCg9em001KtQIkI3JUCX5RxxkfK3iqBNai0988XYgPEUSpQt69D5gedOjrDMch4Vy.WRpOMQEXqURxrkXSOFVVIw0yDM62VJ8sRG3fsADRpYvpnsOeFz5Eko6lHH0TqzadAXFJEHQzS25Gu",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/queryId-path.yaml"
          }
        }
      ]
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/reporting-api/v2"
    }
  ],
  "tags": [
    {
      "description": "Get information about the different kinds of reports available.",
      "name": "Report list"
    },
    {
      "description": "Get available options to generate a report.",
      "name": "Report metadata"
    },
    {
      "description": "Run reports to get data about your Akamai services.",
      "name": "Report data"
    }
  ],
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  }
}