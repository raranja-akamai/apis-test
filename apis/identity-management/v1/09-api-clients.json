{
  "openapi": "3.0.0",
  "info": {
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Credentials",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v2"
    }
  ],
  "paths": {
    "/api-clients/self": {
      "delete": {
        "description": "This operation permanently deletes an API client you own, without active credentials. It also breaks any API connections with the client. Before deleting your API client, deactivate all credentials and make sure there aren't any API integrations or scripts using them.\n",
        "operationId": "delete-api-client-self",
        "responses": {
          "204": {
            "description": "API client successfully deleted.\n"
          }
        },
        "summary": "Delete your API client",
        "tags": [
          "API client: self"
        ]
      },
      "get": {
        "description": "This operation provides details about your API client.\n",
        "operationId": "get-api-client-self",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "Includes the API client's group access, `false` by default.\n",
            "in": "query",
            "name": "groupAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/group-access-query.yaml"
            }
          },
          {
            "description": "Lists only the APIs the user can access, `false` by default.\n",
            "in": "query",
            "name": "apiAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/apis-access-query.yaml"
            }
          },
          {
            "description": "Includes API user's credentials, `false` by default.\n",
            "in": "query",
            "name": "credentials",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/credentials-query.yaml"
            }
          },
          {
            "description": "Includes the API client's IP list restriction, `false` by default.\n",
            "in": "query",
            "name": "ipAcl",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/ip-acl-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "alfulani@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Luna Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 12345,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "ipAcl": {
                    "enable": true,
                    "cidr": [
                      "2001:db8::1",
                      "2001:db8::2"
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "0000-0000000000000000-000000000000000",
                      "createdOn": "2022-05-09T10:43:50.000Z",
                      "credentialId": 16850686,
                      "description": "",
                      "expiresOn": "2024-05-09T10:43:50.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "activate": false,
                        "deactivate": false,
                        "delete": false,
                        "editDescription": false,
                        "editExpiration": false
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.\n",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.\n",
                      "properties": {
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether you can remove the API client.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.\n",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.\n",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.\n",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.\n",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.\n",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.\n",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.\n",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.\n",
                            "properties": {
                              "activate": {
                                "description": "Whether you can activate the credential.\n",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.\n",
                                "type": "boolean"
                              },
                              "delete": {
                                "description": "Whether you can remove the credential.\n",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.\n",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.\n",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.\n",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.\n",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.\n",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.\n",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.\n",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.\n",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.\n",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.\n",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.\n",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.\n",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.\n",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the API client.\n"
          }
        },
        "summary": "Get your API client",
        "tags": [
          "API client: self"
        ]
      },
      "put": {
        "description": "This operation updates your API client.\n",
        "operationId": "put-api-clients-self",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "clientName": "report_data",
                "clientDescription": "Provides access to the reporting data.",
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "notificationEmails": [
                  "jsmith@example.com"
                ],
                "authorizedUsers": [
                  "jsmith"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "apiId": 109230,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Event Center",
                      "description": "Event Center",
                      "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                      "endPoint": "/events"
                    },
                    {
                      "apiId": 3515,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 54321,
                      "groupName": "Main Street Corporation",
                      "roleId": 73695,
                      "roleName": "Custom role # 73695",
                      "roleDescription": "Please add a description",
                      "isBlocked": false,
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "Internet Company",
                          "parentGroupId": 19760,
                          "roleId": null,
                          "roleName": null,
                          "isBlocked": false,
                          "subGroups": [
                            {
                              "groupId": 12345,
                              "groupName": "Digital Company",
                              "parentGroupId": 44999,
                              "roleId": null,
                              "roleName": null,
                              "isBlocked": false,
                              "subGroups": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "allowAccountSwitch": {
                    "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.\n",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "apis"
                        ],
                        "title": "Not all APIs accessible"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "allAccessibleApis"
                        ],
                        "title": "All APIs accessible"
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ],
                              "type": "string"
                            },
                            "apiId": {
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.\n",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.\n",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive label about the API client.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's group access.\n",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.\n",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.\n",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.\n",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Custom access"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.\n",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.\n",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.\n",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.\n",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Cloned access"
                      }
                    ],
                    "type": "object"
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.\n",
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.\n",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "enable": {
                        "description": "Enables API client's access to the IP ACL.\n",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "type": "object"
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.\n",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "Whether the API client can purge content by cache tag.\n",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "Whether the API client can purge content by CP code.\n",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.\n",
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "Whether the API client can purge content by cache tag.\n",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/api-client-update-request-v3.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": true,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "apiId": 164,
                        "apiName": "Media Reports",
                        "description": "Media Reports APIs",
                        "endPoint": "/media-reports",
                        "documentationUrl": "https://developer.akamai.com/api/luna/media-reports/overview.html",
                        "accessLevel": "READ-ONLY"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 12345,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "CPCode RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "High Street Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 54321,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.\n",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.\n",
                      "properties": {
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether you can remove the API client.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.\n",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.\n",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.\n",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.\n",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.\n",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.\n",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.\n",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.\n",
                            "properties": {
                              "activate": {
                                "description": "Whether you can activate the credential.\n",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.\n",
                                "type": "boolean"
                              },
                              "delete": {
                                "description": "Whether you can remove the credential.\n",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.\n",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.\n",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.\n",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.\n",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.\n",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.\n",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.\n",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.\n",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.\n",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.\n",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.\n",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.\n",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.\n",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified API client.\n"
          }
        },
        "summary": "Update your API client",
        "tags": [
          "API client: self"
        ]
      },
      "x-akamai": {
        "file-path": "paths/self.yaml",
        "path-info": "/api-clients/self"
      }
    },
    "/api-clients/self/account-switch-keys": {
      "get": {
        "description": "This operation lists account switch keys available for your API client. You can use the `accountSwitchKey` in many Akamai APIs [to make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
        "operationId": "get-self-account-switch-keys",
        "parameters": [
          {
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "indirect",
              "minLength": 3,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/account-switch-keys-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Digital Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "description": "Encapsulates a collection of contexts the client can manage.\n",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accountName": {
                        "description": "Descriptive label for the account.\n",
                        "minLength": 1,
                        "type": "string"
                      },
                      "accountSwitchKey": {
                        "description": "The identifier for an account other than your API client's default.\n",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/self-account-switch-keys.yaml"
                  }
                }
              }
            },
            "description": "The response provides your account switch keys and account names.\n"
          }
        },
        "summary": "List your account switch keys",
        "tags": [
          "API client: self"
        ]
      },
      "x-akamai": {
        "file-path": "paths/account-switch-keys-self.yaml",
        "path-info": "/api-clients/self/account-switch-keys"
      }
    },
    "/api-clients/self/credentials": {
      "get": {
        "description": "This operation lists your API client's credentials.\n",
        "operationId": "get-self-credentials",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "credentialId": 99999,
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE",
                    "description": "John's access to Property Manager",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z"
                  },
                  {
                    "credentialId": 88888,
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE",
                    "description": "John's access to Event Center",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z"
                  }
                ],
                "schema": {
                  "description": "API client's credentials.\n",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the credential.\n",
                        "properties": {
                          "activate": {
                            "description": "Whether you can activate the credential.\n",
                            "type": "boolean"
                          },
                          "deactivate": {
                            "description": "Whether you can deactivate the credential.\n",
                            "type": "boolean"
                          },
                          "delete": {
                            "description": "Whether you can remove the credential.\n",
                            "type": "boolean"
                          },
                          "editDescription": {
                            "description": "Whether you can modify the credential's description.\n",
                            "type": "boolean"
                          },
                          "editExpiration": {
                            "description": "Whether you can modify the credential's expiration date.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "activate",
                          "deactivate",
                          "editDescription",
                          "editExpiration"
                        ],
                        "type": "object"
                      },
                      "clientToken": {
                        "description": "Part of the credential that identifies the API client.\n",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "Unique identifier each credential.\n",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": {
                        "description": "Descriptive label for the credential.\n",
                        "minLength": 0,
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "maxAllowedExpiry": {
                        "description": "An ISO 8601 timestamp limit for credentials expiring.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE",
                          "DELETED"
                        ],
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description",
                      "maxAllowedExpiry"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                }
              }
            },
            "description": "The response provides the credentials.\n"
          }
        },
        "summary": "List your credentials",
        "tags": [
          "API client: self"
        ]
      },
      "post": {
        "description": "This operation creates a new credential for your API client. Only you may create credentials for this client. Credentials are in `active` status at creation. By default, they expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](ref:put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID` for future use. This is the only time you'll see the client secret. Save the credential at this time to avoid the need to create a new one.\n",
        "operationId": "post-self-credentials",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 14111,
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "clientSecret": "11111111111111111111111111111111111111111111",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE",
                  "description": "New credential for John."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for the credential data structure.\n",
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.\n",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.\n",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            },
            "description": "The response provides the newly created credential.\n",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.\n",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create your credential",
        "tags": [
          "API client: self"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credentials-self.yaml",
        "path-info": "/api-clients/self/credentials"
      }
    },
    "/api-clients/self/credentials/deactivate": {
      "post": {
        "description": "Deactivates all credentials for your API client. This doesn't delete the API client or the credentials. To deactivate a single credential, use the [Update your credential](ref:put-self-credential) operation and set the status to `INACTIVE`.\n",
        "operationId": "post-self-credentials-deactivate",
        "responses": {
          "204": {
            "description": "Credentials deactivated.\n"
          }
        },
        "summary": "Deactivate your credentials",
        "tags": [
          "Self"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credentials-self-deactivate.yaml",
        "path-info": "/api-clients/self/credentials/deactivate"
      }
    },
    "/api-clients/self/credentials/{credentialId}": {
      "delete": {
        "description": "This operation deletes a specific credential from your API client. You can only delete inactive credentials.\n",
        "operationId": "delete-self-credential",
        "responses": {
          "204": {
            "description": "Credential successfully deleted.\n"
          }
        },
        "summary": "Remove your credential",
        "tags": [
          "API client: self"
        ]
      },
      "get": {
        "description": "This operation provides details about a specific credential for your API client. To change the credential's expiration date or toggle its activation status, run the [Update a credential](ref:put-client-credential) operation.\n",
        "operationId": "get-self-credential",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 99999,
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "status": "ACTIVE",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z",
                  "maxAllowedExpiry": "2021-11-01T23:06:59.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the credential.\n",
                      "properties": {
                        "activate": {
                          "description": "Whether you can activate the credential.\n",
                          "type": "boolean"
                        },
                        "deactivate": {
                          "description": "Whether you can deactivate the credential.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether you can remove the credential.\n",
                          "type": "boolean"
                        },
                        "editDescription": {
                          "description": "Whether you can modify the credential's description.\n",
                          "type": "boolean"
                        },
                        "editExpiration": {
                          "description": "Whether you can modify the credential's expiration date.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "activate",
                        "deactivate",
                        "editDescription",
                        "editExpiration"
                      ],
                      "type": "object"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.\n",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.\n",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "maxAllowedExpiry": {
                      "description": "An ISO 8601 timestamp limit for credentials expiring.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description",
                    "maxAllowedExpiry"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            },
            "description": "The response provides the credential.\n"
          }
        },
        "summary": "Get your credential",
        "tags": [
          "API client: self"
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](ref:get-self-credentials) operation. For other users' credentials, run the [List credentials](ref:get-client-credentials) operation.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        }
      ],
      "put": {
        "description": "This operation updates a specific credential for your API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](ref:rotate-credentials).\n",
        "operationId": "put-self-credential",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "status": "ACTIVE",
                "expiresOn": "2020-10-11T23:06:59.000Z",
                "description": "Update this credential"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "Descriptive label for the credential.\n",
                    "minLength": 0,
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.\n",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "DELETED"
                    ],
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "expiresOn",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "status": "ACTIVE",
                  "expiresOn": "2020-10-11T23:06:59.000Z",
                  "description": "Update this credential"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "description": "Descriptive label for the credential.\n",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "expiresOn",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/update-credential.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified credential.\n"
          }
        },
        "summary": "Update your credential",
        "tags": [
          "API client: self"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credential-self.yaml",
        "path-info": "/api-clients/self/credentials/{credentialId}"
      }
    },
    "/api-clients/self/credentials/{credentialId}/deactivate": {
      "parameters": [
        {
          "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](ref:get-self-credentials) operation. For other users' credentials, run the [List credentials](ref:get-client-credentials) operation.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        }
      ],
      "post": {
        "description": "Deactivates a specific credential for your API client. This doesn't delete the client or the credentials. To update a specific credential, run the [Update your credential](ref:put-self-credential) operation.\n",
        "operationId": "post-self-credential-deactivate",
        "responses": {
          "204": {
            "description": "Credential deactivated.\n"
          }
        },
        "summary": "Deactivate your credential",
        "tags": [
          "Self"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credential-self-deactivate.yaml",
        "path-info": "/api-clients/self/credentials/{credentialId}/deactivate"
      }
    },
    "/api-clients/{clientId}": {
      "delete": {
        "description": "This operation permanently deletes the API client, breaking any API connections with the client. To delete a client, you need to own the client, or have admin access on a given group. Before deleting an API client, make sure there aren't any API integrations or scripts using it.\n",
        "operationId": "delete-api-client",
        "responses": {
          "204": {
            "description": "API client successfully deleted.\n"
          }
        },
        "summary": "Delete an API client",
        "tags": [
          "API clients"
        ]
      },
      "get": {
        "description": "This operation provides details about an API client.\n",
        "operationId": "get-api-client",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "description": "Includes the API client's group access, `false` by default.\n",
            "in": "query",
            "name": "groupAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/group-access-query.yaml"
            }
          },
          {
            "description": "Lists only the APIs the user can access, `false` by default.\n",
            "in": "query",
            "name": "apiAccess",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/apis-access-query.yaml"
            }
          },
          {
            "description": "Includes API user's credentials, `false` by default.\n",
            "in": "query",
            "name": "credentials",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/credentials-query.yaml"
            }
          },
          {
            "description": "Includes the API client's IP list restriction, `false` by default.\n",
            "in": "query",
            "name": "ipAcl",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/ip-acl-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "alfulani@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Luna Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 12345,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "ipAcl": {
                    "enable": true,
                    "cidr": [
                      "2001:db8::1",
                      "2001:db8::2"
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "0000-0000000000000000-000000000000000",
                      "createdOn": "2022-05-09T10:43:50.000Z",
                      "credentialId": 16850686,
                      "description": "",
                      "expiresOn": "2024-05-09T10:43:50.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "activate": false,
                        "deactivate": false,
                        "delete": false,
                        "editDescription": false,
                        "editExpiration": false
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.\n",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.\n",
                      "properties": {
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether you can remove the API client.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.\n",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.\n",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.\n",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.\n",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.\n",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.\n",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.\n",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.\n",
                            "properties": {
                              "activate": {
                                "description": "Whether you can activate the credential.\n",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.\n",
                                "type": "boolean"
                              },
                              "delete": {
                                "description": "Whether you can remove the credential.\n",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.\n",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.\n",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.\n",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.\n",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.\n",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.\n",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.\n",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.\n",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.\n",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.\n",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.\n",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.\n",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.\n",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response provides the API client.\n"
          }
        },
        "summary": "Get an API client",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ],
      "put": {
        "description": "This operation updates an API client.\n",
        "operationId": "put-api-clients",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "clientName": "report_data",
                "clientDescription": "Provides access to the reporting data.",
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "notificationEmails": [
                  "jsmith@example.com"
                ],
                "authorizedUsers": [
                  "jsmith"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "apiId": 109230,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Event Center",
                      "description": "Event Center",
                      "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                      "endPoint": "/events"
                    },
                    {
                      "apiId": 3515,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 54321,
                      "groupName": "Main Street Corporation",
                      "roleId": 73695,
                      "roleName": "Custom role # 73695",
                      "roleDescription": "Please add a description",
                      "isBlocked": false,
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "Internet Company",
                          "parentGroupId": 19760,
                          "roleId": null,
                          "roleName": null,
                          "isBlocked": false,
                          "subGroups": [
                            {
                              "groupId": 12345,
                              "groupName": "Digital Company",
                              "parentGroupId": 44999,
                              "roleId": null,
                              "roleName": null,
                              "isBlocked": false,
                              "subGroups": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "allowAccountSwitch": {
                    "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                    "type": "boolean"
                  },
                  "apiAccess": {
                    "additionalProperties": false,
                    "description": "The APIs the API client can access.\n",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "apis"
                        ],
                        "title": "Not all APIs accessible"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allAccessibleApis": {
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "allAccessibleApis"
                        ],
                        "title": "All APIs accessible"
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                        "type": "boolean"
                      },
                      "apis": {
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "accessLevel": {
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ],
                              "type": "string"
                            },
                            "apiId": {
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "apiName": {
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1,
                              "type": "string"
                            },
                            "documentationUrl": {
                              "description": "Link to more information about the API.\n",
                              "minLength": 1,
                              "type": "string"
                            },
                            "endPoint": {
                              "description": "Specifies where the API can access resources.\n",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "authorizedUsers": {
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "canAutoCreateCredential": {
                    "default": false,
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
                    "type": "boolean"
                  },
                  "clientDescription": {
                    "description": "Descriptive label about the API client.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "clientName": {
                    "description": "Descriptive label for the API client.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "groupAccess": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's group access.\n",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.\n",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.\n",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.\n",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Custom access"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.\n",
                            "type": "boolean"
                          },
                          "groups": {
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "items": {
                              "additionalProperties": false,
                              "description": "Groups the API client can access.\n",
                              "properties": {
                                "groupId": {
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Blocks the API client access to the group's child groups.\n",
                                  "type": "boolean"
                                },
                                "parentGroupId": {
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                  "type": "integer"
                                },
                                "roleDescription": {
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "roleId": {
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                  "type": "integer"
                                },
                                "roleName": {
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "subGroups": {
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "additionalProperties": true,
                                    "description": "A further nested group.\n",
                                    "properties": {},
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/groups-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ],
                        "title": "Cloned access"
                      }
                    ],
                    "type": "object"
                  },
                  "ipAcl": {
                    "additionalProperties": false,
                    "description": "Specifies the API client's IP list restriction.\n",
                    "properties": {
                      "cidr": {
                        "description": "IP addresses or CIDR blocks the API client can access.\n",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "enable": {
                        "description": "Enables API client's access to the IP ACL.\n",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "type": "object"
                  },
                  "notificationEmails": {
                    "description": "Email addresses to notify users of expiring credentials.\n",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "purgeOptions": {
                    "additionalProperties": false,
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                    "properties": {
                      "canPurgeByCacheTag": {
                        "description": "Whether the API client can purge content by cache tag.\n",
                        "type": "boolean"
                      },
                      "canPurgeByCpcode": {
                        "description": "Whether the API client can purge content by CP code.\n",
                        "type": "boolean"
                      },
                      "cpcodeAccess": {
                        "additionalProperties": false,
                        "description": "CP codes the API client can purge.\n",
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "description": "Whether the API client can purge content by cache tag.\n",
                            "type": "boolean"
                          },
                          "cpcodes": {
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/api-client-update-request-v3.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": true,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "apiId": 164,
                        "apiName": "Media Reports",
                        "description": "Media Reports APIs",
                        "endPoint": "/media-reports",
                        "documentationUrl": "https://developer.akamai.com/api/luna/media-reports/overview.html",
                        "accessLevel": "READ-ONLY"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 12345,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "CPCode RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "High Street Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 54321,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the API client.\n",
                  "properties": {
                    "accessToken": {
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the API client.\n",
                      "properties": {
                        "deactivateAll": {
                          "description": "Whether you can deactivate the API client's credentials.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether you can remove the API client.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether you can update the API client.\n",
                          "type": "boolean"
                        },
                        "editApis": {
                          "description": "Whether you can update the `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editAuth": {
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editGroups": {
                          "description": "Whether you can update the `groups` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editIpAcl": {
                          "description": "Whether you can update the `ipAcl` the API client can access.\n",
                          "type": "boolean"
                        },
                        "editSwitchAccount": {
                          "description": "Whether you can update the API client's option to manage many accounts.\n",
                          "type": "boolean"
                        },
                        "lock": {
                          "description": "Whether you can lock the API client.\n",
                          "type": "boolean"
                        },
                        "transfer": {
                          "description": "Whether you can transfer the API client to a new owner.\n",
                          "type": "boolean"
                        },
                        "unlock": {
                          "description": "Whether you can unlock the API client.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "type": "object"
                    },
                    "activeCredentialCount": {
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "allowAccountSwitch": {
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "additionalProperties": false,
                      "description": "The APIs the API client can access.\n",
                      "properties": {
                        "allAccessibleApis": {
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                          "type": "boolean"
                        },
                        "apis": {
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "accessLevel": {
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "apiId": {
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "apiName": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "description": {
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "documentationUrl": {
                                "description": "Link to more information about the API.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "endPoint": {
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "type": "object"
                    },
                    "authorizedUsers": {
                      "description": "The API client's valid users.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "baseURL": {
                      "description": "The base URL for the service.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "canAutoCreateCredential": {
                      "description": "Whether the API client can create a credential for a new API client.\n",
                      "type": "boolean"
                    },
                    "clientDescription": {
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientId": {
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientName": {
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientType": {
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ],
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The user who created the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentials": {
                      "description": "The API client's of credentials.\n",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "actions": {
                            "additionalProperties": false,
                            "description": "Specifies activities available for the credential.\n",
                            "properties": {
                              "activate": {
                                "description": "Whether you can activate the credential.\n",
                                "type": "boolean"
                              },
                              "deactivate": {
                                "description": "Whether you can deactivate the credential.\n",
                                "type": "boolean"
                              },
                              "delete": {
                                "description": "Whether you can remove the credential.\n",
                                "type": "boolean"
                              },
                              "editDescription": {
                                "description": "Whether you can modify the credential's description.\n",
                                "type": "boolean"
                              },
                              "editExpiration": {
                                "description": "Whether you can modify the credential's expiration date.\n",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "type": "object"
                          },
                          "clientToken": {
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credentialId": {
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "description": {
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0,
                            "type": "string"
                          },
                          "expiresOn": {
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "groupAccess": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's group access.\n",
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "description": "Sets the API client's group access the same as the authorized user.\n",
                          "type": "boolean"
                        },
                        "groups": {
                          "description": "Groups the API client can access.\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "Groups the API client can access.\n",
                            "properties": {
                              "groupId": {
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Blocks the API client access to the group's child groups.\n",
                                "type": "boolean"
                              },
                              "parentGroupId": {
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                                "type": "integer"
                              },
                              "roleDescription": {
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "roleId": {
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                                "type": "integer"
                              },
                              "roleName": {
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1,
                                "type": "string"
                              },
                              "subGroups": {
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "additionalProperties": true,
                                  "description": "A further nested group.\n",
                                  "properties": {},
                                  "type": "object",
                                  "x-akamai": {
                                    "file-path": "schemas/groups-nested.yaml"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "type": "object"
                    },
                    "ipAcl": {
                      "additionalProperties": false,
                      "description": "Specifies the API client's IP list restriction.\n",
                      "properties": {
                        "cidr": {
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "enable": {
                          "description": "Enables API client's access to the IP ACL.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "type": "object"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
                      "type": "boolean"
                    },
                    "notificationEmails": {
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "purgeOptions": {
                      "additionalProperties": false,
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "properties": {
                        "canPurgeByCacheTag": {
                          "description": "Whether the API client can purge content by cache tag.\n",
                          "type": "boolean"
                        },
                        "canPurgeByCpcode": {
                          "description": "Whether the API client can purge content by CP code.\n",
                          "type": "boolean"
                        },
                        "cpcodeAccess": {
                          "additionalProperties": false,
                          "description": "CP codes the API client can purge.\n",
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "description": "Whether the API client can purge content by cache tag.\n",
                              "type": "boolean"
                            },
                            "cpcodes": {
                              "description": "CP codes the API client can purge.\n",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "type": "object"
                    },
                    "serviceProviderId": {
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/api-client-detail-v3.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified API client.\n"
          }
        },
        "summary": "Update an API client",
        "tags": [
          "API clients"
        ]
      },
      "x-akamai": {
        "file-path": "paths/client.yaml",
        "path-info": "/api-clients/{clientId}"
      }
    },
    "/api-clients/{clientId}/account-switch-keys": {
      "get": {
        "description": "This operation lists account switch keys available for a specific API client. The client can use the `accountSwitchKey` in many Akamai APIs to [make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
        "operationId": "get-client-account-switch-keys",
        "parameters": [
          {
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "indirect",
              "minLength": 3,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/account-switch-keys-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Digital Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "description": "Encapsulates a collection of contexts the client can manage.\n",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "accountName": {
                        "description": "Descriptive label for the account.\n",
                        "minLength": 1,
                        "type": "string"
                      },
                      "accountSwitchKey": {
                        "description": "The identifier for an account other than your API client's default.\n",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/client-account-switch-keys.yaml"
                  }
                }
              }
            },
            "description": "The response provides account switch keys and account names available to you.\n"
          }
        },
        "summary": "List account switch keys",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/account-switch-keys-client.yaml",
        "path-info": "/api-clients/{clientId}/account-switch-keys"
      }
    },
    "/api-clients/{clientId}/credentials": {
      "get": {
        "description": "This operation lists credentials for an API client.\n",
        "operationId": "get-client-credentials",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "credentialId": 99999,
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE",
                    "description": "John's access to Property Manager",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z"
                  },
                  {
                    "credentialId": 88888,
                    "clientToken": "0000-0000000000000000-000000000000000",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE",
                    "description": "John's access to Event Center",
                    "maxAllowedExpiry": "2020-11-01T23:06:59.000Z"
                  }
                ],
                "schema": {
                  "description": "API client's credentials.\n",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "additionalProperties": false,
                        "description": "Specifies activities available for the credential.\n",
                        "properties": {
                          "activate": {
                            "description": "Whether you can activate the credential.\n",
                            "type": "boolean"
                          },
                          "deactivate": {
                            "description": "Whether you can deactivate the credential.\n",
                            "type": "boolean"
                          },
                          "delete": {
                            "description": "Whether you can remove the credential.\n",
                            "type": "boolean"
                          },
                          "editDescription": {
                            "description": "Whether you can modify the credential's description.\n",
                            "type": "boolean"
                          },
                          "editExpiration": {
                            "description": "Whether you can modify the credential's expiration date.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "activate",
                          "deactivate",
                          "editDescription",
                          "editExpiration"
                        ],
                        "type": "object"
                      },
                      "clientToken": {
                        "description": "Part of the credential that identifies the API client.\n",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "Unique identifier each credential.\n",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "description": {
                        "description": "Descriptive label for the credential.\n",
                        "minLength": 0,
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "maxAllowedExpiry": {
                        "description": "An ISO 8601 timestamp limit for credentials expiring.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                        "enum": [
                          "ACTIVE",
                          "INACTIVE",
                          "DELETED"
                        ],
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description",
                      "maxAllowedExpiry"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                }
              }
            },
            "description": "The response provides the API client's credentials.\n"
          }
        },
        "summary": "List credentials",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ],
      "post": {
        "description": "This operation creates a new credential for your API client. If you don't know your `clientId`, you can run the [Create your credential](ref:post-self-credentials) operation. Credentials are in `active` status at creation. By default, they expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](ref:put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID`, for future use. This is the only time you'll see the client secret. Save the credential to avoid the need to create a new one.\n",
        "operationId": "post-client-credentials",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 14111,
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "clientSecret": "11111111111111111111111111111111111111111111",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE",
                  "description": "New credential for John."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates all members for the credential data structure.\n",
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.\n",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.\n",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            },
            "description": "The response provides a newly created credential.\n",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.\n",
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/location.yaml"
                }
              }
            }
          }
        },
        "summary": "Create a credential",
        "tags": [
          "API clients"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credentials-client.yaml",
        "path-info": "/api-clients/{clientId}/credentials"
      }
    },
    "/api-clients/{clientId}/credentials/deactivate": {
      "parameters": [
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ],
      "post": {
        "description": "Deactivates all credentials for a given API client. This doesn't delete the API client or the credentials. To deactivate a single credential, run the [Update a credential](ref:put-client-credential) operation and set the status to `INACTIVE`.\n",
        "operationId": "post-client-credentials-deactivate",
        "responses": {
          "204": {
            "description": "Credentials deactivated.\n"
          }
        },
        "summary": "Deactivate credentials",
        "tags": [
          "Clients"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credentials-client-deactivate.yaml",
        "path-info": "/api-clients/{clientId}/credentials/deactivate"
      }
    },
    "/api-clients/{clientId}/credentials/{credentialId}": {
      "delete": {
        "description": "This operation deletes a specific credential from an API client. You can only delete inactive credentials.\n",
        "operationId": "delete-client-credential",
        "responses": {
          "204": {
            "description": "Credential successfully deleted.\n"
          }
        },
        "summary": "Remove a credential",
        "tags": [
          "API clients"
        ]
      },
      "get": {
        "description": "This operation returns details about a specific credential for an API client. To change the credential's expiration date or toggle its activation status, run the [Update credential for an API client](ref:put-client-credential) operation.\n",
        "operationId": "get-client-credential",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 99999,
                  "clientToken": "0000-0000000000000000-000000000000000",
                  "status": "ACTIVE",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z",
                  "maxAllowedExpiry": "2021-11-01T23:06:59.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies activities available for the credential.\n",
                      "properties": {
                        "activate": {
                          "description": "Whether you can activate the credential.\n",
                          "type": "boolean"
                        },
                        "deactivate": {
                          "description": "Whether you can deactivate the credential.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether you can remove the credential.\n",
                          "type": "boolean"
                        },
                        "editDescription": {
                          "description": "Whether you can modify the credential's description.\n",
                          "type": "boolean"
                        },
                        "editExpiration": {
                          "description": "Whether you can modify the credential's expiration date.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "activate",
                        "deactivate",
                        "editDescription",
                        "editExpiration"
                      ],
                      "type": "object"
                    },
                    "clientToken": {
                      "description": "Part of the credential that identifies the API client.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "Unique identifier each credential.\n",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "description": {
                      "description": "Descriptive label for the credential.\n",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "maxAllowedExpiry": {
                      "description": "An ISO 8601 timestamp limit for credentials expiring.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description",
                    "maxAllowedExpiry"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            },
            "description": "The response provides the credential.\n"
          }
        },
        "summary": "Get a credential",
        "tags": [
          "API clients"
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](ref:get-self-credentials) operation. For other users' credentials, run the [List credentials](ref:get-client-credentials) operation.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ],
      "put": {
        "description": "This operation updates a specific credential for an API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](ref:rotate-credentials).\n",
        "operationId": "put-client-credential",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "status": "ACTIVE",
                "expiresOn": "2020-10-11T23:06:59.000Z",
                "description": "Update this credential"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "Descriptive label for the credential.\n",
                    "minLength": 0,
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.\n",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "DELETED"
                    ],
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "expiresOn",
                  "status"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "status": "ACTIVE",
                  "expiresOn": "2020-10-11T23:06:59.000Z",
                  "description": "Update this credential"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "description": "Descriptive label for the credential.\n",
                      "minLength": 0,
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "expiresOn",
                    "status"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/update-credential.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified credential.\n"
          }
        },
        "summary": "Update a credential",
        "tags": [
          "API clients"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credential-client.yaml",
        "path-info": "/api-clients/{clientId}/credentials/{credentialId}"
      }
    },
    "/api-clients/{clientId}/credentials/{credentialId}/deactivate": {
      "parameters": [
        {
          "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](ref:get-self-credentials) operation. For other users' credentials, run the [List credentials](ref:get-client-credentials) operation.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "in": "path",
          "name": "clientId",
          "required": true,
          "schema": {
            "example": "2cdgugz2tjbtowmy",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/client-id-path.yaml"
          }
        }
      ],
      "post": {
        "description": "Deactivates a specific credential for a given API client. This doesn't delete the API client or the other credentials.\n",
        "operationId": "post-client-credential-deactivate",
        "responses": {
          "204": {
            "description": "Credential deactivated.\n"
          }
        },
        "summary": "Deactivate a credential",
        "tags": [
          "Clients"
        ]
      },
      "x-akamai": {
        "file-path": "paths/credential-client-deactivate.yaml",
        "path-info": "/api-clients/{clientId}/credentials/{credentialId}/deactivate"
      }
    }
  },
  "components": {
    "parameters": {
      "actions-query": {
        "description": "Includes actions you can perform on the object, `false` by default.\n",
        "in": "query",
        "name": "actions",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/actions-query.yaml"
        }
      },
      "group-access-query": {
        "description": "Includes the API client's group access, `false` by default.\n",
        "in": "query",
        "name": "groupAccess",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/group-access-query.yaml"
        }
      },
      "apis-access-query": {
        "description": "Lists only the APIs the user can access, `false` by default.\n",
        "in": "query",
        "name": "apiAccess",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/apis-access-query.yaml"
        }
      },
      "credentials-query": {
        "description": "Includes API user's credentials, `false` by default.\n",
        "in": "query",
        "name": "credentials",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/credentials-query.yaml"
        }
      },
      "ip-acl-query": {
        "description": "Includes the API client's IP list restriction, `false` by default.\n",
        "in": "query",
        "name": "ipAcl",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/ip-acl-query.yaml"
        }
      },
      "account-switch-keys-query": {
        "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.\n",
        "in": "query",
        "name": "search",
        "schema": {
          "example": "indirect",
          "minLength": 3,
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/account-switch-keys-query.yaml"
        }
      },
      "credential-id-path": {
        "description": "Unique identifier for each credential. To get this value for your credentials, run the [List your credentials](ref:get-self-credentials) operation. For other users' credentials, run the [List credentials](ref:get-client-credentials) operation.\n",
        "in": "path",
        "name": "credentialId",
        "required": true,
        "schema": {
          "example": 123456,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/credential-id-path.yaml"
        }
      },
      "client-id-path": {
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
        "in": "path",
        "name": "clientId",
        "required": true,
        "schema": {
          "example": "2cdgugz2tjbtowmy",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/client-id-path.yaml"
        }
      }
    },
    "schemas": {
      "groups-nested": {
        "additionalProperties": true,
        "description": "A further nested group.\n",
        "properties": {},
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/groups-nested.yaml"
        }
      },
      "groups": {
        "additionalProperties": false,
        "description": "Groups the API client can access.\n",
        "properties": {
          "groupId": {
            "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
            "type": "integer"
          },
          "groupName": {
            "description": "Descriptive label for the group.\n",
            "minLength": 1,
            "type": "string"
          },
          "isBlocked": {
            "description": "Blocks the API client access to the group's child groups.\n",
            "type": "boolean"
          },
          "parentGroupId": {
            "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
            "type": "integer"
          },
          "roleDescription": {
            "description": "Descriptive label for the role to convey its use.\n",
            "minLength": 1,
            "type": "string"
          },
          "roleId": {
            "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
            "type": "integer"
          },
          "roleName": {
            "description": "Descriptive label for the role.\n",
            "minLength": 1,
            "type": "string"
          },
          "subGroups": {
            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
            "items": {
              "additionalProperties": true,
              "description": "A further nested group.\n",
              "properties": {},
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/groups-nested.yaml"
              }
            },
            "type": "array"
          }
        },
        "required": [
          "roleId",
          "groupId"
        ],
        "type": "object"
      },
      "api-client-detail-v3": {
        "additionalProperties": false,
        "description": "Specifies the API client.\n",
        "properties": {
          "accessToken": {
            "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
            "minLength": 1,
            "type": "string"
          },
          "actions": {
            "additionalProperties": false,
            "description": "Specifies activities available for the API client.\n",
            "properties": {
              "deactivateAll": {
                "description": "Whether you can deactivate the API client's credentials.\n",
                "type": "boolean"
              },
              "delete": {
                "description": "Whether you can remove the API client.\n",
                "type": "boolean"
              },
              "edit": {
                "description": "Whether you can update the API client.\n",
                "type": "boolean"
              },
              "editApis": {
                "description": "Whether you can update the `apis` the API client can access.\n",
                "type": "boolean"
              },
              "editAuth": {
                "description": "Whether you can update the `groups` or `apis` the API client can access.\n",
                "type": "boolean"
              },
              "editGroups": {
                "description": "Whether you can update the `groups` the API client can access.\n",
                "type": "boolean"
              },
              "editIpAcl": {
                "description": "Whether you can update the `ipAcl` the API client can access.\n",
                "type": "boolean"
              },
              "editSwitchAccount": {
                "description": "Whether you can update the API client's option to manage many accounts.\n",
                "type": "boolean"
              },
              "lock": {
                "description": "Whether you can lock the API client.\n",
                "type": "boolean"
              },
              "transfer": {
                "description": "Whether you can transfer the API client to a new owner.\n",
                "type": "boolean"
              },
              "unlock": {
                "description": "Whether you can unlock the API client.\n",
                "type": "boolean"
              }
            },
            "required": [
              "delete",
              "deactivateAll",
              "edit",
              "editApis",
              "editAuth",
              "editGroups",
              "editIpAcl",
              "editSwitchAccount",
              "lock",
              "transfer",
              "unlock"
            ],
            "type": "object"
          },
          "activeCredentialCount": {
            "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
            "minimum": 0,
            "type": "integer"
          },
          "allowAccountSwitch": {
            "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
            "type": "boolean"
          },
          "apiAccess": {
            "additionalProperties": false,
            "description": "The APIs the API client can access.\n",
            "properties": {
              "allAccessibleApis": {
                "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                "type": "boolean"
              },
              "apis": {
                "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "accessLevel": {
                      "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "apiId": {
                      "description": "Unique identifier for each API.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "apiName": {
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "documentationUrl": {
                      "description": "Link to more information about the API.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "endPoint": {
                      "description": "Specifies where the API can access resources.\n",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "apiId",
                    "apiName",
                    "documentationUrl",
                    "endPoint",
                    "accessLevel"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "allAccessibleApis",
              "apis"
            ],
            "type": "object"
          },
          "authorizedUsers": {
            "description": "The API client's valid users.\n",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array"
          },
          "baseURL": {
            "description": "The base URL for the service.\n",
            "minLength": 1,
            "type": "string"
          },
          "canAutoCreateCredential": {
            "description": "Whether the API client can create a credential for a new API client.\n",
            "type": "boolean"
          },
          "clientDescription": {
            "description": "Descriptive label about the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "clientId": {
            "description": "Unique identifier for each API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "clientName": {
            "description": "Descriptive label for the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "clientType": {
            "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
            "enum": [
              "CLIENT",
              "USER_CLIENT"
            ],
            "type": "string"
          },
          "createdBy": {
            "description": "The user who created the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "createdDate": {
            "description": "ISO 8601 timestamp indicating when the API client was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "credentials": {
            "description": "The API client's of credentials.\n",
            "items": {
              "additionalProperties": false,
              "properties": {
                "actions": {
                  "additionalProperties": false,
                  "description": "Specifies activities available for the credential.\n",
                  "properties": {
                    "activate": {
                      "description": "Whether you can activate the credential.\n",
                      "type": "boolean"
                    },
                    "deactivate": {
                      "description": "Whether you can deactivate the credential.\n",
                      "type": "boolean"
                    },
                    "delete": {
                      "description": "Whether you can remove the credential.\n",
                      "type": "boolean"
                    },
                    "editDescription": {
                      "description": "Whether you can modify the credential's description.\n",
                      "type": "boolean"
                    },
                    "editExpiration": {
                      "description": "Whether you can modify the credential's expiration date.\n",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "delete",
                    "activate",
                    "deactivate",
                    "editDescription",
                    "editExpiration"
                  ],
                  "type": "object"
                },
                "clientToken": {
                  "description": "Part of the credential that identifies the API client.\n",
                  "minLength": 1,
                  "type": "string"
                },
                "createdOn": {
                  "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                  "format": "date-time",
                  "type": "string"
                },
                "credentialId": {
                  "description": "Unique identifier each credential.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "description": {
                  "description": "Descriptive label for the API client.\n",
                  "minLength": 0,
                  "type": "string"
                },
                "expiresOn": {
                  "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                  "format": "date-time",
                  "type": "string"
                },
                "status": {
                  "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "DELETED"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "description",
                "actions",
                "clientToken",
                "createdOn",
                "credentialId",
                "expiresOn",
                "status"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "groupAccess": {
            "additionalProperties": false,
            "description": "Specifies the API client's group access.\n",
            "properties": {
              "cloneAuthorizedUserGroups": {
                "description": "Sets the API client's group access the same as the authorized user.\n",
                "type": "boolean"
              },
              "groups": {
                "description": "Groups the API client can access.\n",
                "items": {
                  "additionalProperties": false,
                  "description": "Groups the API client can access.\n",
                  "properties": {
                    "groupId": {
                      "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "Descriptive label for the group.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isBlocked": {
                      "description": "Blocks the API client access to the group's child groups.\n",
                      "type": "boolean"
                    },
                    "parentGroupId": {
                      "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                      "type": "integer"
                    },
                    "roleDescription": {
                      "description": "Descriptive label for the role to convey its use.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "roleId": {
                      "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "Descriptive label for the role.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "subGroups": {
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                      "items": {
                        "additionalProperties": true,
                        "description": "A further nested group.\n",
                        "properties": {},
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/groups-nested.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "roleId",
                    "groupId"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "cloneAuthorizedUserGroups",
              "groups"
            ],
            "type": "object"
          },
          "ipAcl": {
            "additionalProperties": false,
            "description": "Specifies the API client's IP list restriction.\n",
            "properties": {
              "cidr": {
                "description": "IP addresses or CIDR blocks the API client can access.\n",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "enable": {
                "description": "Enables API client's access to the IP ACL.\n",
                "type": "boolean"
              }
            },
            "required": [
              "enable",
              "cidr"
            ],
            "type": "object"
          },
          "isLocked": {
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
            "type": "boolean"
          },
          "notificationEmails": {
            "description": "Email addresses to notify users of expiring credentials.\n",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array"
          },
          "purgeOptions": {
            "additionalProperties": false,
            "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
            "properties": {
              "canPurgeByCacheTag": {
                "description": "Whether the API client can purge content by cache tag.\n",
                "type": "boolean"
              },
              "canPurgeByCpcode": {
                "description": "Whether the API client can purge content by CP code.\n",
                "type": "boolean"
              },
              "cpcodeAccess": {
                "additionalProperties": false,
                "description": "CP codes the API client can purge.\n",
                "properties": {
                  "allCurrentAndNewCpcodes": {
                    "description": "Whether the API client can purge content by cache tag.\n",
                    "type": "boolean"
                  },
                  "cpcodes": {
                    "description": "CP codes the API client can purge.\n",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "allCurrentAndNewCpcodes",
                  "cpcodes"
                ],
                "type": "object"
              }
            },
            "required": [
              "canPurgeByCacheTag",
              "canPurgeByCpcode",
              "cpcodeAccess"
            ],
            "type": "object"
          },
          "serviceProviderId": {
            "description": "Unique identifier for the API's service provider.\n",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "accessToken",
          "activeCredentialCount",
          "allowAccountSwitch",
          "authorizedUsers",
          "baseURL",
          "canAutoCreateCredential",
          "clientDescription",
          "clientId",
          "clientName",
          "clientType",
          "createdBy",
          "createdDate",
          "isLocked",
          "notificationEmails"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/api-client-detail-v3.yaml"
        }
      },
      "api-client-update-request-v3": {
        "additionalProperties": false,
        "properties": {
          "allowAccountSwitch": {
            "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
            "type": "boolean"
          },
          "apiAccess": {
            "additionalProperties": false,
            "description": "The APIs the API client can access.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "allAccessibleApis": {
                    "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                    "type": "boolean"
                  }
                },
                "required": [
                  "apis"
                ],
                "title": "Not all APIs accessible"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "allAccessibleApis": {
                    "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                    "type": "boolean"
                  }
                },
                "required": [
                  "allAccessibleApis"
                ],
                "title": "All APIs accessible"
              }
            ],
            "properties": {
              "allAccessibleApis": {
                "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n",
                "type": "boolean"
              },
              "apis": {
                "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "accessLevel": {
                      "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                      "enum": [
                        "READ-ONLY",
                        "READ-WRITE"
                      ],
                      "type": "string"
                    },
                    "apiId": {
                      "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "apiName": {
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "documentationUrl": {
                      "description": "Link to more information about the API.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "endPoint": {
                      "description": "Specifies where the API can access resources.\n",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "apiId",
                    "accessLevel"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "type": "object"
          },
          "authorizedUsers": {
            "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array"
          },
          "canAutoCreateCredential": {
            "default": false,
            "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
            "type": "boolean"
          },
          "clientDescription": {
            "description": "Descriptive label about the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "clientName": {
            "description": "Descriptive label for the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "groupAccess": {
            "additionalProperties": false,
            "description": "Specifies the API client's group access.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "cloneAuthorizedUserGroups": {
                    "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n",
                    "type": "boolean"
                  },
                  "groups": {
                    "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                    "items": {
                      "additionalProperties": false,
                      "description": "Groups the API client can access.\n",
                      "properties": {
                        "groupId": {
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1,
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "Blocks the API client access to the group's child groups.\n",
                          "type": "boolean"
                        },
                        "parentGroupId": {
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                          "type": "integer"
                        },
                        "roleDescription": {
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1,
                          "type": "string"
                        },
                        "roleId": {
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1,
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "additionalProperties": true,
                            "description": "A further nested group.\n",
                            "properties": {},
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/groups-nested.yaml"
                            }
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "groups",
                  "cloneAuthorizedUserGroups"
                ],
                "title": "Custom access"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "cloneAuthorizedUserGroups": {
                    "description": "Set it to `true` to clone the API client's group access from the authorized user.\n",
                    "type": "boolean"
                  },
                  "groups": {
                    "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                    "items": {
                      "additionalProperties": false,
                      "description": "Groups the API client can access.\n",
                      "properties": {
                        "groupId": {
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1,
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "Blocks the API client access to the group's child groups.\n",
                          "type": "boolean"
                        },
                        "parentGroupId": {
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n",
                          "type": "integer"
                        },
                        "roleDescription": {
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1,
                          "type": "string"
                        },
                        "roleId": {
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n",
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1,
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "additionalProperties": true,
                            "description": "A further nested group.\n",
                            "properties": {},
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/groups-nested.yaml"
                            }
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "cloneAuthorizedUserGroups"
                ],
                "title": "Cloned access"
              }
            ],
            "type": "object"
          },
          "ipAcl": {
            "additionalProperties": false,
            "description": "Specifies the API client's IP list restriction.\n",
            "properties": {
              "cidr": {
                "description": "IP addresses or CIDR blocks the API client can access.\n",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "enable": {
                "description": "Enables API client's access to the IP ACL.\n",
                "type": "boolean"
              }
            },
            "required": [
              "enable",
              "cidr"
            ],
            "type": "object"
          },
          "notificationEmails": {
            "description": "Email addresses to notify users of expiring credentials.\n",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array"
          },
          "purgeOptions": {
            "additionalProperties": false,
            "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
            "properties": {
              "canPurgeByCacheTag": {
                "description": "Whether the API client can purge content by cache tag.\n",
                "type": "boolean"
              },
              "canPurgeByCpcode": {
                "description": "Whether the API client can purge content by CP code.\n",
                "type": "boolean"
              },
              "cpcodeAccess": {
                "additionalProperties": false,
                "description": "CP codes the API client can purge.\n",
                "properties": {
                  "allCurrentAndNewCpcodes": {
                    "description": "Whether the API client can purge content by cache tag.\n",
                    "type": "boolean"
                  },
                  "cpcodes": {
                    "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "allCurrentAndNewCpcodes",
                  "cpcodes"
                ],
                "type": "object"
              }
            },
            "required": [
              "canPurgeByCacheTag",
              "canPurgeByCpcode",
              "cpcodeAccess"
            ],
            "type": "object"
          }
        },
        "required": [
          "apiAccess",
          "groupAccess",
          "authorizedUsers"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/api-client-update-request-v3.yaml"
        }
      },
      "self-account-switch-keys": {
        "description": "Encapsulates a collection of contexts the client can manage.\n",
        "items": {
          "additionalProperties": false,
          "properties": {
            "accountName": {
              "description": "Descriptive label for the account.\n",
              "minLength": 1,
              "type": "string"
            },
            "accountSwitchKey": {
              "description": "The identifier for an account other than your API client's default.\n",
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "accountName",
            "accountSwitchKey"
          ],
          "type": "object"
        },
        "minItems": 0,
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/self-account-switch-keys.yaml"
        }
      },
      "credential-nosecret": {
        "additionalProperties": false,
        "properties": {
          "actions": {
            "additionalProperties": false,
            "description": "Specifies activities available for the credential.\n",
            "properties": {
              "activate": {
                "description": "Whether you can activate the credential.\n",
                "type": "boolean"
              },
              "deactivate": {
                "description": "Whether you can deactivate the credential.\n",
                "type": "boolean"
              },
              "delete": {
                "description": "Whether you can remove the credential.\n",
                "type": "boolean"
              },
              "editDescription": {
                "description": "Whether you can modify the credential's description.\n",
                "type": "boolean"
              },
              "editExpiration": {
                "description": "Whether you can modify the credential's expiration date.\n",
                "type": "boolean"
              }
            },
            "required": [
              "delete",
              "activate",
              "deactivate",
              "editDescription",
              "editExpiration"
            ],
            "type": "object"
          },
          "clientToken": {
            "description": "Part of the credential that identifies the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "createdOn": {
            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "credentialId": {
            "description": "Unique identifier each credential.\n",
            "minimum": 1,
            "type": "integer"
          },
          "description": {
            "description": "Descriptive label for the credential.\n",
            "minLength": 0,
            "type": "string"
          },
          "expiresOn": {
            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
            "format": "date-time",
            "type": "string"
          },
          "maxAllowedExpiry": {
            "description": "An ISO 8601 timestamp limit for credentials expiring.\n",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ],
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "credentialId",
          "clientToken",
          "createdOn",
          "expiresOn",
          "status",
          "description",
          "maxAllowedExpiry"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/credential-nosecret.yaml"
        }
      },
      "credentials": {
        "description": "API client's credentials.\n",
        "items": {
          "additionalProperties": false,
          "properties": {
            "actions": {
              "additionalProperties": false,
              "description": "Specifies activities available for the credential.\n",
              "properties": {
                "activate": {
                  "description": "Whether you can activate the credential.\n",
                  "type": "boolean"
                },
                "deactivate": {
                  "description": "Whether you can deactivate the credential.\n",
                  "type": "boolean"
                },
                "delete": {
                  "description": "Whether you can remove the credential.\n",
                  "type": "boolean"
                },
                "editDescription": {
                  "description": "Whether you can modify the credential's description.\n",
                  "type": "boolean"
                },
                "editExpiration": {
                  "description": "Whether you can modify the credential's expiration date.\n",
                  "type": "boolean"
                }
              },
              "required": [
                "delete",
                "activate",
                "deactivate",
                "editDescription",
                "editExpiration"
              ],
              "type": "object"
            },
            "clientToken": {
              "description": "Part of the credential that identifies the API client.\n",
              "minLength": 1,
              "type": "string"
            },
            "createdOn": {
              "description": "ISO 8601 timestamp indicating when the credential was created.\n",
              "format": "date-time",
              "type": "string"
            },
            "credentialId": {
              "description": "Unique identifier each credential.\n",
              "minimum": 1,
              "type": "integer"
            },
            "description": {
              "description": "Descriptive label for the credential.\n",
              "minLength": 0,
              "type": "string"
            },
            "expiresOn": {
              "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
              "format": "date-time",
              "type": "string"
            },
            "maxAllowedExpiry": {
              "description": "An ISO 8601 timestamp limit for credentials expiring.\n",
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED"
              ],
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "credentialId",
            "clientToken",
            "createdOn",
            "expiresOn",
            "status",
            "description",
            "maxAllowedExpiry"
          ],
          "type": "object",
          "x-akamai": {
            "file-path": "schemas/credential-nosecret.yaml"
          }
        },
        "minItems": 0,
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/credentials.yaml"
        }
      },
      "credential": {
        "additionalProperties": false,
        "description": "Encapsulates all members for the credential data structure.\n",
        "properties": {
          "clientSecret": {
            "description": "The client secret.\n",
            "minLength": 1,
            "type": "string"
          },
          "clientToken": {
            "description": "Part of the credential that identifies the API client.\n",
            "minLength": 1,
            "type": "string"
          },
          "createdOn": {
            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "credentialId": {
            "description": "Unique identifier each credential.\n",
            "minimum": 1,
            "type": "integer"
          },
          "description": {
            "description": "Descriptive label for the credential.\n",
            "minLength": 0,
            "type": "string"
          },
          "expiresOn": {
            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ],
            "type": "string"
          }
        },
        "required": [
          "credentialId",
          "clientToken",
          "createdOn",
          "expiresOn",
          "status",
          "description"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/credential.yaml"
        }
      },
      "update-credential": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "description": "Descriptive label for the credential.\n",
            "minLength": 0,
            "type": "string"
          },
          "expiresOn": {
            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch the status between `ACTIVE` and `INACTIVE`. You can't reactivate `DELETED` credentials.\n",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ],
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "expiresOn",
          "status"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/update-credential.yaml"
        }
      },
      "client-account-switch-keys": {
        "description": "Encapsulates a collection of contexts the client can manage.\n",
        "items": {
          "additionalProperties": false,
          "properties": {
            "accountName": {
              "description": "Descriptive label for the account.\n",
              "minLength": 1,
              "type": "string"
            },
            "accountSwitchKey": {
              "description": "The identifier for an account other than your API client's default.\n",
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "accountName",
            "accountSwitchKey"
          ],
          "type": "object"
        },
        "minItems": 0,
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/client-account-switch-keys.yaml"
        }
      }
    },
    "headers": {
      "location": {
        "description": "A URL path to the newly created object.\n",
        "schema": {
          "type": "string"
        },
        "x-akamai": {
          "file-path": "headers/location.yaml"
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID",
    "file-path": "09-api-clients.yaml"
  }
}