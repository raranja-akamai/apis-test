{
  "openapi": "3.0.0",
  "info": {
    "title": "Credentials",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v2"
    }
  ],
  "paths": {
    "/api-clients/self": {
      "x-akamai": {
        "path-info": "/api-clients/self"
      },
      "get": {
        "operationId": "get-api-clients-self",
        "summary": "Get your client",
        "tags": [
          "Self"
        ],
        "description": "Returns details about your API client.\n",
        "responses": {
          "200": {
            "description": "The response returns the API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "clientId": "nmchqgmuigems5g4",
                  "clientName": "Client Name",
                  "clientDescription": "reporting client",
                  "uiUserName": "johnSmith",
                  "uiIdentityId": "1-abcd",
                  "activeCredentialCount": 1,
                  "createdDate": "2020-02-24T22:43:12.000Z",
                  "createdBy": "adevi",
                  "locked": false,
                  "useOwnerGroups": false,
                  "allAccessibleApis": false,
                  "allowAccountSwitch": false,
                  "serviceProviderId": 1,
                  "baseURL": "https://akaa-ylebtkmgfpnm3p4y-syw6bxjr2y4fgo5q.luna.akamaiapis.net/",
                  "accessToken": "akab-abchgtv6kebvuctv-q2iopin6rtw68875",
                  "notificationList": [
                    "john.smith@example.com"
                  ],
                  "actions": {
                    "editGroups": true,
                    "editApis": true,
                    "lock": true,
                    "unlock": false,
                    "editAuth": true,
                    "edit": true,
                    "editSwitchAccount": false,
                    "transfer": true,
                    "delete": false,
                    "deactivateAll": true
                  },
                  "ccuParams": {
                    "purgeByCpcode": false,
                    "purgeByCacheTag": false,
                    "purgeCpcodes": [
                      1234567
                    ]
                  },
                  "apis": [
                    {
                      "apiId": 3105,
                      "apiName": "Adaptive Acceleration",
                      "description": "Adaptive Acceleration",
                      "endPoint": "/adaptive-acceleration",
                      "documentationUrl": "https://developer.akamai.com/api/core_features/adaptive_acceleration/v1.html",
                      "grantScope": "READ-WRITE"
                    }
                  ],
                  "credentials": [
                    {
                      "credentialId": 123456,
                      "clientToken": "client-token-for-cred",
                      "status": "ACTIVE",
                      "createdOn": "2020-02-24T22:43:12.000Z",
                      "description": "reporting client",
                      "expiresOn": "2021-02-24T22:43:12.000Z",
                      "actions": {
                        "deactivate": true,
                        "delete": false,
                        "activate": false,
                        "editDescription": true,
                        "editExpiration": true
                      }
                    }
                  ],
                  "groups": [
                    {
                      "groupId": 32145,
                      "roleId": 14,
                      "isBlocked": false,
                      "subGroups": [
                        {
                          "groupId": 32145,
                          "roleId": null,
                          "isBlocked": false,
                          "subGroups": []
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "This object encapsulates the response schema for creating API client.\n",
                  "additionalProperties": false,
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. Tokens are unique per client.\n"
                    },
                    "actions": {
                      "type": "object",
                      "description": "Encapsulates actions the API client may perform.\n",
                      "additionalProperties": false,
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be deleted.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "When enabled, all credentials of the API client can be deactivated.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be updated.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "When enabled, the `apis` of the API client can be updated.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "When enabled, the `groups` or `apis` of the API client can be updated.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "When enabled, the `groups` of the API client can be updated.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "When enabled, the API client option to manage many accounts can be updated.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be locked if it's currently unlocked.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be transferred to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be unlocked if it's currently locked.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client.\n"
                    },
                    "allAccessibleApis": {
                      "type": "boolean",
                      "description": "Indicates if the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "If you can use the API client to manage more than one account.\n"
                    },
                    "apis": {
                      "type": "array",
                      "description": "Lists APIs you'd like to use. It's a specific set of accessible APIs only when `allAccessibleApis` is disabled.\n",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of the API.\n"
                          },
                          "apiId": {
                            "type": "integer",
                            "description": "A unique identifier for each API.\n"
                          },
                          "apiName": {
                            "type": "string",
                            "description": "The name of an API, like Diagnostic Tools, or Identity Management: API.\n"
                          },
                          "documentationUrl": {
                            "type": "string",
                            "description": "Link to more information about the API.\n"
                          },
                          "endPoint": {
                            "type": "string",
                            "description": "The endpoint to access a API.\n"
                          },
                          "grantScope": {
                            "type": "string",
                            "description": "The level of access you give to an API client on a per API basis.\n"
                          }
                        }
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n"
                    },
                    "ccuParams": {
                      "type": "object",
                      "description": "Additional data needed to configure the client for access to CCU API in `apis`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "purgeByCacheTag": {
                          "type": "boolean",
                          "description": "When enabled, the API client can purge content by cache tag.\n"
                        },
                        "purgeByCpcode": {
                          "type": "boolean",
                          "description": "When enabled, the API client can purge content by CP code.\n"
                        },
                        "purgeCpcodes": {
                          "type": "array",
                          "description": "Lists all CP codes that your API client is allowed to purge.\n",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Description of the API client.\n"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for an API client.\n"
                    },
                    "clientName": {
                      "type": "string",
                      "description": "The API client's human-readable name.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "A collection of credentials.\n",
                      "items": {
                        "type": "object",
                        "description": "Details of a credential.\n",
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A descriptive label for the client.\n"
                          },
                          "actions": {
                            "type": "object",
                            "description": "Encapsulates the different ways you can edit an API client, including changing its owner, accessing rights to Control Center, or deleting it.\n",
                            "additionalProperties": false,
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "When enabled, the credential can be deleted.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "When enabled, the credential can be activated.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "When enabled, the credential can be deactivated.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "When enabled, credential's description can be edited.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "When enabled, credential's expiration date can be updated.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Identifies the API client.\n"
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "A unique identifier for each credential.\n"
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates whether the credential can be used. `ACTIVE` means the credential can be used. `INACTIVE` means the credential isn't active and can't be used, and `DELETED` means the credential no longer exists.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groups": {
                      "type": "array",
                      "description": "The groups an API client can access.\n",
                      "items": {
                        "type": "object",
                        "description": "The groups an API client can access.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "The human-readable description for a role.\n"
                          },
                          "parentGroupId": {
                            "type": "string",
                            "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "If `true`, the API client has access to the group's parent, but can't access the child group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "locked": {
                      "type": "boolean",
                      "description": "When enabled, you can lock the client to prevent anyone from using it to access services on Control Center.\n"
                    },
                    "notificationList": {
                      "type": "array",
                      "description": "List of email addresses to notify of any expiring credentials.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "A unique identifier for a service provider.\n"
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "The unique identifier of the user the API client is being created for.\n"
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The human-readable username of the person who owns the API client.\n"
                    },
                    "useOwnerGroups": {
                      "type": "boolean",
                      "description": "When enabled, grants the client the same group access as the owner. Otherwise access is limited to the groups specified in `groups`.\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/self/account-switch-keys": {
      "x-akamai": {
        "path-info": "/api-clients/self/account-switch-keys"
      },
      "get": {
        "operationId": "get-self-account-switch-keys",
        "summary": "List your account switch keys",
        "tags": [
          "Self"
        ],
        "description": "The response object contains the `accountSwitchKeys` and account names you can access based on the permissions of your API client. Once you have the `accountSwitchKeys`, you can make an API call to another account. To learn more, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters in the string to filter the results.\n",
            "schema": {
              "type": "string",
              "example": "Rae Inc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists account switch keys.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Main Street Corporation",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "This object encapsulates a collection of contexts the client can manage.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "properties": {
                      "accountName": {
                        "type": "string",
                        "description": "The name you supply for an account.\n",
                        "minLength": 1
                      },
                      "accountSwitchKey": {
                        "type": "string",
                        "description": "The identifier for an account other than your API client's default.\n",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/self/credentials": {
      "x-akamai": {
        "path-info": "/api-clients/self/credentials"
      },
      "post": {
        "operationId": "post-self-credentials",
        "summary": "Create your credential",
        "tags": [
          "Self"
        ],
        "description": "Creates a new credential for your API client. Only you may create credentials for this client. Credentials are in `active` status at creation. They expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](ref:put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID` for future use. This is the only time you'll see the client secret. Save the credential at this time to avoid the need to create a new one.\n",
        "responses": {
          "201": {
            "description": "The response returns the created credentials.\n",
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 14111,
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "clientSecret": "aasd3adHRjBfroGqYC/rc/jDaZTZxssdaa/YjD6uA=",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE",
                  "description": "New credential for John."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This object encapsulates all members for the credential data structure.\n",
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.\n",
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Identifies the API client.\n",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "A unique identifier for each credential.\n",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Lets you add your own notes or description for your credential.\n",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Shows whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-self-credentials",
        "summary": "List your credentials",
        "tags": [
          "Self"
        ],
        "description": "Returns a list of your API client's credentials.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists credentials.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "credentialId": 99999,
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE",
                    "description": "John's access to Property Manager"
                  },
                  {
                    "credentialId": 88888,
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkouoiuo",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE",
                    "description": "John's access to Event Center"
                  }
                ],
                "schema": {
                  "description": "A collection of credentials.\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies credentials.\n",
                    "properties": {
                      "clientToken": {
                        "description": "Identifies the API client.\n",
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "A unique identifier for each credential.\n",
                        "type": "integer"
                      },
                      "description": {
                        "description": "Notes or description for credentials.\n",
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Indicates credentials' status.\n",
                        "type": "string"
                      }
                    },
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/self/credentials/deactivate": {
      "x-akamai": {
        "path-info": "/api-clients/self/credentials/deactivate"
      },
      "post": {
        "operationId": "post-self-credentials-deactivate",
        "summary": "Deactivate your credentials",
        "tags": [
          "Self"
        ],
        "description": "Deactivates all credentials for your API client. This doesn't delete the API client or the credentials. To deactivate a single credential, use the [Update your credential](ref:put-self-credential) operation and set the status to `INACTIVE`.\n",
        "responses": {
          "204": {
            "description": "Credentials deactivated.\n"
          }
        }
      }
    },
    "/api-clients/self/credentials/{credentialId}": {
      "x-akamai": {
        "path-info": "/api-clients/self/credentials/{credentialId}"
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        }
      ],
      "get": {
        "operationId": "get-self-credential",
        "summary": "Get your credential",
        "tags": [
          "Self"
        ],
        "description": "Returns details of a specific credential for your API client. To change the credential's expiration date or toggle its activation status, run the [Update a credential](ref:put-client-credential) operation.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns the credential.\n",
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 99999,
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "status": "ACTIVE",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies credentials.\n",
                  "properties": {
                    "clientToken": {
                      "description": "Identifies the API client.\n",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "A unique identifier for each credential.\n",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Notes or description for credentials.\n",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates credentials' status.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-self-credential",
        "summary": "Update your credential",
        "tags": [
          "Self"
        ],
        "description": "Updates the details of a specific credential for your API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](ref:rotate-credentials).\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "credentialId": 99999,
                "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                "status": "ACTIVE",
                "createdOn": "2020-11-01T23:06:59.000Z",
                "description": "Credential with no secret",
                "expiresOn": "2021-11-01T23:06:59.000Z"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies credentials.\n",
                "properties": {
                  "clientToken": {
                    "description": "Identifies the API client.\n",
                    "type": "string"
                  },
                  "createdOn": {
                    "description": "__Read-only__ ISO 8601 timestamp indicating when credentials were created.\n",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "credentialId": {
                    "description": "A unique identifier for each credential.\n",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Notes or description for credentials.\n",
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "__Read-only__ ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "status": {
                    "description": "Identifies the condition of the credential.\n",
                    "type": "string"
                  }
                },
                "required": [
                  "expiresOn",
                  "status",
                  "credentialId",
                  "clientToken",
                  "createdOn",
                  "description"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated credential.\n",
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 99999,
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "status": "ACTIVE",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies credentials.\n",
                  "properties": {
                    "clientToken": {
                      "description": "Identifies the API client.\n",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "A unique identifier for each credential.\n",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Notes or description for credentials.\n",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates credentials' status.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-self-credential",
        "summary": "Remove your credential",
        "tags": [
          "Self"
        ],
        "description": "Deletes a specific credential from your API client. You can only delete inactive credentials.\n",
        "responses": {
          "204": {
            "description": "Credential removed.\n"
          }
        }
      }
    },
    "/api-clients/self/credentials/{credentialId}/deactivate": {
      "x-akamai": {
        "path-info": "/api-clients/self/credentials/{credentialId}/deactivate"
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        }
      ],
      "post": {
        "operationId": "post-self-credential-deactivate",
        "summary": "Deactivate your credential",
        "tags": [
          "Self"
        ],
        "description": "Deactivates a specific credential for your API client. This doesn't delete the client or the credentials. To update a specific credential, run the [Update your credential](ref:put-self-credential) operation.\n",
        "responses": {
          "204": {
            "description": "Credential deactivated.\n"
          }
        }
      }
    },
    "/api-clients/{clientId}": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "A unique identifier for each API client.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "nmchqgmuigems5g4"
          }
        }
      ],
      "get": {
        "operationId": "get-api-client",
        "summary": "Get a client",
        "tags": [
          "Clients"
        ],
        "description": "Returns details about a given API client.\n",
        "responses": {
          "200": {
            "description": "The operation returns the API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "clientId": "nmchqgmuigems5g4",
                  "clientName": "Client Name",
                  "clientDescription": "reporting client",
                  "uiUserName": "johnSmith",
                  "uiIdentityId": "1-abcd",
                  "activeCredentialCount": 1,
                  "createdDate": "2020-02-24T22:43:12.000Z",
                  "createdBy": "adevi",
                  "locked": false,
                  "useOwnerGroups": false,
                  "allAccessibleApis": false,
                  "allowAccountSwitch": false,
                  "serviceProviderId": 1,
                  "baseURL": "https://akaa-ylebtkmgfpnm3p4y-syw6bxjr2y4fgo5q.luna.akamaiapis.net/",
                  "accessToken": "akab-abchgtv6kebvuctv-q2iopin6rtw68875",
                  "notificationList": [
                    "john.smith@example.com"
                  ],
                  "actions": {
                    "editGroups": true,
                    "editApis": true,
                    "lock": true,
                    "unlock": false,
                    "editAuth": true,
                    "edit": true,
                    "editSwitchAccount": false,
                    "transfer": true,
                    "delete": false,
                    "deactivateAll": true
                  },
                  "ccuParams": {
                    "purgeByCpcode": false,
                    "purgeByCacheTag": false,
                    "purgeCpcodes": [
                      1234567
                    ]
                  },
                  "apis": [
                    {
                      "apiId": 3105,
                      "apiName": "Adaptive Acceleration",
                      "description": "Adaptive Acceleration",
                      "endPoint": "/adaptive-acceleration",
                      "documentationUrl": "https://developer.akamai.com/api/core_features/adaptive_acceleration/v1.html",
                      "grantScope": "READ-WRITE"
                    }
                  ],
                  "credentials": [
                    {
                      "credentialId": 123456,
                      "clientToken": "client-token-for-cred",
                      "status": "ACTIVE",
                      "createdOn": "2020-02-24T22:43:12.000Z",
                      "description": "reporting client",
                      "expiresOn": "2021-02-24T22:43:12.000Z",
                      "actions": {
                        "deactivate": true,
                        "delete": false,
                        "activate": false,
                        "editDescription": true,
                        "editExpiration": true
                      }
                    }
                  ],
                  "groups": [
                    {
                      "groupId": 32145,
                      "roleId": 14,
                      "isBlocked": false,
                      "subGroups": [
                        {
                          "groupId": 32145,
                          "roleId": null,
                          "isBlocked": false,
                          "subGroups": []
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "This object encapsulates the response schema for creating API client.\n",
                  "additionalProperties": false,
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. Tokens are unique per client.\n"
                    },
                    "actions": {
                      "type": "object",
                      "description": "Encapsulates actions the API client may perform.\n",
                      "additionalProperties": false,
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be deleted.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "When enabled, all credentials of the API client can be deactivated.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be updated.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "When enabled, the `apis` of the API client can be updated.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "When enabled, the `groups` or `apis` of the API client can be updated.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "When enabled, the `groups` of the API client can be updated.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "When enabled, the API client option to manage many accounts can be updated.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be locked if it's currently unlocked.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be transferred to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "When enabled, the API client can be unlocked if it's currently locked.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client.\n"
                    },
                    "allAccessibleApis": {
                      "type": "boolean",
                      "description": "Indicates if the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "If you can use the API client to manage more than one account.\n"
                    },
                    "apis": {
                      "type": "array",
                      "description": "Lists APIs you'd like to use. It's a specific set of accessible APIs only when `allAccessibleApis` is disabled.\n",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description of the API.\n"
                          },
                          "apiId": {
                            "type": "integer",
                            "description": "A unique identifier for each API.\n"
                          },
                          "apiName": {
                            "type": "string",
                            "description": "The name of an API, like Diagnostic Tools, or Identity Management: API.\n"
                          },
                          "documentationUrl": {
                            "type": "string",
                            "description": "Link to more information about the API.\n"
                          },
                          "endPoint": {
                            "type": "string",
                            "description": "The endpoint to access a API.\n"
                          },
                          "grantScope": {
                            "type": "string",
                            "description": "The level of access you give to an API client on a per API basis.\n"
                          }
                        }
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n"
                    },
                    "ccuParams": {
                      "type": "object",
                      "description": "Additional data needed to configure the client for access to CCU API in `apis`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "purgeByCacheTag": {
                          "type": "boolean",
                          "description": "When enabled, the API client can purge content by cache tag.\n"
                        },
                        "purgeByCpcode": {
                          "type": "boolean",
                          "description": "When enabled, the API client can purge content by CP code.\n"
                        },
                        "purgeCpcodes": {
                          "type": "array",
                          "description": "Lists all CP codes that your API client is allowed to purge.\n",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Description of the API client.\n"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for an API client.\n"
                    },
                    "clientName": {
                      "type": "string",
                      "description": "The API client's human-readable name.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "A collection of credentials.\n",
                      "items": {
                        "type": "object",
                        "description": "Details of a credential.\n",
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A descriptive label for the client.\n"
                          },
                          "actions": {
                            "type": "object",
                            "description": "Encapsulates the different ways you can edit an API client, including changing its owner, accessing rights to Control Center, or deleting it.\n",
                            "additionalProperties": false,
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "When enabled, the credential can be deleted.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "When enabled, the credential can be activated.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "When enabled, the credential can be deactivated.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "When enabled, credential's description can be edited.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "When enabled, credential's expiration date can be updated.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Identifies the API client.\n"
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "A unique identifier for each credential.\n"
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates whether the credential can be used. `ACTIVE` means the credential can be used. `INACTIVE` means the credential isn't active and can't be used, and `DELETED` means the credential no longer exists.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groups": {
                      "type": "array",
                      "description": "The groups an API client can access.\n",
                      "items": {
                        "type": "object",
                        "description": "The groups an API client can access.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "The human-readable description for a role.\n"
                          },
                          "parentGroupId": {
                            "type": "string",
                            "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "If `true`, the API client has access to the group's parent, but can't access the child group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "locked": {
                      "type": "boolean",
                      "description": "When enabled, you can lock the client to prevent anyone from using it to access services on Control Center.\n"
                    },
                    "notificationList": {
                      "type": "array",
                      "description": "List of email addresses to notify of any expiring credentials.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "A unique identifier for a service provider.\n"
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "The unique identifier of the user the API client is being created for.\n"
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The human-readable username of the person who owns the API client.\n"
                    },
                    "useOwnerGroups": {
                      "type": "boolean",
                      "description": "When enabled, grants the client the same group access as the owner. Otherwise access is limited to the groups specified in `groups`.\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/{clientId}/account-switch-keys": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/account-switch-keys"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "A unique identifier for each API client.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "nmchqgmuigems5g4"
          }
        }
      ],
      "get": {
        "operationId": "get-client-account-switch-keys",
        "summary": "List account switch keys",
        "tags": [
          "Clients"
        ],
        "description": "The response object contains the `accountSwitchKeys` and `accountNames` you can access based on the permissions of the client. Once you have the `accountSwitchKeys`, you can make an API call to another account. To learn more, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters in the string to filter the results.\n",
            "schema": {
              "type": "string",
              "example": "Rae Inc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists account switch keys.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Main Street Corporation",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "This object encapsulates a collection of contexts the client can manage.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "properties": {
                      "accountName": {
                        "type": "string",
                        "description": "The name you supply for an account.\n",
                        "minLength": 1
                      },
                      "accountSwitchKey": {
                        "type": "string",
                        "description": "The identifier for an account other than your API client's default.\n",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/{clientId}/credentials": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/credentials"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "A unique identifier for each API client.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "nmchqgmuigems5g4"
          }
        }
      ],
      "post": {
        "operationId": "post-client-credentials",
        "summary": "Create a credential",
        "tags": [
          "Clients"
        ],
        "description": "Creates a new credential for a given API client. Only the client's owner may create credentials for the client. Credentials are in `active` status at creation. They expire two years from their creation date. However, when the API client's permissions are based on Control Center permissions, credentials expire differently and follow the same rotation schedule listed for user passwords on those accounts. Run the [Update a credential](ref:put-client-credential) operation to change the expiration date, description, or status. Save the values from the response, such as the `credentialID`, for future use. This is the only time you'll see the client secret. Save the credential at this time to avoid the need to create a new one.\n",
        "responses": {
          "201": {
            "description": "The response returns the created credential.\n",
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 14111,
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "clientSecret": "aasd3adHRjBfroGqYC/rc/jDaZTZxssdaa/YjD6uA=",
                  "createdOn": "2018-11-01T23:06:59.000Z",
                  "expiresOn": "2020-11-01T23:06:59.000Z",
                  "status": "ACTIVE",
                  "description": "New credential for John."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "This object encapsulates all members for the credential data structure.\n",
                  "properties": {
                    "clientSecret": {
                      "description": "The client secret.\n",
                      "type": "string"
                    },
                    "clientToken": {
                      "description": "Identifies the API client.\n",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "A unique identifier for each credential.\n",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Lets you add your own notes or description for your credential.\n",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Shows whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.\n",
                      "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DELETED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-client-credentials",
        "summary": "List credentials",
        "tags": [
          "Clients"
        ],
        "description": "Returns all credentials for a given API client.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists credentials.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "credentialId": 99999,
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "ACTIVE",
                    "description": "John's access to Property Manager"
                  },
                  {
                    "credentialId": 88888,
                    "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkouoiuo",
                    "createdOn": "2019-11-01T23:06:59.000Z",
                    "expiresOn": "2020-11-01T23:06:59.000Z",
                    "status": "INACTIVE",
                    "description": "John's access to Event Center"
                  }
                ],
                "schema": {
                  "description": "A collection of credentials.\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "Specifies credentials.\n",
                    "properties": {
                      "clientToken": {
                        "description": "Identifies the API client.\n",
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "credentialId": {
                        "description": "A unique identifier for each credential.\n",
                        "type": "integer"
                      },
                      "description": {
                        "description": "Notes or description for credentials.\n",
                        "type": "string"
                      },
                      "expiresOn": {
                        "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "Indicates credentials' status.\n",
                        "type": "string"
                      }
                    },
                    "required": [
                      "credentialId",
                      "clientToken",
                      "createdOn",
                      "expiresOn",
                      "status",
                      "description"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/credential-nosecret.yaml"
                    }
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/credentials.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/{clientId}/credentials/deactivate": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/credentials/deactivate"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "A unique identifier for each API client.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "nmchqgmuigems5g4"
          }
        }
      ],
      "post": {
        "operationId": "post-client-credentials-deactivate",
        "summary": "Deactivate credentials",
        "tags": [
          "Clients"
        ],
        "description": "Deactivates all credentials for a given API client. This doesn't delete the API client or the credentials. To deactivate a single credential, run the [Update a credential](ref:put-client-credential) operation and set the status to `INACTIVE`.\n",
        "responses": {
          "204": {
            "description": "Credentials deactivated.\n"
          }
        }
      }
    },
    "/api-clients/{clientId}/credentials/{credentialId}": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/credentials/{credentialId}"
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        },
        {
          "name": "clientId",
          "in": "path",
          "description": "A unique identifier for each API client.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "nmchqgmuigems5g4"
          }
        }
      ],
      "get": {
        "operationId": "get-client-credential",
        "summary": "Get a credential",
        "tags": [
          "Clients"
        ],
        "description": "Returns details of a specific credential for a given API client. To change the credential's expiration date or toggle its activation status, run the [Update credential for an API client](ref:put-client-credential) operation.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns the credential.\n",
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 99999,
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "status": "ACTIVE",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies credentials.\n",
                  "properties": {
                    "clientToken": {
                      "description": "Identifies the API client.\n",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "A unique identifier for each credential.\n",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Notes or description for credentials.\n",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates credentials' status.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-client-credential",
        "summary": "Update a credential",
        "tags": [
          "Clients"
        ],
        "description": "Updates the details of a specific credential for a given API client. You can change the expiration date, description, or toggle the activation status. This isn't the same as rotating a credential. For details, see [Rotate credentials](ref:rotate-credentials).\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "credentialId": 99999,
                "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                "status": "ACTIVE",
                "createdOn": "2020-11-01T23:06:59.000Z",
                "description": "Credential with no secret",
                "expiresOn": "2021-11-01T23:06:59.000Z"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies credentials.\n",
                "properties": {
                  "clientToken": {
                    "description": "Identifies the API client.\n",
                    "type": "string"
                  },
                  "createdOn": {
                    "description": "__Read-only__ ISO 8601 timestamp indicating when credentials were created.\n",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "credentialId": {
                    "description": "A unique identifier for each credential.\n",
                    "type": "integer"
                  },
                  "description": {
                    "description": "Notes or description for credentials.\n",
                    "type": "string"
                  },
                  "expiresOn": {
                    "description": "__Read-only__ ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "status": {
                    "description": "Identifies the condition of the credential.\n",
                    "type": "string"
                  }
                },
                "required": [
                  "expiresOn",
                  "status",
                  "credentialId",
                  "clientToken",
                  "createdOn",
                  "description"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-credential.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated credential.\n",
            "content": {
              "application/json": {
                "example": {
                  "credentialId": 99999,
                  "clientToken": "akaa-abcdakjsdkfnanva-abcdakjsdkfnanv",
                  "status": "ACTIVE",
                  "createdOn": "2020-11-01T23:06:59.000Z",
                  "description": "Credential with no secret",
                  "expiresOn": "2021-11-01T23:06:59.000Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies credentials.\n",
                  "properties": {
                    "clientToken": {
                      "description": "Identifies the API client.\n",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "credentialId": {
                      "description": "A unique identifier for each credential.\n",
                      "type": "integer"
                    },
                    "description": {
                      "description": "Notes or description for credentials.\n",
                      "type": "string"
                    },
                    "expiresOn": {
                      "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Indicates credentials' status.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialId",
                    "clientToken",
                    "createdOn",
                    "expiresOn",
                    "status",
                    "description"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/credential-nosecret.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-client-credential",
        "summary": "Remove a credential",
        "tags": [
          "Clients"
        ],
        "description": "Deletes a specific credential from a given API client. You can only delete inactive credentials.\n",
        "responses": {
          "204": {
            "description": "Credential removed.\n"
          }
        }
      }
    },
    "/api-clients/{clientId}/credentials/{credentialId}/deactivate": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/credentials/{credentialId}/deactivate"
      },
      "parameters": [
        {
          "description": "A credential's unique identifier.\n",
          "in": "path",
          "name": "credentialId",
          "required": true,
          "schema": {
            "example": 123456,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/credential-id-path.yaml"
          }
        },
        {
          "name": "clientId",
          "in": "path",
          "description": "A unique identifier for each API client.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "nmchqgmuigems5g4"
          }
        }
      ],
      "post": {
        "operationId": "post-client-credential-deactivate",
        "summary": "Deactivate a credential",
        "tags": [
          "Clients"
        ],
        "description": "Deactivates a specific credential for a given API client. This doesn't delete the API client or the other credentials.\n",
        "responses": {
          "204": {
            "description": "Credential deactivated.\n"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "groups-nested": {
        "type": "object",
        "description": "A further-nested group.\n"
      },
      "groups": {
        "type": "object",
        "description": "The groups an API client can access.\n",
        "additionalProperties": false,
        "properties": {
          "groupName": {
            "type": "string",
            "description": "A group's name.\n"
          },
          "groupId": {
            "type": "integer",
            "description": "A unique identifier for each group.\n"
          },
          "roleId": {
            "type": "integer",
            "description": "A unique identifier for each role.\n"
          },
          "roleName": {
            "type": "string",
            "description": "The role's name.\n"
          },
          "roleDescription": {
            "type": "string",
            "description": "The human-readable description for a role.\n"
          },
          "parentGroupId": {
            "type": "string",
            "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
          },
          "isBlocked": {
            "type": "boolean",
            "description": "If `true`, the API client has access to the group's parent, but can't access the child group.\n"
          },
          "subGroups": {
            "type": "array",
            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
            "items": {
              "type": "object",
              "description": "A further-nested group.\n"
            }
          }
        }
      },
      "api-client": {
        "type": "object",
        "description": "This object encapsulates the response schema for creating API client.\n",
        "additionalProperties": false,
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Part of the client secret that identifies your API client and lets you access applications and resources. Tokens are unique per client.\n"
          },
          "actions": {
            "type": "object",
            "description": "Encapsulates actions the API client may perform.\n",
            "additionalProperties": false,
            "properties": {
              "delete": {
                "type": "boolean",
                "description": "When enabled, the API client can be deleted.\n"
              },
              "deactivateAll": {
                "type": "boolean",
                "description": "When enabled, all credentials of the API client can be deactivated.\n"
              },
              "edit": {
                "type": "boolean",
                "description": "When enabled, the API client can be updated.\n"
              },
              "editApis": {
                "type": "boolean",
                "description": "When enabled, the `apis` of the API client can be updated.\n"
              },
              "editAuth": {
                "type": "boolean",
                "description": "When enabled, the `groups` or `apis` of the API client can be updated.\n"
              },
              "editGroups": {
                "type": "boolean",
                "description": "When enabled, the `groups` of the API client can be updated.\n"
              },
              "editSwitchAccount": {
                "type": "boolean",
                "description": "When enabled, the API client option to manage many accounts can be updated.\n"
              },
              "lock": {
                "type": "boolean",
                "description": "When enabled, the API client can be locked if it's currently unlocked.\n"
              },
              "transfer": {
                "type": "boolean",
                "description": "When enabled, the API client can be transferred to a new owner.\n"
              },
              "unlock": {
                "type": "boolean",
                "description": "When enabled, the API client can be unlocked if it's currently locked.\n"
              }
            }
          },
          "activeCredentialCount": {
            "type": "integer",
            "description": "Number of credentials active for the API client.\n"
          },
          "allAccessibleApis": {
            "type": "boolean",
            "description": "Indicates if the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
          },
          "allowAccountSwitch": {
            "type": "boolean",
            "description": "If you can use the API client to manage more than one account.\n"
          },
          "apis": {
            "type": "array",
            "description": "Lists APIs you'd like to use. It's a specific set of accessible APIs only when `allAccessibleApis` is disabled.\n",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Description of the API.\n"
                },
                "apiId": {
                  "type": "integer",
                  "description": "A unique identifier for each API.\n"
                },
                "apiName": {
                  "type": "string",
                  "description": "The name of an API, like Diagnostic Tools, or Identity Management: API.\n"
                },
                "documentationUrl": {
                  "type": "string",
                  "description": "Link to more information about the API.\n"
                },
                "endPoint": {
                  "type": "string",
                  "description": "The endpoint to access a API.\n"
                },
                "grantScope": {
                  "type": "string",
                  "description": "The level of access you give to an API client on a per API basis.\n"
                }
              }
            }
          },
          "baseURL": {
            "type": "string",
            "description": "The base URL for the service.\n"
          },
          "ccuParams": {
            "type": "object",
            "description": "Additional data needed to configure the client for access to CCU API in `apis`.\n",
            "additionalProperties": false,
            "properties": {
              "purgeByCacheTag": {
                "type": "boolean",
                "description": "When enabled, the API client can purge content by cache tag.\n"
              },
              "purgeByCpcode": {
                "type": "boolean",
                "description": "When enabled, the API client can purge content by CP code.\n"
              },
              "purgeCpcodes": {
                "type": "array",
                "description": "Lists all CP codes that your API client is allowed to purge.\n",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "clientDescription": {
            "type": "string",
            "description": "Description of the API client.\n"
          },
          "clientId": {
            "type": "string",
            "description": "Unique identifier for an API client.\n"
          },
          "clientName": {
            "type": "string",
            "description": "The API client's human-readable name.\n"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the API client.\n"
          },
          "createdDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the API client was created.\n",
            "format": "date-time"
          },
          "credentials": {
            "type": "array",
            "description": "A collection of credentials.\n",
            "items": {
              "type": "object",
              "description": "Details of a credential.\n",
              "additionalProperties": false,
              "properties": {
                "description": {
                  "type": "string",
                  "description": "A descriptive label for the client.\n"
                },
                "actions": {
                  "type": "object",
                  "description": "Encapsulates the different ways you can edit an API client, including changing its owner, accessing rights to Control Center, or deleting it.\n",
                  "additionalProperties": false,
                  "properties": {
                    "delete": {
                      "type": "boolean",
                      "description": "When enabled, the credential can be deleted.\n"
                    },
                    "activate": {
                      "type": "boolean",
                      "description": "When enabled, the credential can be activated.\n"
                    },
                    "deactivate": {
                      "type": "boolean",
                      "description": "When enabled, the credential can be deactivated.\n"
                    },
                    "editDescription": {
                      "type": "boolean",
                      "description": "When enabled, credential's description can be edited.\n"
                    },
                    "editExpiration": {
                      "type": "boolean",
                      "description": "When enabled, credential's expiration date can be updated.\n"
                    }
                  }
                },
                "clientToken": {
                  "type": "string",
                  "description": "Identifies the API client.\n"
                },
                "createdOn": {
                  "type": "string",
                  "description": "ISO 8601 timestamp indicating when credentials were created.\n",
                  "format": "date-time"
                },
                "credentialId": {
                  "type": "integer",
                  "description": "A unique identifier for each credential.\n"
                },
                "expiresOn": {
                  "type": "string",
                  "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "description": "Indicates whether the credential can be used. `ACTIVE` means the credential can be used. `INACTIVE` means the credential isn't active and can't be used, and `DELETED` means the credential no longer exists.\n",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "DELETED"
                  ]
                }
              }
            }
          },
          "groups": {
            "type": "array",
            "description": "The groups an API client can access.\n",
            "items": {
              "type": "object",
              "description": "The groups an API client can access.\n",
              "additionalProperties": false,
              "properties": {
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "roleName": {
                  "type": "string",
                  "description": "The role's name.\n"
                },
                "roleDescription": {
                  "type": "string",
                  "description": "The human-readable description for a role.\n"
                },
                "parentGroupId": {
                  "type": "string",
                  "description": "The unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                },
                "isBlocked": {
                  "type": "boolean",
                  "description": "If `true`, the API client has access to the group's parent, but can't access the child group.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                  "items": {
                    "type": "object",
                    "description": "A further-nested group.\n"
                  }
                }
              }
            }
          },
          "locked": {
            "type": "boolean",
            "description": "When enabled, you can lock the client to prevent anyone from using it to access services on Control Center.\n"
          },
          "notificationList": {
            "type": "array",
            "description": "List of email addresses to notify of any expiring credentials.\n",
            "items": {
              "type": "string"
            }
          },
          "serviceProviderId": {
            "type": "integer",
            "description": "A unique identifier for a service provider.\n"
          },
          "uiIdentityId": {
            "type": "string",
            "description": "The unique identifier of the user the API client is being created for.\n"
          },
          "uiUserName": {
            "type": "string",
            "description": "The human-readable username of the person who owns the API client.\n"
          },
          "useOwnerGroups": {
            "type": "boolean",
            "description": "When enabled, grants the client the same group access as the owner. Otherwise access is limited to the groups specified in `groups`.\n"
          }
        }
      },
      "self-account-switch-keys": {
        "type": "array",
        "description": "This object encapsulates a collection of contexts the client can manage.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "accountName",
            "accountSwitchKey"
          ],
          "properties": {
            "accountName": {
              "type": "string",
              "description": "The name you supply for an account.\n",
              "minLength": 1
            },
            "accountSwitchKey": {
              "type": "string",
              "description": "The identifier for an account other than your API client's default.\n",
              "minLength": 1
            }
          }
        }
      },
      "credential-nosecret": {
        "additionalProperties": false,
        "description": "Specifies credentials.\n",
        "properties": {
          "clientToken": {
            "description": "Identifies the API client.\n",
            "type": "string"
          },
          "createdOn": {
            "description": "ISO 8601 timestamp indicating when credentials were created.\n",
            "format": "date-time",
            "type": "string"
          },
          "credentialId": {
            "description": "A unique identifier for each credential.\n",
            "type": "integer"
          },
          "description": {
            "description": "Notes or description for credentials.\n",
            "type": "string"
          },
          "expiresOn": {
            "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Indicates credentials' status.\n",
            "type": "string"
          }
        },
        "required": [
          "credentialId",
          "clientToken",
          "createdOn",
          "expiresOn",
          "status",
          "description"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/credential-nosecret.yaml"
        }
      },
      "credentials": {
        "description": "A collection of credentials.\n",
        "items": {
          "additionalProperties": false,
          "description": "Specifies credentials.\n",
          "properties": {
            "clientToken": {
              "description": "Identifies the API client.\n",
              "type": "string"
            },
            "createdOn": {
              "description": "ISO 8601 timestamp indicating when credentials were created.\n",
              "format": "date-time",
              "type": "string"
            },
            "credentialId": {
              "description": "A unique identifier for each credential.\n",
              "type": "integer"
            },
            "description": {
              "description": "Notes or description for credentials.\n",
              "type": "string"
            },
            "expiresOn": {
              "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "description": "Indicates credentials' status.\n",
              "type": "string"
            }
          },
          "required": [
            "credentialId",
            "clientToken",
            "createdOn",
            "expiresOn",
            "status",
            "description"
          ],
          "type": "object",
          "x-akamai": {
            "file-path": "schemas/credential-nosecret.yaml"
          }
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/credentials.yaml"
        }
      },
      "credential": {
        "additionalProperties": false,
        "description": "This object encapsulates all members for the credential data structure.\n",
        "properties": {
          "clientSecret": {
            "description": "The client secret.\n",
            "type": "string"
          },
          "clientToken": {
            "description": "Identifies the API client.\n",
            "type": "string"
          },
          "createdOn": {
            "description": "ISO 8601 timestamp indicating when credentials were created.\n",
            "format": "date-time",
            "type": "string"
          },
          "credentialId": {
            "description": "A unique identifier for each credential.\n",
            "type": "integer"
          },
          "description": {
            "description": "Lets you add your own notes or description for your credential.\n",
            "type": "string"
          },
          "expiresOn": {
            "description": "ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Shows whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. You can switch a credential's `status` between `ACTIVE` and `INACTIVE`. Note that once you change the status to `DELETED`, you've actually deleted it and it can't be reactivated.\n",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ],
            "type": "string"
          }
        },
        "required": [
          "credentialId",
          "clientToken",
          "createdOn",
          "expiresOn",
          "status",
          "description"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/credential.yaml"
        }
      },
      "update-credential": {
        "additionalProperties": false,
        "description": "Specifies credentials.\n",
        "properties": {
          "clientToken": {
            "description": "Identifies the API client.\n",
            "type": "string"
          },
          "createdOn": {
            "description": "__Read-only__ ISO 8601 timestamp indicating when credentials were created.\n",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "credentialId": {
            "description": "A unique identifier for each credential.\n",
            "type": "integer"
          },
          "description": {
            "description": "Notes or description for credentials.\n",
            "type": "string"
          },
          "expiresOn": {
            "description": "__Read-only__ ISO 8601 timestamp indicating when the credential expire. By default, two years from the creation date.\n",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Identifies the condition of the credential.\n",
            "type": "string"
          }
        },
        "required": [
          "expiresOn",
          "status",
          "credentialId",
          "clientToken",
          "createdOn",
          "description"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/update-credential.yaml"
        }
      },
      "client-account-switch-keys": {
        "type": "array",
        "description": "This object encapsulates a collection of contexts the client can manage.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "accountName",
            "accountSwitchKey"
          ],
          "properties": {
            "accountName": {
              "type": "string",
              "description": "The name you supply for an account.\n",
              "minLength": 1
            },
            "accountSwitchKey": {
              "type": "string",
              "description": "The identifier for an account other than your API client's default.\n",
              "minLength": 1
            }
          }
        }
      }
    },
    "parameters": {
      "search": {
        "name": "search",
        "in": "query",
        "description": "Filters results by `accountId` or `accountName`. Enter at least three characters in the string to filter the results.\n",
        "schema": {
          "type": "string",
          "example": "Rae Inc."
        }
      },
      "actions-query": {
        "description": "Includes actions you can perform on the object, `false` by default.\n",
        "in": "query",
        "name": "actions",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/actions-query.yaml"
        }
      },
      "credential-id-path": {
        "description": "A credential's unique identifier.\n",
        "in": "path",
        "name": "credentialId",
        "required": true,
        "schema": {
          "example": 123456,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/credential-id-path.yaml"
        }
      },
      "client-id-path": {
        "name": "clientId",
        "in": "path",
        "description": "A unique identifier for each API client.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "nmchqgmuigems5g4"
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID"
  }
}