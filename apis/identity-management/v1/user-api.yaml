info:
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Users, for administrators
  version: '2'
openapi: 3.0.0
paths:
  /user-admin/ui-identities:
    get:
      description: 'Return a list of users who have access on this account. The account
        is determined by the tokens in your API client. You can pass a `groupId` to
        filter users based on group. Additionally, you can return additional user
        information such as what product notifications they subscribe to, or what
        group and role assignments they have. Set  the `actions` parameter to `true`
        to return the actions you can  take on each user.

        '
      operationId: get-ui-identities
      parameters:
      - $ref: parameters/rolesFilterParamsGroup_groupId.yaml
      - $ref: parameters/authGrants-query.yaml
      - $ref: parameters/adminActions_actions.yaml
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/get-response-users.json
              schema:
                $ref: schemas/ListOfUserResponse.yaml
          description: 'The response lists users.

            '
      summary: List users
      tags:
      - Users
    post:
      description: 'Create a user in the account specified in your own API client
        credentials or clone an existing user''s role assignments. Optionally, send
        a randomly generated one-time use password to the new user. If you send the
        email with the password directly to the user, the response for this operation
        doesn''t include that password. If you don''t send the password to the user
        through email, the password is included in the response.

        '
      operationId: post-ui-identity
      parameters:
      - $ref: parameters/sendEmail_sendEmail.yaml
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/post-request-create-user.json
            schema:
              $ref: schemas/CreateUserRequest.yaml
        required: true
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/post-response-create-user.json
              schema:
                $ref: schemas/UserResponse.yaml
          description: 'The response returns the created user.

            '
      summary: Create a user
      tags:
      - Users
  /user-admin/ui-identities/{uiIdentityId}:
    delete:
      description: 'You can only delete users who don''t have any API or Webservices
        clients. To delete users, first transfer their API clients and delete their
        Webservices clients.

        '
      operationId: delete-ui-identity
      responses:
        204:
          description: 'User removed.

            '
      summary: Remove a user
      tags:
      - Users
    get:
      description: 'Return a specific user''s profile.

        '
      operationId: get-ui-identity
      parameters:
      - $ref: parameters/authGrants-query.yaml
      - $ref: parameters/notifications-query.yaml
      - $ref: parameters/adminActions_actions.yaml
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/get-response-user.json
              schema:
                $ref: schemas/UserResponse.yaml
          description: 'The response returns the user''s profile.

            '
      summary: Get a user
      tags:
      - Users
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
  /user-admin/ui-identities/{uiIdentityId}/auth-grants:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    put:
      description: 'Edit what groups a user has access to, and how the use can interact
        with the objects in those groups.

        '
      operationId: put-ui-uiidentity-auth-grants
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/put-request-auth-grants.json
            schema:
              $ref: schemas/ListOfAuthGrantRequest.yaml
        required: true
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/put-response-auth-grants.json
              schema:
                $ref: schemas/ListOfAuthGrantResponse.yaml
          description: 'The response returns updated assignments.

            '
      summary: Modify a user's group and role assignments
      tags:
      - Assignments
  /user-admin/ui-identities/{uiIdentityId}/basic-info:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    put:
      description: 'Modify user information. Pass the entire body of data in the request,
        including members you''re not changing. Otherwise, the operation removes unspecified
        data.

        '
      operationId: put-ui-identity-basic-info
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/put-request-basic-info.json
            schema:
              $ref: schemas/UpdateUserBasicInfoRequest.yaml
        required: true
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/put-response-basic-info.json
              schema:
                $ref: schemas/UserResponse.yaml
          description: 'The response returns updated user''s profile.

            '
      summary: Update a user
      tags:
      - Users
  /user-admin/ui-identities/{uiIdentityId}/groups/{groupId}/blocked-properties:
    get:
      description: 'Return all properties a user doesn''t have access to in a group.

        '
      operationId: get-blocked-properties
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/get-response-blocked-properties.json
              schema:
                $ref: schemas/ListOfInteger.yaml
          description: 'The response lists blocked properties.

            '
      summary: List blocked properties
      tags:
      - Blocked properties
    parameters:
    - $ref: parameters/groupId-path.yaml
    - $ref: parameters/uiIdentityId-path.yaml
    put:
      description: 'Remove or grant user access to properties. By default, users have
        access to all properties in a group.

        '
      operationId: put-blocked-properties
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/get-response-blocked-properties.json
            schema:
              $ref: schemas/ListOfInteger.yaml
        required: true
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/get-response-blocked-properties.json
              schema:
                $ref: schemas/ListOfInteger.yaml
          description: 'The response lists blocked properties.

            '
      summary: Update blocked properties
      tags:
      - Blocked properties
  /user-admin/ui-identities/{uiIdentityId}/lock:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    post:
      description: 'Prevent a user from logging in to Control center.

        '
      operationId: post-ui-identity-lock
      responses:
        204:
          description: 'User locked.

            '
      summary: Lock a user's account
      tags:
      - User access
  /user-admin/ui-identities/{uiIdentityId}/notifications:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    put:
      description: 'Subscribe or un-subscribe users to product notification emails.

        '
      operationId: put-notifications
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/put-request-update-notifications.json
            schema:
              $ref: schemas/NotificationsRequest.yaml
        required: true
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/put-request-update-notifications.json
              schema:
                $ref: schemas/NotificationsResponse.yaml
          description: 'The response returns updated user''s notifications.

            '
      summary: Update a user's notifications
      tags:
      - User notifications
  /user-admin/ui-identities/{uiIdentityId}/reset-password:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    post:
      description: 'Optionally send a one-time use password to the user. If you send
        the email with the password directly to the user, the response for this operation
        doesn''t include that password. If you don''t send the password to the user
        through email, the password is included in the response.

        '
      operationId: post-reset-password
      parameters:
      - $ref: parameters/sendEmail_sendEmail.yaml
      responses:
        200:
          content:
            application/json:
              example:
                $ref: examples/post-response-change-password.json
              schema:
                $ref: schemas/PasswordResponse.yaml
          description: 'The response returns new password.

            '
        204:
          description: 'Password sent.

            '
      summary: Reset a user's password
      tags:
      - User access
  /user-admin/ui-identities/{uiIdentityId}/set-password:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    post:
      description: 'Set a specific password for a user. This differs from [Reset a
        user''s password](ref:post-reset-password) because this password may be used
        more than once, and isn''t randomly generated.

        '
      operationId: post-set-password
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/post-response-change-password.json
            schema:
              $ref: schemas/SetPasswordRequest.yaml
        required: true
      responses:
        204:
          description: 'Password set.

            '
      summary: Set a user's password
      tags:
      - User access
  /user-admin/ui-identities/{uiIdentityId}/tfa:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    put:
      description: 'Actions for this operation are `enable`, `disable`, and `reset`.
        Users can make five attempts to log in with TFA before their accounts lock.
        If the account gets locked, use `reset` value to unlock.

        '
      operationId: put-ui-identity-tfa
      parameters:
      - $ref: parameters/action-query.yaml
      responses:
        204:
          description: 'Authentication updated.

            '
      summary: Set a user's two-factor authentication
      tags:
      - User access
  /user-admin/ui-identities/{uiIdentityId}/unlock:
    parameters:
    - $ref: parameters/uiIdentityId-path.yaml
    post:
      description: 'Release the lock on a user''s account and allow them to access
        Control Center.

        '
      operationId: post-ui-identity-unlock
      responses:
        204:
          description: 'User''s account unlocked.

            '
      summary: Unlock a user's account
      tags:
      - User access
servers:
- url: https://{hostname}/identity-management/v2
x-akamai:
  auth-type: EDGE_GRID
  file-path: user-api.yaml
