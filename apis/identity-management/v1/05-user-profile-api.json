{
  "openapi": "3.0.0",
  "info": {
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Your user profile",
    "version": "3"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v3"
    }
  ],
  "tags": [
    {
      "description": "Manage your profile, password, or multi-factor authentication. Users\ncan edit their own profiles, but only administrators can edit profiles belonging\nto other users.\n",
      "name": "Profile"
    }
  ],
  "paths": {
    "/user-profile": {
      "get": {
        "description": "This operation gets your profile information. To make changes to your profile, run the [Edit your profile](ref:put-user-profile-info) operation.\n",
        "operationId": "get-user-profile",
        "parameters": [
          {
            "description": "Includes the list of your group and role assignments, `false` by default.\n",
            "in": "query",
            "name": "authGrants",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/auth-grants-query.yaml"
            }
          },
          {
            "description": "Includes product notifications you subscribe to, `false` by default.\n",
            "in": "query",
            "name": "notifications",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/notifications-query.yaml"
            }
          },
          {
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/qparams-actions-actions.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "A-B-123456",
                  "firstName": "John",
                  "lastName": "Smith",
                  "uiUserName": "jsmith@example.com",
                  "email": "jsmith@example.com",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "additionalAuthentication": "TFA",
                  "country": "USA",
                  "phone": "3456788765",
                  "contactType": "Billing",
                  "isLocked": false,
                  "timeZone": "GMT",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 30,
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "secondaryEmail": "john-smith@example.com",
                  "additionalAuthenticationConfigured": false,
                  "mobilePhone": "3456787657",
                  "address": "first Street",
                  "city": "Santa Clara",
                  "state": "CA",
                  "zipCode": "34567",
                  "jobTitle": "Engineer",
                  "actions": {
                    "resetPassword": true,
                    "delete": true,
                    "edit": true,
                    "apiClient": true,
                    "isCloneable": false,
                    "thirdPartyAccess": true
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "passwordExpiry": true,
                      "newUserNotification": true,
                      "apiClientCredentialExpiryNotification": false,
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ],
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "groupName": "Internet Company",
                      "roleId": 16,
                      "roleName": "Publisher",
                      "roleDescription": "A newly create role."
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.\n",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "properties": {
                        "apiClient": {
                          "description": "Enables the administrator to create an API client.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether the user is deletable.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether the user is editable.\n",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Enables the administrator to manage extended access.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.\n",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group.\n",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group. It's returned only for group roles.\n",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Whether a user's access to a group is blocked.\n",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive label for the role to convey its use.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.\n",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "additionalProperties": true,
                              "description": "A further nested group.\n",
                              "properties": {},
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "roleId",
                          "roleName"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/auth-grant-response.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.\n",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications the user receives for products.\n",
                      "properties": {
                        "enableEmailNotifications": {
                          "description": "Enables email notifications.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "Specifies email notifications settings.\n",
                          "properties": {
                            "apiClientCredentialExpiryNotification": {
                              "description": "Whether the user gets notifications for expiring API client credentials.\n",
                              "type": "boolean"
                            },
                            "newUserNotification": {
                              "description": "Whether group administrators get notifications when the user creates other new users.\n",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Whether the user gets notifications for password expiration.\n",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.\n",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.\n",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response.yaml"
                  }
                }
              }
            },
            "description": "The response provides your profile.\n"
          }
        },
        "summary": "View your profile",
        "tags": [
          "Profile"
        ]
      },
      "x-akamai": {
        "file-path": "paths/user-profile.yaml",
        "path-info": "/user-profile"
      }
    },
    "/user-profile/additionalAuthentication": {
      "put": {
        "description": "This operation sets multi-factor authentication to `TFA`, `MFA`, or `NONE`. You have five login attempts with MFA or 2FA before your account is locked. If your account is locked, use the [Reset multi-factor authentication for your user profile](ref:put-user-profile-reset-additional-authentication) operation to unlock it.\n",
        "operationId": "put-user-profile-additional-authentication",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "value": "TFA"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "value": {
                    "description": "A user's multi-factor authentication method, either `TFA`, `MFA`, or `NONE`.\n",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/additional-authentication-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Authentication successfully set.\n"
          }
        },
        "summary": "Set multi-factor authentication for your user profile",
        "tags": [
          "User authentication settings"
        ]
      },
      "x-akamai": {
        "file-path": "paths/additional-authentication-profile.yaml",
        "path-info": "/user-profile/additionalAuthentication"
      }
    },
    "/user-profile/additionalAuthentication/reset": {
      "put": {
        "description": "This operation resets your multi-factor authentication.\n",
        "operationId": "put-user-profile-reset-additional-authentication",
        "responses": {
          "204": {
            "description": "Authentication successfully reset.\n"
          }
        },
        "summary": "Reset multi-factor authentication for your user profile",
        "tags": [
          "User authentication settings"
        ]
      },
      "x-akamai": {
        "file-path": "paths/reset-auth-profile.yaml",
        "path-info": "/user-profile/additionalAuthentication/reset"
      }
    },
    "/user-profile/basic-info": {
      "put": {
        "description": "This operation updates your basic profile information, such as your name or phone number. To edit detailed settings, run the [Update your notifications](ref:put-user-profile-notifications) or [Modify a user's group and role assignments](ref:put-ui-uiidentity-auth-grants) operations.\n",
        "operationId": "put-user-profile-info",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "firstName": "John",
                "lastName": "Smith",
                "additionalAuthentication": "TFA",
                "country": "USA",
                "phone": "3456788765",
                "contactType": "Billing",
                "timeZone": "GMT",
                "preferredLanguage": "English",
                "sessionTimeOut": 30,
                "secondaryEmail": "john.smith@example.com",
                "mobilePhone": "3456787657",
                "address": "first Street",
                "city": "Santa Clara",
                "state": "CA",
                "zipCode": "34567",
                "jobTitle": "Engineer"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "additionalAuthentication": {
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ],
                    "type": "string"
                  },
                  "address": {
                    "description": "The user's street address.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "city": {
                    "description": "The user's city.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "contactType": {
                    "description": "User's contact type. To get the available values, run the [View contact types](ref:get-common-contact-types) operation.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "country": {
                    "description": "User's country. To get the available values, run the [View supported countries](ref:get-common-countries) operation.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).\n",
                    "format": "email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.\n",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's position at the company.\n",
                    "maxLength": 75,
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's surname.\n",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "phone": {
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "The user's language. To get the available values, run the [View languages](ref:get-common-languages) operation.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.\n",
                    "format": "email",
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](ref:get-common-timeout-policies) operation if you're an administrator or [View timeout policies for a user profile](ref:get-user-timeout-policies) operation if you're the account's user. Make sure to select a value that's equal or smaller to the **Max session timeout** value, set for your account in the Identity and Access Management interface's [Settings](https://techdocs.akamai.com/iam/docs/account-settings) tab.\n",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](ref:get-user-states) operation.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timeZone": {
                    "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit postal code, represented as a string.\n",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "timeZone"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/update-user-basic-info-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-smith@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "address": "first Street",
                  "timeZone": "GMT",
                  "zipCode": "34567",
                  "additionalAuthentication": "TFA",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "jsmith",
                  "additionalAuthenticationConfigured": false
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.\n",
                  "properties": {
                    "accountId": {
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "properties": {
                        "apiClient": {
                          "description": "Enables the administrator to create an API client.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Whether the user is deletable.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Whether the user is editable.\n",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Enables the administrator to manage extended access.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "additionalAuthentication": {
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "additionalAuthenticationConfigured": {
                      "description": "Whether the user has multi-factor authentication configured.\n",
                      "type": "boolean"
                    },
                    "address": {
                      "description": "The user's street address.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group.\n",
                        "properties": {
                          "groupId": {
                            "description": "Unique identifier for each group. It's returned only for group roles.\n",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "Descriptive label for the group.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Whether a user's access to a group is blocked.\n",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive label for the role to convey its use.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "roleId": {
                            "description": "Unique identifier for each role.\n",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "Descriptive label for the role.\n",
                            "minLength": 1,
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "additionalProperties": true,
                              "description": "A further nested group.\n",
                              "properties": {},
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "roleId",
                          "roleName"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/auth-grant-response.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "contactType": {
                      "description": "User's contact type.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "country": {
                      "description": "User's country.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "emailUpdatePending": {
                      "description": "Whether there are any pending changes to the email address.\n",
                      "type": "boolean"
                    },
                    "firstName": {
                      "description": "The user's first name.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's position at the company.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's surname.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications the user receives for products.\n",
                      "properties": {
                        "enableEmailNotifications": {
                          "description": "Enables email notifications.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "Specifies email notifications settings.\n",
                          "properties": {
                            "apiClientCredentialExpiryNotification": {
                              "description": "Whether the user gets notifications for expiring API client credentials.\n",
                              "type": "boolean"
                            },
                            "newUserNotification": {
                              "description": "Whether group administrators get notifications when the user creates other new users.\n",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Whether the user gets notifications for password expiration.\n",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The user's language.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "tfaConfigured": {
                      "description": "Whether TFA is configured.\n",
                      "type": "boolean"
                    },
                    "tfaEnabled": {
                      "description": "Whether TFA is enabled.\n",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1,
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/user-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the user's modified profile.\n"
          }
        },
        "summary": "Edit your profile",
        "tags": [
          "Profile"
        ]
      },
      "x-akamai": {
        "file-path": "paths/basic-info-profile.yaml",
        "path-info": "/user-profile/basic-info"
      }
    },
    "/user-profile/change-password": {
      "post": {
        "description": "This operation changes your password. Include your old password and your new password in the request body. Before you create your new password, run the [View password policy](ref:get-common-password-policy) operation to ensure it adheres to your policy. If you include your existing password incorrectly and make too many login attempts, your account locks.\n",
        "operationId": "post-profile-change-password",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "currentPassword": "CompanyLogin!3",
                "newPassword": "CompanyLogin!3"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Uses the old password to authenticate you are who you say you are when you update your password. Includes the new password.\n",
                "properties": {
                  "currentPassword": {
                    "description": "Your existing password.\n",
                    "minLength": 1,
                    "type": "string"
                  },
                  "newPassword": {
                    "description": "New password.\n",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/change-password-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Password successfully rotated.\n"
          }
        },
        "summary": "Rotate your password",
        "tags": [
          "User authentication settings"
        ]
      },
      "x-akamai": {
        "file-path": "paths/change-password.yaml",
        "path-info": "/user-profile/change-password"
      }
    },
    "/user-profile/notifications": {
      "put": {
        "description": "This operation subscribes to notifications emails for password expiration reminders, proactive maintenance emails, and upgrade notification emails.\n",
        "operationId": "put-user-profile-notifications",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "enableEmailNotifications": true,
                "options": {
                  "passwordExpiry": true,
                  "newUserNotification": true,
                  "apiClientCredentialExpiryNotification": true,
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ],
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the types of email notifications you can receive.\n",
                "properties": {
                  "enableEmailNotifications": {
                    "description": "Enables email notifications.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "Specifies email notifications settings.\n",
                    "properties": {
                      "apiClientCredentialExpiryNotification": {
                        "description": "Enables notifications for expiring API client credentials.\n",
                        "type": "boolean"
                      },
                      "newUserNotification": {
                        "description": "Enables notifications for group administrators when the user creates other new users.\n",
                        "type": "boolean"
                      },
                      "passwordExpiry": {
                        "description": "Enables notifications for expiring passwords.\n",
                        "type": "boolean"
                      },
                      "proactive": {
                        "description": "Products for which the user gets notifications for service issues.\n",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "upgrade": {
                        "description": "Products for which the user receives notifications for upgrades.\n",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "enableEmailNotifications",
                  "options"
                ],
                "x-akamai": {
                  "file-path": "schemas/notifications-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "enableEmailNotifications": true,
                  "options": {
                    "passwordExpiry": true,
                    "newUserNotification": true,
                    "apiClientCredentialExpiryNotification": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ],
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the types of email notifications you can receive.\n",
                  "properties": {
                    "enableEmailNotifications": {
                      "description": "Enables email notifications.\n",
                      "type": "boolean"
                    },
                    "options": {
                      "additionalProperties": false,
                      "description": "Specifies email notifications settings.\n",
                      "properties": {
                        "apiClientCredentialExpiryNotification": {
                          "description": "Whether the user gets notifications for expiring API client credentials.\n",
                          "type": "boolean"
                        },
                        "newUserNotification": {
                          "description": "Whether group administrators get notifications when the user creates other new users.\n",
                          "type": "boolean"
                        },
                        "passwordExpiry": {
                          "description": "Whether the user gets notifications for password expiration.\n",
                          "type": "boolean"
                        },
                        "proactive": {
                          "description": "Products for which the user gets notifications for service issues.\n",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "upgrade": {
                          "description": "Products for which the user receives notifications for upgrades.\n",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade",
                        "apiClientCredentialExpiryNotification"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/notifications-response.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified notifications emails.\n"
          }
        },
        "summary": "Update your notifications",
        "tags": [
          "User notifications"
        ]
      },
      "x-akamai": {
        "file-path": "paths/notifications-profile.yaml",
        "path-info": "/user-profile/notifications"
      }
    }
  },
  "components": {
    "parameters": {
      "auth-grants-query": {
        "description": "Includes the list of your group and role assignments, `false` by default.\n",
        "in": "query",
        "name": "authGrants",
        "required": false,
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/auth-grants-query.yaml"
        }
      },
      "notifications-query": {
        "description": "Includes product notifications you subscribe to, `false` by default.\n",
        "in": "query",
        "name": "notifications",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/notifications-query.yaml"
        }
      },
      "qparams-actions-actions": {
        "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
        "in": "query",
        "name": "actions",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/qparams-actions-actions.yaml"
        }
      }
    },
    "schemas": {
      "groups-nested": {
        "additionalProperties": true,
        "description": "A further nested group.\n",
        "properties": {},
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/groups-nested.yaml"
        }
      },
      "auth-grant-response": {
        "additionalProperties": false,
        "description": "A user's role assignments, per group.\n",
        "properties": {
          "groupId": {
            "description": "Unique identifier for each group. It's returned only for group roles.\n",
            "minimum": 0,
            "type": "integer"
          },
          "groupName": {
            "description": "Descriptive label for the group.\n",
            "minLength": 1,
            "type": "string"
          },
          "isBlocked": {
            "description": "Whether a user's access to a group is blocked.\n",
            "type": "boolean"
          },
          "roleDescription": {
            "description": "Descriptive label for the role to convey its use.\n",
            "minLength": 1,
            "type": "string"
          },
          "roleId": {
            "description": "Unique identifier for each role.\n",
            "minimum": 1,
            "type": "integer"
          },
          "roleName": {
            "description": "Descriptive label for the role.\n",
            "minLength": 1,
            "type": "string"
          },
          "subGroups": {
            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
            "items": {
              "additionalProperties": true,
              "description": "A further nested group.\n",
              "properties": {},
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/groups-nested.yaml"
              }
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "roleId",
          "roleName"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/auth-grant-response.yaml"
        }
      },
      "user-response": {
        "additionalProperties": false,
        "description": "Encapsulates information about each user.\n",
        "properties": {
          "accountId": {
            "description": "Unique identifier for each account.\n",
            "minLength": 1,
            "type": "string"
          },
          "actions": {
            "additionalProperties": false,
            "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "properties": {
              "apiClient": {
                "description": "Enables the administrator to create an API client.\n",
                "type": "boolean"
              },
              "delete": {
                "description": "Whether the user is deletable.\n",
                "type": "boolean"
              },
              "edit": {
                "description": "Whether the user is editable.\n",
                "type": "boolean"
              },
              "isCloneable": {
                "description": "Enables an administrator to create a new user with permissions cloned from this user.\n",
                "type": "boolean"
              },
              "resetPassword": {
                "description": "Enables an administrator to send a user a password by email or see a one-time token.\n",
                "type": "boolean"
              },
              "thirdPartyAccess": {
                "description": "Enables the administrator to manage extended access.\n",
                "type": "boolean"
              }
            },
            "required": [
              "delete",
              "edit",
              "resetPassword",
              "isCloneable",
              "thirdPartyAccess",
              "apiClient"
            ],
            "type": "object"
          },
          "additionalAuthentication": {
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ],
            "type": "string"
          },
          "additionalAuthenticationConfigured": {
            "description": "Whether the user has multi-factor authentication configured.\n",
            "type": "boolean"
          },
          "address": {
            "description": "The user's street address.\n",
            "minLength": 1,
            "type": "string"
          },
          "authGrants": {
            "description": "A user's role assignments, per group.\n",
            "items": {
              "additionalProperties": false,
              "description": "A user's role assignments, per group.\n",
              "properties": {
                "groupId": {
                  "description": "Unique identifier for each group. It's returned only for group roles.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "groupName": {
                  "description": "Descriptive label for the group.\n",
                  "minLength": 1,
                  "type": "string"
                },
                "isBlocked": {
                  "description": "Whether a user's access to a group is blocked.\n",
                  "type": "boolean"
                },
                "roleDescription": {
                  "description": "Descriptive label for the role to convey its use.\n",
                  "minLength": 1,
                  "type": "string"
                },
                "roleId": {
                  "description": "Unique identifier for each role.\n",
                  "minimum": 1,
                  "type": "integer"
                },
                "roleName": {
                  "description": "Descriptive label for the role.\n",
                  "minLength": 1,
                  "type": "string"
                },
                "subGroups": {
                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                  "items": {
                    "additionalProperties": true,
                    "description": "A further nested group.\n",
                    "properties": {},
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/groups-nested.yaml"
                    }
                  },
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "roleId",
                "roleName"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/auth-grant-response.yaml"
              }
            },
            "minItems": 0,
            "type": "array"
          },
          "city": {
            "description": "The user's city.\n",
            "minLength": 1,
            "type": "string"
          },
          "contactType": {
            "description": "User's contact type.\n",
            "minLength": 1,
            "type": "string"
          },
          "country": {
            "description": "User's country.\n",
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "description": "The user's email address.\n",
            "format": "email",
            "type": "string"
          },
          "emailUpdatePending": {
            "description": "Whether there are any pending changes to the email address.\n",
            "type": "boolean"
          },
          "firstName": {
            "description": "The user's first name.\n",
            "minLength": 1,
            "type": "string"
          },
          "isLocked": {
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n",
            "type": "boolean"
          },
          "jobTitle": {
            "description": "The user's position at the company.\n",
            "minLength": 1,
            "type": "string"
          },
          "lastLoginDate": {
            "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
            "format": "date-time",
            "type": "string"
          },
          "lastName": {
            "description": "The user's surname.\n",
            "minLength": 1,
            "type": "string"
          },
          "mobilePhone": {
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "additionalProperties": false,
            "description": "Specifies email notifications the user receives for products.\n",
            "properties": {
              "enableEmailNotifications": {
                "description": "Enables email notifications.\n",
                "type": "boolean"
              },
              "options": {
                "additionalProperties": false,
                "description": "Specifies email notifications settings.\n",
                "properties": {
                  "apiClientCredentialExpiryNotification": {
                    "description": "Whether the user gets notifications for expiring API client credentials.\n",
                    "type": "boolean"
                  },
                  "newUserNotification": {
                    "description": "Whether group administrators get notifications when the user creates other new users.\n",
                    "type": "boolean"
                  },
                  "passwordExpiry": {
                    "description": "Whether the user gets notifications for password expiration.\n",
                    "type": "boolean"
                  },
                  "proactive": {
                    "description": "Products for which the user gets notifications for service issues.\n",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "upgrade": {
                    "description": "Products for which the user receives notifications for upgrades.\n",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "upgrade",
                  "proactive",
                  "passwordExpiry",
                  "newUserNotification",
                  "apiClientCredentialExpiryNotification"
                ],
                "type": "object"
              }
            },
            "required": [
              "options",
              "enableEmailNotifications"
            ],
            "type": "object"
          },
          "passwordExpiryDate": {
            "description": "The date a user's password expires.\n",
            "format": "date-time",
            "type": "string"
          },
          "phone": {
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
            "minLength": 1,
            "type": "string"
          },
          "preferredLanguage": {
            "description": "The user's language.\n",
            "minLength": 1,
            "type": "string"
          },
          "secondaryEmail": {
            "description": "The user's alternate email address.\n",
            "format": "email",
            "type": "string"
          },
          "sessionTimeOut": {
            "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
            "minimum": 0,
            "type": "integer"
          },
          "state": {
            "description": "The user's state or province if user's country is USA or Canada.\n",
            "minLength": 1,
            "type": "string"
          },
          "tfaConfigured": {
            "description": "Whether TFA is configured.\n",
            "type": "boolean"
          },
          "tfaEnabled": {
            "description": "Whether TFA is enabled.\n",
            "type": "boolean"
          },
          "timeZone": {
            "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
            "minLength": 1,
            "type": "string"
          },
          "uiIdentityId": {
            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
            "minLength": 1,
            "type": "string"
          },
          "uiUserName": {
            "description": "The user's username in Control Center.\n",
            "minLength": 1,
            "type": "string"
          },
          "zipCode": {
            "description": "The user's five-digit postal code, represented as a string.\n",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "uiIdentityId",
          "firstName",
          "lastName",
          "email",
          "additionalAuthentication",
          "country",
          "address",
          "timeZone",
          "additionalAuthenticationConfigured"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/user-response.yaml"
        }
      },
      "additional-authentication-request": {
        "additionalProperties": false,
        "properties": {
          "value": {
            "description": "A user's multi-factor authentication method, either `TFA`, `MFA`, or `NONE`.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ],
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/additional-authentication-request.yaml"
        }
      },
      "update-user-basic-info-request": {
        "additionalProperties": false,
        "properties": {
          "additionalAuthentication": {
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ],
            "type": "string"
          },
          "address": {
            "description": "The user's street address.\n",
            "minLength": 1,
            "type": "string"
          },
          "city": {
            "description": "The user's city.\n",
            "minLength": 1,
            "type": "string"
          },
          "contactType": {
            "description": "User's contact type. To get the available values, run the [View contact types](ref:get-common-contact-types) operation.\n",
            "minLength": 1,
            "type": "string"
          },
          "country": {
            "description": "User's country. To get the available values, run the [View supported countries](ref:get-common-countries) operation.\n",
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).\n",
            "format": "email",
            "type": "string"
          },
          "firstName": {
            "description": "The user's first name.\n",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "jobTitle": {
            "description": "The user's position at the company.\n",
            "maxLength": 75,
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "description": "The user's surname.\n",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "mobilePhone": {
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
            "minLength": 1,
            "type": "string"
          },
          "preferredLanguage": {
            "description": "The user's language. To get the available values, run the [View languages](ref:get-common-languages) operation.\n",
            "minLength": 1,
            "type": "string"
          },
          "secondaryEmail": {
            "description": "The user's alternate email address.\n",
            "format": "email",
            "type": "string"
          },
          "sessionTimeOut": {
            "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](ref:get-common-timeout-policies) operation if you're an administrator or [View timeout policies for a user profile](ref:get-user-timeout-policies) operation if you're the account's user. Make sure to select a value that's equal or smaller to the **Max session timeout** value, set for your account in the Identity and Access Management interface's [Settings](https://techdocs.akamai.com/iam/docs/account-settings) tab.\n",
            "minimum": 0,
            "type": "integer"
          },
          "state": {
            "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](ref:get-user-states) operation.\n",
            "minLength": 1,
            "type": "string"
          },
          "timeZone": {
            "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
            "minLength": 1,
            "type": "string"
          },
          "zipCode": {
            "description": "The user's five-digit postal code, represented as a string.\n",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "country",
          "preferredLanguage",
          "sessionTimeOut",
          "timeZone"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/update-user-basic-info-request.yaml"
        }
      },
      "change-password-request": {
        "additionalProperties": false,
        "description": "Uses the old password to authenticate you are who you say you are when you update your password. Includes the new password.\n",
        "properties": {
          "currentPassword": {
            "description": "Your existing password.\n",
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "description": "New password.\n",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-password-request.yaml"
        }
      },
      "notifications-request": {
        "additionalProperties": false,
        "description": "Encapsulates the types of email notifications you can receive.\n",
        "properties": {
          "enableEmailNotifications": {
            "description": "Enables email notifications.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "Specifies email notifications settings.\n",
            "properties": {
              "apiClientCredentialExpiryNotification": {
                "description": "Enables notifications for expiring API client credentials.\n",
                "type": "boolean"
              },
              "newUserNotification": {
                "description": "Enables notifications for group administrators when the user creates other new users.\n",
                "type": "boolean"
              },
              "passwordExpiry": {
                "description": "Enables notifications for expiring passwords.\n",
                "type": "boolean"
              },
              "proactive": {
                "description": "Products for which the user gets notifications for service issues.\n",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "upgrade": {
                "description": "Products for which the user receives notifications for upgrades.\n",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "passwordExpiry",
              "proactive",
              "upgrade"
            ],
            "type": "object"
          }
        },
        "required": [
          "enableEmailNotifications",
          "options"
        ],
        "x-akamai": {
          "file-path": "schemas/notifications-request.yaml"
        }
      },
      "notifications-response": {
        "additionalProperties": false,
        "description": "Encapsulates the types of email notifications you can receive.\n",
        "properties": {
          "enableEmailNotifications": {
            "description": "Enables email notifications.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "Specifies email notifications settings.\n",
            "properties": {
              "apiClientCredentialExpiryNotification": {
                "description": "Whether the user gets notifications for expiring API client credentials.\n",
                "type": "boolean"
              },
              "newUserNotification": {
                "description": "Whether group administrators get notifications when the user creates other new users.\n",
                "type": "boolean"
              },
              "passwordExpiry": {
                "description": "Whether the user gets notifications for password expiration.\n",
                "type": "boolean"
              },
              "proactive": {
                "description": "Products for which the user gets notifications for service issues.\n",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "upgrade": {
                "description": "Products for which the user receives notifications for upgrades.\n",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "newUserNotification",
              "passwordExpiry",
              "proactive",
              "upgrade",
              "apiClientCredentialExpiryNotification"
            ],
            "type": "object"
          }
        },
        "required": [
          "options",
          "enableEmailNotifications"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/notifications-response.yaml"
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID",
    "file-path": "05-user-profile-api.yaml"
  }
}