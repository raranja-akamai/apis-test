{
  "openapi": "3.0.0",
  "info": {
    "title": "API clients administration",
    "version": "3"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v3"
    }
  ],
  "tags": [
    {
      "description": "Use helper calls to get information necessary to create an API client.\n",
      "name": "Helper"
    },
    {
      "description": "Manage your own API clients.\n",
      "name": "API client: self"
    },
    {
      "description": "Manage API clients for the account.\n",
      "name": "API clients"
    }
  ],
  "paths": {
    "/api-clients": {
      "x-akamai": {
        "path-info": "/api-clients"
      },
      "post": {
        "operationId": "post-api-clients",
        "summary": "Create an API client",
        "tags": [
          "API clients"
        ],
        "description": "This operation creates a new API client. Optionally, you can automatically assign a credential for the client when you create it. If you choose not to assign the credential automatically, see [Create authentication credentials](https://techdocs.akamai.com/developer/docs/set-up-authentication-credentials) for details.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "clientName": "report_data",
                "clientDescription": "Provides access to the reporting data.",
                "clientType": "CLIENT",
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "createCredential": true,
                "notificationEmails": [
                  "mrossi@example.com",
                  "jsmith@example.com"
                ],
                "authorizedUsers": [
                  "jsmith"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "apiId": 5000,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 32145,
                      "groupName": "Internet Company",
                      "isBlocked": false,
                      "roleId": 1,
                      "roleName": "Sales role",
                      "roleDescription": "Sales role",
                      "subGroups": [
                        {
                          "groupId": 32145,
                          "groupName": "Digital Company",
                          "isBlocked": false,
                          "parentGroupId": 18385,
                          "roleId": 2,
                          "roleName": "Sales",
                          "roleDescription": "Sales role",
                          "subGroups": []
                        }
                      ]
                    }
                  ]
                },
                "purgeOptions": {
                  "canPurgeByCpcode": true,
                  "canPurgeByCacheTag": false,
                  "cpcodeAccess": {
                    "allCurrentAndNewCpcodes": false,
                    "cpcodes": [
                      7563521,
                      13243546
                    ]
                  }
                },
                "ipAcl": {
                  "enable": true,
                  "cidr": [
                    "192.0.2.239",
                    "192.0.2.20/24"
                  ]
                }
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "clientType",
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "properties": {
                  "clientType": {
                    "type": "string",
                    "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                    "enum": [
                      "CLIENT",
                      "USER_CLIENT"
                    ]
                  },
                  "clientName": {
                    "type": "string",
                    "description": "Descriptive label for the API client.\n",
                    "minLength": 1
                  },
                  "authorizedUsers": {
                    "type": "array",
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "apiAccess": {
                    "type": "object",
                    "description": "The APIs the API client can access.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "properties": {
                          "allAccessibleApis": {
                            "type": "boolean",
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                          }
                        },
                        "title": "Not all APIs accessible",
                        "additionalProperties": false,
                        "required": [
                          "apis"
                        ]
                      },
                      {
                        "properties": {
                          "allAccessibleApis": {
                            "type": "boolean",
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                          }
                        },
                        "title": "All APIs accessible",
                        "additionalProperties": false,
                        "required": [
                          "allAccessibleApis"
                        ]
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "type": "boolean",
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                      },
                      "apis": {
                        "type": "array",
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                        "minItems": 0,
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1
                            },
                            "apiId": {
                              "type": "integer",
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                              "minimum": 0
                            },
                            "apiName": {
                              "type": "string",
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1
                            },
                            "documentationUrl": {
                              "type": "string",
                              "description": "Link to more information about the API.\n",
                              "minLength": 1
                            },
                            "endPoint": {
                              "type": "string",
                              "description": "Specifies where the API can access resources.\n",
                              "minLength": 1
                            },
                            "accessLevel": {
                              "type": "string",
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "groupAccess": {
                    "type": "object",
                    "description": "Specifies the API client's group access.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "type": "boolean",
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n"
                          },
                          "groups": {
                            "type": "array",
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "description": "Groups the API client can access.\n",
                              "additionalProperties": false,
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "properties": {
                                "groupName": {
                                  "type": "string",
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                                },
                                "roleName": {
                                  "type": "string",
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1
                                },
                                "roleDescription": {
                                  "type": "string",
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1
                                },
                                "parentGroupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                                },
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Blocks the API client access to the group's child groups.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested group.\n",
                                    "additionalProperties": true,
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Custom access",
                        "additionalProperties": false,
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ]
                      },
                      {
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "type": "boolean",
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.\n"
                          },
                          "groups": {
                            "type": "array",
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "description": "Groups the API client can access.\n",
                              "additionalProperties": false,
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "properties": {
                                "groupName": {
                                  "type": "string",
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                                },
                                "roleName": {
                                  "type": "string",
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1
                                },
                                "roleDescription": {
                                  "type": "string",
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1
                                },
                                "parentGroupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                                },
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Blocks the API client access to the group's child groups.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested group.\n",
                                    "additionalProperties": true,
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Cloned access",
                        "additionalProperties": false,
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ]
                      }
                    ]
                  },
                  "allowAccountSwitch": {
                    "type": "boolean",
                    "description": "Enables the API client to manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
                    "default": false
                  },
                  "canAutoCreateCredential": {
                    "type": "boolean",
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
                    "default": false
                  },
                  "createCredential": {
                    "type": "boolean",
                    "description": "With `canAutoCreateCredential` enabled, setting this to `true` creates new credentials along with a new API client. The default is `false`.\n",
                    "default": false
                  },
                  "clientDescription": {
                    "type": "string",
                    "description": "Descriptive label about the API client.\n",
                    "minLength": 1
                  },
                  "notificationEmails": {
                    "type": "array",
                    "description": "Email addresses to notify users of expiring credentials.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "purgeOptions": {
                    "type": "object",
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                    "additionalProperties": false,
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "properties": {
                      "canPurgeByCacheTag": {
                        "type": "boolean",
                        "description": "Whether the API client can purge content by cache tag.\n"
                      },
                      "canPurgeByCpcode": {
                        "type": "boolean",
                        "description": "Whether the API client can purge content by CP code.\n"
                      },
                      "cpcodeAccess": {
                        "type": "object",
                        "description": "CP codes the API client can purge.\n",
                        "additionalProperties": false,
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "type": "boolean",
                            "description": "Whether the API client can purge content by cache tag.\n"
                          },
                          "cpcodes": {
                            "type": "array",
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "integer",
                              "minimum": 0
                            }
                          }
                        }
                      }
                    }
                  },
                  "ipAcl": {
                    "type": "object",
                    "description": "Specifies the API client's IP list restriction.\n",
                    "additionalProperties": false,
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Enables API client's access to the IP ACL.\n"
                      },
                      "cidr": {
                        "type": "array",
                        "description": "IP addresses or CIDR blocks the API client can access.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response provides the newly created API client.\n",
            "headers": {
              "Location": {
                "description": "A URL path to the newly created object.\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "clientDescription": "Used to create users across partner accounts.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "create_new_users",
                  "clientType": "CLIENT",
                  "createdBy": "adevi",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": true,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Control Center reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 32145,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "Sales role",
                        "roleId": 1,
                        "roleName": "Sales role",
                        "subGroups": [
                          {
                            "groupId": 32145,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "0000-0000000000000000-000000000000000",
                      "clientSecret": "11111111111111111111111111111111111111111111",
                      "createdOn": "2022-08-25T17:35:07.000Z",
                      "credentialId": 16852304,
                      "description": "",
                      "expiresOn": "2024-08-25T17:35:07.000Z",
                      "status": "INACTIVE",
                      "actions": {
                        "activate": true,
                        "deactivate": false,
                        "delete": true,
                        "editDescription": true,
                        "editExpiration": true
                      }
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Specifies the API client.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies activities available for the API client.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether you can remove the API client.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "Whether you can deactivate the API client's credentials.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether you can update the API client.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "Whether you can update the `apis` the API client can access.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` the API client can access.\n"
                        },
                        "editIpAcl": {
                          "type": "boolean",
                          "description": "Whether you can update the `ipAcl` the API client can access.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "Whether you can update the API client's option to manage many accounts.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "Whether you can lock the API client.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "Whether you can transfer the API client to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "Whether you can unlock the API client.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client.\n"
                    },
                    "apiAccess": {
                      "type": "object",
                      "description": "The APIs the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "type": "boolean",
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                        },
                        "apis": {
                          "type": "array",
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "apiId": {
                                "type": "integer",
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0
                              },
                              "apiName": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "documentationUrl": {
                                "type": "string",
                                "description": "Link to more information about the API.\n",
                                "minLength": 1
                              },
                              "endPoint": {
                                "type": "string",
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1
                              },
                              "accessLevel": {
                                "type": "string",
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n",
                      "minLength": 1
                    },
                    "purgeOptions": {
                      "type": "object",
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "additionalProperties": false,
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by cache tag.\n"
                        },
                        "canPurgeByCpcode": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by CP code.\n"
                        },
                        "cpcodeAccess": {
                          "type": "object",
                          "description": "CP codes the API client can purge.\n",
                          "additionalProperties": false,
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "type": "boolean",
                              "description": "Whether the API client can purge content by cache tag.\n"
                            },
                            "cpcodes": {
                              "type": "array",
                              "description": "CP codes the API client can purge.\n",
                              "minItems": 0,
                              "items": {
                                "type": "integer",
                                "minimum": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ]
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "The API client's of credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0
                          },
                          "actions": {
                            "type": "object",
                            "description": "Specifies activities available for the credential.\n",
                            "additionalProperties": false,
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "Whether you can remove the credential.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "Whether you can activate the credential.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "Whether you can deactivate the credential.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's description.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's expiration date.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "type": "object",
                      "description": "Specifies the API client's group access.\n",
                      "additionalProperties": false,
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "type": "boolean",
                          "description": "Sets the API client's group access the same as the authorized user.\n"
                        },
                        "groups": {
                          "type": "array",
                          "description": "Groups the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "description": "Groups the API client can access.\n",
                            "additionalProperties": false,
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "properties": {
                              "groupName": {
                                "type": "string",
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                              },
                              "roleId": {
                                "type": "integer",
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1
                              },
                              "roleDescription": {
                                "type": "string",
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1
                              },
                              "parentGroupId": {
                                "type": "integer",
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                              },
                              "isBlocked": {
                                "type": "boolean",
                                "description": "Blocks the API client access to the group's child groups.\n"
                              },
                              "subGroups": {
                                "type": "array",
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "type": "object",
                                  "description": "A further nested group.\n",
                                  "additionalProperties": true,
                                  "properties": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "type": "object",
                      "description": "Specifies the API client's IP list restriction.\n",
                      "additionalProperties": false,
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Enables API client's access to the IP ACL.\n"
                        },
                        "cidr": {
                          "type": "array",
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-api-clients",
        "summary": "List API clients",
        "tags": [
          "API clients"
        ],
        "description": "This operation lists API clients an administrator can manage on the current account or other managed accounts using the `accountSwitchKey` parameter.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides a list of API clients an administrator can manage.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                    "activeCredentialCount": 1,
                    "allowAccountSwitch": false,
                    "canAutoCreateCredential": false,
                    "clientDescription": "Provides access to the reporting data.",
                    "clientId": "xfz2n5d43mogkdim",
                    "clientName": "report_data",
                    "clientType": "CLIENT",
                    "createdBy": "mrossi",
                    "createdDate": "2022-05-13T20:04:35.000Z",
                    "isLocked": false,
                    "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sxxxxxxxxxx",
                    "authorizedUsers": [
                      "jdoe"
                    ],
                    "notificationEmails": [
                      "jdoe@example.com"
                    ],
                    "actions": {
                      "deactivateAll": false,
                      "delete": false,
                      "edit": true,
                      "lock": false,
                      "transfer": true,
                      "unlock": false
                    }
                  },
                  {
                    "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4xxxxxxxxxx",
                    "activeCredentialCount": 1,
                    "allowAccountSwitch": false,
                    "canAutoCreateCredential": false,
                    "clientDescription": "Provides all offload estimates.",
                    "clientId": "4f3cxdie6adyalyg",
                    "clientName": "offload_est",
                    "clientType": "CLIENT",
                    "createdBy": "jsmith",
                    "createdDate": "2022-05-09T10:43:49.000Z",
                    "isLocked": false,
                    "serviceConsumerToken": "akaa-csrfyd3yzysqybe3-3dwjebxxxxxxxxxx",
                    "authorizedUsers": [
                      "jsmith"
                    ],
                    "notificationEmails": [
                      "jsmith@example.com"
                    ],
                    "actions": {
                      "deactivateAll": false,
                      "delete": false,
                      "edit": true,
                      "lock": false,
                      "transfer": true,
                      "unlock": false
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "API clients on the account.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "description": "API clients on the account.\n",
                    "additionalProperties": false,
                    "required": [
                      "accessToken",
                      "actions",
                      "activeCredentialCount",
                      "allowAccountSwitch",
                      "canAutoCreateCredential",
                      "authorizedUsers",
                      "clientId",
                      "clientName",
                      "clientType",
                      "createdBy",
                      "createdDate",
                      "isLocked",
                      "notificationEmails",
                      "serviceConsumerToken"
                    ],
                    "properties": {
                      "accessToken": {
                        "type": "string",
                        "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                        "minLength": 1
                      },
                      "actions": {
                        "type": "object",
                        "description": "Specifies activities available for the API client.\n",
                        "additionalProperties": false,
                        "required": [
                          "delete",
                          "deactivateAll",
                          "edit",
                          "lock",
                          "transfer",
                          "unlock"
                        ],
                        "properties": {
                          "delete": {
                            "type": "boolean",
                            "description": "Whether you can remove the API client.\n"
                          },
                          "deactivateAll": {
                            "type": "boolean",
                            "description": "Whether you can deactivate the API client's credentials.\n"
                          },
                          "edit": {
                            "type": "boolean",
                            "description": "Whether you can update the API client.\n"
                          },
                          "lock": {
                            "type": "boolean",
                            "description": "Whether you can lock the API client.\n"
                          },
                          "transfer": {
                            "type": "boolean",
                            "description": "Whether you can transfer the API client to a new owner.\n"
                          },
                          "unlock": {
                            "type": "boolean",
                            "description": "Whether you can unlock the API client.\n"
                          }
                        }
                      },
                      "activeCredentialCount": {
                        "type": "integer",
                        "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                        "minimum": 0
                      },
                      "allowAccountSwitch": {
                        "type": "boolean",
                        "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                      },
                      "canAutoCreateCredential": {
                        "type": "boolean",
                        "description": "Whether the API client can create a credential for a new API client. \n"
                      },
                      "authorizedUsers": {
                        "type": "array",
                        "description": "The API client's valid users.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "clientDescription": {
                        "type": "string",
                        "description": "Descriptive label about the API client.\n",
                        "minLength": 0
                      },
                      "clientId": {
                        "type": "string",
                        "description": "Unique identifier for each API client.\n",
                        "minLength": 1
                      },
                      "clientName": {
                        "type": "string",
                        "description": "Descriptive label for the API client.\n",
                        "minLength": 1
                      },
                      "clientType": {
                        "type": "string",
                        "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
                        "default": "CLIENT",
                        "enum": [
                          "CLIENT",
                          "USER_CLIENT",
                          "SERVICE_ACCOUNT"
                        ]
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "The user who created the API client.\n",
                        "minLength": 1
                      },
                      "createdDate": {
                        "type": "string",
                        "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                        "format": "date-time"
                      },
                      "isLocked": {
                        "type": "boolean",
                        "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                      },
                      "notificationEmails": {
                        "type": "array",
                        "description": "Email addresses to notify users of expiring credentials.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "serviceConsumerToken": {
                        "type": "string",
                        "description": "Unique identifier for the service hostname.\n",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/self": {
      "x-akamai": {
        "path-info": "/api-clients/self"
      },
      "get": {
        "operationId": "get-api-client-self",
        "summary": "Get your API client",
        "tags": [
          "API client: self"
        ],
        "description": "This operation provides details about your API client.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "name": "groupAccess",
            "in": "query",
            "description": "Includes the API client's group access, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "apiAccess",
            "in": "query",
            "description": "Lists only the APIs the user can access, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "description": "Includes API user's credentials, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "ipAcl",
            "in": "query",
            "description": "Includes the API client's IP list restriction, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides the API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "alfulani@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Luna Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 12345,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "ipAcl": {
                    "enable": true,
                    "cidr": [
                      "2001:db8::1",
                      "2001:db8::2"
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "0000-0000000000000000-000000000000000",
                      "createdOn": "2022-05-09T10:43:50.000Z",
                      "credentialId": 16850686,
                      "description": "",
                      "expiresOn": "2024-05-09T10:43:50.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "activate": false,
                        "deactivate": false,
                        "delete": false,
                        "editDescription": false,
                        "editExpiration": false
                      }
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Specifies the API client.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies activities available for the API client.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether you can remove the API client.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "Whether you can deactivate the API client's credentials.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether you can update the API client.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "Whether you can update the `apis` the API client can access.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` the API client can access.\n"
                        },
                        "editIpAcl": {
                          "type": "boolean",
                          "description": "Whether you can update the `ipAcl` the API client can access.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "Whether you can update the API client's option to manage many accounts.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "Whether you can lock the API client.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "Whether you can transfer the API client to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "Whether you can unlock the API client.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client.\n"
                    },
                    "apiAccess": {
                      "type": "object",
                      "description": "The APIs the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "type": "boolean",
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                        },
                        "apis": {
                          "type": "array",
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "apiId": {
                                "type": "integer",
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0
                              },
                              "apiName": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "documentationUrl": {
                                "type": "string",
                                "description": "Link to more information about the API.\n",
                                "minLength": 1
                              },
                              "endPoint": {
                                "type": "string",
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1
                              },
                              "accessLevel": {
                                "type": "string",
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n",
                      "minLength": 1
                    },
                    "purgeOptions": {
                      "type": "object",
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "additionalProperties": false,
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by cache tag.\n"
                        },
                        "canPurgeByCpcode": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by CP code.\n"
                        },
                        "cpcodeAccess": {
                          "type": "object",
                          "description": "CP codes the API client can purge.\n",
                          "additionalProperties": false,
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "type": "boolean",
                              "description": "Whether the API client can purge content by cache tag.\n"
                            },
                            "cpcodes": {
                              "type": "array",
                              "description": "CP codes the API client can purge.\n",
                              "minItems": 0,
                              "items": {
                                "type": "integer",
                                "minimum": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ]
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "The API client's of credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0
                          },
                          "actions": {
                            "type": "object",
                            "description": "Specifies activities available for the credential.\n",
                            "additionalProperties": false,
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "Whether you can remove the credential.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "Whether you can activate the credential.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "Whether you can deactivate the credential.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's description.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's expiration date.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "type": "object",
                      "description": "Specifies the API client's group access.\n",
                      "additionalProperties": false,
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "type": "boolean",
                          "description": "Sets the API client's group access the same as the authorized user.\n"
                        },
                        "groups": {
                          "type": "array",
                          "description": "Groups the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "description": "Groups the API client can access.\n",
                            "additionalProperties": false,
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "properties": {
                              "groupName": {
                                "type": "string",
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                              },
                              "roleId": {
                                "type": "integer",
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1
                              },
                              "roleDescription": {
                                "type": "string",
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1
                              },
                              "parentGroupId": {
                                "type": "integer",
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                              },
                              "isBlocked": {
                                "type": "boolean",
                                "description": "Blocks the API client access to the group's child groups.\n"
                              },
                              "subGroups": {
                                "type": "array",
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "type": "object",
                                  "description": "A further nested group.\n",
                                  "additionalProperties": true,
                                  "properties": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "type": "object",
                      "description": "Specifies the API client's IP list restriction.\n",
                      "additionalProperties": false,
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Enables API client's access to the IP ACL.\n"
                        },
                        "cidr": {
                          "type": "array",
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-api-clients-self",
        "summary": "Update your API client",
        "tags": [
          "API client: self"
        ],
        "description": "This operation updates your API client.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "clientName": "report_data",
                "clientDescription": "Provides access to the reporting data.",
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "notificationEmails": [
                  "jsmith@example.com"
                ],
                "authorizedUsers": [
                  "jsmith"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "apiId": 109230,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Event Center",
                      "description": "Event Center",
                      "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                      "endPoint": "/events"
                    },
                    {
                      "apiId": 3515,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 54321,
                      "groupName": "Main Street Corporation",
                      "roleId": 73695,
                      "roleName": "Custom role # 73695",
                      "roleDescription": "Please add a description",
                      "isBlocked": false,
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "Internet Company",
                          "parentGroupId": 19760,
                          "roleId": null,
                          "roleName": null,
                          "isBlocked": false,
                          "subGroups": [
                            {
                              "groupId": 12345,
                              "groupName": "Digital Company",
                              "parentGroupId": 44999,
                              "roleId": null,
                              "roleName": null,
                              "isBlocked": false,
                              "subGroups": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "properties": {
                  "clientName": {
                    "type": "string",
                    "description": "Descriptive label for the API client.\n",
                    "minLength": 1
                  },
                  "authorizedUsers": {
                    "type": "array",
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "apiAccess": {
                    "type": "object",
                    "description": "The APIs the API client can access.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "properties": {
                          "allAccessibleApis": {
                            "type": "boolean",
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                          }
                        },
                        "title": "Not all APIs accessible",
                        "additionalProperties": false,
                        "required": [
                          "apis"
                        ]
                      },
                      {
                        "properties": {
                          "allAccessibleApis": {
                            "type": "boolean",
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                          }
                        },
                        "title": "All APIs accessible",
                        "additionalProperties": false,
                        "required": [
                          "allAccessibleApis"
                        ]
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "type": "boolean",
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                      },
                      "apis": {
                        "type": "array",
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                        "minItems": 0,
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1
                            },
                            "apiId": {
                              "type": "integer",
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                              "minimum": 0
                            },
                            "apiName": {
                              "type": "string",
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1
                            },
                            "documentationUrl": {
                              "type": "string",
                              "description": "Link to more information about the API.\n",
                              "minLength": 1
                            },
                            "endPoint": {
                              "type": "string",
                              "description": "Specifies where the API can access resources.\n",
                              "minLength": 1
                            },
                            "accessLevel": {
                              "type": "string",
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "groupAccess": {
                    "type": "object",
                    "description": "Specifies the API client's group access.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "type": "boolean",
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n"
                          },
                          "groups": {
                            "type": "array",
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "description": "Groups the API client can access.\n",
                              "additionalProperties": false,
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "properties": {
                                "groupName": {
                                  "type": "string",
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                                },
                                "roleName": {
                                  "type": "string",
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1
                                },
                                "roleDescription": {
                                  "type": "string",
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1
                                },
                                "parentGroupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                                },
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Blocks the API client access to the group's child groups.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested group.\n",
                                    "additionalProperties": true,
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Custom access",
                        "additionalProperties": false,
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ]
                      },
                      {
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "type": "boolean",
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.\n"
                          },
                          "groups": {
                            "type": "array",
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "description": "Groups the API client can access.\n",
                              "additionalProperties": false,
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "properties": {
                                "groupName": {
                                  "type": "string",
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                                },
                                "roleName": {
                                  "type": "string",
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1
                                },
                                "roleDescription": {
                                  "type": "string",
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1
                                },
                                "parentGroupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                                },
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Blocks the API client access to the group's child groups.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested group.\n",
                                    "additionalProperties": true,
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Cloned access",
                        "additionalProperties": false,
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ]
                      }
                    ]
                  },
                  "allowAccountSwitch": {
                    "type": "boolean",
                    "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                  },
                  "canAutoCreateCredential": {
                    "type": "boolean",
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
                    "default": false
                  },
                  "clientDescription": {
                    "type": "string",
                    "description": "Descriptive label about the API client.\n",
                    "minLength": 1
                  },
                  "notificationEmails": {
                    "type": "array",
                    "description": "Email addresses to notify users of expiring credentials.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "purgeOptions": {
                    "type": "object",
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                    "additionalProperties": false,
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "properties": {
                      "canPurgeByCacheTag": {
                        "type": "boolean",
                        "description": "Whether the API client can purge content by cache tag.\n"
                      },
                      "canPurgeByCpcode": {
                        "type": "boolean",
                        "description": "Whether the API client can purge content by CP code.\n"
                      },
                      "cpcodeAccess": {
                        "type": "object",
                        "description": "CP codes the API client can purge.\n",
                        "additionalProperties": false,
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "type": "boolean",
                            "description": "Whether the API client can purge content by cache tag.\n"
                          },
                          "cpcodes": {
                            "type": "array",
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "integer",
                              "minimum": 0
                            }
                          }
                        }
                      }
                    }
                  },
                  "ipAcl": {
                    "type": "object",
                    "description": "Specifies the API client's IP list restriction.\n",
                    "additionalProperties": false,
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Enables API client's access to the IP ACL.\n"
                      },
                      "cidr": {
                        "type": "array",
                        "description": "IP addresses or CIDR blocks the API client can access.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": true,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "apiId": 164,
                        "apiName": "Media Reports",
                        "description": "Media Reports APIs",
                        "endPoint": "/media-reports",
                        "documentationUrl": "https://developer.akamai.com/api/luna/media-reports/overview.html",
                        "accessLevel": "READ-ONLY"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 12345,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "CPCode RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "High Street Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 54321,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "description": "Specifies the API client.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies activities available for the API client.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether you can remove the API client.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "Whether you can deactivate the API client's credentials.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether you can update the API client.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "Whether you can update the `apis` the API client can access.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` the API client can access.\n"
                        },
                        "editIpAcl": {
                          "type": "boolean",
                          "description": "Whether you can update the `ipAcl` the API client can access.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "Whether you can update the API client's option to manage many accounts.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "Whether you can lock the API client.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "Whether you can transfer the API client to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "Whether you can unlock the API client.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client.\n"
                    },
                    "apiAccess": {
                      "type": "object",
                      "description": "The APIs the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "type": "boolean",
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                        },
                        "apis": {
                          "type": "array",
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "apiId": {
                                "type": "integer",
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0
                              },
                              "apiName": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "documentationUrl": {
                                "type": "string",
                                "description": "Link to more information about the API.\n",
                                "minLength": 1
                              },
                              "endPoint": {
                                "type": "string",
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1
                              },
                              "accessLevel": {
                                "type": "string",
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n",
                      "minLength": 1
                    },
                    "purgeOptions": {
                      "type": "object",
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "additionalProperties": false,
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by cache tag.\n"
                        },
                        "canPurgeByCpcode": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by CP code.\n"
                        },
                        "cpcodeAccess": {
                          "type": "object",
                          "description": "CP codes the API client can purge.\n",
                          "additionalProperties": false,
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "type": "boolean",
                              "description": "Whether the API client can purge content by cache tag.\n"
                            },
                            "cpcodes": {
                              "type": "array",
                              "description": "CP codes the API client can purge.\n",
                              "minItems": 0,
                              "items": {
                                "type": "integer",
                                "minimum": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ]
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "The API client's of credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0
                          },
                          "actions": {
                            "type": "object",
                            "description": "Specifies activities available for the credential.\n",
                            "additionalProperties": false,
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "Whether you can remove the credential.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "Whether you can activate the credential.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "Whether you can deactivate the credential.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's description.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's expiration date.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "type": "object",
                      "description": "Specifies the API client's group access.\n",
                      "additionalProperties": false,
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "type": "boolean",
                          "description": "Sets the API client's group access the same as the authorized user.\n"
                        },
                        "groups": {
                          "type": "array",
                          "description": "Groups the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "description": "Groups the API client can access.\n",
                            "additionalProperties": false,
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "properties": {
                              "groupName": {
                                "type": "string",
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                              },
                              "roleId": {
                                "type": "integer",
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1
                              },
                              "roleDescription": {
                                "type": "string",
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1
                              },
                              "parentGroupId": {
                                "type": "integer",
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                              },
                              "isBlocked": {
                                "type": "boolean",
                                "description": "Blocks the API client access to the group's child groups.\n"
                              },
                              "subGroups": {
                                "type": "array",
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "type": "object",
                                  "description": "A further nested group.\n",
                                  "additionalProperties": true,
                                  "properties": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "type": "object",
                      "description": "Specifies the API client's IP list restriction.\n",
                      "additionalProperties": false,
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Enables API client's access to the IP ACL.\n"
                        },
                        "cidr": {
                          "type": "array",
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-api-client-self",
        "summary": "Delete your API client",
        "tags": [
          "API client: self"
        ],
        "description": "This operation permanently deletes an API client you own, without active credentials. It also breaks any API connections with the client. Before deleting your API client, deactivate all credentials and make sure there aren't any API integrations or scripts using them.\n",
        "responses": {
          "204": {
            "description": "API client successfully deleted.\n"
          }
        }
      }
    },
    "/api-clients/self/account-switch-keys": {
      "x-akamai": {
        "path-info": "/api-clients/self/account-switch-keys"
      },
      "get": {
        "operationId": "get-self-account-switch-keys",
        "summary": "List your account switch keys",
        "tags": [
          "API client: self"
        ],
        "description": "This operation lists account switch keys available for your API client. You can use the `accountSwitchKey` in many Akamai APIs [to make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.\n",
            "schema": {
              "type": "string",
              "example": "indirect",
              "minLength": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides your account switch keys and account names.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Digital Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "This object encapsulates a collection of contexts the client can manage.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "properties": {
                      "accountName": {
                        "type": "string",
                        "description": "The name you supply for an account.\n",
                        "minLength": 1
                      },
                      "accountSwitchKey": {
                        "type": "string",
                        "description": "The identifier for an account other than your API client's default.\n",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/self/lock": {
      "x-akamai": {
        "path-info": "/api-clients/self/lock"
      },
      "put": {
        "operationId": "put-lock-api-client-self",
        "summary": "Lock your API client",
        "tags": [
          "API client: self"
        ],
        "description": "This operation locks your API client. You can't use the API client while it's locked. To unlock your client, run the [Unlock an API client](ref:put-unlock-api-client) operation.\n",
        "responses": {
          "200": {
            "description": "The response provides the locked API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67",
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "List of API clients.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client. \n",
                      "default": false
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceConsumerToken": {
                      "type": "string",
                      "description": "Unique identifier for the service hostname.\n",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/{clientId}": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "2cdgugz2tjbtowmy"
          }
        }
      ],
      "get": {
        "operationId": "get-api-client",
        "summary": "Get an API client",
        "tags": [
          "API clients"
        ],
        "description": "This operation provides details about an API client.\n",
        "parameters": [
          {
            "description": "Includes actions you can perform on the object, `false` by default.\n",
            "in": "query",
            "name": "actions",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/actions-query.yaml"
            }
          },
          {
            "name": "groupAccess",
            "in": "query",
            "description": "Includes the API client's group access, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "apiAccess",
            "in": "query",
            "description": "Lists only the APIs the user can access, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "credentials",
            "in": "query",
            "description": "Includes API user's credentials, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "ipAcl",
            "in": "query",
            "description": "Includes the API client's IP list restriction, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides the API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-whlw7vibvujyoowg-rrp2q4cj362hke5t",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-csrfyd3yzysqybe3-3dwjebsqo6ecu63m.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "4f3cxdie6adyalyg",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "alfulani",
                  "createdDate": "2022-05-09T10:43:49.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "alfulani@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": false,
                    "edit": true,
                    "editApis": false,
                    "editAuth": false,
                    "editGroups": false,
                    "editIpAcl": false,
                    "editSwitchAccount": false,
                    "lock": false,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Luna Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 12345,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "ipAcl": {
                    "enable": true,
                    "cidr": [
                      "2001:db8::1",
                      "2001:db8::2"
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  },
                  "credentials": [
                    {
                      "clientToken": "0000-0000000000000000-000000000000000",
                      "createdOn": "2022-05-09T10:43:50.000Z",
                      "credentialId": 16850686,
                      "description": "",
                      "expiresOn": "2024-05-09T10:43:50.000Z",
                      "status": "ACTIVE",
                      "actions": {
                        "activate": false,
                        "deactivate": false,
                        "delete": false,
                        "editDescription": false,
                        "editExpiration": false
                      }
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Specifies the API client.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies activities available for the API client.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether you can remove the API client.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "Whether you can deactivate the API client's credentials.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether you can update the API client.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "Whether you can update the `apis` the API client can access.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` the API client can access.\n"
                        },
                        "editIpAcl": {
                          "type": "boolean",
                          "description": "Whether you can update the `ipAcl` the API client can access.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "Whether you can update the API client's option to manage many accounts.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "Whether you can lock the API client.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "Whether you can transfer the API client to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "Whether you can unlock the API client.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client.\n"
                    },
                    "apiAccess": {
                      "type": "object",
                      "description": "The APIs the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "type": "boolean",
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                        },
                        "apis": {
                          "type": "array",
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "apiId": {
                                "type": "integer",
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0
                              },
                              "apiName": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "documentationUrl": {
                                "type": "string",
                                "description": "Link to more information about the API.\n",
                                "minLength": 1
                              },
                              "endPoint": {
                                "type": "string",
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1
                              },
                              "accessLevel": {
                                "type": "string",
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n",
                      "minLength": 1
                    },
                    "purgeOptions": {
                      "type": "object",
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "additionalProperties": false,
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by cache tag.\n"
                        },
                        "canPurgeByCpcode": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by CP code.\n"
                        },
                        "cpcodeAccess": {
                          "type": "object",
                          "description": "CP codes the API client can purge.\n",
                          "additionalProperties": false,
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "type": "boolean",
                              "description": "Whether the API client can purge content by cache tag.\n"
                            },
                            "cpcodes": {
                              "type": "array",
                              "description": "CP codes the API client can purge.\n",
                              "minItems": 0,
                              "items": {
                                "type": "integer",
                                "minimum": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ]
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "The API client's of credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0
                          },
                          "actions": {
                            "type": "object",
                            "description": "Specifies activities available for the credential.\n",
                            "additionalProperties": false,
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "Whether you can remove the credential.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "Whether you can activate the credential.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "Whether you can deactivate the credential.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's description.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's expiration date.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "type": "object",
                      "description": "Specifies the API client's group access.\n",
                      "additionalProperties": false,
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "type": "boolean",
                          "description": "Sets the API client's group access the same as the authorized user.\n"
                        },
                        "groups": {
                          "type": "array",
                          "description": "Groups the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "description": "Groups the API client can access.\n",
                            "additionalProperties": false,
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "properties": {
                              "groupName": {
                                "type": "string",
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                              },
                              "roleId": {
                                "type": "integer",
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1
                              },
                              "roleDescription": {
                                "type": "string",
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1
                              },
                              "parentGroupId": {
                                "type": "integer",
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                              },
                              "isBlocked": {
                                "type": "boolean",
                                "description": "Blocks the API client access to the group's child groups.\n"
                              },
                              "subGroups": {
                                "type": "array",
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "type": "object",
                                  "description": "A further nested group.\n",
                                  "additionalProperties": true,
                                  "properties": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "type": "object",
                      "description": "Specifies the API client's IP list restriction.\n",
                      "additionalProperties": false,
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Enables API client's access to the IP ACL.\n"
                        },
                        "cidr": {
                          "type": "array",
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-api-clients",
        "summary": "Update an API client",
        "tags": [
          "API clients"
        ],
        "description": "This operation updates an API client.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "clientName": "report_data",
                "clientDescription": "Provides access to the reporting data.",
                "allowAccountSwitch": false,
                "canAutoCreateCredential": false,
                "notificationEmails": [
                  "jsmith@example.com"
                ],
                "authorizedUsers": [
                  "jsmith"
                ],
                "apiAccess": {
                  "allAccessibleApis": false,
                  "apis": [
                    {
                      "apiId": 109230,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Event Center",
                      "description": "Event Center",
                      "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                      "endPoint": "/events"
                    },
                    {
                      "apiId": 3515,
                      "accessLevel": "READ-ONLY",
                      "apiName": "Reporting API",
                      "description": "Luna Reporting API",
                      "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                      "endPoint": "/reporting-api"
                    }
                  ]
                },
                "groupAccess": {
                  "cloneAuthorizedUserGroups": false,
                  "groups": [
                    {
                      "groupId": 54321,
                      "groupName": "Main Street Corporation",
                      "roleId": 73695,
                      "roleName": "Custom role # 73695",
                      "roleDescription": "Please add a description",
                      "isBlocked": false,
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "Internet Company",
                          "parentGroupId": 19760,
                          "roleId": null,
                          "roleName": null,
                          "isBlocked": false,
                          "subGroups": [
                            {
                              "groupId": 12345,
                              "groupName": "Digital Company",
                              "parentGroupId": 44999,
                              "roleId": null,
                              "roleName": null,
                              "isBlocked": false,
                              "subGroups": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "apiAccess",
                  "groupAccess",
                  "authorizedUsers"
                ],
                "properties": {
                  "clientName": {
                    "type": "string",
                    "description": "Descriptive label for the API client.\n",
                    "minLength": 1
                  },
                  "authorizedUsers": {
                    "type": "array",
                    "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "apiAccess": {
                    "type": "object",
                    "description": "The APIs the API client can access.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "properties": {
                          "allAccessibleApis": {
                            "type": "boolean",
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                          }
                        },
                        "title": "Not all APIs accessible",
                        "additionalProperties": false,
                        "required": [
                          "apis"
                        ]
                      },
                      {
                        "properties": {
                          "allAccessibleApis": {
                            "type": "boolean",
                            "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                          }
                        },
                        "title": "All APIs accessible",
                        "additionalProperties": false,
                        "required": [
                          "allAccessibleApis"
                        ]
                      }
                    ],
                    "properties": {
                      "allAccessibleApis": {
                        "type": "boolean",
                        "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                      },
                      "apis": {
                        "type": "array",
                        "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                        "minItems": 0,
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "apiId",
                            "accessLevel"
                          ],
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1
                            },
                            "apiId": {
                              "type": "integer",
                              "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                              "minimum": 0
                            },
                            "apiName": {
                              "type": "string",
                              "description": "Descriptive label for the API.\n",
                              "minLength": 1
                            },
                            "documentationUrl": {
                              "type": "string",
                              "description": "Link to more information about the API.\n",
                              "minLength": 1
                            },
                            "endPoint": {
                              "type": "string",
                              "description": "Specifies where the API can access resources.\n",
                              "minLength": 1
                            },
                            "accessLevel": {
                              "type": "string",
                              "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                              "enum": [
                                "READ-ONLY",
                                "READ-WRITE"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "groupAccess": {
                    "type": "object",
                    "description": "Specifies the API client's group access.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "type": "boolean",
                            "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n"
                          },
                          "groups": {
                            "type": "array",
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "description": "Groups the API client can access.\n",
                              "additionalProperties": false,
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "properties": {
                                "groupName": {
                                  "type": "string",
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                                },
                                "roleName": {
                                  "type": "string",
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1
                                },
                                "roleDescription": {
                                  "type": "string",
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1
                                },
                                "parentGroupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                                },
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Blocks the API client access to the group's child groups.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested group.\n",
                                    "additionalProperties": true,
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Custom access",
                        "additionalProperties": false,
                        "required": [
                          "groups",
                          "cloneAuthorizedUserGroups"
                        ]
                      },
                      {
                        "properties": {
                          "cloneAuthorizedUserGroups": {
                            "type": "boolean",
                            "description": "Set it to `true` to clone the API client's group access from the authorized user.\n"
                          },
                          "groups": {
                            "type": "array",
                            "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "object",
                              "description": "Groups the API client can access.\n",
                              "additionalProperties": false,
                              "required": [
                                "roleId",
                                "groupId"
                              ],
                              "properties": {
                                "groupName": {
                                  "type": "string",
                                  "description": "Descriptive label for the group.\n",
                                  "minLength": 1
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                                },
                                "roleName": {
                                  "type": "string",
                                  "description": "Descriptive label for the role.\n",
                                  "minLength": 1
                                },
                                "roleDescription": {
                                  "type": "string",
                                  "description": "Descriptive label for the role to convey its use.\n",
                                  "minLength": 1
                                },
                                "parentGroupId": {
                                  "type": "integer",
                                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                                },
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Blocks the API client access to the group's child groups.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested group.\n",
                                    "additionalProperties": true,
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "title": "Cloned access",
                        "additionalProperties": false,
                        "required": [
                          "cloneAuthorizedUserGroups"
                        ]
                      }
                    ]
                  },
                  "allowAccountSwitch": {
                    "type": "boolean",
                    "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                  },
                  "canAutoCreateCredential": {
                    "type": "boolean",
                    "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
                    "default": false
                  },
                  "clientDescription": {
                    "type": "string",
                    "description": "Descriptive label about the API client.\n",
                    "minLength": 1
                  },
                  "notificationEmails": {
                    "type": "array",
                    "description": "Email addresses to notify users of expiring credentials.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "purgeOptions": {
                    "type": "object",
                    "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                    "additionalProperties": false,
                    "required": [
                      "canPurgeByCacheTag",
                      "canPurgeByCpcode",
                      "cpcodeAccess"
                    ],
                    "properties": {
                      "canPurgeByCacheTag": {
                        "type": "boolean",
                        "description": "Whether the API client can purge content by cache tag.\n"
                      },
                      "canPurgeByCpcode": {
                        "type": "boolean",
                        "description": "Whether the API client can purge content by CP code.\n"
                      },
                      "cpcodeAccess": {
                        "type": "object",
                        "description": "CP codes the API client can purge.\n",
                        "additionalProperties": false,
                        "required": [
                          "allCurrentAndNewCpcodes",
                          "cpcodes"
                        ],
                        "properties": {
                          "allCurrentAndNewCpcodes": {
                            "type": "boolean",
                            "description": "Whether the API client can purge content by cache tag.\n"
                          },
                          "cpcodes": {
                            "type": "array",
                            "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                            "minItems": 0,
                            "items": {
                              "type": "integer",
                              "minimum": 0
                            }
                          }
                        }
                      }
                    }
                  },
                  "ipAcl": {
                    "type": "object",
                    "description": "Specifies the API client's IP list restriction.\n",
                    "additionalProperties": false,
                    "required": [
                      "enable",
                      "cidr"
                    ],
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Enables API client's access to the IP ACL.\n"
                      },
                      "cidr": {
                        "type": "array",
                        "description": "IP addresses or CIDR blocks the API client can access.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the modified API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-eol24zwha6c2huw6-3at564pdmaggqrro",
                  "activeCredentialCount": 0,
                  "allowAccountSwitch": false,
                  "canAutoCreateCredential": false,
                  "baseURL": "https://akaa-g3bclnoojfn7jvua-ic3mtmz7dwkot4jw.luna-dev.akamaiapis.net",
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "2cdgugz2tjbtowmy",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jperez",
                  "createdDate": "2022-05-23T19:56:27.000Z",
                  "isLocked": false,
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ],
                  "actions": {
                    "deactivateAll": false,
                    "delete": true,
                    "edit": true,
                    "editApis": true,
                    "editAuth": true,
                    "editGroups": true,
                    "editIpAcl": true,
                    "editSwitchAccount": false,
                    "lock": true,
                    "transfer": true,
                    "unlock": false
                  },
                  "apiAccess": {
                    "allAccessibleApis": true,
                    "apis": [
                      {
                        "apiId": 164,
                        "apiName": "Media Reports",
                        "description": "Media Reports APIs",
                        "endPoint": "/media-reports",
                        "documentationUrl": "https://developer.akamai.com/api/luna/media-reports/overview.html",
                        "accessLevel": "READ-ONLY"
                      },
                      {
                        "accessLevel": "READ-WRITE",
                        "apiId": 5101,
                        "apiName": "Reporting API",
                        "description": "Reporting API",
                        "documentationUrl": "https://developer.akamai.com/api/luna/reporting-api/overview.html",
                        "endPoint": "/reporting-api"
                      }
                    ]
                  },
                  "groupAccess": {
                    "cloneAuthorizedUserGroups": true,
                    "groups": [
                      {
                        "groupId": 12345,
                        "groupName": "Main Street Corporation",
                        "isBlocked": false,
                        "roleDescription": "CPCode RolePermissions Automation",
                        "roleId": 114492,
                        "roleName": "CP Code Automation Role",
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "High Street Company",
                        "isBlocked": false,
                        "roleDescription": "Admin Role plus Authz Case Management Read Role",
                        "roleId": 142838,
                        "roleName": "Admin plus Authz Case Management Read",
                        "subGroups": [
                          {
                            "groupId": 54321,
                            "groupName": "Cloud Access Manager",
                            "isBlocked": false,
                            "parentGroupId": 19717,
                            "roleDescription": "Cloud Access Manager Admin",
                            "roleId": 114776,
                            "roleName": "Cloud Access Manager Admin",
                            "subGroups": []
                          }
                        ]
                      }
                    ]
                  },
                  "purgeOptions": {
                    "canPurgeByCacheTag": false,
                    "canPurgeByCpcode": false,
                    "cpcodeAccess": {
                      "allCurrentAndNewCpcodes": true,
                      "cpcodes": []
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "description": "Specifies the API client.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "baseURL",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies activities available for the API client.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "deactivateAll",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether you can remove the API client.\n"
                        },
                        "deactivateAll": {
                          "type": "boolean",
                          "description": "Whether you can deactivate the API client's credentials.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether you can update the API client.\n"
                        },
                        "editApis": {
                          "type": "boolean",
                          "description": "Whether you can update the `apis` the API client can access.\n"
                        },
                        "editAuth": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` or `apis` the API client can access.\n"
                        },
                        "editGroups": {
                          "type": "boolean",
                          "description": "Whether you can update the `groups` the API client can access.\n"
                        },
                        "editIpAcl": {
                          "type": "boolean",
                          "description": "Whether you can update the `ipAcl` the API client can access.\n"
                        },
                        "editSwitchAccount": {
                          "type": "boolean",
                          "description": "Whether you can update the API client's option to manage many accounts.\n"
                        },
                        "lock": {
                          "type": "boolean",
                          "description": "Whether you can lock the API client.\n"
                        },
                        "transfer": {
                          "type": "boolean",
                          "description": "Whether you can transfer the API client to a new owner.\n"
                        },
                        "unlock": {
                          "type": "boolean",
                          "description": "Whether you can unlock the API client.\n"
                        }
                      }
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client.\n"
                    },
                    "apiAccess": {
                      "type": "object",
                      "description": "The APIs the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "allAccessibleApis",
                        "apis"
                      ],
                      "properties": {
                        "allAccessibleApis": {
                          "type": "boolean",
                          "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                        },
                        "apis": {
                          "type": "array",
                          "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "description",
                              "apiId",
                              "apiName",
                              "documentationUrl",
                              "endPoint",
                              "accessLevel"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "apiId": {
                                "type": "integer",
                                "description": "Unique identifier for each API.\n",
                                "minimum": 0
                              },
                              "apiName": {
                                "type": "string",
                                "description": "Descriptive label for the API.\n",
                                "minLength": 1
                              },
                              "documentationUrl": {
                                "type": "string",
                                "description": "Link to more information about the API.\n",
                                "minLength": 1
                              },
                              "endPoint": {
                                "type": "string",
                                "description": "Specifies where the API can access resources.\n",
                                "minLength": 1
                              },
                              "accessLevel": {
                                "type": "string",
                                "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "baseURL": {
                      "type": "string",
                      "description": "The base URL for the service.\n",
                      "minLength": 1
                    },
                    "purgeOptions": {
                      "type": "object",
                      "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
                      "additionalProperties": false,
                      "required": [
                        "canPurgeByCacheTag",
                        "canPurgeByCpcode",
                        "cpcodeAccess"
                      ],
                      "properties": {
                        "canPurgeByCacheTag": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by cache tag.\n"
                        },
                        "canPurgeByCpcode": {
                          "type": "boolean",
                          "description": "Whether the API client can purge content by CP code.\n"
                        },
                        "cpcodeAccess": {
                          "type": "object",
                          "description": "CP codes the API client can purge.\n",
                          "additionalProperties": false,
                          "required": [
                            "allCurrentAndNewCpcodes",
                            "cpcodes"
                          ],
                          "properties": {
                            "allCurrentAndNewCpcodes": {
                              "type": "boolean",
                              "description": "Whether the API client can purge content by cache tag.\n"
                            },
                            "cpcodes": {
                              "type": "array",
                              "description": "CP codes the API client can purge.\n",
                              "minItems": 0,
                              "items": {
                                "type": "integer",
                                "minimum": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT"
                      ]
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "credentials": {
                      "type": "array",
                      "description": "The API client's of credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "description",
                          "actions",
                          "clientToken",
                          "createdOn",
                          "credentialId",
                          "expiresOn",
                          "status"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Descriptive label for the API client.\n",
                            "minLength": 0
                          },
                          "actions": {
                            "type": "object",
                            "description": "Specifies activities available for the credential.\n",
                            "additionalProperties": false,
                            "required": [
                              "delete",
                              "activate",
                              "deactivate",
                              "editDescription",
                              "editExpiration"
                            ],
                            "properties": {
                              "delete": {
                                "type": "boolean",
                                "description": "Whether you can remove the credential.\n"
                              },
                              "activate": {
                                "type": "boolean",
                                "description": "Whether you can activate the credential.\n"
                              },
                              "deactivate": {
                                "type": "boolean",
                                "description": "Whether you can deactivate the credential.\n"
                              },
                              "editDescription": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's description.\n"
                              },
                              "editExpiration": {
                                "type": "boolean",
                                "description": "Whether you can modify the credential's expiration date.\n"
                              }
                            }
                          },
                          "clientToken": {
                            "type": "string",
                            "description": "Part of the credential that identifies the API client.\n",
                            "minLength": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                            "format": "date-time"
                          },
                          "credentialId": {
                            "type": "integer",
                            "description": "Unique identifier each credential.\n",
                            "minimum": 0
                          },
                          "expiresOn": {
                            "type": "string",
                            "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                            "enum": [
                              "ACTIVE",
                              "INACTIVE",
                              "DELETED"
                            ]
                          }
                        }
                      }
                    },
                    "groupAccess": {
                      "type": "object",
                      "description": "Specifies the API client's group access.\n",
                      "additionalProperties": false,
                      "required": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                      ],
                      "properties": {
                        "cloneAuthorizedUserGroups": {
                          "type": "boolean",
                          "description": "Sets the API client's group access the same as the authorized user.\n"
                        },
                        "groups": {
                          "type": "array",
                          "description": "Groups the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "object",
                            "description": "Groups the API client can access.\n",
                            "additionalProperties": false,
                            "required": [
                              "roleId",
                              "groupId"
                            ],
                            "properties": {
                              "groupName": {
                                "type": "string",
                                "description": "Descriptive label for the group.\n",
                                "minLength": 1
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                              },
                              "roleId": {
                                "type": "integer",
                                "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "Descriptive label for the role.\n",
                                "minLength": 1
                              },
                              "roleDescription": {
                                "type": "string",
                                "description": "Descriptive label for the role to convey its use.\n",
                                "minLength": 1
                              },
                              "parentGroupId": {
                                "type": "integer",
                                "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                              },
                              "isBlocked": {
                                "type": "boolean",
                                "description": "Blocks the API client access to the group's child groups.\n"
                              },
                              "subGroups": {
                                "type": "array",
                                "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                                "items": {
                                  "type": "object",
                                  "description": "A further nested group.\n",
                                  "additionalProperties": true,
                                  "properties": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipAcl": {
                      "type": "object",
                      "description": "Specifies the API client's IP list restriction.\n",
                      "additionalProperties": false,
                      "required": [
                        "enable",
                        "cidr"
                      ],
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Enables API client's access to the IP ACL.\n"
                        },
                        "cidr": {
                          "type": "array",
                          "description": "IP addresses or CIDR blocks the API client can access.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceProviderId": {
                      "type": "integer",
                      "description": "Unique identifier for the API's service provider.\n",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-api-client",
        "summary": "Delete an API client",
        "tags": [
          "API clients"
        ],
        "description": "This operation permanently deletes the API client, breaking any API connections with the client. To delete a client, you need to own the client, or have admin access on a given group. Before deleting an API client, make sure there aren't any API integrations or scripts using it.\n",
        "responses": {
          "204": {
            "description": "API client successfully deleted.\n"
          }
        }
      }
    },
    "/api-clients/{clientId}/account-switch-keys": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/account-switch-keys"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "2cdgugz2tjbtowmy"
          }
        }
      ],
      "get": {
        "operationId": "get-client-account-switch-keys",
        "summary": "List account switch keys",
        "tags": [
          "API clients"
        ],
        "description": "This operation lists account switch keys available for a specific API client. The client can use the `accountSwitchKey` in many Akamai APIs to [make an API call to another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.\n",
            "schema": {
              "type": "string",
              "example": "indirect",
              "minLength": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides account switch keys and account names available to you.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-EFGH"
                  },
                  {
                    "accountName": "Internet Company",
                    "accountSwitchKey": "1-ABCD:Z-XYZ"
                  },
                  {
                    "accountName": "Digital Company",
                    "accountSwitchKey": "1-ABCD:Z-PQR"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Encapsulates a collection of contexts the client can manage.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "accountName",
                      "accountSwitchKey"
                    ],
                    "properties": {
                      "accountName": {
                        "type": "string",
                        "description": "Descriptive label for the account.\n",
                        "minLength": 1
                      },
                      "accountSwitchKey": {
                        "type": "string",
                        "description": "The identifier for an account other than your API client's default.\n",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/{clientId}/lock": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/lock"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "2cdgugz2tjbtowmy"
          }
        }
      ],
      "put": {
        "operationId": "put-lock-api-client",
        "summary": "Lock an API client",
        "tags": [
          "API clients"
        ],
        "description": "This operation locks an API client. You can't use the API client while it's locked. To unlock a client, run the [Unlock an API client](ref:put-unlock-api-client) operation.\n",
        "responses": {
          "200": {
            "description": "The response provides the locked API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67",
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "List of API clients.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client. \n",
                      "default": false
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceConsumerToken": {
                      "type": "string",
                      "description": "Unique identifier for the service hostname.\n",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-clients/{clientId}/unlock": {
      "x-akamai": {
        "path-info": "/api-clients/{clientId}/unlock"
      },
      "parameters": [
        {
          "name": "clientId",
          "in": "path",
          "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "2cdgugz2tjbtowmy"
          }
        }
      ],
      "put": {
        "operationId": "put-unlock-api-client",
        "summary": "Unlock an API client",
        "tags": [
          "API clients"
        ],
        "description": "This operation unlocks an API client.\n",
        "responses": {
          "200": {
            "description": "The response provides the unlocked API client.\n",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "akaa-ly55myu4fbtajqck-o7oubkbiytbjxywe",
                  "activeCredentialCount": 1,
                  "allowAccountSwitch": false,
                  "clientDescription": "Provides access to the reporting data.",
                  "clientId": "xfz2n5d43mogkdim",
                  "clientName": "report_data",
                  "clientType": "CLIENT",
                  "createdBy": "jsmith",
                  "createdDate": "2022-05-13T20:04:35.000Z",
                  "isLocked": true,
                  "serviceConsumerToken": "akaa-lb77cyyf3guivns3-sxmd4sims2mihn67",
                  "authorizedUsers": [
                    "jsmith"
                  ],
                  "notificationEmails": [
                    "jsmith@example.com"
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "List of API clients.\n",
                  "additionalProperties": false,
                  "required": [
                    "accessToken",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "authorizedUsers",
                    "clientDescription",
                    "clientId",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "isLocked",
                    "notificationEmails",
                    "serviceConsumerToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
                      "minLength": 1
                    },
                    "activeCredentialCount": {
                      "type": "integer",
                      "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
                      "minimum": 0
                    },
                    "allowAccountSwitch": {
                      "type": "boolean",
                      "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
                    },
                    "canAutoCreateCredential": {
                      "type": "boolean",
                      "description": "Whether the API client can create a credential for a new API client. \n",
                      "default": false
                    },
                    "authorizedUsers": {
                      "type": "array",
                      "description": "The API client's valid users.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "clientDescription": {
                      "type": "string",
                      "description": "Descriptive label about the API client.\n",
                      "minLength": 1
                    },
                    "clientId": {
                      "type": "string",
                      "description": "Unique identifier for each API client.\n",
                      "minLength": 1
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Descriptive label for the API client.\n",
                      "minLength": 1
                    },
                    "clientType": {
                      "type": "string",
                      "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
                      "enum": [
                        "CLIENT",
                        "USER_CLIENT",
                        "SERVICE_ACCOUNT"
                      ]
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the API client.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the API client was created.\n",
                      "format": "date-time"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "notificationEmails": {
                      "type": "array",
                      "description": "Email addresses to notify users of expiring credentials.\n",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "serviceConsumerToken": {
                      "type": "string",
                      "description": "Unique identifier for the service hostname.\n",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "x-akamai": {
        "path-info": "/users"
      },
      "get": {
        "operationId": "get-api-clients-users",
        "summary": "List authorized users",
        "tags": [
          "Helper"
        ],
        "description": "This operation lists authorized API client users.\n",
        "responses": {
          "200": {
            "description": "The response provides the authorized users.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "email": "hgildong@example.com",
                    "firstName": "Mon",
                    "lastName": "Arch",
                    "uiIdentityId": "B-C-IYSLYL",
                    "username": "hgildong"
                  },
                  {
                    "email": "jsmith@example.com",
                    "firstName": "john",
                    "lastName": "smith",
                    "uiIdentityId": "B-P-2SGTC09",
                    "username": "jsmith"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Authorized user on an account.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "email",
                      "firstName",
                      "lastName",
                      "uiIdentityId",
                      "username"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The user's email address.\n",
                        "format": "email"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "The user's first name.\n",
                        "minLength": 1
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The user's surname.\n",
                        "minLength": 1
                      },
                      "uiIdentityId": {
                        "type": "string",
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                        "minLength": 1
                      },
                      "username": {
                        "type": "string",
                        "description": "The user's Control Center sign-in name.\n",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/allowed-apis": {
      "x-akamai": {
        "path-info": "/users/{username}/allowed-apis"
      },
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "Unique username for each user. To get this value, run the [List authorized users](ref:get-api-clients-users) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "jsmith"
          }
        }
      ],
      "get": {
        "operationId": "get-api-clients-users-allowed-apis",
        "summary": "List allowed APIs",
        "tags": [
          "Helper"
        ],
        "description": "This operation lists available APIs for a user.\n",
        "parameters": [
          {
            "name": "clientType",
            "in": "query",
            "description": "Filters data by client type, either `USER_CLIENT`, `SERVICE_ACCOUNT`, or default `CLIENT`.\n",
            "schema": {
              "type": "string",
              "example": "CLIENT",
              "default": "CLIENT",
              "enum": [
                "USER_CLIENT",
                "SERVICE_ACCOUNT",
                "CLIENT"
              ]
            }
          },
          {
            "name": "allowAccountSwitch",
            "in": "query",
            "description": "Includes account a user can switch to, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides APIs available to the user.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "apiId": 146,
                    "apiName": "Property Manager (PAPI)",
                    "description": "Property Manager (PAPI). PAPI requires access to Edge Hostnames. Please edit your authorizations to add HAPI to your API Client.",
                    "documentationUrl": "https://developer.akamai.com/api/luna/papi/overview.html",
                    "endPoint": "/papi",
                    "hasAccess": true,
                    "serviceProviderId": 1,
                    "accessLevels": [
                      "READ-WRITE"
                    ]
                  },
                  {
                    "apiId": 11,
                    "serviceProviderId": 1,
                    "apiName": "Event Center",
                    "description": "Event Center",
                    "endPoint": "/events",
                    "documentationUrl": "https://developer.akamai.com/api/luna/events/overview.html",
                    "hasAccess": true,
                    "accessLevels": [
                      "READ-ONLY",
                      "READ-WRITE"
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "APIs available to the user.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "description",
                      "accessLevels",
                      "apiId",
                      "apiName",
                      "documentationUrl",
                      "endPoint",
                      "hasAccess",
                      "serviceProviderId"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Descriptive label for the API.\n",
                        "minLength": 1
                      },
                      "accessLevels": {
                        "type": "array",
                        "description": "API access levels, possible values are `READ-ONLY` and `READ-WRITE`.\n",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "enum": [
                            "READ-ONLY",
                            "READ-WRITE"
                          ]
                        }
                      },
                      "apiId": {
                        "type": "integer",
                        "description": "Unique identifier for each API.\n",
                        "minimum": 0
                      },
                      "apiName": {
                        "type": "string",
                        "description": "Descriptive label for the API.\n",
                        "minLength": 1
                      },
                      "documentationUrl": {
                        "type": "string",
                        "description": "Link to more information about the API.\n",
                        "minLength": 1
                      },
                      "endPoint": {
                        "type": "string",
                        "description": "Specifies where the API can access resources.\n",
                        "minLength": 1
                      },
                      "hasAccess": {
                        "type": "boolean",
                        "description": "Confirms access to the API.\n"
                      },
                      "serviceProviderId": {
                        "type": "integer",
                        "description": "Unique identifier for the API's service provider.\n",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/allowed-cpcodes": {
      "x-akamai": {
        "path-info": "/users/{username}/allowed-cpcodes"
      },
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "Unique username for each user. To get this value, run the [List authorized users](ref:get-api-clients-users) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "jsmith"
          }
        }
      ],
      "post": {
        "operationId": "post-api-clients-users-allowed-cpcodes",
        "summary": "List allowed CP codes",
        "tags": [
          "Helper"
        ],
        "description": "This operation lists available CP codes for a user.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "clientType": "CLIENT",
                "groups": [
                  {
                    "groupId": 32145,
                    "groupName": "Main Street Corporation",
                    "isBlocked": false,
                    "roleDescription": "CPCode RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation role",
                    "subGroups": []
                  },
                  {
                    "groupId": 54321,
                    "groupName": "High Street Company",
                    "isBlocked": false,
                    "roleDescription": "Admin role and Authz Case Management read role",
                    "roleId": 142838,
                    "roleName": "Admin and Authz Case Management Read",
                    "subGroups": [
                      {
                        "groupId": 12345,
                        "groupName": "Internet Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "Digital Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "type": "object",
                "description": "POST allowed CP codes.\n",
                "additionalProperties": false,
                "required": [
                  "clientType",
                  "groups"
                ],
                "properties": {
                  "clientType": {
                    "type": "string",
                    "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
                    "default": "CLIENT",
                    "enum": [
                      "CLIENT",
                      "USER_CLIENT",
                      "SERVICE_ACCOUNT"
                    ]
                  },
                  "groups": {
                    "type": "array",
                    "description": "Groups the API client can access.\n",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "description": "Groups the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "properties": {
                        "groupName": {
                          "type": "string",
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1
                        },
                        "roleDescription": {
                          "type": "string",
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1
                        },
                        "parentGroupId": {
                          "type": "integer",
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                        },
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Blocks the API client access to the group's child groups.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "type": "object",
                            "description": "A further nested group.\n",
                            "additionalProperties": true,
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides CP codes available to the user.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "Stream Analyzer (36915)",
                    "value": 36915
                  },
                  {
                    "name": "plopessa-uvod-ns (373118)",
                    "value": 373118
                  },
                  {
                    "name": "ArunNS (866797)",
                    "value": 866797
                  },
                  {
                    "name": "1234 (933076)",
                    "value": 933076
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "A schema for name value pair.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Descriptive label for the CP code.\n",
                        "minLength": 1
                      },
                      "value": {
                        "type": "integer",
                        "description": "Unique identifier for the CP code.\n",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/group-access": {
      "x-akamai": {
        "path-info": "/users/{username}/group-access"
      },
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "Unique username for each user. To get this value, run the [List authorized users](ref:get-api-clients-users) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "jsmith"
          }
        }
      ],
      "get": {
        "operationId": "get-api-clients-users-group-access",
        "summary": "List accessible groups",
        "tags": [
          "Helper"
        ],
        "description": "This operation lists groups available to a user.\n",
        "responses": {
          "200": {
            "description": "The response provides groups available to the user.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "groupId": 54321,
                    "groupName": "Main Street Corporation",
                    "isBlocked": false,
                    "roleDescription": "CPCode RolePermissions Automation",
                    "roleId": 114492,
                    "roleName": "CP Code Automation Role",
                    "subGroups": []
                  },
                  {
                    "groupId": 12345,
                    "groupName": "High Street Company",
                    "isBlocked": false,
                    "roleDescription": "Admin role and Authz Case Management Read role for PRTLDEVOPS-50807",
                    "roleId": 142838,
                    "roleName": "Admin plus Authz Case Management Read",
                    "subGroups": [
                      {
                        "groupId": 32145,
                        "groupName": "Digital Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      },
                      {
                        "groupId": 54321,
                        "groupName": "Internet Company",
                        "parentGroupId": 19717,
                        "subGroups": []
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Accessible groups.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "groupId",
                      "groupName",
                      "isBlocked",
                      "roleDescription",
                      "roleId",
                      "roleName",
                      "subGroups"
                    ],
                    "properties": {
                      "groupId": {
                        "type": "integer",
                        "description": "Unique identifier for each group.\n",
                        "minimum": 1
                      },
                      "groupName": {
                        "type": "string",
                        "description": "Descriptive label for the group.\n",
                        "minLength": 1
                      },
                      "isBlocked": {
                        "type": "boolean",
                        "description": "Whether a user's access to a group is blocked.\n"
                      },
                      "roleDescription": {
                        "type": "string",
                        "description": "Descriptive label for the role to convey its use.\n",
                        "minLength": 1
                      },
                      "roleId": {
                        "type": "integer",
                        "description": "Unique identifier for each role.\n",
                        "minimum": 1
                      },
                      "roleName": {
                        "type": "string",
                        "description": "Descriptive label for the role.\n",
                        "minLength": 1
                      },
                      "subGroups": {
                        "type": "array",
                        "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                        "items": {
                          "type": "object",
                          "description": "A further nested group.\n",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "actions-query": {
        "description": "Includes actions you can perform on the object, `false` by default.\n",
        "in": "query",
        "name": "actions",
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/actions-query.yaml"
        }
      },
      "group-access-query": {
        "name": "groupAccess",
        "in": "query",
        "description": "Includes the API client's group access, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "apis-access-query": {
        "name": "apiAccess",
        "in": "query",
        "description": "Lists only the APIs the user can access, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "credentials-query": {
        "name": "credentials",
        "in": "query",
        "description": "Includes API user's credentials, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "ip-acl-query": {
        "name": "ipAcl",
        "in": "query",
        "description": "Includes the API client's IP list restriction, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "account-switch-keys-query": {
        "name": "search",
        "in": "query",
        "description": "Filters results by `accountId` or `accountName`. Enter at least three characters to filter the results by substring.\n",
        "schema": {
          "type": "string",
          "example": "indirect",
          "minLength": 3
        }
      },
      "client-id-path": {
        "name": "clientId",
        "in": "path",
        "description": "Unique identifier for each API client. To get this value, run the [List API clients](ref:get-api-clients) operation.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "2cdgugz2tjbtowmy"
        }
      },
      "username-path": {
        "name": "username",
        "in": "path",
        "description": "Unique username for each user. To get this value, run the [List authorized users](ref:get-api-clients-users) operation.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "jsmith"
        }
      },
      "client-type-query": {
        "name": "clientType",
        "in": "query",
        "description": "Filters data by client type, either `USER_CLIENT`, `SERVICE_ACCOUNT`, or default `CLIENT`.\n",
        "schema": {
          "type": "string",
          "example": "CLIENT",
          "default": "CLIENT",
          "enum": [
            "USER_CLIENT",
            "SERVICE_ACCOUNT",
            "CLIENT"
          ]
        }
      },
      "allow-account-switch-query": {
        "name": "allowAccountSwitch",
        "in": "query",
        "description": "Includes account a user can switch to, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      }
    },
    "schemas": {
      "api-client-v3": {
        "type": "object",
        "description": "API clients on the account.\n",
        "additionalProperties": false,
        "required": [
          "accessToken",
          "actions",
          "activeCredentialCount",
          "allowAccountSwitch",
          "canAutoCreateCredential",
          "authorizedUsers",
          "clientId",
          "clientName",
          "clientType",
          "createdBy",
          "createdDate",
          "isLocked",
          "notificationEmails",
          "serviceConsumerToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
            "minLength": 1
          },
          "actions": {
            "type": "object",
            "description": "Specifies activities available for the API client.\n",
            "additionalProperties": false,
            "required": [
              "delete",
              "deactivateAll",
              "edit",
              "lock",
              "transfer",
              "unlock"
            ],
            "properties": {
              "delete": {
                "type": "boolean",
                "description": "Whether you can remove the API client.\n"
              },
              "deactivateAll": {
                "type": "boolean",
                "description": "Whether you can deactivate the API client's credentials.\n"
              },
              "edit": {
                "type": "boolean",
                "description": "Whether you can update the API client.\n"
              },
              "lock": {
                "type": "boolean",
                "description": "Whether you can lock the API client.\n"
              },
              "transfer": {
                "type": "boolean",
                "description": "Whether you can transfer the API client to a new owner.\n"
              },
              "unlock": {
                "type": "boolean",
                "description": "Whether you can unlock the API client.\n"
              }
            }
          },
          "activeCredentialCount": {
            "type": "integer",
            "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
            "minimum": 0
          },
          "allowAccountSwitch": {
            "type": "boolean",
            "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
          },
          "canAutoCreateCredential": {
            "type": "boolean",
            "description": "Whether the API client can create a credential for a new API client. \n"
          },
          "authorizedUsers": {
            "type": "array",
            "description": "The API client's valid users.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "clientDescription": {
            "type": "string",
            "description": "Descriptive label about the API client.\n",
            "minLength": 0
          },
          "clientId": {
            "type": "string",
            "description": "Unique identifier for each API client.\n",
            "minLength": 1
          },
          "clientName": {
            "type": "string",
            "description": "Descriptive label for the API client.\n",
            "minLength": 1
          },
          "clientType": {
            "type": "string",
            "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
            "default": "CLIENT",
            "enum": [
              "CLIENT",
              "USER_CLIENT",
              "SERVICE_ACCOUNT"
            ]
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the API client.\n",
            "minLength": 1
          },
          "createdDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the API client was created.\n",
            "format": "date-time"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
          },
          "notificationEmails": {
            "type": "array",
            "description": "Email addresses to notify users of expiring credentials.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "serviceConsumerToken": {
            "type": "string",
            "description": "Unique identifier for the service hostname.\n",
            "minLength": 1
          }
        }
      },
      "api-clients-v3": {
        "type": "array",
        "description": "API clients on the account.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "description": "API clients on the account.\n",
          "additionalProperties": false,
          "required": [
            "accessToken",
            "actions",
            "activeCredentialCount",
            "allowAccountSwitch",
            "canAutoCreateCredential",
            "authorizedUsers",
            "clientId",
            "clientName",
            "clientType",
            "createdBy",
            "createdDate",
            "isLocked",
            "notificationEmails",
            "serviceConsumerToken"
          ],
          "properties": {
            "accessToken": {
              "type": "string",
              "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
              "minLength": 1
            },
            "actions": {
              "type": "object",
              "description": "Specifies activities available for the API client.\n",
              "additionalProperties": false,
              "required": [
                "delete",
                "deactivateAll",
                "edit",
                "lock",
                "transfer",
                "unlock"
              ],
              "properties": {
                "delete": {
                  "type": "boolean",
                  "description": "Whether you can remove the API client.\n"
                },
                "deactivateAll": {
                  "type": "boolean",
                  "description": "Whether you can deactivate the API client's credentials.\n"
                },
                "edit": {
                  "type": "boolean",
                  "description": "Whether you can update the API client.\n"
                },
                "lock": {
                  "type": "boolean",
                  "description": "Whether you can lock the API client.\n"
                },
                "transfer": {
                  "type": "boolean",
                  "description": "Whether you can transfer the API client to a new owner.\n"
                },
                "unlock": {
                  "type": "boolean",
                  "description": "Whether you can unlock the API client.\n"
                }
              }
            },
            "activeCredentialCount": {
              "type": "integer",
              "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
              "minimum": 0
            },
            "allowAccountSwitch": {
              "type": "boolean",
              "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
            },
            "canAutoCreateCredential": {
              "type": "boolean",
              "description": "Whether the API client can create a credential for a new API client. \n"
            },
            "authorizedUsers": {
              "type": "array",
              "description": "The API client's valid users.\n",
              "minItems": 0,
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "clientDescription": {
              "type": "string",
              "description": "Descriptive label about the API client.\n",
              "minLength": 0
            },
            "clientId": {
              "type": "string",
              "description": "Unique identifier for each API client.\n",
              "minLength": 1
            },
            "clientName": {
              "type": "string",
              "description": "Descriptive label for the API client.\n",
              "minLength": 1
            },
            "clientType": {
              "type": "string",
              "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
              "default": "CLIENT",
              "enum": [
                "CLIENT",
                "USER_CLIENT",
                "SERVICE_ACCOUNT"
              ]
            },
            "createdBy": {
              "type": "string",
              "description": "The user who created the API client.\n",
              "minLength": 1
            },
            "createdDate": {
              "type": "string",
              "description": "ISO 8601 timestamp indicating when the API client was created.\n",
              "format": "date-time"
            },
            "isLocked": {
              "type": "boolean",
              "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
            },
            "notificationEmails": {
              "type": "array",
              "description": "Email addresses to notify users of expiring credentials.\n",
              "minItems": 0,
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "serviceConsumerToken": {
              "type": "string",
              "description": "Unique identifier for the service hostname.\n",
              "minLength": 1
            }
          }
        }
      },
      "groups-nested": {
        "type": "object",
        "description": "A further nested group.\n",
        "additionalProperties": true,
        "properties": {}
      },
      "groups": {
        "type": "object",
        "description": "Groups the API client can access.\n",
        "additionalProperties": false,
        "required": [
          "roleId",
          "groupId"
        ],
        "properties": {
          "groupName": {
            "type": "string",
            "description": "Descriptive label for the group.\n",
            "minLength": 1
          },
          "groupId": {
            "type": "integer",
            "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
          },
          "roleId": {
            "type": "integer",
            "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
          },
          "roleName": {
            "type": "string",
            "description": "Descriptive label for the role.\n",
            "minLength": 1
          },
          "roleDescription": {
            "type": "string",
            "description": "Descriptive label for the role to convey its use.\n",
            "minLength": 1
          },
          "parentGroupId": {
            "type": "integer",
            "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Blocks the API client access to the group's child groups.\n"
          },
          "subGroups": {
            "type": "array",
            "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
            "items": {
              "type": "object",
              "description": "A further nested group.\n",
              "additionalProperties": true,
              "properties": {}
            }
          }
        }
      },
      "api-client-post-request-v3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "clientType",
          "apiAccess",
          "groupAccess",
          "authorizedUsers"
        ],
        "properties": {
          "clientType": {
            "type": "string",
            "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
            "enum": [
              "CLIENT",
              "USER_CLIENT"
            ]
          },
          "clientName": {
            "type": "string",
            "description": "Descriptive label for the API client.\n",
            "minLength": 1
          },
          "authorizedUsers": {
            "type": "array",
            "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "apiAccess": {
            "type": "object",
            "description": "The APIs the API client can access.\n",
            "additionalProperties": false,
            "oneOf": [
              {
                "properties": {
                  "allAccessibleApis": {
                    "type": "boolean",
                    "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                  }
                },
                "title": "Not all APIs accessible",
                "additionalProperties": false,
                "required": [
                  "apis"
                ]
              },
              {
                "properties": {
                  "allAccessibleApis": {
                    "type": "boolean",
                    "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                  }
                },
                "title": "All APIs accessible",
                "additionalProperties": false,
                "required": [
                  "allAccessibleApis"
                ]
              }
            ],
            "properties": {
              "allAccessibleApis": {
                "type": "boolean",
                "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
              },
              "apis": {
                "type": "array",
                "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "apiId",
                    "accessLevel"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1
                    },
                    "apiId": {
                      "type": "integer",
                      "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                      "minimum": 0
                    },
                    "apiName": {
                      "type": "string",
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1
                    },
                    "documentationUrl": {
                      "type": "string",
                      "description": "Link to more information about the API.\n",
                      "minLength": 1
                    },
                    "endPoint": {
                      "type": "string",
                      "description": "Specifies where the API can access resources.\n",
                      "minLength": 1
                    },
                    "accessLevel": {
                      "type": "string",
                      "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                      "enum": [
                        "READ-ONLY",
                        "READ-WRITE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "groupAccess": {
            "type": "object",
            "description": "Specifies the API client's group access.\n",
            "additionalProperties": false,
            "oneOf": [
              {
                "properties": {
                  "cloneAuthorizedUserGroups": {
                    "type": "boolean",
                    "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n"
                  },
                  "groups": {
                    "type": "array",
                    "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "description": "Groups the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "properties": {
                        "groupName": {
                          "type": "string",
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1
                        },
                        "roleDescription": {
                          "type": "string",
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1
                        },
                        "parentGroupId": {
                          "type": "integer",
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                        },
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Blocks the API client access to the group's child groups.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "type": "object",
                            "description": "A further nested group.\n",
                            "additionalProperties": true,
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                },
                "title": "Custom access",
                "additionalProperties": false,
                "required": [
                  "groups",
                  "cloneAuthorizedUserGroups"
                ]
              },
              {
                "properties": {
                  "cloneAuthorizedUserGroups": {
                    "type": "boolean",
                    "description": "Set it to `true` to clone the API client's group access from the authorized user.\n"
                  },
                  "groups": {
                    "type": "array",
                    "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "description": "Groups the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "properties": {
                        "groupName": {
                          "type": "string",
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1
                        },
                        "roleDescription": {
                          "type": "string",
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1
                        },
                        "parentGroupId": {
                          "type": "integer",
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                        },
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Blocks the API client access to the group's child groups.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "type": "object",
                            "description": "A further nested group.\n",
                            "additionalProperties": true,
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                },
                "title": "Cloned access",
                "additionalProperties": false,
                "required": [
                  "cloneAuthorizedUserGroups"
                ]
              }
            ]
          },
          "allowAccountSwitch": {
            "type": "boolean",
            "description": "Enables the API client to manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n",
            "default": false
          },
          "canAutoCreateCredential": {
            "type": "boolean",
            "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
            "default": false
          },
          "createCredential": {
            "type": "boolean",
            "description": "With `canAutoCreateCredential` enabled, setting this to `true` creates new credentials along with a new API client. The default is `false`.\n",
            "default": false
          },
          "clientDescription": {
            "type": "string",
            "description": "Descriptive label about the API client.\n",
            "minLength": 1
          },
          "notificationEmails": {
            "type": "array",
            "description": "Email addresses to notify users of expiring credentials.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "purgeOptions": {
            "type": "object",
            "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
            "additionalProperties": false,
            "required": [
              "canPurgeByCacheTag",
              "canPurgeByCpcode",
              "cpcodeAccess"
            ],
            "properties": {
              "canPurgeByCacheTag": {
                "type": "boolean",
                "description": "Whether the API client can purge content by cache tag.\n"
              },
              "canPurgeByCpcode": {
                "type": "boolean",
                "description": "Whether the API client can purge content by CP code.\n"
              },
              "cpcodeAccess": {
                "type": "object",
                "description": "CP codes the API client can purge.\n",
                "additionalProperties": false,
                "required": [
                  "allCurrentAndNewCpcodes",
                  "cpcodes"
                ],
                "properties": {
                  "allCurrentAndNewCpcodes": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by cache tag.\n"
                  },
                  "cpcodes": {
                    "type": "array",
                    "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "ipAcl": {
            "type": "object",
            "description": "Specifies the API client's IP list restriction.\n",
            "additionalProperties": false,
            "required": [
              "enable",
              "cidr"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Enables API client's access to the IP ACL.\n"
              },
              "cidr": {
                "type": "array",
                "description": "IP addresses or CIDR blocks the API client can access.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        }
      },
      "api-client-detail-v3": {
        "type": "object",
        "description": "Specifies the API client.\n",
        "additionalProperties": false,
        "required": [
          "accessToken",
          "activeCredentialCount",
          "allowAccountSwitch",
          "authorizedUsers",
          "baseURL",
          "canAutoCreateCredential",
          "clientDescription",
          "clientId",
          "clientName",
          "clientType",
          "createdBy",
          "createdDate",
          "isLocked",
          "notificationEmails"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
            "minLength": 1
          },
          "actions": {
            "type": "object",
            "description": "Specifies activities available for the API client.\n",
            "additionalProperties": false,
            "required": [
              "delete",
              "deactivateAll",
              "edit",
              "editApis",
              "editAuth",
              "editGroups",
              "editIpAcl",
              "editSwitchAccount",
              "lock",
              "transfer",
              "unlock"
            ],
            "properties": {
              "delete": {
                "type": "boolean",
                "description": "Whether you can remove the API client.\n"
              },
              "deactivateAll": {
                "type": "boolean",
                "description": "Whether you can deactivate the API client's credentials.\n"
              },
              "edit": {
                "type": "boolean",
                "description": "Whether you can update the API client.\n"
              },
              "editApis": {
                "type": "boolean",
                "description": "Whether you can update the `apis` the API client can access.\n"
              },
              "editAuth": {
                "type": "boolean",
                "description": "Whether you can update the `groups` or `apis` the API client can access.\n"
              },
              "editGroups": {
                "type": "boolean",
                "description": "Whether you can update the `groups` the API client can access.\n"
              },
              "editIpAcl": {
                "type": "boolean",
                "description": "Whether you can update the `ipAcl` the API client can access.\n"
              },
              "editSwitchAccount": {
                "type": "boolean",
                "description": "Whether you can update the API client's option to manage many accounts.\n"
              },
              "lock": {
                "type": "boolean",
                "description": "Whether you can lock the API client.\n"
              },
              "transfer": {
                "type": "boolean",
                "description": "Whether you can transfer the API client to a new owner.\n"
              },
              "unlock": {
                "type": "boolean",
                "description": "Whether you can unlock the API client.\n"
              }
            }
          },
          "activeCredentialCount": {
            "type": "integer",
            "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
            "minimum": 0
          },
          "allowAccountSwitch": {
            "type": "boolean",
            "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
          },
          "canAutoCreateCredential": {
            "type": "boolean",
            "description": "Whether the API client can create a credential for a new API client.\n"
          },
          "apiAccess": {
            "type": "object",
            "description": "The APIs the API client can access.\n",
            "additionalProperties": false,
            "required": [
              "allAccessibleApis",
              "apis"
            ],
            "properties": {
              "allAccessibleApis": {
                "type": "boolean",
                "description": "Whether the API client has access to a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
              },
              "apis": {
                "type": "array",
                "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled.\n",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "description",
                    "apiId",
                    "apiName",
                    "documentationUrl",
                    "endPoint",
                    "accessLevel"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1
                    },
                    "apiId": {
                      "type": "integer",
                      "description": "Unique identifier for each API.\n",
                      "minimum": 0
                    },
                    "apiName": {
                      "type": "string",
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1
                    },
                    "documentationUrl": {
                      "type": "string",
                      "description": "Link to more information about the API.\n",
                      "minLength": 1
                    },
                    "endPoint": {
                      "type": "string",
                      "description": "Specifies where the API can access resources.\n",
                      "minLength": 1
                    },
                    "accessLevel": {
                      "type": "string",
                      "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          },
          "authorizedUsers": {
            "type": "array",
            "description": "The API client's valid users.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "baseURL": {
            "type": "string",
            "description": "The base URL for the service.\n",
            "minLength": 1
          },
          "purgeOptions": {
            "type": "object",
            "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). It's returned only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
            "additionalProperties": false,
            "required": [
              "canPurgeByCacheTag",
              "canPurgeByCpcode",
              "cpcodeAccess"
            ],
            "properties": {
              "canPurgeByCacheTag": {
                "type": "boolean",
                "description": "Whether the API client can purge content by cache tag.\n"
              },
              "canPurgeByCpcode": {
                "type": "boolean",
                "description": "Whether the API client can purge content by CP code.\n"
              },
              "cpcodeAccess": {
                "type": "object",
                "description": "CP codes the API client can purge.\n",
                "additionalProperties": false,
                "required": [
                  "allCurrentAndNewCpcodes",
                  "cpcodes"
                ],
                "properties": {
                  "allCurrentAndNewCpcodes": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by cache tag.\n"
                  },
                  "cpcodes": {
                    "type": "array",
                    "description": "CP codes the API client can purge.\n",
                    "minItems": 0,
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "clientDescription": {
            "type": "string",
            "description": "Descriptive label about the API client.\n",
            "minLength": 1
          },
          "clientId": {
            "type": "string",
            "description": "Unique identifier for each API client.\n",
            "minLength": 1
          },
          "clientType": {
            "type": "string",
            "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials.\n",
            "enum": [
              "CLIENT",
              "USER_CLIENT"
            ]
          },
          "clientName": {
            "type": "string",
            "description": "Descriptive label for the API client.\n",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the API client.\n",
            "minLength": 1
          },
          "createdDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the API client was created.\n",
            "format": "date-time"
          },
          "credentials": {
            "type": "array",
            "description": "The API client's of credentials.\n",
            "minItems": 0,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "description",
                "actions",
                "clientToken",
                "createdOn",
                "credentialId",
                "expiresOn",
                "status"
              ],
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Descriptive label for the API client.\n",
                  "minLength": 0
                },
                "actions": {
                  "type": "object",
                  "description": "Specifies activities available for the credential.\n",
                  "additionalProperties": false,
                  "required": [
                    "delete",
                    "activate",
                    "deactivate",
                    "editDescription",
                    "editExpiration"
                  ],
                  "properties": {
                    "delete": {
                      "type": "boolean",
                      "description": "Whether you can remove the credential.\n"
                    },
                    "activate": {
                      "type": "boolean",
                      "description": "Whether you can activate the credential.\n"
                    },
                    "deactivate": {
                      "type": "boolean",
                      "description": "Whether you can deactivate the credential.\n"
                    },
                    "editDescription": {
                      "type": "boolean",
                      "description": "Whether you can modify the credential's description.\n"
                    },
                    "editExpiration": {
                      "type": "boolean",
                      "description": "Whether you can modify the credential's expiration date.\n"
                    }
                  }
                },
                "clientToken": {
                  "type": "string",
                  "description": "Part of the credential that identifies the API client.\n",
                  "minLength": 1
                },
                "createdOn": {
                  "type": "string",
                  "description": "ISO 8601 timestamp indicating when the credential was created.\n",
                  "format": "date-time"
                },
                "credentialId": {
                  "type": "integer",
                  "description": "Unique identifier each credential.\n",
                  "minimum": 0
                },
                "expiresOn": {
                  "type": "string",
                  "description": "ISO 8601 timestamp for when the credential expires. The default expiration date is two years from the creation date.\n",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`. Activating or deactivating the credential changes the value between `ACTIVE` and `INACTIVE`, but you can't reactivate any `DELETED` credentials.\n",
                  "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "DELETED"
                  ]
                }
              }
            }
          },
          "groupAccess": {
            "type": "object",
            "description": "Specifies the API client's group access.\n",
            "additionalProperties": false,
            "required": [
              "cloneAuthorizedUserGroups",
              "groups"
            ],
            "properties": {
              "cloneAuthorizedUserGroups": {
                "type": "boolean",
                "description": "Sets the API client's group access the same as the authorized user.\n"
              },
              "groups": {
                "type": "array",
                "description": "Groups the API client can access.\n",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "description": "Groups the API client can access.\n",
                  "additionalProperties": false,
                  "required": [
                    "roleId",
                    "groupId"
                  ],
                  "properties": {
                    "groupName": {
                      "type": "string",
                      "description": "Descriptive label for the group.\n",
                      "minLength": 1
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                    },
                    "roleId": {
                      "type": "integer",
                      "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                    },
                    "roleName": {
                      "type": "string",
                      "description": "Descriptive label for the role.\n",
                      "minLength": 1
                    },
                    "roleDescription": {
                      "type": "string",
                      "description": "Descriptive label for the role to convey its use.\n",
                      "minLength": 1
                    },
                    "parentGroupId": {
                      "type": "integer",
                      "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                    },
                    "isBlocked": {
                      "type": "boolean",
                      "description": "Blocks the API client access to the group's child groups.\n"
                    },
                    "subGroups": {
                      "type": "array",
                      "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                      "items": {
                        "type": "object",
                        "description": "A further nested group.\n",
                        "additionalProperties": true,
                        "properties": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "ipAcl": {
            "type": "object",
            "description": "Specifies the API client's IP list restriction.\n",
            "additionalProperties": false,
            "required": [
              "enable",
              "cidr"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Enables API client's access to the IP ACL.\n"
              },
              "cidr": {
                "type": "array",
                "description": "IP addresses or CIDR blocks the API client can access.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
          },
          "notificationEmails": {
            "type": "array",
            "description": "Email addresses to notify users of expiring credentials.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "serviceProviderId": {
            "type": "integer",
            "description": "Unique identifier for the API's service provider.\n",
            "minimum": 0
          }
        }
      },
      "api-client-update-request-v3": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "apiAccess",
          "groupAccess",
          "authorizedUsers"
        ],
        "properties": {
          "clientName": {
            "type": "string",
            "description": "Descriptive label for the API client.\n",
            "minLength": 1
          },
          "authorizedUsers": {
            "type": "array",
            "description": "The API client's valid users. When the `clientType` is either `CLIENT` or `USER_CLIENT`, you need to specify a single `username` in the array. To get this data, run the [List authorized users](ref:get-api-clients-users) operation.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "apiAccess": {
            "type": "object",
            "description": "The APIs the API client can access.\n",
            "additionalProperties": false,
            "oneOf": [
              {
                "properties": {
                  "allAccessibleApis": {
                    "type": "boolean",
                    "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                  }
                },
                "title": "Not all APIs accessible",
                "additionalProperties": false,
                "required": [
                  "apis"
                ]
              },
              {
                "properties": {
                  "allAccessibleApis": {
                    "type": "boolean",
                    "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
                  }
                },
                "title": "All APIs accessible",
                "additionalProperties": false,
                "required": [
                  "allAccessibleApis"
                ]
              }
            ],
            "properties": {
              "allAccessibleApis": {
                "type": "boolean",
                "description": "Enables the API client to access a full set of available APIs. Note there's a limit of 99 API services for each client. Clients that make calls to URLs from the 100th service get a 403 error.\n"
              },
              "apis": {
                "type": "array",
                "description": "Set of APIs the API client can access when `allAccessibleApis` is disabled. To get this data, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "apiId",
                    "accessLevel"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1
                    },
                    "apiId": {
                      "type": "integer",
                      "description": "Unique identifier for each API. To get this value, run the [List allowed APIs](ref:get-api-clients-users-allowed-apis) operation.\n",
                      "minimum": 0
                    },
                    "apiName": {
                      "type": "string",
                      "description": "Descriptive label for the API.\n",
                      "minLength": 1
                    },
                    "documentationUrl": {
                      "type": "string",
                      "description": "Link to more information about the API.\n",
                      "minLength": 1
                    },
                    "endPoint": {
                      "type": "string",
                      "description": "Specifies where the API can access resources.\n",
                      "minLength": 1
                    },
                    "accessLevel": {
                      "type": "string",
                      "description": "The API client's access level on a per API basis, either `READ-ONLY` or `READ-WRITE`.\n",
                      "enum": [
                        "READ-ONLY",
                        "READ-WRITE"
                      ]
                    }
                  }
                }
              }
            }
          },
          "groupAccess": {
            "type": "object",
            "description": "Specifies the API client's group access.\n",
            "additionalProperties": false,
            "oneOf": [
              {
                "properties": {
                  "cloneAuthorizedUserGroups": {
                    "type": "boolean",
                    "description": "Sets the API client's group access the same as the authorized user. Set it to `false` and specify the access in the `groups` array.\n"
                  },
                  "groups": {
                    "type": "array",
                    "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "description": "Groups the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "properties": {
                        "groupName": {
                          "type": "string",
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1
                        },
                        "roleDescription": {
                          "type": "string",
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1
                        },
                        "parentGroupId": {
                          "type": "integer",
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                        },
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Blocks the API client access to the group's child groups.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "type": "object",
                            "description": "A further nested group.\n",
                            "additionalProperties": true,
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                },
                "title": "Custom access",
                "additionalProperties": false,
                "required": [
                  "groups",
                  "cloneAuthorizedUserGroups"
                ]
              },
              {
                "properties": {
                  "cloneAuthorizedUserGroups": {
                    "type": "boolean",
                    "description": "Set it to `true` to clone the API client's group access from the authorized user.\n"
                  },
                  "groups": {
                    "type": "array",
                    "description": "Groups the API client can access. To get this data, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "object",
                      "description": "Groups the API client can access.\n",
                      "additionalProperties": false,
                      "required": [
                        "roleId",
                        "groupId"
                      ],
                      "properties": {
                        "groupName": {
                          "type": "string",
                          "description": "Descriptive label for the group.\n",
                          "minLength": 1
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "Descriptive label for the role.\n",
                          "minLength": 1
                        },
                        "roleDescription": {
                          "type": "string",
                          "description": "Descriptive label for the role to convey its use.\n",
                          "minLength": 1
                        },
                        "parentGroupId": {
                          "type": "integer",
                          "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                        },
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Blocks the API client access to the group's child groups.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                          "items": {
                            "type": "object",
                            "description": "A further nested group.\n",
                            "additionalProperties": true,
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                },
                "title": "Cloned access",
                "additionalProperties": false,
                "required": [
                  "cloneAuthorizedUserGroups"
                ]
              }
            ]
          },
          "allowAccountSwitch": {
            "type": "boolean",
            "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
          },
          "canAutoCreateCredential": {
            "type": "boolean",
            "description": "Whether the API client can create a credential for a new API client. The default is `false`.\n",
            "default": false
          },
          "clientDescription": {
            "type": "string",
            "description": "Descriptive label about the API client.\n",
            "minLength": 1
          },
          "notificationEmails": {
            "type": "array",
            "description": "Email addresses to notify users of expiring credentials.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "purgeOptions": {
            "type": "object",
            "description": "Configures the API client for access to the [Fast Purge API](https://techdocs.akamai.com/purge-cache/reference/api). Provide it only if the `apis` object includes an `apiName` of `CCU APIs`.\n",
            "additionalProperties": false,
            "required": [
              "canPurgeByCacheTag",
              "canPurgeByCpcode",
              "cpcodeAccess"
            ],
            "properties": {
              "canPurgeByCacheTag": {
                "type": "boolean",
                "description": "Whether the API client can purge content by cache tag.\n"
              },
              "canPurgeByCpcode": {
                "type": "boolean",
                "description": "Whether the API client can purge content by CP code.\n"
              },
              "cpcodeAccess": {
                "type": "object",
                "description": "CP codes the API client can purge.\n",
                "additionalProperties": false,
                "required": [
                  "allCurrentAndNewCpcodes",
                  "cpcodes"
                ],
                "properties": {
                  "allCurrentAndNewCpcodes": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by cache tag.\n"
                  },
                  "cpcodes": {
                    "type": "array",
                    "description": "CP codes the API client can purge. To get these values, run the [List allowed CP codes](ref:post-api-clients-users-allowed-cpcodes) operation.\n",
                    "minItems": 0,
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "ipAcl": {
            "type": "object",
            "description": "Specifies the API client's IP list restriction.\n",
            "additionalProperties": false,
            "required": [
              "enable",
              "cidr"
            ],
            "properties": {
              "enable": {
                "type": "boolean",
                "description": "Enables API client's access to the IP ACL.\n"
              },
              "cidr": {
                "type": "array",
                "description": "IP addresses or CIDR blocks the API client can access.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        }
      },
      "self-account-switch-keys": {
        "type": "array",
        "description": "This object encapsulates a collection of contexts the client can manage.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "accountName",
            "accountSwitchKey"
          ],
          "properties": {
            "accountName": {
              "type": "string",
              "description": "The name you supply for an account.\n",
              "minLength": 1
            },
            "accountSwitchKey": {
              "type": "string",
              "description": "The identifier for an account other than your API client's default.\n",
              "minLength": 1
            }
          }
        }
      },
      "api-client-simple-v3": {
        "type": "object",
        "description": "List of API clients.\n",
        "additionalProperties": false,
        "required": [
          "accessToken",
          "activeCredentialCount",
          "allowAccountSwitch",
          "authorizedUsers",
          "clientDescription",
          "clientId",
          "clientName",
          "clientType",
          "createdBy",
          "createdDate",
          "isLocked",
          "notificationEmails",
          "serviceConsumerToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Part of the client secret that identifies your API client and lets you access applications and resources. It helps form the unique hostname the client uses to call the API. Tokens are unique per client.\n",
            "minLength": 1
          },
          "activeCredentialCount": {
            "type": "integer",
            "description": "Number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.\n",
            "minimum": 0
          },
          "allowAccountSwitch": {
            "type": "boolean",
            "description": "Whether the API client can manage more than one account. For details, see [Manage many accounts with one API client](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client).\n"
          },
          "canAutoCreateCredential": {
            "type": "boolean",
            "description": "Whether the API client can create a credential for a new API client. \n",
            "default": false
          },
          "authorizedUsers": {
            "type": "array",
            "description": "The API client's valid users.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "clientDescription": {
            "type": "string",
            "description": "Descriptive label about the API client.\n",
            "minLength": 1
          },
          "clientId": {
            "type": "string",
            "description": "Unique identifier for each API client.\n",
            "minLength": 1
          },
          "clientName": {
            "type": "string",
            "description": "Descriptive label for the API client.\n",
            "minLength": 1
          },
          "clientType": {
            "type": "string",
            "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
            "enum": [
              "CLIENT",
              "USER_CLIENT",
              "SERVICE_ACCOUNT"
            ]
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the API client.\n",
            "minLength": 1
          },
          "createdDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the API client was created.\n",
            "format": "date-time"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
          },
          "notificationEmails": {
            "type": "array",
            "description": "Email addresses to notify users of expiring credentials.\n",
            "minItems": 0,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "serviceConsumerToken": {
            "type": "string",
            "description": "Unique identifier for the service hostname.\n",
            "minLength": 1
          }
        }
      },
      "client-account-switch-keys": {
        "type": "array",
        "description": "Encapsulates a collection of contexts the client can manage.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "accountName",
            "accountSwitchKey"
          ],
          "properties": {
            "accountName": {
              "type": "string",
              "description": "Descriptive label for the account.\n",
              "minLength": 1
            },
            "accountSwitchKey": {
              "type": "string",
              "description": "The identifier for an account other than your API client's default.\n",
              "minLength": 1
            }
          }
        }
      },
      "authorized-users": {
        "type": "array",
        "description": "Authorized user on an account.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "email",
            "firstName",
            "lastName",
            "uiIdentityId",
            "username"
          ],
          "properties": {
            "email": {
              "type": "string",
              "description": "The user's email address.\n",
              "format": "email"
            },
            "firstName": {
              "type": "string",
              "description": "The user's first name.\n",
              "minLength": 1
            },
            "lastName": {
              "type": "string",
              "description": "The user's surname.\n",
              "minLength": 1
            },
            "uiIdentityId": {
              "type": "string",
              "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
              "minLength": 1
            },
            "username": {
              "type": "string",
              "description": "The user's Control Center sign-in name.\n",
              "minLength": 1
            }
          }
        }
      },
      "allowed-apis-response": {
        "type": "array",
        "description": "APIs available to the user.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "description",
            "accessLevels",
            "apiId",
            "apiName",
            "documentationUrl",
            "endPoint",
            "hasAccess",
            "serviceProviderId"
          ],
          "properties": {
            "description": {
              "type": "string",
              "description": "Descriptive label for the API.\n",
              "minLength": 1
            },
            "accessLevels": {
              "type": "array",
              "description": "API access levels, possible values are `READ-ONLY` and `READ-WRITE`.\n",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "READ-ONLY",
                  "READ-WRITE"
                ]
              }
            },
            "apiId": {
              "type": "integer",
              "description": "Unique identifier for each API.\n",
              "minimum": 0
            },
            "apiName": {
              "type": "string",
              "description": "Descriptive label for the API.\n",
              "minLength": 1
            },
            "documentationUrl": {
              "type": "string",
              "description": "Link to more information about the API.\n",
              "minLength": 1
            },
            "endPoint": {
              "type": "string",
              "description": "Specifies where the API can access resources.\n",
              "minLength": 1
            },
            "hasAccess": {
              "type": "boolean",
              "description": "Confirms access to the API.\n"
            },
            "serviceProviderId": {
              "type": "integer",
              "description": "Unique identifier for the API's service provider.\n",
              "minimum": 0
            }
          }
        }
      },
      "allowed-cpcodes-request": {
        "type": "object",
        "description": "POST allowed CP codes.\n",
        "additionalProperties": false,
        "required": [
          "clientType",
          "groups"
        ],
        "properties": {
          "clientType": {
            "type": "string",
            "description": "Specifies the API client's ownership and credential management. `CLIENT` indicates the creator owns and manages the credentials. `USER_CLIENT` indicates another user owns the client and manages the credentials. `SERVICE_ACCOUNT` indicates only `authorizedUsers` can manage the client's credentials. The default is `CLIENT`.\n",
            "default": "CLIENT",
            "enum": [
              "CLIENT",
              "USER_CLIENT",
              "SERVICE_ACCOUNT"
            ]
          },
          "groups": {
            "type": "array",
            "description": "Groups the API client can access.\n",
            "minItems": 0,
            "items": {
              "type": "object",
              "description": "Groups the API client can access.\n",
              "additionalProperties": false,
              "required": [
                "roleId",
                "groupId"
              ],
              "properties": {
                "groupName": {
                  "type": "string",
                  "description": "Descriptive label for the group.\n",
                  "minLength": 1
                },
                "groupId": {
                  "type": "integer",
                  "description": "Unique identifier for each group. To get this value, run the [List accessible groups](ref:get-api-clients-users-group-access) operation.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "Unique identifier for each role. To get this value, run the [List roles](ref:get-roles) operation.\n"
                },
                "roleName": {
                  "type": "string",
                  "description": "Descriptive label for the role.\n",
                  "minLength": 1
                },
                "roleDescription": {
                  "type": "string",
                  "description": "Descriptive label for the role to convey its use.\n",
                  "minLength": 1
                },
                "parentGroupId": {
                  "type": "integer",
                  "description": "Unique identifier for the parent group within the group tree. If you're viewing group info for a root-level group, you may not see this member.\n"
                },
                "isBlocked": {
                  "type": "boolean",
                  "description": "Blocks the API client access to the group's child groups.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                  "items": {
                    "type": "object",
                    "description": "A further nested group.\n",
                    "additionalProperties": true,
                    "properties": {}
                  }
                }
              }
            }
          }
        }
      },
      "allowed-cpcodes-response": {
        "type": "array",
        "description": "A schema for name value pair.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "value"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Descriptive label for the CP code.\n",
              "minLength": 1
            },
            "value": {
              "type": "integer",
              "description": "Unique identifier for the CP code.\n",
              "minimum": 0
            }
          }
        }
      },
      "group-access-response": {
        "type": "array",
        "description": "Accessible groups.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "groupId",
            "groupName",
            "isBlocked",
            "roleDescription",
            "roleId",
            "roleName",
            "subGroups"
          ],
          "properties": {
            "groupId": {
              "type": "integer",
              "description": "Unique identifier for each group.\n",
              "minimum": 1
            },
            "groupName": {
              "type": "string",
              "description": "Descriptive label for the group.\n",
              "minLength": 1
            },
            "isBlocked": {
              "type": "boolean",
              "description": "Whether a user's access to a group is blocked.\n"
            },
            "roleDescription": {
              "type": "string",
              "description": "Descriptive label for the role to convey its use.\n",
              "minLength": 1
            },
            "roleId": {
              "type": "integer",
              "description": "Unique identifier for each role.\n",
              "minimum": 1
            },
            "roleName": {
              "type": "string",
              "description": "Descriptive label for the role.\n",
              "minLength": 1
            },
            "subGroups": {
              "type": "array",
              "description": "Children of the parent group. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
              "items": {
                "type": "object",
                "description": "A further nested group.\n",
                "additionalProperties": true,
                "properties": {}
              }
            }
          }
        }
      }
    },
    "headers": {
      "location": {
        "description": "A URL path to the newly created object.\n",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID"
  }
}