{
  "openapi": "3.0.0",
  "info": {
    "title": "Users, for administrators",
    "version": "2",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v2"
    }
  ],
  "x-akamai": {
    "auth-type": "EDGE_GRID",
    "file-path": "user-api.yaml"
  },
  "paths": {
    "/user-admin/ui-identities": {
      "post": {
        "operationId": "post-ui-identity",
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "description": "Create a user in the account specified in your own API client credentials or clone an existing user's role assignments. Optionally, send a randomly generated one-time use password to the new user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.\n",
        "parameters": [
          {
            "name": "sendEmail",
            "in": "query",
            "description": "Sends a one-time password to the new user, `false` by default.",
            "x-akamai": {
              "file-path": "parameters/sendEmail_sendEmail.yaml"
            },
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "secondaryEmail": "john-smith@gmail.com",
                "mobilePhone": "3456787657",
                "zipCode": "34567",
                "jobTitle": "Engineer",
                "firstName": "John",
                "lastName": "Smith",
                "email": "asingh@mycompany.com",
                "phone": "(123) 321-1234",
                "timeZone": "GMT",
                "tfaEnabled": true,
                "contactType": "Billing",
                "preferredLanguage": "English",
                "sessionTimeOut": 64800,
                "address": "500 Tech Sq",
                "city": "Cambridge",
                "state": "MA",
                "country": "USA",
                "notifications": {
                  "enableEmailNotifications": true,
                  "options": {
                    "passwordExpiry": true,
                    "newUserNotification": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ],
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ]
                  }
                },
                "authGrants": [
                  {
                    "groupId": 12345,
                    "roleId": 3,
                    "groupName": "MyGroup",
                    "roleName": "Admin",
                    "roleDescription": "This role provides the maximum access to users.",
                    "subGroups": [
                      {
                        "groupId": 54321,
                        "groupName": "MySubGroup",
                        "subGroups": [
                          {
                            "groupId": 54321,
                            "groupName": "MyNewSubGroup"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "type": "object",
                "description": "Specifies a user.",
                "x-akamai": {
                  "file-path": "schemas/CreateUserRequest.yaml"
                },
                "additionalProperties": false,
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "phone",
                  "country",
                  "authGrants"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The user's street address.\n"
                  },
                  "authGrants": {
                    "type": "array",
                    "description": "The user's role assignments, per group.\n",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "groupId": {
                          "description": "A unique identifier for each group.\n",
                          "type": "integer"
                        },
                        "groupName": {
                          "description": "A group's name.\n",
                          "type": "string"
                        },
                        "isBlocked": {
                          "description": "Indicates whether a user's access to a group is blocked.\n",
                          "type": "boolean"
                        },
                        "roleDescription": {
                          "description": "Descriptive text for the role.\n",
                          "type": "string"
                        },
                        "roleId": {
                          "description": "A unique identifier for each role.\n",
                          "type": "integer"
                        },
                        "roleName": {
                          "description": "The role's name.\n",
                          "type": "string"
                        },
                        "subGroups": {
                          "description": "Array of nested groups.\n",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "groupId": {
                                "description": "A unique identifier for each group.\n",
                                "type": "integer"
                              },
                              "groupName": {
                                "description": "A group's name.\n",
                                "type": "string"
                              },
                              "isBlocked": {
                                "description": "Indicates whether a user's access to a group is blocked.\n",
                                "type": "boolean"
                              },
                              "roleId": {
                                "description": "A unique identifier for each role.\n",
                                "type": "integer"
                              },
                              "subGroups": {
                                "description": "Array of nested groups.\n",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "groupId": {
                                      "description": "A unique identifier for each group.\n",
                                      "type": "integer"
                                    },
                                    "groupName": {
                                      "description": "A group's name.\n",
                                      "type": "string"
                                    },
                                    "isBlocked": {
                                      "description": "Indicates whether a user's access to a group is blocked.\n",
                                      "type": "boolean"
                                    },
                                    "roleId": {
                                      "description": "A unique identifier for each role.\n",
                                      "type": "integer"
                                    },
                                    "subGroups": {
                                      "description": "Array of nested groups.\n",
                                      "items": {
                                        "description": "A further nested authorization grant.",
                                        "type": "object",
                                        "x-akamai": {
                                          "file-path": "schemas/AuthGrantRequest-nested.yaml"
                                        }
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/AuthGrantRequest.yaml"
                      }
                    }
                  },
                  "city": {
                    "type": "string",
                    "description": "The user's city.\n"
                  },
                  "cloneFrom": {
                    "type": "string",
                    "description": "The username to clone a user's `authGrants` from. If you provide this member in a POST request, don't include the `authGrants` member in the request too.\n"
                  },
                  "contactType": {
                    "type": "string",
                    "description": "To help characterize the user, this can be any value available from the [View contact](ref:get-common-contact-types) types operation.\n"
                  },
                  "country": {
                    "type": "string",
                    "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n"
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address.\n",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n"
                  },
                  "jobTitle": {
                    "type": "string",
                    "description": "The user's job title.\n"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The user's last name.\n"
                  },
                  "mobilePhone": {
                    "type": "string",
                    "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n"
                  },
                  "notifications": {
                    "type": "object",
                    "description": "Emails the user can receive for their products.\n",
                    "additionalProperties": false,
                    "properties": {
                      "options": {
                        "type": "object",
                        "description": "Email settings.\n",
                        "additionalProperties": false,
                        "properties": {
                          "newUserNotification": {
                            "type": "boolean",
                            "description": "Email notification for new user creation.\n"
                          },
                          "passwordExpiry": {
                            "type": "boolean",
                            "description": "Email notifications for password expirations.\n"
                          },
                          "proactive": {
                            "type": "array",
                            "description": "Email notifications for proactive maintenance to products.\n",
                            "items": {
                              "type": "string",
                              "description": "Product names.\n"
                            }
                          },
                          "upgrade": {
                            "type": "array",
                            "description": "Email notifications for upgrades to products.\n",
                            "items": {
                              "type": "string",
                              "description": "Product names.\n"
                            }
                          }
                        }
                      },
                      "enableEmailNotifications": {
                        "type": "boolean",
                        "description": "Enables email notifications.\n"
                      }
                    }
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user's main phone number, represented as a ten-digit integer within a string.\n"
                  },
                  "preferredLanguage": {
                    "type": "string",
                    "description": "This can be any value available from the [View languages](ref:get-common-languages) operation.\n"
                  },
                  "secondaryEmail": {
                    "type": "string",
                    "description": "The user's alternate email address.\n",
                    "format": "email"
                  },
                  "sessionTimeOut": {
                    "type": "integer",
                    "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the value from the [View timeout policies](ref:get-common-timeout-policies) operation's response.\n"
                  },
                  "state": {
                    "type": "string",
                    "description": "The name of the state where the user is located.\n"
                  },
                  "tfaEnabled": {
                    "type": "boolean",
                    "description": "When enabled, two-factor authentication confirms the user's identity.\n"
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "The user's five-digit ZIP code, represented as a string.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the created user.\n",
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "A-BC-1234567",
                  "firstName": "John",
                  "lastName": "Smith",
                  "uiUserName": "john.smith@mycompany.com",
                  "email": "hgildong@mycompany.com",
                  "phone": "(123) 321-1234",
                  "timeZone": "GMT",
                  "tfaEnabled": true,
                  "contactType": "Billing",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 64800,
                  "passwordExpiryDate": "2018-05-05T22:38:39.000Z",
                  "address": "500 Tech Sq",
                  "city": "Cambridge",
                  "state": "MA",
                  "country": "USA",
                  "actions": {
                    "resetPassword": true,
                    "edit": true,
                    "isCloneable": true,
                    "delete": true,
                    "thirdPartyAccess": false,
                    "apiClient": true
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "passwordExpiry": true,
                      "newUserNotification": true,
                      "upgrade": [
                        "24x7"
                      ],
                      "proactive": [
                        "Security"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "roleId": 3,
                      "groupName": "MyGroup",
                      "roleName": "Admin",
                      "roleDescription": "This role provides the maximum access to users.",
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "MySubGroup",
                          "subGroups": [
                            {
                              "groupId": 12345,
                              "groupName": "MyNewSubGroup"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "A unique identifier for each account.\n",
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "properties": {
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Indicates whether the user is deletable.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.\n",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true`, an administrator can create a new user with the same permissions as this user.\n",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.\n",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "address": {
                      "description": "The user's street address.\n",
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "properties": {
                          "groupId": {
                            "description": "A unique identifier for each group.\n",
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "A group's name.\n",
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether a user's access is blocked for a group.\n",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role.\n",
                            "type": "string"
                          },
                          "roleId": {
                            "description": "A unique identifier for each role.\n",
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "The role's name.\n",
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.\n",
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](ref:get-common-contact-types) operation.\n",
                      "type": "string"
                    },
                    "country": {
                      "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n",
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.\n",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.\n",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's job title.\n",
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's last name.\n",
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n",
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.\n",
                      "properties": {
                        "enableEmailNotifications": {
                          "description": "Indicates if email notifications are enabled.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.\n",
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when new users are created.\n",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.\n",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.\n",
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](ref:get-common-languages) operation.\n",
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the `value` output of the [View timeout policies](ref:get-common-timeout-policies) operation.\n",
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.\n",
                      "type": "string"
                    },
                    "tfaEnabled": {
                      "description": "Indicates if TFA is enabled.\n",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n",
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.\n",
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.\n",
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit ZIP code, represented as a string.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "tfaEnabled",
                    "country",
                    "phone"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-ui-identities",
        "summary": "List users",
        "tags": [
          "Users"
        ],
        "description": "Return a list of users who have access on this account. The account is determined by the tokens in your API client. You can pass a `groupId` to filter users based on group. Additionally, you can return additional user information such as what product notifications they subscribe to, or what group and role assignments they have. Set  the `actions` parameter to `true` to return the actions you can  take on each user.\n",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "description": "A unique identifier for each group.",
            "x-akamai": {
              "file-path": "parameters/rolesFilterParamsGroup_groupId.yaml"
            },
            "required": false,
            "schema": {
              "type": "integer",
              "example": 54321
            }
          },
          {
            "name": "authGrants",
            "in": "query",
            "description": "Includes the list of your group and role assignments, `false` by default.",
            "x-akamai": {
              "file-path": "parameters/authGrants-query.yaml"
            },
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/adminActions_actions.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists users.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "uiIdentityId": "A-B-123456",
                    "firstName": "John",
                    "lastName": "Smith",
                    "uiUserName": "johnsmith",
                    "email": "afero@mycompany.com",
                    "accountId": "A-CCT1234",
                    "lastLoginDate": "2016-01-13T17:53:57Z",
                    "tfaEnabled": true,
                    "tfaConfigured": true,
                    "isLocked": false,
                    "actions": {
                      "resetPassword": true,
                      "delete": true,
                      "edit": true,
                      "apiClient": true,
                      "thirdPartyAccess": true,
                      "isCloneable": true,
                      "editProfile": true,
                      "canEditTFA": false
                    },
                    "authGrants": [
                      {
                        "groupId": 12345,
                        "roleId": 12,
                        "groupName": "mygroup",
                        "roleName": "admin",
                        "roleDescription": "This is a new role that has been created to",
                        "isBlocked": false
                      }
                    ]
                  }
                ],
                "schema": {
                  "description": "Encapsulates information about each user.",
                  "items": {
                    "additionalProperties": false,
                    "description": "Encapsulates information about each user.",
                    "properties": {
                      "accountId": {
                        "description": "A unique identifier for each account.\n",
                        "type": "string"
                      },
                      "actions": {
                        "additionalProperties": false,
                        "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                        "properties": {
                          "apiClient": {
                            "description": "Allows the administrator to create an API client.\n",
                            "type": "boolean"
                          },
                          "canEditTFA": {
                            "description": "If `true`, logged in users can turn their TFA settings on or off.\n",
                            "type": "boolean"
                          },
                          "delete": {
                            "description": "Whether the user is deletable.\n",
                            "type": "boolean"
                          },
                          "edit": {
                            "description": "Whether the user is editable.\n",
                            "type": "boolean"
                          },
                          "editProfile": {
                            "description": "If `true`, the user profile can be edited by the logged in user.\n",
                            "type": "boolean"
                          },
                          "isCloneable": {
                            "description": "If `true`, an admin can create a new user with the same permissions as this user.\n",
                            "type": "boolean"
                          },
                          "resetPassword": {
                            "description": "Allows an administrator to send a user a password by email or see a one-time token.\n",
                            "type": "boolean"
                          },
                          "thirdPartyAccess": {
                            "description": "Allows the administrator to manage extended access.\n",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "delete",
                          "edit",
                          "resetPassword",
                          "isCloneable",
                          "thirdPartyAccess",
                          "apiClient",
                          "editProfile",
                          "canEditTFA"
                        ],
                        "type": "object"
                      },
                      "authGrants": {
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                          "properties": {
                            "groupId": {
                              "description": "A unique identifier for each group.\n",
                              "type": "integer"
                            },
                            "groupName": {
                              "description": "A group's name.\n",
                              "type": "string"
                            },
                            "isBlocked": {
                              "description": "Indicates whether a user's access is blocked for a group.\n",
                              "type": "boolean"
                            },
                            "roleDescription": {
                              "description": "Descriptive text for the role.\n",
                              "type": "string"
                            },
                            "roleId": {
                              "description": "A unique identifier for each role.\n",
                              "type": "integer"
                            },
                            "roleName": {
                              "description": "The role's name.\n",
                              "type": "string"
                            },
                            "subGroups": {
                              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                              "items": {
                                "description": "A further-nested group.",
                                "type": "object",
                                "x-akamai": {
                                  "file-path": "schemas/groups-nested.yaml"
                                }
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/AuthGrantResponse.yaml"
                          }
                        },
                        "type": "array"
                      },
                      "email": {
                        "description": "The user's email address.\n",
                        "format": "email",
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The user's first name.\n",
                        "type": "string"
                      },
                      "isLocked": {
                        "description": "The user's lock status.\n",
                        "type": "boolean"
                      },
                      "lastLoginDate": {
                        "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                        "format": "date-time",
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The user's last name.\n",
                        "type": "string"
                      },
                      "tfaConfigured": {
                        "description": "The TFA is configured.\n",
                        "type": "boolean"
                      },
                      "tfaEnabled": {
                        "description": "Indicates if TFA is enabled.\n",
                        "type": "boolean"
                      },
                      "uiIdentityId": {
                        "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.\n",
                        "type": "string"
                      },
                      "uiUserName": {
                        "description": "A user's `loginId`. Typically, a user's email address.\n",
                        "type": "string"
                      }
                    },
                    "required": [
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "uiUserName",
                      "email",
                      "accountId",
                      "lastLoginDate",
                      "tfaEnabled",
                      "tfaConfigured",
                      "isLocked"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/UiIdentitiesResponse.yaml"
                    }
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/ListOfUserResponse.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "get": {
        "operationId": "get-ui-identity",
        "summary": "Get a user",
        "tags": [
          "Users"
        ],
        "description": "Return a specific user's profile.\n",
        "parameters": [
          {
            "name": "authGrants",
            "in": "query",
            "description": "Includes the list of your group and role assignments, `false` by default.",
            "x-akamai": {
              "file-path": "parameters/authGrants-query.yaml"
            },
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "notifications",
            "in": "query",
            "description": "Includes product notifications you subscribe to, `false` by default.",
            "x-akamai": {
              "file-path": "parameters/notifications-query.yaml"
            },
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/adminActions_actions.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns the user's profile.\n",
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "A-B-123456",
                  "firstName": "John",
                  "lastName": "Smith",
                  "uiUserName": "johnsmith",
                  "email": "hgildong@mycompany.com",
                  "accountId": "A-CCT7890",
                  "phone": "3456788765",
                  "timeZone": "GMT",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "contactType": "Billing",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 14400,
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "secondaryEmail": "john_smith@gmail.com",
                  "mobilePhone": "3456789999",
                  "address": "First Street",
                  "city": "Santa Clara",
                  "state": "CA",
                  "zipCode": "34567",
                  "country": "USA",
                  "jobTitle": "engineer",
                  "isLocked": false,
                  "tfaEnabled": true,
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "passwordExpiry": true,
                      "newUserNotification": true,
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ],
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ]
                    }
                  },
                  "actions": {
                    "resetPassword": true,
                    "delete": true,
                    "edit": true,
                    "apiClient": true,
                    "thirdPartyAccess": true,
                    "isCloneable": true
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "roleId": 12,
                      "groupName": "mygroup",
                      "roleName": "admin",
                      "roleDescription": "This is a new role that has been created to",
                      "isBlocked": false
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "A unique identifier for each account.\n",
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "properties": {
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Indicates whether the user is deletable.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.\n",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true`, an administrator can create a new user with the same permissions as this user.\n",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.\n",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "address": {
                      "description": "The user's street address.\n",
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "properties": {
                          "groupId": {
                            "description": "A unique identifier for each group.\n",
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "A group's name.\n",
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether a user's access is blocked for a group.\n",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role.\n",
                            "type": "string"
                          },
                          "roleId": {
                            "description": "A unique identifier for each role.\n",
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "The role's name.\n",
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.\n",
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](ref:get-common-contact-types) operation.\n",
                      "type": "string"
                    },
                    "country": {
                      "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n",
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.\n",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.\n",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's job title.\n",
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's last name.\n",
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n",
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.\n",
                      "properties": {
                        "enableEmailNotifications": {
                          "description": "Indicates if email notifications are enabled.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.\n",
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when new users are created.\n",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.\n",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.\n",
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](ref:get-common-languages) operation.\n",
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the `value` output of the [View timeout policies](ref:get-common-timeout-policies) operation.\n",
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.\n",
                      "type": "string"
                    },
                    "tfaEnabled": {
                      "description": "Indicates if TFA is enabled.\n",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n",
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.\n",
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.\n",
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit ZIP code, represented as a string.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "tfaEnabled",
                    "country",
                    "phone"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-ui-identity",
        "summary": "Remove a user",
        "tags": [
          "Users"
        ],
        "description": "You can only delete users who don't have any API or Webservices clients. To delete users, first transfer their API clients and delete their Webservices clients.\n",
        "responses": {
          "204": {
            "description": "User removed.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/auth-grants": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-ui-uiidentity-auth-grants",
        "summary": "Modify a user's group and role assignments",
        "tags": [
          "Assignments"
        ],
        "description": "Edit what groups a user has access to, and how the use can interact with the objects in those groups.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                {
                  "groupId": 12345,
                  "roleId": 16,
                  "subGroups": [
                    {
                      "groupId": 54321,
                      "roleId": 11111,
                      "subGroups": []
                    }
                  ]
                }
              ],
              "schema": {
                "description": "Indicates new assignments.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "groupId": {
                      "description": "A unique identifier for each group.\n",
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "A group's name.\n",
                      "type": "string"
                    },
                    "isBlocked": {
                      "description": "Indicates whether a user's access to a group is blocked.\n",
                      "type": "boolean"
                    },
                    "roleDescription": {
                      "description": "Descriptive text for the role.\n",
                      "type": "string"
                    },
                    "roleId": {
                      "description": "A unique identifier for each role.\n",
                      "type": "integer"
                    },
                    "roleName": {
                      "description": "The role's name.\n",
                      "type": "string"
                    },
                    "subGroups": {
                      "description": "Array of nested groups.\n",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "groupId": {
                            "description": "A unique identifier for each group.\n",
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "A group's name.\n",
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether a user's access to a group is blocked.\n",
                            "type": "boolean"
                          },
                          "roleId": {
                            "description": "A unique identifier for each role.\n",
                            "type": "integer"
                          },
                          "subGroups": {
                            "description": "Array of nested groups.\n",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "groupId": {
                                  "description": "A unique identifier for each group.\n",
                                  "type": "integer"
                                },
                                "groupName": {
                                  "description": "A group's name.\n",
                                  "type": "string"
                                },
                                "isBlocked": {
                                  "description": "Indicates whether a user's access to a group is blocked.\n",
                                  "type": "boolean"
                                },
                                "roleId": {
                                  "description": "A unique identifier for each role.\n",
                                  "type": "integer"
                                },
                                "subGroups": {
                                  "description": "Array of nested groups.\n",
                                  "items": {
                                    "description": "A further nested authorization grant.",
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/AuthGrantRequest-nested.yaml"
                                    }
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/AuthGrantRequest.yaml"
                  }
                },
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/ListOfAuthGrantRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated assignments.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "groupId": 12345,
                    "roleId": 16,
                    "groupName": "Company",
                    "roleName": "Publisher",
                    "roleDescription": "This is a new role that has been created to",
                    "isBlocked": false,
                    "subGroups": [
                      {
                        "groupName": "Sub Group",
                        "roleName": "",
                        "roleDescription": "",
                        "groupId": 54321,
                        "roleId": null,
                        "isBlocked": false,
                        "subGroups": []
                      }
                    ]
                  }
                ],
                "schema": {
                  "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                  "items": {
                    "additionalProperties": false,
                    "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                    "properties": {
                      "groupId": {
                        "description": "A unique identifier for each group.\n",
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "A group's name.\n",
                        "type": "string"
                      },
                      "isBlocked": {
                        "description": "Indicates whether a user's access is blocked for a group.\n",
                        "type": "boolean"
                      },
                      "roleDescription": {
                        "description": "Descriptive text for the role.\n",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "A unique identifier for each role.\n",
                        "type": "integer"
                      },
                      "roleName": {
                        "description": "The role's name.\n",
                        "type": "string"
                      },
                      "subGroups": {
                        "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                        "items": {
                          "description": "A further-nested group.",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/groups-nested.yaml"
                          }
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/AuthGrantResponse.yaml"
                    }
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/ListOfAuthGrantResponse.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/basic-info": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-ui-identity-basic-info",
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "description": "Modify user information. Pass the entire body of data in the request, including members you're not changing. Otherwise, the operation removes unspecified data.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "firstName": "John",
                "lastName": "Smith",
                "tfaEnabled": true,
                "country": "USA",
                "phone": "3456788765",
                "contactType": "Billing",
                "timeZone": "GMT",
                "preferredLanguage": "English",
                "sessionTimeOut": 30,
                "secondaryEmail": "john.smith@mycompany.com",
                "mobilePhone": "3456787657",
                "address": "first Street",
                "city": "Santa Clara",
                "state": "CA",
                "zipCode": "34567",
                "jobTitle": "Engineer"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies user's profile.",
                "properties": {
                  "address": {
                    "description": "The user's street address.\n",
                    "type": "string"
                  },
                  "city": {
                    "description": "The user's city.\n",
                    "type": "string"
                  },
                  "contactType": {
                    "description": "Any of the values available from the [View contact types](ref:get-common-contact-types) operation.\n",
                    "type": "string"
                  },
                  "country": {
                    "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n",
                    "type": "string"
                  },
                  "email": {
                    "description": "The user's email address.\n",
                    "format": "email",
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The user's first name.\n",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "jobTitle": {
                    "description": "The user's job title.\n",
                    "maxLength": 75,
                    "minLength": 1,
                    "type": "string"
                  },
                  "lastName": {
                    "description": "The user's last name.\n",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string"
                  },
                  "mobilePhone": {
                    "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n",
                    "type": "string"
                  },
                  "phone": {
                    "description": "The user's main phone number, represented as a ten-digit integer within a string.\n",
                    "type": "string"
                  },
                  "preferredLanguage": {
                    "description": "Any of the values available from the [View languages](ref:get-common-languages) operation.\n",
                    "type": "string"
                  },
                  "secondaryEmail": {
                    "description": "The user's alternate email address.\n",
                    "format": "email",
                    "type": "string"
                  },
                  "sessionTimeOut": {
                    "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the `value` output of the [View timeout policies](ref:get-common-timeout-policies) operation.\n",
                    "type": "integer"
                  },
                  "state": {
                    "description": "The user's state if `country=USA`, or the user's province if `country=Canada`. For all other countries, this field is optional.\n",
                    "type": "string"
                  },
                  "tfaEnabled": {
                    "description": "Indicates whether two-factor authentication is enabled.\n",
                    "type": "boolean"
                  },
                  "timeZone": {
                    "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n",
                    "type": "string"
                  },
                  "zipCode": {
                    "description": "The user's five-digit ZIP code, represented as a string.\n",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/UpdateUserBasicInfoRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated user's profile.\n",
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "1-ABCDE",
                  "firstName": "John",
                  "lastName": "Smith",
                  "tfaEnabled": true,
                  "country": "USA",
                  "email": "adevi@mycompany.com",
                  "phone": "3456788765",
                  "contactType": "Billing",
                  "timeZone": "GMT",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 30,
                  "secondaryEmail": "john-smith@gmail.com",
                  "mobilePhone": "3456787657",
                  "address": "first Street",
                  "city": "Santa Clara",
                  "state": "CA",
                  "zipCode": "34567",
                  "jobTitle": "Engineer"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information about each user.",
                  "properties": {
                    "accountId": {
                      "description": "A unique identifier for each account.\n",
                      "type": "string"
                    },
                    "actions": {
                      "additionalProperties": false,
                      "description": "Encapsulates permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "properties": {
                        "apiClient": {
                          "description": "Allows the administrator to create an API client.\n",
                          "type": "boolean"
                        },
                        "delete": {
                          "description": "Indicates whether the user is deletable.\n",
                          "type": "boolean"
                        },
                        "edit": {
                          "description": "Indicates whether the user is editable.\n",
                          "type": "boolean"
                        },
                        "isCloneable": {
                          "description": "If `true`, an administrator can create a new user with the same permissions as this user.\n",
                          "type": "boolean"
                        },
                        "resetPassword": {
                          "description": "Allows an administrator to send a user a password by email or see a one-time token.\n",
                          "type": "boolean"
                        },
                        "thirdPartyAccess": {
                          "description": "Allows the administrator to manage extended access.\n",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "type": "object"
                    },
                    "address": {
                      "description": "The user's street address.\n",
                      "type": "string"
                    },
                    "authGrants": {
                      "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.",
                        "properties": {
                          "groupId": {
                            "description": "A unique identifier for each group.\n",
                            "type": "integer"
                          },
                          "groupName": {
                            "description": "A group's name.\n",
                            "type": "string"
                          },
                          "isBlocked": {
                            "description": "Indicates whether a user's access is blocked for a group.\n",
                            "type": "boolean"
                          },
                          "roleDescription": {
                            "description": "Descriptive text for the role.\n",
                            "type": "string"
                          },
                          "roleId": {
                            "description": "A unique identifier for each role.\n",
                            "type": "integer"
                          },
                          "roleName": {
                            "description": "The role's name.\n",
                            "type": "string"
                          },
                          "subGroups": {
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "description": "A further-nested group.",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/groups-nested.yaml"
                              }
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/AuthGrantResponse.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "city": {
                      "description": "The user's city.\n",
                      "type": "string"
                    },
                    "contactType": {
                      "description": "To help characterize the user, the value can be any that are available from the [View contact types](ref:get-common-contact-types) operation.\n",
                      "type": "string"
                    },
                    "country": {
                      "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n",
                      "type": "string"
                    },
                    "email": {
                      "description": "The user's email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The user's first name.\n",
                      "type": "string"
                    },
                    "isLocked": {
                      "description": "The user's lock status.\n",
                      "type": "boolean"
                    },
                    "jobTitle": {
                      "description": "The user's job title.\n",
                      "type": "string"
                    },
                    "lastLoginDate": {
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The user's last name.\n",
                      "type": "string"
                    },
                    "mobilePhone": {
                      "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n",
                      "type": "string"
                    },
                    "notifications": {
                      "additionalProperties": false,
                      "description": "The notification emails the user receives for products.\n",
                      "properties": {
                        "enableEmailNotifications": {
                          "description": "Indicates if email notifications are enabled.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "The types of notification emails the user receives.\n",
                          "properties": {
                            "newUserNotification": {
                              "description": "Send emails to group administrators when new users are created.\n",
                              "type": "boolean"
                            },
                            "passwordExpiry": {
                              "description": "Send emails regarding password expiration.\n",
                              "type": "boolean"
                            },
                            "proactive": {
                              "description": "Lists products for which the user receives notification emails about service issues.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "upgrade": {
                              "description": "Lists products for which the user receives notification emails about upgrades.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "passwordExpiryDate": {
                      "description": "The date a user's password expires.\n",
                      "format": "date-time",
                      "type": "string"
                    },
                    "phone": {
                      "description": "The user's main phone number, represented as a ten-digit integer within a string.\n",
                      "type": "string"
                    },
                    "preferredLanguage": {
                      "description": "The value can be any that are available from the [View languages](ref:get-common-languages) operation.\n",
                      "type": "string"
                    },
                    "secondaryEmail": {
                      "description": "The user's alternate email address.\n",
                      "format": "email",
                      "type": "string"
                    },
                    "sessionTimeOut": {
                      "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the `value` output of the [View timeout policies](ref:get-common-timeout-policies) operation.\n",
                      "type": "integer"
                    },
                    "state": {
                      "description": "The user's state.\n",
                      "type": "string"
                    },
                    "tfaEnabled": {
                      "description": "Indicates if TFA is enabled.\n",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n",
                      "type": "string"
                    },
                    "uiIdentityId": {
                      "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.\n",
                      "type": "string"
                    },
                    "uiUserName": {
                      "description": "A user's `loginId`. Typically, a user's email address.\n",
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The user's five-digit ZIP code, represented as a string.\n",
                      "type": "string"
                    }
                  },
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "tfaEnabled",
                    "country",
                    "phone"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/UserResponse.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/groups/{groupId}/blocked-properties": {
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "description": "A unique identifier for each group.",
          "x-akamai": {
            "file-path": "parameters/groupId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "integer",
            "example": 54321
          }
        },
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "get": {
        "operationId": "get-blocked-properties",
        "summary": "List blocked properties",
        "tags": [
          "Blocked properties"
        ],
        "description": "Return all properties a user doesn't have access to in a group.\n",
        "responses": {
          "200": {
            "description": "The response lists blocked properties.\n",
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "description": "Lists unique identifiers of resources.",
                  "items": {
                    "description": "Unique identifier of a resource.\n",
                    "type": "integer"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/ListOfInteger.yaml"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-blocked-properties",
        "summary": "Update blocked properties",
        "tags": [
          "Blocked properties"
        ],
        "description": "Remove or grant user access to properties. By default, users have access to all properties in a group.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                11111111,
                22222222
              ],
              "schema": {
                "description": "Lists unique identifiers of resources.",
                "items": {
                  "description": "Unique identifier of a resource.\n",
                  "type": "integer"
                },
                "type": "array",
                "x-akamai": {
                  "file-path": "schemas/ListOfInteger.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response lists blocked properties.\n",
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "description": "Lists unique identifiers of resources.",
                  "items": {
                    "description": "Unique identifier of a resource.\n",
                    "type": "integer"
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/ListOfInteger.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/lock": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-ui-identity-lock",
        "summary": "Lock a user's account",
        "tags": [
          "User access"
        ],
        "description": "Prevent a user from logging in to Control center.\n",
        "responses": {
          "204": {
            "description": "User locked.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/notifications": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-notifications",
        "summary": "Update a user's notifications",
        "tags": [
          "User notifications"
        ],
        "description": "Subscribe or un-subscribe users to product notification emails.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enableEmailNotifications": true,
                "options": {
                  "passwordExpiry": true,
                  "newUserNotification": true,
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ],
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ]
                }
              },
              "schema": {
                "type": "object",
                "description": "Encapsulates the types of email notifications you can receive.",
                "x-akamai": {
                  "file-path": "schemas/NotificationsRequest.yaml"
                },
                "additionalProperties": false,
                "properties": {
                  "options": {
                    "type": "object",
                    "description": "Specific notification types users can subscribe to.\n",
                    "additionalProperties": false,
                    "properties": {
                      "newUserNotification": {
                        "type": "boolean",
                        "description": "If `true`, send emails to group admins. This notification informs the admin a new user was created and granted access to their group.\n"
                      },
                      "passwordExpiry": {
                        "type": "boolean",
                        "description": "Send emails regarding password expiration.\n"
                      },
                      "proactive": {
                        "type": "array",
                        "description": "A list of products subscribed to for proactive notification emails.\n",
                        "items": {
                          "type": "string"
                        }
                      },
                      "upgrade": {
                        "type": "array",
                        "description": "A list of products subscribed to for upgrade notification emails.\n",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "enableEmailNotifications": {
                    "type": "boolean",
                    "description": "Enables email notifications.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated user's notifications.\n",
            "content": {
              "application/json": {
                "example": {
                  "enableEmailNotifications": true,
                  "options": {
                    "passwordExpiry": true,
                    "newUserNotification": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ],
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the types of email notifications you can receive.",
                  "properties": {
                    "enableEmailNotifications": {
                      "description": "Indicates if email notifications are enabled.\n",
                      "type": "boolean"
                    },
                    "options": {
                      "additionalProperties": false,
                      "description": "Specific notification types users can subscribe to.\n",
                      "properties": {
                        "newUserNotification": {
                          "description": "Send emails to group admins regarding new user creation.\n",
                          "type": "boolean"
                        },
                        "passwordExpiry": {
                          "description": "Send emails regarding password expiration.\n",
                          "type": "boolean"
                        },
                        "proactive": {
                          "description": "A list of products subscribed to for proactive notification emails.\n",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "upgrade": {
                          "description": "A list of products subscribed to for upgrade notification emails.\n",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/NotificationsResponse.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/reset-password": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-reset-password",
        "summary": "Reset a user's password",
        "tags": [
          "User access"
        ],
        "description": "Optionally send a one-time use password to the user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.\n",
        "parameters": [
          {
            "name": "sendEmail",
            "in": "query",
            "description": "Sends a one-time password to the new user, `false` by default.",
            "x-akamai": {
              "file-path": "parameters/sendEmail_sendEmail.yaml"
            },
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns new password.\n",
            "content": {
              "application/json": {
                "example": {
                  "newPassword": "abc123"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the new user's password.",
                  "properties": {
                    "newPassword": {
                      "description": "The new password.\n",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/PasswordResponse.yaml"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Password sent.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/set-password": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-set-password",
        "summary": "Set a user's password",
        "tags": [
          "User access"
        ],
        "description": "Set a specific password for a user. This differs from [Reset a user's password](ref:post-reset-password) because this password may be used more than once, and isn't randomly generated.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newPassword": "abc123"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies the new password.",
                "properties": {
                  "newPassword": {
                    "description": "The new password.\n",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/SetPasswordRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password set.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/tfa": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-ui-identity-tfa",
        "summary": "Set a user's two-factor authentication",
        "tags": [
          "User access"
        ],
        "description": "Actions for this operation are `enable`, `disable`, and `reset`. Users can make five attempts to log in with TFA before their accounts lock. If the account gets locked, use `reset` value to unlock.\n",
        "parameters": [
          {
            "description": "Includes the actions you can perform for TFA on your own profile, either `enable`, `disable`, or `reset`. Don't confuse this with the `actions` parameter, which applies to the various operations that get user data.",
            "in": "query",
            "name": "action",
            "required": true,
            "schema": {
              "enum": [
                "enable",
                "disable",
                "reset"
              ],
              "example": "enable",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/action-query.yaml"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Authentication updated.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/unlock": {
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "A unique identifier for a user.",
          "x-akamai": {
            "file-path": "parameters/uiIdentityId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-ui-identity-unlock",
        "summary": "Unlock a user's account",
        "tags": [
          "User access"
        ],
        "description": "Release the lock on a user's account and allow them to access Control Center.\n",
        "responses": {
          "204": {
            "description": "User's account unlocked.\n"
          }
        }
      }
    }
  }
}
