{
  "openapi": "3.0.0",
  "info": {
    "title": "Users, for administrators",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v2"
    }
  ],
  "paths": {
    "/user-admin/ui-identities": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities"
      },
      "post": {
        "operationId": "post-ui-identity",
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "description": "Create a user in the account specified in your own API client credentials or clone an existing user's role assignments. Optionally, send a randomly generated one-time use password to the new user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.\n",
        "parameters": [
          {
            "name": "sendEmail",
            "in": "query",
            "description": "Sends a one-time password to the new user, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "secondaryEmail": "john-smith@gmail.com",
                "mobilePhone": "3456787657",
                "zipCode": "34567",
                "jobTitle": "Engineer",
                "firstName": "John",
                "lastName": "Smith",
                "email": "asingh@mycompany.com",
                "phone": "(123) 321-1234",
                "timeZone": "GMT",
                "tfaEnabled": true,
                "contactType": "Billing",
                "preferredLanguage": "English",
                "sessionTimeOut": 64800,
                "address": "500 Tech Sq",
                "city": "Cambridge",
                "state": "MA",
                "country": "USA",
                "notifications": {
                  "enableEmailNotifications": true,
                  "options": {
                    "passwordExpiry": true,
                    "newUserNotification": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ],
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ]
                  }
                },
                "authGrants": [
                  {
                    "groupId": 12345,
                    "roleId": 3,
                    "groupName": "MyGroup",
                    "roleName": "Admin",
                    "roleDescription": "This role provides the maximum access to users.",
                    "subGroups": [
                      {
                        "groupId": 54321,
                        "groupName": "MySubGroup",
                        "subGroups": [
                          {
                            "groupId": 54321,
                            "groupName": "MyNewSubGroup"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "type": "object",
                "description": "Specifies a user.\n",
                "additionalProperties": false,
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "phone",
                  "country",
                  "authGrants"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The user's last name.\n"
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address.\n",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user's main phone number, represented as a ten-digit integer within a string.\n"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n"
                  },
                  "tfaEnabled": {
                    "type": "boolean",
                    "description": "When enabled, two-factor authentication confirms the user's identity.\n"
                  },
                  "country": {
                    "type": "string",
                    "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n"
                  },
                  "contactType": {
                    "type": "string",
                    "description": "To help characterize the user, this can be any value available from the [View contact](ref:get-common-contact-types) types operation.\n"
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n"
                  },
                  "preferredLanguage": {
                    "type": "string",
                    "description": "This can be any value available from the [View languages](ref:get-common-languages) operation.\n"
                  },
                  "sessionTimeOut": {
                    "type": "integer",
                    "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the value from the [View timeout policies](ref:get-common-timeout-policies) operation's response.\n"
                  },
                  "secondaryEmail": {
                    "type": "string",
                    "description": "The user's alternate email address.\n",
                    "format": "email"
                  },
                  "mobilePhone": {
                    "type": "string",
                    "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n"
                  },
                  "address": {
                    "type": "string",
                    "description": "The user's street address.\n"
                  },
                  "city": {
                    "type": "string",
                    "description": "The user's city.\n"
                  },
                  "state": {
                    "type": "string",
                    "description": "The name of the state where the user is located.\n"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "The user's five-digit ZIP code, represented as a string.\n"
                  },
                  "jobTitle": {
                    "type": "string",
                    "description": "The user's job title.\n"
                  },
                  "cloneFrom": {
                    "type": "string",
                    "description": "The username to clone a user's `authGrants` from. If you provide this member in a POST request, don't include the `authGrants` member in the request too.\n"
                  },
                  "authGrants": {
                    "type": "array",
                    "description": "The user's role assignments, per group.\n",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Indicates whether a user's access to a group is blocked.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "A unique identifier for each role.\n"
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "A unique identifier for each group.\n"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "A group's name.\n"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "The role's name.\n"
                        },
                        "roleDescription": {
                          "type": "string",
                          "description": "Descriptive text for the role.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Array of nested groups.\n",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "isBlocked": {
                                "type": "boolean",
                                "description": "Indicates whether a user's access to a group is blocked.\n"
                              },
                              "roleId": {
                                "type": "integer",
                                "description": "A unique identifier for each role.\n"
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "A unique identifier for each group.\n"
                              },
                              "groupName": {
                                "type": "string",
                                "description": "A group's name.\n"
                              },
                              "subGroups": {
                                "type": "array",
                                "description": "Array of nested groups.\n",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "isBlocked": {
                                      "type": "boolean",
                                      "description": "Indicates whether a user's access to a group is blocked.\n"
                                    },
                                    "roleId": {
                                      "type": "integer",
                                      "description": "A unique identifier for each role.\n"
                                    },
                                    "groupId": {
                                      "type": "integer",
                                      "description": "A unique identifier for each group.\n"
                                    },
                                    "groupName": {
                                      "type": "string",
                                      "description": "A group's name.\n"
                                    },
                                    "subGroups": {
                                      "type": "array",
                                      "description": "Array of nested groups.\n",
                                      "items": {
                                        "type": "object",
                                        "description": "A further nested authorization grant.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "notifications": {
                    "type": "object",
                    "description": "Emails the user can receive for their products.\n",
                    "additionalProperties": false,
                    "properties": {
                      "options": {
                        "type": "object",
                        "description": "Email settings.\n",
                        "additionalProperties": false,
                        "properties": {
                          "upgrade": {
                            "type": "array",
                            "description": "Email notifications for upgrades to products.\n",
                            "items": {
                              "type": "string",
                              "description": "Product names.\n"
                            }
                          },
                          "proactive": {
                            "type": "array",
                            "description": "Email notifications for proactive maintenance to products.\n",
                            "items": {
                              "type": "string",
                              "description": "Product names.\n"
                            }
                          },
                          "passwordExpiry": {
                            "type": "boolean",
                            "description": "Email notifications for password expirations.\n"
                          },
                          "newUserNotification": {
                            "type": "boolean",
                            "description": "Email notification for new user creation.\n"
                          }
                        }
                      },
                      "enableEmailNotifications": {
                        "type": "boolean",
                        "description": "Enables email notifications.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the created user.\n",
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "A-BC-1234567",
                  "firstName": "John",
                  "lastName": "Smith",
                  "uiUserName": "john.smith@mycompany.com",
                  "email": "hgildong@mycompany.com",
                  "phone": "(123) 321-1234",
                  "timeZone": "GMT",
                  "tfaEnabled": true,
                  "contactType": "Billing",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 64800,
                  "passwordExpiryDate": "2018-05-05T22:38:39.000Z",
                  "address": "500 Tech Sq",
                  "city": "Cambridge",
                  "state": "MA",
                  "country": "USA",
                  "actions": {
                    "resetPassword": true,
                    "edit": true,
                    "isCloneable": true,
                    "delete": true,
                    "thirdPartyAccess": false,
                    "apiClient": true
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "passwordExpiry": true,
                      "newUserNotification": true,
                      "upgrade": [
                        "24x7"
                      ],
                      "proactive": [
                        "Security"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "roleId": 3,
                      "groupName": "MyGroup",
                      "roleName": "Admin",
                      "roleDescription": "This role provides the maximum access to users.",
                      "subGroups": [
                        {
                          "groupId": 54321,
                          "groupName": "MySubGroup",
                          "subGroups": [
                            {
                              "groupId": 12345,
                              "groupName": "MyNewSubGroup"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates information about each user.\n",
                  "additionalProperties": false,
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "properties": {
                    "notifications": {
                      "type": "object",
                      "description": "Specifies email notifications the user receives for products.\n",
                      "additionalProperties": false,
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "type": "object",
                          "description": "Specifies email notifications settings.\n",
                          "additionalProperties": false,
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "properties": {
                            "upgrade": {
                              "type": "array",
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "proactive": {
                              "type": "array",
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "passwordExpiry": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for password expiration.\n"
                            },
                            "newUserNotification": {
                              "type": "boolean",
                              "description": "Whether group administrators get notifications when the user creates other new users.\n"
                            },
                            "apiClientCredentialExpiryNotification": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for expiring API client credentials.\n"
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "type": "boolean",
                          "description": "Enables email notifications.\n"
                        }
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "The user's city.\n",
                      "minLength": 1
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1
                    },
                    "contactType": {
                      "type": "string",
                      "description": "User's contact type.\n",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "User's country.\n",
                      "minLength": 1
                    },
                    "jobTitle": {
                      "type": "string",
                      "description": "The user's position at the company.\n",
                      "minLength": 1
                    },
                    "lastLoginDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time"
                    },
                    "tfaEnabled": {
                      "type": "boolean",
                      "description": "Whether TFA is enabled.\n"
                    },
                    "tfaConfigured": {
                      "type": "boolean",
                      "description": "Whether TFA is configured.\n"
                    },
                    "additionalAuthentication": {
                      "type": "string",
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "additionalAuthenticationConfigured": {
                      "type": "boolean",
                      "description": "Whether the user has multi-factor authentication configured.\n"
                    },
                    "emailUpdatePending": {
                      "type": "boolean",
                      "description": "Whether there are any pending changes to the email address.\n"
                    },
                    "mobilePhone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "passwordExpiryDate": {
                      "type": "string",
                      "description": "The date a user's password expires.\n",
                      "format": "date-time"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "description": "The user's language.\n",
                      "minLength": 1
                    },
                    "secondaryEmail": {
                      "type": "string",
                      "description": "The user's alternate email address.\n",
                      "format": "email"
                    },
                    "sessionTimeOut": {
                      "type": "integer",
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0
                    },
                    "state": {
                      "type": "string",
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1
                    },
                    "address": {
                      "type": "string",
                      "description": "The user's street address.\n",
                      "minLength": 1
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The user's first name.\n",
                      "minLength": 1
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The user's surname.\n",
                      "minLength": 1
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email address.\n",
                      "format": "email"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1
                    },
                    "authGrants": {
                      "type": "array",
                      "description": "A user's role assignments, per group.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "Descriptive text for the role.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "Indicates whether a user's access is blocked for a group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether the user is deletable.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether the user is editable.\n"
                        },
                        "resetPassword": {
                          "type": "boolean",
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                        },
                        "isCloneable": {
                          "type": "boolean",
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                        },
                        "thirdPartyAccess": {
                          "type": "boolean",
                          "description": "Enables the administrator to manage extended access.\n"
                        },
                        "apiClient": {
                          "type": "boolean",
                          "description": "Enables the administrator to create an API client.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-ui-identities",
        "summary": "List users",
        "tags": [
          "Users"
        ],
        "description": "Return a list of users who have access on this account. The account is determined by the tokens in your API client. You can pass a `groupId` to filter users based on group. Additionally, you can return additional user information such as what product notifications they subscribe to, or what group and role assignments they have. Set  the `actions` parameter to `true` to return the actions you can  take on each user.\n",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "description": "Filters roles for a specific group. To get this value, run the [List groups](ref:get-groups) operation.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 12345
            }
          },
          {
            "name": "authGrants",
            "in": "query",
            "description": "Includes the list of your group and role assignments, `false` by default.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "actions",
            "in": "query",
            "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists users.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "uiIdentityId": "A-B-123456",
                    "firstName": "John",
                    "lastName": "Smith",
                    "uiUserName": "johnsmith",
                    "email": "afero@mycompany.com",
                    "accountId": "A-CCT1234",
                    "lastLoginDate": "2016-01-13T17:53:57Z",
                    "tfaEnabled": true,
                    "tfaConfigured": true,
                    "isLocked": false,
                    "actions": {
                      "resetPassword": true,
                      "delete": true,
                      "edit": true,
                      "apiClient": true,
                      "thirdPartyAccess": true,
                      "isCloneable": true,
                      "editProfile": true,
                      "canEditTFA": false
                    },
                    "authGrants": [
                      {
                        "groupId": 12345,
                        "roleId": 12,
                        "groupName": "mygroup",
                        "roleName": "admin",
                        "roleDescription": "This is a new role that has been created to",
                        "isBlocked": false
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Encapsulates information about each user.\n",
                  "items": {
                    "type": "object",
                    "description": "Encapsulates information about each user.\n",
                    "additionalProperties": false,
                    "required": [
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "uiUserName",
                      "email",
                      "accountId",
                      "additionalAuthentication",
                      "additionalAuthenticationConfigured",
                      "isLocked",
                      "tfaEnabled",
                      "tfaConfigured"
                    ],
                    "properties": {
                      "uiIdentityId": {
                        "type": "string",
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                        "minLength": 1
                      },
                      "firstName": {
                        "type": "string",
                        "description": "The user's first name.\n",
                        "minLength": 1
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The user's surname.\n",
                        "minLength": 1
                      },
                      "lastLoginDate": {
                        "type": "string",
                        "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                        "format": "date-time"
                      },
                      "uiUserName": {
                        "type": "string",
                        "description": "The user's username in Control Center.\n",
                        "minLength": 1
                      },
                      "email": {
                        "type": "string",
                        "description": "The user's email address.\n",
                        "format": "email"
                      },
                      "tfaEnabled": {
                        "type": "boolean",
                        "description": "Whether TFA is enabled.\n"
                      },
                      "tfaConfigured": {
                        "type": "boolean",
                        "description": "Whether TFA is configured.\n"
                      },
                      "accountId": {
                        "type": "string",
                        "description": "Unique identifier for each account.\n",
                        "minLength": 1
                      },
                      "additionalAuthentication": {
                        "type": "string",
                        "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                        "enum": [
                          "TFA",
                          "MFA",
                          "NONE"
                        ]
                      },
                      "additionalAuthenticationConfigured": {
                        "type": "boolean",
                        "description": "Whether the user has multi-factor authentication configured.\n"
                      },
                      "isLocked": {
                        "type": "boolean",
                        "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                      },
                      "authGrants": {
                        "type": "array",
                        "description": "A user's role assignments, per group. \n",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                          "additionalProperties": false,
                          "properties": {
                            "groupId": {
                              "type": "integer",
                              "description": "A unique identifier for each group.\n"
                            },
                            "roleId": {
                              "type": "integer",
                              "description": "A unique identifier for each role.\n"
                            },
                            "groupName": {
                              "type": "string",
                              "description": "A group's name.\n"
                            },
                            "roleName": {
                              "type": "string",
                              "description": "The role's name.\n"
                            },
                            "roleDescription": {
                              "type": "string",
                              "description": "Descriptive text for the role.\n"
                            },
                            "isBlocked": {
                              "type": "boolean",
                              "description": "Indicates whether a user's access is blocked for a group.\n"
                            },
                            "subGroups": {
                              "type": "array",
                              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                              "items": {
                                "type": "object",
                                "description": "A further-nested group.\n"
                              }
                            }
                          }
                        }
                      },
                      "actions": {
                        "type": "object",
                        "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                        "additionalProperties": false,
                        "required": [
                          "delete",
                          "edit",
                          "resetPassword",
                          "isCloneable",
                          "thirdPartyAccess",
                          "apiClient",
                          "editProfile",
                          "canEditTFA"
                        ],
                        "properties": {
                          "delete": {
                            "type": "boolean",
                            "description": "Whether the user is deletable.\n"
                          },
                          "edit": {
                            "type": "boolean",
                            "description": "Whether the user is editable.\n"
                          },
                          "resetPassword": {
                            "type": "boolean",
                            "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                          },
                          "isCloneable": {
                            "type": "boolean",
                            "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                          },
                          "thirdPartyAccess": {
                            "type": "boolean",
                            "description": "Enables the administrator to manage extended access.\n"
                          },
                          "apiClient": {
                            "type": "boolean",
                            "description": "Enables the administrator to create an API client.\n"
                          },
                          "editProfile": {
                            "type": "boolean",
                            "description": "With a `true` value, the user can edit their user profile.\n"
                          },
                          "canEditTFA": {
                            "type": "boolean",
                            "description": "With a `true` value, the user can turn their TFA setting on or off.\n"
                          },
                          "canEditMFA": {
                            "type": "boolean",
                            "description": "With a `true` value, the user can turn their MFA setting on or off.\n"
                          },
                          "canEditNone": {
                            "type": "boolean",
                            "description": "With a `true` value, the user can turn their None setting on or off.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "get": {
        "operationId": "get-ui-identity",
        "summary": "Get a user",
        "tags": [
          "Users"
        ],
        "description": "Return a specific user's profile.\n",
        "parameters": [
          {
            "name": "authGrants",
            "in": "query",
            "description": "Includes the list of your group and role assignments, `false` by default.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "notifications",
            "in": "query",
            "description": "Includes product notifications you subscribe to, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "actions",
            "in": "query",
            "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns the user's profile.\n",
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "A-B-123456",
                  "firstName": "John",
                  "lastName": "Smith",
                  "uiUserName": "johnsmith",
                  "email": "hgildong@mycompany.com",
                  "accountId": "A-CCT7890",
                  "phone": "3456788765",
                  "timeZone": "GMT",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "contactType": "Billing",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 14400,
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "secondaryEmail": "john_smith@gmail.com",
                  "mobilePhone": "3456789999",
                  "address": "First Street",
                  "city": "Santa Clara",
                  "state": "CA",
                  "zipCode": "34567",
                  "country": "USA",
                  "jobTitle": "engineer",
                  "isLocked": false,
                  "tfaEnabled": true,
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "passwordExpiry": true,
                      "newUserNotification": true,
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ],
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ]
                    }
                  },
                  "actions": {
                    "resetPassword": true,
                    "delete": true,
                    "edit": true,
                    "apiClient": true,
                    "thirdPartyAccess": true,
                    "isCloneable": true
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "roleId": 12,
                      "groupName": "mygroup",
                      "roleName": "admin",
                      "roleDescription": "This is a new role that has been created to",
                      "isBlocked": false
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates information about each user.\n",
                  "additionalProperties": false,
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "properties": {
                    "notifications": {
                      "type": "object",
                      "description": "Specifies email notifications the user receives for products.\n",
                      "additionalProperties": false,
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "type": "object",
                          "description": "Specifies email notifications settings.\n",
                          "additionalProperties": false,
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "properties": {
                            "upgrade": {
                              "type": "array",
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "proactive": {
                              "type": "array",
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "passwordExpiry": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for password expiration.\n"
                            },
                            "newUserNotification": {
                              "type": "boolean",
                              "description": "Whether group administrators get notifications when the user creates other new users.\n"
                            },
                            "apiClientCredentialExpiryNotification": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for expiring API client credentials.\n"
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "type": "boolean",
                          "description": "Enables email notifications.\n"
                        }
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "The user's city.\n",
                      "minLength": 1
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1
                    },
                    "contactType": {
                      "type": "string",
                      "description": "User's contact type.\n",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "User's country.\n",
                      "minLength": 1
                    },
                    "jobTitle": {
                      "type": "string",
                      "description": "The user's position at the company.\n",
                      "minLength": 1
                    },
                    "lastLoginDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time"
                    },
                    "tfaEnabled": {
                      "type": "boolean",
                      "description": "Whether TFA is enabled.\n"
                    },
                    "tfaConfigured": {
                      "type": "boolean",
                      "description": "Whether TFA is configured.\n"
                    },
                    "additionalAuthentication": {
                      "type": "string",
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "additionalAuthenticationConfigured": {
                      "type": "boolean",
                      "description": "Whether the user has multi-factor authentication configured.\n"
                    },
                    "emailUpdatePending": {
                      "type": "boolean",
                      "description": "Whether there are any pending changes to the email address.\n"
                    },
                    "mobilePhone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "passwordExpiryDate": {
                      "type": "string",
                      "description": "The date a user's password expires.\n",
                      "format": "date-time"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "description": "The user's language.\n",
                      "minLength": 1
                    },
                    "secondaryEmail": {
                      "type": "string",
                      "description": "The user's alternate email address.\n",
                      "format": "email"
                    },
                    "sessionTimeOut": {
                      "type": "integer",
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0
                    },
                    "state": {
                      "type": "string",
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1
                    },
                    "address": {
                      "type": "string",
                      "description": "The user's street address.\n",
                      "minLength": 1
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The user's first name.\n",
                      "minLength": 1
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The user's surname.\n",
                      "minLength": 1
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email address.\n",
                      "format": "email"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1
                    },
                    "authGrants": {
                      "type": "array",
                      "description": "A user's role assignments, per group.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "Descriptive text for the role.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "Indicates whether a user's access is blocked for a group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether the user is deletable.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether the user is editable.\n"
                        },
                        "resetPassword": {
                          "type": "boolean",
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                        },
                        "isCloneable": {
                          "type": "boolean",
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                        },
                        "thirdPartyAccess": {
                          "type": "boolean",
                          "description": "Enables the administrator to manage extended access.\n"
                        },
                        "apiClient": {
                          "type": "boolean",
                          "description": "Enables the administrator to create an API client.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-ui-identity",
        "summary": "Remove a user",
        "tags": [
          "Users"
        ],
        "description": "You can only delete users who don't have any API or Webservices clients. To delete users, first transfer their API clients and delete their Webservices clients.\n",
        "responses": {
          "204": {
            "description": "User removed.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/auth-grants": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/auth-grants"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-ui-uiidentity-auth-grants",
        "summary": "Modify a user's group and role assignments",
        "tags": [
          "Assignments"
        ],
        "description": "Edit what groups a user has access to, and how the use can interact with the objects in those groups.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                {
                  "groupId": 12345,
                  "roleId": 16,
                  "subGroups": [
                    {
                      "groupId": 54321,
                      "roleId": 11111,
                      "subGroups": []
                    }
                  ]
                }
              ],
              "schema": {
                "type": "array",
                "description": "Indicates new assignments.\n",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "isBlocked": {
                      "type": "boolean",
                      "description": "Indicates whether a user's access to a group is blocked.\n"
                    },
                    "roleId": {
                      "type": "integer",
                      "description": "A unique identifier for each role.\n"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "A unique identifier for each group.\n"
                    },
                    "groupName": {
                      "type": "string",
                      "description": "A group's name.\n"
                    },
                    "roleName": {
                      "type": "string",
                      "description": "The role's name.\n"
                    },
                    "roleDescription": {
                      "type": "string",
                      "description": "Descriptive text for the role.\n"
                    },
                    "subGroups": {
                      "type": "array",
                      "description": "Array of nested groups.\n",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "isBlocked": {
                            "type": "boolean",
                            "description": "Indicates whether a user's access to a group is blocked.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Array of nested groups.\n",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "isBlocked": {
                                  "type": "boolean",
                                  "description": "Indicates whether a user's access to a group is blocked.\n"
                                },
                                "roleId": {
                                  "type": "integer",
                                  "description": "A unique identifier for each role.\n"
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "A unique identifier for each group.\n"
                                },
                                "groupName": {
                                  "type": "string",
                                  "description": "A group's name.\n"
                                },
                                "subGroups": {
                                  "type": "array",
                                  "description": "Array of nested groups.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "A further nested authorization grant.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated assignments.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "groupId": 12345,
                    "roleId": 16,
                    "groupName": "Internet Company",
                    "roleName": "Publisher",
                    "roleDescription": "Internet Company role.",
                    "isBlocked": false,
                    "subGroups": [
                      {
                        "groupName": "Digital Company",
                        "roleName": "",
                        "roleDescription": "",
                        "groupId": 32145,
                        "roleId": null,
                        "isBlocked": false,
                        "subGroups": []
                      }
                    ]
                  },
                  {
                    "roleId": 100002,
                    "roleName": "Admin for Account Roles"
                  },
                  {
                    "roleId": 100004,
                    "roleName": "Admin for Account Settings"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                  "items": {
                    "type": "object",
                    "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                    "additionalProperties": false,
                    "properties": {
                      "groupId": {
                        "type": "integer",
                        "description": "A unique identifier for each group.\n"
                      },
                      "roleId": {
                        "type": "integer",
                        "description": "A unique identifier for each role.\n"
                      },
                      "groupName": {
                        "type": "string",
                        "description": "A group's name.\n"
                      },
                      "roleName": {
                        "type": "string",
                        "description": "The role's name.\n"
                      },
                      "roleDescription": {
                        "type": "string",
                        "description": "Descriptive text for the role.\n"
                      },
                      "isBlocked": {
                        "type": "boolean",
                        "description": "Indicates whether a user's access is blocked for a group.\n"
                      },
                      "subGroups": {
                        "type": "array",
                        "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                        "items": {
                          "type": "object",
                          "description": "A further-nested group.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/basic-info": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/basic-info"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-ui-identity-basic-info",
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "description": "Modify user information. Pass the entire body of data in the request, including members you're not changing. Otherwise, the operation removes unspecified data.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "firstName": "John",
                "lastName": "Smith",
                "tfaEnabled": true,
                "country": "USA",
                "phone": "3456788765",
                "contactType": "Billing",
                "timeZone": "GMT",
                "preferredLanguage": "English",
                "sessionTimeOut": 30,
                "secondaryEmail": "john.smith@mycompany.com",
                "mobilePhone": "3456787657",
                "address": "first Street",
                "city": "Santa Clara",
                "state": "CA",
                "zipCode": "34567",
                "jobTitle": "Engineer"
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "firstName",
                  "lastName",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "timeZone"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The user's street address.\n",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "description": "The user's city.\n",
                    "minLength": 1
                  },
                  "contactType": {
                    "type": "string",
                    "description": "User's contact type. To get the available values, run the [View contact types](ref:get-common-contact-types) operation.\n",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "description": "User's country. To get the available values, run the [View supported countries](ref:get-common-countries) operation.\n",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).\n",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "jobTitle": {
                    "type": "string",
                    "description": "The user's position at the company.\n",
                    "minLength": 1,
                    "maxLength": 75
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The user's surname.\n",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "mobilePhone": {
                    "type": "string",
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
                    "minLength": 1
                  },
                  "preferredLanguage": {
                    "type": "string",
                    "description": "The user's language. To get the available values, run the [View languages](ref:get-common-languages) operation.\n",
                    "minLength": 1
                  },
                  "secondaryEmail": {
                    "type": "string",
                    "description": "The user's alternate email address.\n",
                    "format": "email"
                  },
                  "sessionTimeOut": {
                    "type": "integer",
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](ref:get-common-timeout-policies) operation if you're an administrator or [View timeout policies for a user profile](ref:get-user-timeout-policies) operation if you're the account's user. Make sure to select a value that's equal or smaller to the **Max session timeout** value, set for your account in the Identity and Access Management interface's [Settings](https://techdocs.akamai.com/iam/docs/account-settings) tab.\n",
                    "minimum": 0
                  },
                  "state": {
                    "type": "string",
                    "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](ref:get-user-states) operation.\n",
                    "minLength": 1
                  },
                  "additionalAuthentication": {
                    "type": "string",
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                    "minLength": 1
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "The user's five-digit postal code, represented as a string.\n",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated user's profile.\n",
            "content": {
              "application/json": {
                "example": {
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-smith@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "address": "first Street",
                  "timeZone": "GMT",
                  "zipCode": "34567",
                  "additionalAuthentication": "TFA",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "jsmith",
                  "additionalAuthenticationConfigured": false
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates information about each user.\n",
                  "additionalProperties": false,
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "properties": {
                    "notifications": {
                      "type": "object",
                      "description": "Specifies email notifications the user receives for products.\n",
                      "additionalProperties": false,
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "type": "object",
                          "description": "Specifies email notifications settings.\n",
                          "additionalProperties": false,
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "properties": {
                            "upgrade": {
                              "type": "array",
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "proactive": {
                              "type": "array",
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "passwordExpiry": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for password expiration.\n"
                            },
                            "newUserNotification": {
                              "type": "boolean",
                              "description": "Whether group administrators get notifications when the user creates other new users.\n"
                            },
                            "apiClientCredentialExpiryNotification": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for expiring API client credentials.\n"
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "type": "boolean",
                          "description": "Enables email notifications.\n"
                        }
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "The user's city.\n",
                      "minLength": 1
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1
                    },
                    "contactType": {
                      "type": "string",
                      "description": "User's contact type.\n",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "User's country.\n",
                      "minLength": 1
                    },
                    "jobTitle": {
                      "type": "string",
                      "description": "The user's position at the company.\n",
                      "minLength": 1
                    },
                    "lastLoginDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time"
                    },
                    "tfaEnabled": {
                      "type": "boolean",
                      "description": "Whether TFA is enabled.\n"
                    },
                    "tfaConfigured": {
                      "type": "boolean",
                      "description": "Whether TFA is configured.\n"
                    },
                    "additionalAuthentication": {
                      "type": "string",
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "additionalAuthenticationConfigured": {
                      "type": "boolean",
                      "description": "Whether the user has multi-factor authentication configured.\n"
                    },
                    "emailUpdatePending": {
                      "type": "boolean",
                      "description": "Whether there are any pending changes to the email address.\n"
                    },
                    "mobilePhone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "passwordExpiryDate": {
                      "type": "string",
                      "description": "The date a user's password expires.\n",
                      "format": "date-time"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "description": "The user's language.\n",
                      "minLength": 1
                    },
                    "secondaryEmail": {
                      "type": "string",
                      "description": "The user's alternate email address.\n",
                      "format": "email"
                    },
                    "sessionTimeOut": {
                      "type": "integer",
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0
                    },
                    "state": {
                      "type": "string",
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1
                    },
                    "address": {
                      "type": "string",
                      "description": "The user's street address.\n",
                      "minLength": 1
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The user's first name.\n",
                      "minLength": 1
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The user's surname.\n",
                      "minLength": 1
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email address.\n",
                      "format": "email"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1
                    },
                    "authGrants": {
                      "type": "array",
                      "description": "A user's role assignments, per group.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "Descriptive text for the role.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "Indicates whether a user's access is blocked for a group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether the user is deletable.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether the user is editable.\n"
                        },
                        "resetPassword": {
                          "type": "boolean",
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                        },
                        "isCloneable": {
                          "type": "boolean",
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                        },
                        "thirdPartyAccess": {
                          "type": "boolean",
                          "description": "Enables the administrator to manage extended access.\n"
                        },
                        "apiClient": {
                          "type": "boolean",
                          "description": "Enables the administrator to create an API client.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/groups/{groupId}/blocked-properties": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/groups/{groupId}/blocked-properties"
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "description": "Unique identifier for each group. To get this value, run the [List groups](ref:get-groups) operation.\n",
          "required": true,
          "schema": {
            "type": "integer",
            "example": 54321
          }
        },
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "get": {
        "operationId": "get-blocked-properties",
        "summary": "List blocked properties",
        "tags": [
          "Blocked properties"
        ],
        "description": "Return all properties a user doesn't have access to in a group.\n",
        "responses": {
          "200": {
            "description": "The response lists blocked properties.\n",
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "type": "array",
                  "description": "Lists unique identifiers of resources.\n",
                  "items": {
                    "type": "integer",
                    "description": "Unique identifier of a resource.\n"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-blocked-properties",
        "summary": "Update blocked properties",
        "tags": [
          "Blocked properties"
        ],
        "description": "Remove or grant user access to properties. By default, users have access to all properties in a group.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                11111111,
                22222222
              ],
              "schema": {
                "type": "array",
                "description": "Lists unique identifiers of resources.\n",
                "items": {
                  "type": "integer",
                  "description": "Unique identifier of a resource.\n"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response lists blocked properties.\n",
            "content": {
              "application/json": {
                "example": [
                  11111111,
                  22222222
                ],
                "schema": {
                  "type": "array",
                  "description": "Lists unique identifiers of resources.\n",
                  "items": {
                    "type": "integer",
                    "description": "Unique identifier of a resource.\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/lock": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/lock"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-ui-identity-lock",
        "summary": "Lock a user's account",
        "tags": [
          "User access"
        ],
        "description": "Prevent a user from logging in to Control center.\n",
        "responses": {
          "204": {
            "description": "User locked.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/notifications": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/notifications"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-notifications",
        "summary": "Update a user's notifications",
        "tags": [
          "User notifications"
        ],
        "description": "Subscribe or un-subscribe users to product notification emails.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enableEmailNotifications": true,
                "options": {
                  "passwordExpiry": true,
                  "newUserNotification": true,
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ],
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ]
                }
              },
              "schema": {
                "description": "Encapsulates the types of email notifications you can receive.\n",
                "additionalProperties": false,
                "required": [
                  "enableEmailNotifications",
                  "options"
                ],
                "properties": {
                  "options": {
                    "type": "object",
                    "description": "Specifies email notifications settings.\n",
                    "additionalProperties": false,
                    "required": [
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "properties": {
                      "newUserNotification": {
                        "type": "boolean",
                        "description": "Enables notifications for group administrators when the user creates other new users.\n"
                      },
                      "passwordExpiry": {
                        "type": "boolean",
                        "description": "Enables notifications for expiring passwords.\n"
                      },
                      "proactive": {
                        "type": "array",
                        "description": "Products for which the user gets notifications for service issues.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "upgrade": {
                        "type": "array",
                        "description": "Products for which the user receives notifications for upgrades.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "apiClientCredentialExpiryNotification": {
                        "type": "boolean",
                        "description": "Enables notifications for expiring API client credentials.\n"
                      }
                    }
                  },
                  "enableEmailNotifications": {
                    "type": "boolean",
                    "description": "Enables email notifications.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated user's notifications.\n",
            "content": {
              "application/json": {
                "example": {
                  "enableEmailNotifications": true,
                  "options": {
                    "passwordExpiry": true,
                    "newUserNotification": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ],
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ]
                  }
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates the types of email notifications you can receive.\n",
                  "additionalProperties": false,
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "properties": {
                    "options": {
                      "type": "object",
                      "description": "Specifies email notifications settings.\n",
                      "additionalProperties": false,
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade",
                        "apiClientCredentialExpiryNotification"
                      ],
                      "properties": {
                        "newUserNotification": {
                          "type": "boolean",
                          "description": "Whether group administrators get notifications when the user creates other new users.\n"
                        },
                        "apiClientCredentialExpiryNotification": {
                          "type": "boolean",
                          "description": "Whether the user gets notifications for expiring API client credentials.\n"
                        },
                        "passwordExpiry": {
                          "type": "boolean",
                          "description": "Whether the user gets notifications for password expiration.\n"
                        },
                        "proactive": {
                          "type": "array",
                          "description": "Products for which the user gets notifications for service issues.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "upgrade": {
                          "type": "array",
                          "description": "Products for which the user receives notifications for upgrades.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "enableEmailNotifications": {
                      "type": "boolean",
                      "description": "Enables email notifications.\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/reset-password": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/reset-password"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-reset-password",
        "summary": "Reset a user's password",
        "tags": [
          "User access"
        ],
        "description": "Optionally send a one-time use password to the user. If you send the email with the password directly to the user, the response for this operation doesn't include that password. If you don't send the password to the user through email, the password is included in the response.\n",
        "parameters": [
          {
            "name": "sendEmail",
            "in": "query",
            "description": "Sends a one-time password to the new user, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns new password.\n",
            "content": {
              "application/json": {
                "example": {
                  "newPassword": "abc123"
                },
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "newPassword"
                  ],
                  "properties": {
                    "newPassword": {
                      "type": "string",
                      "description": "New password.\n",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Password sent.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/set-password": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/set-password"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-set-password",
        "summary": "Set a user's password",
        "tags": [
          "User access"
        ],
        "description": "Set a specific password for a user. This differs from [Reset a user's password](ref:post-reset-password) because this password may be used more than once, and isn't randomly generated.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newPassword": "abc123"
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "newPassword"
                ],
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "description": "New password.\n",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password set.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/tfa": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/tfa"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "put": {
        "operationId": "put-ui-identity-tfa",
        "summary": "Set a user's two-factor authentication",
        "tags": [
          "User access"
        ],
        "description": "Actions for this operation are `enable`, `disable`, and `reset`. Users can make five attempts to log in with TFA before their accounts lock. If the account gets locked, use `reset` value to unlock.\n",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "Includes actions you can perform for 2FA on your profile, either `enable`, `disable`, or `reset`. Don't confuse this with the `actions` parameter, which applies to the various operations that get user data.\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "enable",
              "enum": [
                "enable",
                "disable",
                "reset"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Authentication updated.\n"
          }
        }
      }
    },
    "/user-admin/ui-identities/{uiIdentityId}/unlock": {
      "x-akamai": {
        "path-info": "/user-admin/ui-identities/{uiIdentityId}/unlock"
      },
      "parameters": [
        {
          "name": "uiIdentityId",
          "in": "path",
          "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "1-ABCDE"
          }
        }
      ],
      "post": {
        "operationId": "post-ui-identity-unlock",
        "summary": "Unlock a user's account",
        "tags": [
          "User access"
        ],
        "description": "Release the lock on a user's account and allow them to access Control Center.\n",
        "responses": {
          "204": {
            "description": "User's account unlocked.\n"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "roles-filter-params-group-group-id": {
        "name": "groupId",
        "in": "query",
        "description": "Filters roles for a specific group. To get this value, run the [List groups](ref:get-groups) operation.\n",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 12345
        }
      },
      "auth-grants-query": {
        "name": "authGrants",
        "in": "query",
        "description": "Includes the list of your group and role assignments, `false` by default.\n",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "admin-actions-actions": {
        "name": "actions",
        "in": "query",
        "description": "Includes actions such as `edit` or `delete` that a user can perform on an object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "send-email-send-email": {
        "name": "sendEmail",
        "in": "query",
        "description": "Sends a one-time password to the new user, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "ui-identity-id-path": {
        "name": "uiIdentityId",
        "in": "path",
        "description": "Unique identifier for each user. To get this value, run the [List users](ref:get-ui-identities) operation.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "1-ABCDE"
        }
      },
      "notifications-query": {
        "name": "notifications",
        "in": "query",
        "description": "Includes product notifications you subscribe to, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "group-id-path": {
        "name": "groupId",
        "in": "path",
        "description": "Unique identifier for each group. To get this value, run the [List groups](ref:get-groups) operation.\n",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 54321
        }
      },
      "action-query": {
        "name": "action",
        "in": "query",
        "description": "Includes actions you can perform for 2FA on your profile, either `enable`, `disable`, or `reset`. Don't confuse this with the `actions` parameter, which applies to the various operations that get user data.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "enable",
          "enum": [
            "enable",
            "disable",
            "reset"
          ]
        }
      }
    },
    "schemas": {
      "groups-nested": {
        "type": "object",
        "description": "A further-nested group.\n"
      },
      "auth-grant-response": {
        "type": "object",
        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
        "additionalProperties": false,
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "A unique identifier for each group.\n"
          },
          "roleId": {
            "type": "integer",
            "description": "A unique identifier for each role.\n"
          },
          "groupName": {
            "type": "string",
            "description": "A group's name.\n"
          },
          "roleName": {
            "type": "string",
            "description": "The role's name.\n"
          },
          "roleDescription": {
            "type": "string",
            "description": "Descriptive text for the role.\n"
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Indicates whether a user's access is blocked for a group.\n"
          },
          "subGroups": {
            "type": "array",
            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
            "items": {
              "type": "object",
              "description": "A further-nested group.\n"
            }
          }
        }
      },
      "ui-identities-response": {
        "type": "object",
        "description": "Encapsulates information about each user.\n",
        "additionalProperties": false,
        "required": [
          "uiIdentityId",
          "firstName",
          "lastName",
          "uiUserName",
          "email",
          "accountId",
          "additionalAuthentication",
          "additionalAuthenticationConfigured",
          "isLocked",
          "tfaEnabled",
          "tfaConfigured"
        ],
        "properties": {
          "uiIdentityId": {
            "type": "string",
            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname.\n",
            "minLength": 1
          },
          "lastLoginDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
            "format": "date-time"
          },
          "uiUserName": {
            "type": "string",
            "description": "The user's username in Control Center.\n",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The user's email address.\n",
            "format": "email"
          },
          "tfaEnabled": {
            "type": "boolean",
            "description": "Whether TFA is enabled.\n"
          },
          "tfaConfigured": {
            "type": "boolean",
            "description": "Whether TFA is configured.\n"
          },
          "accountId": {
            "type": "string",
            "description": "Unique identifier for each account.\n",
            "minLength": 1
          },
          "additionalAuthentication": {
            "type": "string",
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ]
          },
          "additionalAuthenticationConfigured": {
            "type": "boolean",
            "description": "Whether the user has multi-factor authentication configured.\n"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
          },
          "authGrants": {
            "type": "array",
            "description": "A user's role assignments, per group. \n",
            "minItems": 1,
            "items": {
              "type": "object",
              "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
              "additionalProperties": false,
              "properties": {
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "roleName": {
                  "type": "string",
                  "description": "The role's name.\n"
                },
                "roleDescription": {
                  "type": "string",
                  "description": "Descriptive text for the role.\n"
                },
                "isBlocked": {
                  "type": "boolean",
                  "description": "Indicates whether a user's access is blocked for a group.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                  "items": {
                    "type": "object",
                    "description": "A further-nested group.\n"
                  }
                }
              }
            }
          },
          "actions": {
            "type": "object",
            "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "additionalProperties": false,
            "required": [
              "delete",
              "edit",
              "resetPassword",
              "isCloneable",
              "thirdPartyAccess",
              "apiClient",
              "editProfile",
              "canEditTFA"
            ],
            "properties": {
              "delete": {
                "type": "boolean",
                "description": "Whether the user is deletable.\n"
              },
              "edit": {
                "type": "boolean",
                "description": "Whether the user is editable.\n"
              },
              "resetPassword": {
                "type": "boolean",
                "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
              },
              "isCloneable": {
                "type": "boolean",
                "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
              },
              "thirdPartyAccess": {
                "type": "boolean",
                "description": "Enables the administrator to manage extended access.\n"
              },
              "apiClient": {
                "type": "boolean",
                "description": "Enables the administrator to create an API client.\n"
              },
              "editProfile": {
                "type": "boolean",
                "description": "With a `true` value, the user can edit their user profile.\n"
              },
              "canEditTFA": {
                "type": "boolean",
                "description": "With a `true` value, the user can turn their TFA setting on or off.\n"
              },
              "canEditMFA": {
                "type": "boolean",
                "description": "With a `true` value, the user can turn their MFA setting on or off.\n"
              },
              "canEditNone": {
                "type": "boolean",
                "description": "With a `true` value, the user can turn their None setting on or off.\n"
              }
            }
          }
        }
      },
      "list-of-user-response": {
        "type": "array",
        "description": "Encapsulates information about each user.\n",
        "items": {
          "type": "object",
          "description": "Encapsulates information about each user.\n",
          "additionalProperties": false,
          "required": [
            "uiIdentityId",
            "firstName",
            "lastName",
            "uiUserName",
            "email",
            "accountId",
            "additionalAuthentication",
            "additionalAuthenticationConfigured",
            "isLocked",
            "tfaEnabled",
            "tfaConfigured"
          ],
          "properties": {
            "uiIdentityId": {
              "type": "string",
              "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
              "minLength": 1
            },
            "firstName": {
              "type": "string",
              "description": "The user's first name.\n",
              "minLength": 1
            },
            "lastName": {
              "type": "string",
              "description": "The user's surname.\n",
              "minLength": 1
            },
            "lastLoginDate": {
              "type": "string",
              "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
              "format": "date-time"
            },
            "uiUserName": {
              "type": "string",
              "description": "The user's username in Control Center.\n",
              "minLength": 1
            },
            "email": {
              "type": "string",
              "description": "The user's email address.\n",
              "format": "email"
            },
            "tfaEnabled": {
              "type": "boolean",
              "description": "Whether TFA is enabled.\n"
            },
            "tfaConfigured": {
              "type": "boolean",
              "description": "Whether TFA is configured.\n"
            },
            "accountId": {
              "type": "string",
              "description": "Unique identifier for each account.\n",
              "minLength": 1
            },
            "additionalAuthentication": {
              "type": "string",
              "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
              "enum": [
                "TFA",
                "MFA",
                "NONE"
              ]
            },
            "additionalAuthenticationConfigured": {
              "type": "boolean",
              "description": "Whether the user has multi-factor authentication configured.\n"
            },
            "isLocked": {
              "type": "boolean",
              "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
            },
            "authGrants": {
              "type": "array",
              "description": "A user's role assignments, per group. \n",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                "additionalProperties": false,
                "properties": {
                  "groupId": {
                    "type": "integer",
                    "description": "A unique identifier for each group.\n"
                  },
                  "roleId": {
                    "type": "integer",
                    "description": "A unique identifier for each role.\n"
                  },
                  "groupName": {
                    "type": "string",
                    "description": "A group's name.\n"
                  },
                  "roleName": {
                    "type": "string",
                    "description": "The role's name.\n"
                  },
                  "roleDescription": {
                    "type": "string",
                    "description": "Descriptive text for the role.\n"
                  },
                  "isBlocked": {
                    "type": "boolean",
                    "description": "Indicates whether a user's access is blocked for a group.\n"
                  },
                  "subGroups": {
                    "type": "array",
                    "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                    "items": {
                      "type": "object",
                      "description": "A further-nested group.\n"
                    }
                  }
                }
              }
            },
            "actions": {
              "type": "object",
              "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
              "additionalProperties": false,
              "required": [
                "delete",
                "edit",
                "resetPassword",
                "isCloneable",
                "thirdPartyAccess",
                "apiClient",
                "editProfile",
                "canEditTFA"
              ],
              "properties": {
                "delete": {
                  "type": "boolean",
                  "description": "Whether the user is deletable.\n"
                },
                "edit": {
                  "type": "boolean",
                  "description": "Whether the user is editable.\n"
                },
                "resetPassword": {
                  "type": "boolean",
                  "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                },
                "isCloneable": {
                  "type": "boolean",
                  "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                },
                "thirdPartyAccess": {
                  "type": "boolean",
                  "description": "Enables the administrator to manage extended access.\n"
                },
                "apiClient": {
                  "type": "boolean",
                  "description": "Enables the administrator to create an API client.\n"
                },
                "editProfile": {
                  "type": "boolean",
                  "description": "With a `true` value, the user can edit their user profile.\n"
                },
                "canEditTFA": {
                  "type": "boolean",
                  "description": "With a `true` value, the user can turn their TFA setting on or off.\n"
                },
                "canEditMFA": {
                  "type": "boolean",
                  "description": "With a `true` value, the user can turn their MFA setting on or off.\n"
                },
                "canEditNone": {
                  "type": "boolean",
                  "description": "With a `true` value, the user can turn their None setting on or off.\n"
                }
              }
            }
          }
        }
      },
      "auth-grant-request-nested": {
        "type": "object",
        "description": "A further nested authorization grant.\n"
      },
      "AuthGrantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isBlocked": {
            "type": "boolean",
            "description": "Indicates whether a user's access to a group is blocked.\n"
          },
          "roleId": {
            "type": "integer",
            "description": "A unique identifier for each role.\n"
          },
          "groupId": {
            "type": "integer",
            "description": "A unique identifier for each group.\n"
          },
          "groupName": {
            "type": "string",
            "description": "A group's name.\n"
          },
          "subGroups": {
            "type": "array",
            "description": "Array of nested groups.\n",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "isBlocked": {
                  "type": "boolean",
                  "description": "Indicates whether a user's access to a group is blocked.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Array of nested groups.\n",
                  "items": {
                    "type": "object",
                    "description": "A further nested authorization grant.\n"
                  }
                }
              }
            }
          }
        }
      },
      "auth-grant-request": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isBlocked": {
            "type": "boolean",
            "description": "Indicates whether a user's access to a group is blocked.\n"
          },
          "roleId": {
            "type": "integer",
            "description": "A unique identifier for each role.\n"
          },
          "groupId": {
            "type": "integer",
            "description": "A unique identifier for each group.\n"
          },
          "groupName": {
            "type": "string",
            "description": "A group's name.\n"
          },
          "roleName": {
            "type": "string",
            "description": "The role's name.\n"
          },
          "roleDescription": {
            "type": "string",
            "description": "Descriptive text for the role.\n"
          },
          "subGroups": {
            "type": "array",
            "description": "Array of nested groups.\n",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "isBlocked": {
                  "type": "boolean",
                  "description": "Indicates whether a user's access to a group is blocked.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Array of nested groups.\n",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "isBlocked": {
                        "type": "boolean",
                        "description": "Indicates whether a user's access to a group is blocked.\n"
                      },
                      "roleId": {
                        "type": "integer",
                        "description": "A unique identifier for each role.\n"
                      },
                      "groupId": {
                        "type": "integer",
                        "description": "A unique identifier for each group.\n"
                      },
                      "groupName": {
                        "type": "string",
                        "description": "A group's name.\n"
                      },
                      "subGroups": {
                        "type": "array",
                        "description": "Array of nested groups.\n",
                        "items": {
                          "type": "object",
                          "description": "A further nested authorization grant.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "create-user-request": {
        "type": "object",
        "description": "Specifies a user.\n",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "country",
          "authGrants"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n"
          },
          "lastName": {
            "type": "string",
            "description": "The user's last name.\n"
          },
          "email": {
            "type": "string",
            "description": "The user's email address.\n",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "The user's main phone number, represented as a ten-digit integer within a string.\n"
          },
          "timezone": {
            "type": "string",
            "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n"
          },
          "tfaEnabled": {
            "type": "boolean",
            "description": "When enabled, two-factor authentication confirms the user's identity.\n"
          },
          "country": {
            "type": "string",
            "description": "Part of the user's location. This can be any value available from the [View supported countries](ref:get-common-countries) operation.\n"
          },
          "contactType": {
            "type": "string",
            "description": "To help characterize the user, this can be any value available from the [View contact](ref:get-common-contact-types) types operation.\n"
          },
          "timeZone": {
            "type": "string",
            "description": "The user's time zone. The value can be any that are available from the [View time zones](ref:get-common-timezones) operation.\n"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "This can be any value available from the [View languages](ref:get-common-languages) operation.\n"
          },
          "sessionTimeOut": {
            "type": "integer",
            "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity. This corresponds to the value from the [View timeout policies](ref:get-common-timeout-policies) operation's response.\n"
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The user's alternate email address.\n",
            "format": "email"
          },
          "mobilePhone": {
            "type": "string",
            "description": "The user's mobile phone number, represented as a 10-digit integer within a string.\n"
          },
          "address": {
            "type": "string",
            "description": "The user's street address.\n"
          },
          "city": {
            "type": "string",
            "description": "The user's city.\n"
          },
          "state": {
            "type": "string",
            "description": "The name of the state where the user is located.\n"
          },
          "zipCode": {
            "type": "string",
            "description": "The user's five-digit ZIP code, represented as a string.\n"
          },
          "jobTitle": {
            "type": "string",
            "description": "The user's job title.\n"
          },
          "cloneFrom": {
            "type": "string",
            "description": "The username to clone a user's `authGrants` from. If you provide this member in a POST request, don't include the `authGrants` member in the request too.\n"
          },
          "authGrants": {
            "type": "array",
            "description": "The user's role assignments, per group.\n",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "isBlocked": {
                  "type": "boolean",
                  "description": "Indicates whether a user's access to a group is blocked.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "roleName": {
                  "type": "string",
                  "description": "The role's name.\n"
                },
                "roleDescription": {
                  "type": "string",
                  "description": "Descriptive text for the role.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Array of nested groups.\n",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "isBlocked": {
                        "type": "boolean",
                        "description": "Indicates whether a user's access to a group is blocked.\n"
                      },
                      "roleId": {
                        "type": "integer",
                        "description": "A unique identifier for each role.\n"
                      },
                      "groupId": {
                        "type": "integer",
                        "description": "A unique identifier for each group.\n"
                      },
                      "groupName": {
                        "type": "string",
                        "description": "A group's name.\n"
                      },
                      "subGroups": {
                        "type": "array",
                        "description": "Array of nested groups.\n",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "isBlocked": {
                              "type": "boolean",
                              "description": "Indicates whether a user's access to a group is blocked.\n"
                            },
                            "roleId": {
                              "type": "integer",
                              "description": "A unique identifier for each role.\n"
                            },
                            "groupId": {
                              "type": "integer",
                              "description": "A unique identifier for each group.\n"
                            },
                            "groupName": {
                              "type": "string",
                              "description": "A group's name.\n"
                            },
                            "subGroups": {
                              "type": "array",
                              "description": "Array of nested groups.\n",
                              "items": {
                                "type": "object",
                                "description": "A further nested authorization grant.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "notifications": {
            "type": "object",
            "description": "Emails the user can receive for their products.\n",
            "additionalProperties": false,
            "properties": {
              "options": {
                "type": "object",
                "description": "Email settings.\n",
                "additionalProperties": false,
                "properties": {
                  "upgrade": {
                    "type": "array",
                    "description": "Email notifications for upgrades to products.\n",
                    "items": {
                      "type": "string",
                      "description": "Product names.\n"
                    }
                  },
                  "proactive": {
                    "type": "array",
                    "description": "Email notifications for proactive maintenance to products.\n",
                    "items": {
                      "type": "string",
                      "description": "Product names.\n"
                    }
                  },
                  "passwordExpiry": {
                    "type": "boolean",
                    "description": "Email notifications for password expirations.\n"
                  },
                  "newUserNotification": {
                    "type": "boolean",
                    "description": "Email notification for new user creation.\n"
                  }
                }
              },
              "enableEmailNotifications": {
                "type": "boolean",
                "description": "Enables email notifications.\n"
              }
            }
          }
        }
      },
      "user-response": {
        "type": "object",
        "description": "Encapsulates information about each user.\n",
        "additionalProperties": false,
        "required": [
          "uiIdentityId",
          "firstName",
          "lastName",
          "email",
          "additionalAuthentication",
          "country",
          "address",
          "timeZone",
          "additionalAuthenticationConfigured"
        ],
        "properties": {
          "notifications": {
            "type": "object",
            "description": "Specifies email notifications the user receives for products.\n",
            "additionalProperties": false,
            "required": [
              "options",
              "enableEmailNotifications"
            ],
            "properties": {
              "options": {
                "type": "object",
                "description": "Specifies email notifications settings.\n",
                "additionalProperties": false,
                "required": [
                  "upgrade",
                  "proactive",
                  "passwordExpiry",
                  "newUserNotification",
                  "apiClientCredentialExpiryNotification"
                ],
                "properties": {
                  "upgrade": {
                    "type": "array",
                    "description": "Products for which the user receives notifications for upgrades.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "proactive": {
                    "type": "array",
                    "description": "Products for which the user gets notifications for service issues.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "passwordExpiry": {
                    "type": "boolean",
                    "description": "Whether the user gets notifications for password expiration.\n"
                  },
                  "newUserNotification": {
                    "type": "boolean",
                    "description": "Whether group administrators get notifications when the user creates other new users.\n"
                  },
                  "apiClientCredentialExpiryNotification": {
                    "type": "boolean",
                    "description": "Whether the user gets notifications for expiring API client credentials.\n"
                  }
                }
              },
              "enableEmailNotifications": {
                "type": "boolean",
                "description": "Enables email notifications.\n"
              }
            }
          },
          "city": {
            "type": "string",
            "description": "The user's city.\n",
            "minLength": 1
          },
          "accountId": {
            "type": "string",
            "description": "Unique identifier for each account.\n",
            "minLength": 1
          },
          "contactType": {
            "type": "string",
            "description": "User's contact type.\n",
            "minLength": 1
          },
          "country": {
            "type": "string",
            "description": "User's country.\n",
            "minLength": 1
          },
          "jobTitle": {
            "type": "string",
            "description": "The user's position at the company.\n",
            "minLength": 1
          },
          "lastLoginDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
            "format": "date-time"
          },
          "tfaEnabled": {
            "type": "boolean",
            "description": "Whether TFA is enabled.\n"
          },
          "tfaConfigured": {
            "type": "boolean",
            "description": "Whether TFA is configured.\n"
          },
          "additionalAuthentication": {
            "type": "string",
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ]
          },
          "additionalAuthenticationConfigured": {
            "type": "boolean",
            "description": "Whether the user has multi-factor authentication configured.\n"
          },
          "emailUpdatePending": {
            "type": "boolean",
            "description": "Whether there are any pending changes to the email address.\n"
          },
          "mobilePhone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
            "minLength": 1
          },
          "passwordExpiryDate": {
            "type": "string",
            "description": "The date a user's password expires.\n",
            "format": "date-time"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The user's language.\n",
            "minLength": 1
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The user's alternate email address.\n",
            "format": "email"
          },
          "sessionTimeOut": {
            "type": "integer",
            "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
            "minimum": 0
          },
          "state": {
            "type": "string",
            "description": "The user's state or province if user's country is USA or Canada.\n",
            "minLength": 1
          },
          "address": {
            "type": "string",
            "description": "The user's street address.\n",
            "minLength": 1
          },
          "zipCode": {
            "type": "string",
            "description": "The user's five-digit postal code, represented as a string.\n",
            "minLength": 1
          },
          "uiIdentityId": {
            "type": "string",
            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname.\n",
            "minLength": 1
          },
          "uiUserName": {
            "type": "string",
            "description": "The user's username in Control Center.\n",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The user's email address.\n",
            "format": "email"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
          },
          "phone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
            "minLength": 1
          },
          "timeZone": {
            "type": "string",
            "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
            "minLength": 1
          },
          "authGrants": {
            "type": "array",
            "description": "A user's role assignments, per group.\n",
            "minItems": 0,
            "items": {
              "type": "object",
              "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
              "additionalProperties": false,
              "properties": {
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "roleName": {
                  "type": "string",
                  "description": "The role's name.\n"
                },
                "roleDescription": {
                  "type": "string",
                  "description": "Descriptive text for the role.\n"
                },
                "isBlocked": {
                  "type": "boolean",
                  "description": "Indicates whether a user's access is blocked for a group.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                  "items": {
                    "type": "object",
                    "description": "A further-nested group.\n"
                  }
                }
              }
            }
          },
          "actions": {
            "type": "object",
            "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "additionalProperties": false,
            "required": [
              "delete",
              "edit",
              "resetPassword",
              "isCloneable",
              "thirdPartyAccess",
              "apiClient"
            ],
            "properties": {
              "delete": {
                "type": "boolean",
                "description": "Whether the user is deletable.\n"
              },
              "edit": {
                "type": "boolean",
                "description": "Whether the user is editable.\n"
              },
              "resetPassword": {
                "type": "boolean",
                "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
              },
              "isCloneable": {
                "type": "boolean",
                "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
              },
              "thirdPartyAccess": {
                "type": "boolean",
                "description": "Enables the administrator to manage extended access.\n"
              },
              "apiClient": {
                "type": "boolean",
                "description": "Enables the administrator to create an API client.\n"
              }
            }
          }
        }
      },
      "list-of-auth-grant-request": {
        "type": "array",
        "description": "Indicates new assignments.\n",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "isBlocked": {
              "type": "boolean",
              "description": "Indicates whether a user's access to a group is blocked.\n"
            },
            "roleId": {
              "type": "integer",
              "description": "A unique identifier for each role.\n"
            },
            "groupId": {
              "type": "integer",
              "description": "A unique identifier for each group.\n"
            },
            "groupName": {
              "type": "string",
              "description": "A group's name.\n"
            },
            "roleName": {
              "type": "string",
              "description": "The role's name.\n"
            },
            "roleDescription": {
              "type": "string",
              "description": "Descriptive text for the role.\n"
            },
            "subGroups": {
              "type": "array",
              "description": "Array of nested groups.\n",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "isBlocked": {
                    "type": "boolean",
                    "description": "Indicates whether a user's access to a group is blocked.\n"
                  },
                  "roleId": {
                    "type": "integer",
                    "description": "A unique identifier for each role.\n"
                  },
                  "groupId": {
                    "type": "integer",
                    "description": "A unique identifier for each group.\n"
                  },
                  "groupName": {
                    "type": "string",
                    "description": "A group's name.\n"
                  },
                  "subGroups": {
                    "type": "array",
                    "description": "Array of nested groups.\n",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "isBlocked": {
                          "type": "boolean",
                          "description": "Indicates whether a user's access to a group is blocked.\n"
                        },
                        "roleId": {
                          "type": "integer",
                          "description": "A unique identifier for each role.\n"
                        },
                        "groupId": {
                          "type": "integer",
                          "description": "A unique identifier for each group.\n"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "A group's name.\n"
                        },
                        "subGroups": {
                          "type": "array",
                          "description": "Array of nested groups.\n",
                          "items": {
                            "type": "object",
                            "description": "A further nested authorization grant.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "list-of-auth-grant-response": {
        "type": "array",
        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
        "items": {
          "type": "object",
          "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
          "additionalProperties": false,
          "properties": {
            "groupId": {
              "type": "integer",
              "description": "A unique identifier for each group.\n"
            },
            "roleId": {
              "type": "integer",
              "description": "A unique identifier for each role.\n"
            },
            "groupName": {
              "type": "string",
              "description": "A group's name.\n"
            },
            "roleName": {
              "type": "string",
              "description": "The role's name.\n"
            },
            "roleDescription": {
              "type": "string",
              "description": "Descriptive text for the role.\n"
            },
            "isBlocked": {
              "type": "boolean",
              "description": "Indicates whether a user's access is blocked for a group.\n"
            },
            "subGroups": {
              "type": "array",
              "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
              "items": {
                "type": "object",
                "description": "A further-nested group.\n"
              }
            }
          }
        }
      },
      "update-user-basic-info-request": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "country",
          "preferredLanguage",
          "sessionTimeOut",
          "timeZone"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "The user's street address.\n",
            "minLength": 1
          },
          "city": {
            "type": "string",
            "description": "The user's city.\n",
            "minLength": 1
          },
          "contactType": {
            "type": "string",
            "description": "User's contact type. To get the available values, run the [View contact types](ref:get-common-contact-types) operation.\n",
            "minLength": 1
          },
          "country": {
            "type": "string",
            "description": "User's country. To get the available values, run the [View supported countries](ref:get-common-countries) operation.\n",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).\n",
            "format": "email"
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n",
            "minLength": 1,
            "maxLength": 50
          },
          "jobTitle": {
            "type": "string",
            "description": "The user's position at the company.\n",
            "minLength": 1,
            "maxLength": 75
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname.\n",
            "minLength": 1,
            "maxLength": 50
          },
          "mobilePhone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
            "minLength": 1
          },
          "phone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
            "minLength": 1
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The user's language. To get the available values, run the [View languages](ref:get-common-languages) operation.\n",
            "minLength": 1
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The user's alternate email address.\n",
            "format": "email"
          },
          "sessionTimeOut": {
            "type": "integer",
            "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](ref:get-common-timeout-policies) operation if you're an administrator or [View timeout policies for a user profile](ref:get-user-timeout-policies) operation if you're the account's user. Make sure to select a value that's equal or smaller to the **Max session timeout** value, set for your account in the Identity and Access Management interface's [Settings](https://techdocs.akamai.com/iam/docs/account-settings) tab.\n",
            "minimum": 0
          },
          "state": {
            "type": "string",
            "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](ref:get-user-states) operation.\n",
            "minLength": 1
          },
          "additionalAuthentication": {
            "type": "string",
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ]
          },
          "timeZone": {
            "type": "string",
            "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
            "minLength": 1
          },
          "zipCode": {
            "type": "string",
            "description": "The user's five-digit postal code, represented as a string.\n",
            "minLength": 1
          }
        }
      },
      "list-of-integer": {
        "type": "array",
        "description": "Lists unique identifiers of resources.\n",
        "items": {
          "type": "integer",
          "description": "Unique identifier of a resource.\n"
        }
      },
      "notifications-request": {
        "description": "Encapsulates the types of email notifications you can receive.\n",
        "additionalProperties": false,
        "required": [
          "enableEmailNotifications",
          "options"
        ],
        "properties": {
          "options": {
            "type": "object",
            "description": "Specifies email notifications settings.\n",
            "additionalProperties": false,
            "required": [
              "passwordExpiry",
              "proactive",
              "upgrade"
            ],
            "properties": {
              "newUserNotification": {
                "type": "boolean",
                "description": "Enables notifications for group administrators when the user creates other new users.\n"
              },
              "passwordExpiry": {
                "type": "boolean",
                "description": "Enables notifications for expiring passwords.\n"
              },
              "proactive": {
                "type": "array",
                "description": "Products for which the user gets notifications for service issues.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "upgrade": {
                "type": "array",
                "description": "Products for which the user receives notifications for upgrades.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "apiClientCredentialExpiryNotification": {
                "type": "boolean",
                "description": "Enables notifications for expiring API client credentials.\n"
              }
            }
          },
          "enableEmailNotifications": {
            "type": "boolean",
            "description": "Enables email notifications.\n"
          }
        }
      },
      "notifications-response": {
        "type": "object",
        "description": "Encapsulates the types of email notifications you can receive.\n",
        "additionalProperties": false,
        "required": [
          "options",
          "enableEmailNotifications"
        ],
        "properties": {
          "options": {
            "type": "object",
            "description": "Specifies email notifications settings.\n",
            "additionalProperties": false,
            "required": [
              "newUserNotification",
              "passwordExpiry",
              "proactive",
              "upgrade",
              "apiClientCredentialExpiryNotification"
            ],
            "properties": {
              "newUserNotification": {
                "type": "boolean",
                "description": "Whether group administrators get notifications when the user creates other new users.\n"
              },
              "apiClientCredentialExpiryNotification": {
                "type": "boolean",
                "description": "Whether the user gets notifications for expiring API client credentials.\n"
              },
              "passwordExpiry": {
                "type": "boolean",
                "description": "Whether the user gets notifications for password expiration.\n"
              },
              "proactive": {
                "type": "array",
                "description": "Products for which the user gets notifications for service issues.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "upgrade": {
                "type": "array",
                "description": "Products for which the user receives notifications for upgrades.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "enableEmailNotifications": {
            "type": "boolean",
            "description": "Enables email notifications.\n"
          }
        }
      },
      "password-response": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "newPassword"
        ],
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "New password.\n",
            "minLength": 1
          }
        }
      },
      "set-password-request": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "newPassword"
        ],
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "New password.\n",
            "minLength": 1
          }
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID"
  }
}