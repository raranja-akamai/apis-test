{
  "openapi": "3.0.0",
  "info": {
    "title": "Properties",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v2"
    }
  ],
  "paths": {
    "/user-admin/properties": {
      "x-akamai": {
        "path-info": "/user-admin/properties"
      },
      "get": {
        "operationId": "get-properties",
        "summary": "List properties",
        "tags": [
          "Properties"
        ],
        "description": "Return a list of properties for an account. Include the `groupId` parameter in your request to filter the results by group.\n",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "description": "A unique identifier for each group.\n",
            "schema": {
              "type": "integer",
              "example": 32145
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists properties.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "groupName": "Internet Company",
                    "groupId": 32145,
                    "propertyId": 99999999,
                    "propertyTypeDescription": "On Demand Media",
                    "propertyName": "0rb-internet-company-01.com",
                    "actions": {
                      "move": true
                    }
                  },
                  {
                    "groupName": "Digital Company",
                    "groupId": 12345,
                    "propertyId": 88888888,
                    "propertyTypeDescription": "On Demand Media",
                    "propertyName": "0rb-digital-company-01.com",
                    "actions": {
                      "move": true
                    }
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Encapsulates information about a property.\n",
                  "items": {
                    "type": "object",
                    "description": "Encapsulates information about an asset.\n",
                    "additionalProperties": false,
                    "required": [
                      "propertyId",
                      "groupId",
                      "groupName",
                      "propertyName",
                      "propertyTypeDescription"
                    ],
                    "properties": {
                      "propertyId": {
                        "type": "integer",
                        "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there’s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
                        "minimum": 0
                      },
                      "propertyName": {
                        "type": "string",
                        "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
                        "minLength": 1
                      },
                      "propertyTypeDescription": {
                        "type": "string",
                        "description": "Identifies the product-type such as `On Demand Media`, `Site`, `Application`, `Live Media Streams`, or `NetStorage`.\n",
                        "minLength": 1
                      },
                      "groupId": {
                        "type": "integer",
                        "description": "Unique identifier for each group. It filters down results to properties in the specified group.\n",
                        "minimum": 0
                      },
                      "groupName": {
                        "type": "string",
                        "description": "Descriptive label for the group.\n",
                        "minLength": 1
                      },
                      "actions": {
                        "type": "object",
                        "description": "Specifies activities available for the group.\n",
                        "additionalProperties": false,
                        "required": [
                          "move"
                        ],
                        "properties": {
                          "move": {
                            "type": "boolean",
                            "description": "Whether you can move a asset from one group to another group.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/properties/{propertyId}": {
      "x-akamai": {
        "path-info": "/user-admin/properties/{propertyId}"
      },
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "A unique identifier for each property.\n",
          "required": true,
          "schema": {
            "type": "integer",
            "example": 9678999
          }
        }
      ],
      "get": {
        "operationId": "get-property",
        "summary": "Get a property",
        "tags": [
          "Properties"
        ],
        "description": "Get information about a property.\n",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "description": "A unique identifier for each group.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 32145
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns the property.\n",
            "content": {
              "application/json": {
                "example": {
                  "createdDate": "2017-07-27T18:11:25.000Z",
                  "createdBy": "mrossi@example.com",
                  "modifiedDate": "2017-07-27T18:11:25.000Z",
                  "modifiedBy": "alfulani@example.com",
                  "groupName": "Sales Team",
                  "groupId": 32145,
                  "arlConfigFile": "abc-dn123-abcde.akamaiorigin.net.xml",
                  "propertyId": 9678999,
                  "propertyName": "abc-dn123-abcde.akamaiorigin.net"
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates information about an asset.\n",
                  "additionalProperties": false,
                  "required": [
                    "createdDate",
                    "createdBy",
                    "modifiedDate",
                    "modifiedBy",
                    "groupName",
                    "groupId",
                    "arlConfigFile",
                    "propertyId",
                    "propertyName"
                  ],
                  "properties": {
                    "arlConfigFile": {
                      "type": "string",
                      "description": "An ARL (Akamai resource locator) configuration file, specifying versions of an object you can't purge using the URL. The `arlConfigFile` is the same as the `propertyName` with an `xml` extension.\n",
                      "minLength": 1
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The user who created the asset.\n",
                      "minLength": 1
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the asset was originally created.\n",
                      "format": "date-time"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Unique identifier for each group. It filters down results to properties in the specified group.\n",
                      "minimum": 0
                    },
                    "groupName": {
                      "type": "string",
                      "description": "Descriptive label for the group.\n",
                      "minLength": 1
                    },
                    "modifiedBy": {
                      "type": "string",
                      "description": "The user who last edited the asset.\n",
                      "minLength": 1
                    },
                    "modifiedDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the asset was last updated.\n",
                      "format": "date-time"
                    },
                    "propertyId": {
                      "type": "integer",
                      "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there’s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
                      "minimum": 0
                    },
                    "propertyName": {
                      "type": "string",
                      "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-property",
        "summary": "Move a property",
        "tags": [
          "Properties"
        ],
        "description": "Move a property from one group to another group. You can only move a property into another group within the same group hierarchy. Depending on your role in the destination group, you may lose access to resources the property uses.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "sourceGroupId": 11111,
                "destinationGroupId": 22222
              },
              "schema": {
                "type": "object",
                "description": "Describes the request body for moving a property under another group.\n",
                "additionalProperties": false,
                "required": [
                  "sourceGroupId",
                  "destinationGroupId"
                ],
                "properties": {
                  "destinationGroupId": {
                    "type": "integer",
                    "description": "Identifies the group where you want to move the `sourceGroupId` within the same parent hierarchy. To get this value, run the [List groups](ref:get-groups) operation.\n",
                    "minimum": 0
                  },
                  "sourceGroupId": {
                    "type": "integer",
                    "description": "Identifies the group from which you want to move the asset. To get this value, run the [List properties or includes](ref:get-properties) operation.\n",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Property moved.\n"
          }
        }
      }
    },
    "/user-admin/properties/{propertyId}/resources": {
      "x-akamai": {
        "path-info": "/user-admin/properties/{propertyId}/resources"
      },
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "A unique identifier for each property.\n",
          "required": true,
          "schema": {
            "type": "integer",
            "example": 9678999
          }
        }
      ],
      "get": {
        "operationId": "get-property-resources",
        "summary": "Get a property's resources",
        "tags": [
          "Resources"
        ],
        "description": "List of resources the property uses.\n",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "description": "A unique identifier for each group.\n",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 32145
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns resources.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "resourceId": 111111,
                    "resourceType": "arlfile",
                    "resourceName": "abc-dn123-abcde.akamaiorigin.net.xml",
                    "modifiedDate": "2017-09-07T17:00:58.000Z"
                  },
                  {
                    "resourceId": 8988898,
                    "resourceType": "cpcode",
                    "resourceName": "mycpcodeexample(123456)",
                    "modifiedDate": "2017-04-24T16:19:27.000Z"
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Encapsulates information about resources.\n",
                  "items": {
                    "type": "object",
                    "description": "Encapsulates information about resources.\n",
                    "additionalProperties": false,
                    "required": [
                      "resourceId",
                      "resourceType",
                      "resourceName",
                      "modifiedDate"
                    ],
                    "properties": {
                      "resourceId": {
                        "type": "integer",
                        "description": "Unique identifier for each resource.\n",
                        "minimum": 0
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "Helps to characterize a asset's resource, either `cname`, `arlfile`, `cpcode`, `storagegroup`, `fpdomain`, or `edns`. For more information, see [View property details](https://techdocs.akamai.com/iam/docs/mng-properties).\n",
                        "enum": [
                          "enable",
                          "arlfile",
                          "cpcode",
                          "storagegroup",
                          "fpdomain",
                          "edns"
                        ],
                        "minLength": 1
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Descriptive label for the resource.\n",
                        "minLength": 1
                      },
                      "modifiedDate": {
                        "type": "string",
                        "description": "ISO 8601 timestamp indicating when the resource was last updated.\n",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/properties/{propertyId}/users": {
      "x-akamai": {
        "path-info": "/user-admin/properties/{propertyId}/users"
      },
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "A unique identifier for each property.\n",
          "required": true,
          "schema": {
            "type": "integer",
            "example": 9678999
          }
        }
      ],
      "get": {
        "operationId": "get-property-users",
        "summary": "List users for property",
        "tags": [
          "Users"
        ],
        "description": "List users who can access this property.\n",
        "parameters": [
          {
            "name": "userType",
            "in": "query",
            "description": "Filters the list by users who have `lostAccess` or the reverse `gainAccess`.\n",
            "schema": {
              "type": "string",
              "example": "lostAccess",
              "enum": [
                "lostAccess",
                "gainAccess"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response lists users.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "uiUserName": "aditparikh",
                    "uiIdentityId": "B-3-146FAB9",
                    "firstName": "Media",
                    "lastName": "QA",
                    "isBlocked": true
                  },
                  {
                    "uiUserName": "amoody",
                    "uiIdentityId": "B-C-IP9IND",
                    "firstName": "Bert",
                    "lastName": "Moody",
                    "isBlocked": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Encapsulates all the users of a property by property ID.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "description": "Encapsulates all the users of a property by property ID.\n",
                    "additionalProperties": false,
                    "required": [
                      "uiUserName",
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "isBlocked"
                    ],
                    "properties": {
                      "uiUserName": {
                        "type": "string",
                        "description": "The user's username in Control Center.\n",
                        "minLength": 1
                      },
                      "uiIdentityId": {
                        "type": "string",
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                        "minLength": 1
                      },
                      "firstName": {
                        "type": "string",
                        "description": "The user's first name.\n",
                        "minLength": 1
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The user's surname.\n",
                        "minLength": 1
                      },
                      "isBlocked": {
                        "type": "boolean",
                        "description": "Whether a user's access to an asset is blocked.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-admin/properties/{propertyId}/users/block": {
      "x-akamai": {
        "path-info": "/user-admin/properties/{propertyId}/users/block"
      },
      "parameters": [
        {
          "name": "propertyId",
          "in": "path",
          "description": "A unique identifier for each property.\n",
          "required": true,
          "schema": {
            "type": "integer",
            "example": 9678999
          }
        }
      ],
      "put": {
        "operationId": "put-property-users-block",
        "summary": "Block users",
        "tags": [
          "Users"
        ],
        "description": "Block the list of users on a property.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                {
                  "uiIdentityId": "B-3-146FAB9"
                },
                {
                  "uiIdentityId": "B-C-IP9IND"
                }
              ],
              "schema": {
                "type": "array",
                "description": "This object encapsulates all the users who needs to be blocked based on UI identities.\n",
                "items": {
                  "type": "object",
                  "description": "This object encapsulates all the users who needs to be blocked based on UI identities.\n",
                  "additionalProperties": false,
                  "required": [
                    "uiIdentityId"
                  ],
                  "properties": {
                    "uiIdentityId": {
                      "type": "string",
                      "description": "A unique identifier for a user. Also known as a `contactId` in other APIs.\n",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response lists block users.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "uiUserName": "aditparikh",
                    "uiIdentityId": "B-3-146FAB9",
                    "firstName": "Media",
                    "lastName": "QA",
                    "isBlocked": true
                  },
                  {
                    "uiUserName": "amoody",
                    "uiIdentityId": "B-C-IP9IND",
                    "firstName": "Bert",
                    "lastName": "Moody",
                    "isBlocked": false
                  }
                ],
                "schema": {
                  "type": "array",
                  "description": "Encapsulates all the users of a property by property ID.\n",
                  "minItems": 0,
                  "items": {
                    "type": "object",
                    "description": "Encapsulates all the users of a property by property ID.\n",
                    "additionalProperties": false,
                    "required": [
                      "uiUserName",
                      "uiIdentityId",
                      "firstName",
                      "lastName",
                      "isBlocked"
                    ],
                    "properties": {
                      "uiUserName": {
                        "type": "string",
                        "description": "The user's username in Control Center.\n",
                        "minLength": 1
                      },
                      "uiIdentityId": {
                        "type": "string",
                        "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                        "minLength": 1
                      },
                      "firstName": {
                        "type": "string",
                        "description": "The user's first name.\n",
                        "minLength": 1
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The user's surname.\n",
                        "minLength": 1
                      },
                      "isBlocked": {
                        "type": "boolean",
                        "description": "Whether a user's access to an asset is blocked.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "group-idopt-group-id": {
        "name": "groupId",
        "in": "query",
        "description": "A unique identifier for each group.\n",
        "schema": {
          "type": "integer",
          "example": 32145
        }
      },
      "property-id-path": {
        "name": "propertyId",
        "in": "path",
        "description": "A unique identifier for each property.\n",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 9678999
        }
      },
      "group-idreq-qp-group-id": {
        "name": "groupId",
        "in": "query",
        "description": "A unique identifier for each group.\n",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 32145
        }
      },
      "user-type-query": {
        "name": "userType",
        "in": "query",
        "description": "Filters the list by users who have `lostAccess` or the reverse `gainAccess`.\n",
        "schema": {
          "type": "string",
          "example": "lostAccess",
          "enum": [
            "lostAccess",
            "gainAccess"
          ]
        }
      }
    },
    "schemas": {
      "property-list-item": {
        "type": "object",
        "description": "Encapsulates information about an asset.\n",
        "additionalProperties": false,
        "required": [
          "propertyId",
          "groupId",
          "groupName",
          "propertyName",
          "propertyTypeDescription"
        ],
        "properties": {
          "propertyId": {
            "type": "integer",
            "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there’s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
            "minimum": 0
          },
          "propertyName": {
            "type": "string",
            "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
            "minLength": 1
          },
          "propertyTypeDescription": {
            "type": "string",
            "description": "Identifies the product-type such as `On Demand Media`, `Site`, `Application`, `Live Media Streams`, or `NetStorage`.\n",
            "minLength": 1
          },
          "groupId": {
            "type": "integer",
            "description": "Unique identifier for each group. It filters down results to properties in the specified group.\n",
            "minimum": 0
          },
          "groupName": {
            "type": "string",
            "description": "Descriptive label for the group.\n",
            "minLength": 1
          },
          "actions": {
            "type": "object",
            "description": "Specifies activities available for the group.\n",
            "additionalProperties": false,
            "required": [
              "move"
            ],
            "properties": {
              "move": {
                "type": "boolean",
                "description": "Whether you can move a asset from one group to another group.\n"
              }
            }
          }
        }
      },
      "list-of-property-list-item": {
        "type": "array",
        "description": "Encapsulates information about a property.\n",
        "items": {
          "type": "object",
          "description": "Encapsulates information about an asset.\n",
          "additionalProperties": false,
          "required": [
            "propertyId",
            "groupId",
            "groupName",
            "propertyName",
            "propertyTypeDescription"
          ],
          "properties": {
            "propertyId": {
              "type": "integer",
              "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there’s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
              "minimum": 0
            },
            "propertyName": {
              "type": "string",
              "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
              "minLength": 1
            },
            "propertyTypeDescription": {
              "type": "string",
              "description": "Identifies the product-type such as `On Demand Media`, `Site`, `Application`, `Live Media Streams`, or `NetStorage`.\n",
              "minLength": 1
            },
            "groupId": {
              "type": "integer",
              "description": "Unique identifier for each group. It filters down results to properties in the specified group.\n",
              "minimum": 0
            },
            "groupName": {
              "type": "string",
              "description": "Descriptive label for the group.\n",
              "minLength": 1
            },
            "actions": {
              "type": "object",
              "description": "Specifies activities available for the group.\n",
              "additionalProperties": false,
              "required": [
                "move"
              ],
              "properties": {
                "move": {
                  "type": "boolean",
                  "description": "Whether you can move a asset from one group to another group.\n"
                }
              }
            }
          }
        }
      },
      "property-response": {
        "type": "object",
        "description": "Encapsulates information about an asset.\n",
        "additionalProperties": false,
        "required": [
          "createdDate",
          "createdBy",
          "modifiedDate",
          "modifiedBy",
          "groupName",
          "groupId",
          "arlConfigFile",
          "propertyId",
          "propertyName"
        ],
        "properties": {
          "arlConfigFile": {
            "type": "string",
            "description": "An ARL (Akamai resource locator) configuration file, specifying versions of an object you can't purge using the URL. The `arlConfigFile` is the same as the `propertyName` with an `xml` extension.\n",
            "minLength": 1
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the asset.\n",
            "minLength": 1
          },
          "createdDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the asset was originally created.\n",
            "format": "date-time"
          },
          "groupId": {
            "type": "integer",
            "description": "Unique identifier for each group. It filters down results to properties in the specified group.\n",
            "minimum": 0
          },
          "groupName": {
            "type": "string",
            "description": "Descriptive label for the group.\n",
            "minLength": 1
          },
          "modifiedBy": {
            "type": "string",
            "description": "The user who last edited the asset.\n",
            "minLength": 1
          },
          "modifiedDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the asset was last updated.\n",
            "format": "date-time"
          },
          "propertyId": {
            "type": "integer",
            "description": "Unique identifier for a property or include. This is what [PAPI](https://techdocs.akamai.com/property-mgr/reference/get-properties) refers to as an `assetId`. Note there’s a discrepancy between how PAPI and Identity and Access Management refer to `propertyId` values. To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
            "minimum": 0
          },
          "propertyName": {
            "type": "string",
            "description": "Name of the property [created in PAPI](https://techdocs.akamai.com/property-mgr/reference/post-properties), or the `includeName` when [creating an include](https://techdocs.akamai.com/property-mgr/reference/post-includes). To learn more, see [Manage access to properties and includes](ref:manage-access-to-properties-and-includes).\n",
            "minLength": 1
          }
        }
      },
      "move-property-request": {
        "type": "object",
        "description": "Describes the request body for moving a property under another group.\n",
        "additionalProperties": false,
        "required": [
          "sourceGroupId",
          "destinationGroupId"
        ],
        "properties": {
          "destinationGroupId": {
            "type": "integer",
            "description": "Identifies the group where you want to move the `sourceGroupId` within the same parent hierarchy. To get this value, run the [List groups](ref:get-groups) operation.\n",
            "minimum": 0
          },
          "sourceGroupId": {
            "type": "integer",
            "description": "Identifies the group from which you want to move the asset. To get this value, run the [List properties or includes](ref:get-properties) operation.\n",
            "minimum": 0
          }
        }
      },
      "resource-item": {
        "type": "object",
        "description": "Encapsulates information about resources.\n",
        "additionalProperties": false,
        "required": [
          "resourceId",
          "resourceType",
          "resourceName",
          "modifiedDate"
        ],
        "properties": {
          "resourceId": {
            "type": "integer",
            "description": "Unique identifier for each resource.\n",
            "minimum": 0
          },
          "resourceType": {
            "type": "string",
            "description": "Helps to characterize a asset's resource, either `cname`, `arlfile`, `cpcode`, `storagegroup`, `fpdomain`, or `edns`. For more information, see [View property details](https://techdocs.akamai.com/iam/docs/mng-properties).\n",
            "enum": [
              "enable",
              "arlfile",
              "cpcode",
              "storagegroup",
              "fpdomain",
              "edns"
            ],
            "minLength": 1
          },
          "resourceName": {
            "type": "string",
            "description": "Descriptive label for the resource.\n",
            "minLength": 1
          },
          "modifiedDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the resource was last updated.\n",
            "format": "date-time"
          }
        }
      },
      "list-of-resource-item": {
        "type": "array",
        "description": "Encapsulates information about resources.\n",
        "items": {
          "type": "object",
          "description": "Encapsulates information about resources.\n",
          "additionalProperties": false,
          "required": [
            "resourceId",
            "resourceType",
            "resourceName",
            "modifiedDate"
          ],
          "properties": {
            "resourceId": {
              "type": "integer",
              "description": "Unique identifier for each resource.\n",
              "minimum": 0
            },
            "resourceType": {
              "type": "string",
              "description": "Helps to characterize a asset's resource, either `cname`, `arlfile`, `cpcode`, `storagegroup`, `fpdomain`, or `edns`. For more information, see [View property details](https://techdocs.akamai.com/iam/docs/mng-properties).\n",
              "enum": [
                "enable",
                "arlfile",
                "cpcode",
                "storagegroup",
                "fpdomain",
                "edns"
              ],
              "minLength": 1
            },
            "resourceName": {
              "type": "string",
              "description": "Descriptive label for the resource.\n",
              "minLength": 1
            },
            "modifiedDate": {
              "type": "string",
              "description": "ISO 8601 timestamp indicating when the resource was last updated.\n",
              "format": "date-time"
            }
          }
        }
      },
      "user-property-id": {
        "type": "object",
        "description": "Encapsulates all the users of a property by property ID.\n",
        "additionalProperties": false,
        "required": [
          "uiUserName",
          "uiIdentityId",
          "firstName",
          "lastName",
          "isBlocked"
        ],
        "properties": {
          "uiUserName": {
            "type": "string",
            "description": "The user's username in Control Center.\n",
            "minLength": 1
          },
          "uiIdentityId": {
            "type": "string",
            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname.\n",
            "minLength": 1
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Whether a user's access to an asset is blocked.\n"
          }
        }
      },
      "users-of-property-response": {
        "type": "array",
        "description": "Encapsulates all the users of a property by property ID.\n",
        "minItems": 0,
        "items": {
          "type": "object",
          "description": "Encapsulates all the users of a property by property ID.\n",
          "additionalProperties": false,
          "required": [
            "uiUserName",
            "uiIdentityId",
            "firstName",
            "lastName",
            "isBlocked"
          ],
          "properties": {
            "uiUserName": {
              "type": "string",
              "description": "The user's username in Control Center.\n",
              "minLength": 1
            },
            "uiIdentityId": {
              "type": "string",
              "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
              "minLength": 1
            },
            "firstName": {
              "type": "string",
              "description": "The user's first name.\n",
              "minLength": 1
            },
            "lastName": {
              "type": "string",
              "description": "The user's surname.\n",
              "minLength": 1
            },
            "isBlocked": {
              "type": "boolean",
              "description": "Whether a user's access to an asset is blocked.\n"
            }
          }
        }
      },
      "user-block-ui-identities": {
        "type": "object",
        "description": "This object encapsulates all the users who needs to be blocked based on UI identities.\n",
        "additionalProperties": false,
        "required": [
          "uiIdentityId"
        ],
        "properties": {
          "uiIdentityId": {
            "type": "string",
            "description": "A unique identifier for a user. Also known as a `contactId` in other APIs.\n",
            "readOnly": true
          }
        }
      },
      "users-block-ui-identities": {
        "type": "array",
        "description": "This object encapsulates all the users who needs to be blocked based on UI identities.\n",
        "items": {
          "type": "object",
          "description": "This object encapsulates all the users who needs to be blocked based on UI identities.\n",
          "additionalProperties": false,
          "required": [
            "uiIdentityId"
          ],
          "properties": {
            "uiIdentityId": {
              "type": "string",
              "description": "A unique identifier for a user. Also known as a `contactId` in other APIs.\n",
              "readOnly": true
            }
          }
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID"
  }
}