{
  "openapi": "3.0.0",
  "info": {
    "title": "Your user profile",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/identity-management/v2"
    }
  ],
  "paths": {
    "/user-profile": {
      "x-akamai": {
        "path-info": "/user-profile"
      },
      "get": {
        "operationId": "get-user-profile",
        "summary": "View your profile",
        "tags": [
          "Profile"
        ],
        "description": "Return your own profile information. To make changes to your profile, run the [Edit your profile](ref:put-user-profile-info) operation.\n",
        "parameters": [
          {
            "name": "authGrants",
            "in": "query",
            "description": "Includes the list of your group and role assignments, `false` by default.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "notifications",
            "in": "query",
            "description": "Includes product notifications you subscribe to, `false` by default.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          },
          {
            "name": "actions",
            "in": "query",
            "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response returns the profile.\n",
            "content": {
              "application/json": {
                "example": {
                  "uiIdentityId": "A-B-123456",
                  "firstName": "John",
                  "lastName": "Smith",
                  "uiUserName": "john.smith@mycompany.com",
                  "email": "afero@mycompany.com",
                  "lastLoginDate": "2016-01-13T17:53:57Z",
                  "tfaEnabled": true,
                  "country": "USA",
                  "phone": "3456788765",
                  "contactType": "Prolexic",
                  "isLocked": false,
                  "timeZone": "GMT",
                  "preferredLanguage": "English",
                  "sessionTimeOut": 30,
                  "passwordExpiryDate": "2018-01-13T17:53:57Z",
                  "secondaryEmail": "john-smith@gmail.com",
                  "mobilePhone": "3456787657",
                  "address": "first Street",
                  "city": "Santa Clara",
                  "state": "CA",
                  "zipCode": "34567",
                  "jobTitle": "Engineer",
                  "actions": {
                    "resetPassword": true,
                    "delete": true,
                    "edit": true,
                    "apiClient": true,
                    "isCloneable": true,
                    "thirdPartyAccess": true
                  },
                  "notifications": {
                    "enableEmailNotifications": true,
                    "options": {
                      "passwordExpiry": true,
                      "newUserNotification": true,
                      "upgrade": [
                        "NetStorage",
                        "Other Upgrade Notifications (Planned)"
                      ],
                      "proactive": [
                        "EdgeScape",
                        "EdgeSuite (HTTP Content Delivery)"
                      ]
                    }
                  },
                  "authGrants": [
                    {
                      "groupId": 12345,
                      "groupName": "MyGroup",
                      "roleId": 16,
                      "roleName": "Publisher",
                      "roleDescription": "This is a new role that has been created to"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates information about each user.\n",
                  "additionalProperties": false,
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "properties": {
                    "notifications": {
                      "type": "object",
                      "description": "Specifies email notifications the user receives for products.\n",
                      "additionalProperties": false,
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "type": "object",
                          "description": "Specifies email notifications settings.\n",
                          "additionalProperties": false,
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "properties": {
                            "upgrade": {
                              "type": "array",
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "proactive": {
                              "type": "array",
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "passwordExpiry": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for password expiration.\n"
                            },
                            "newUserNotification": {
                              "type": "boolean",
                              "description": "Whether group administrators get notifications when the user creates other new users.\n"
                            },
                            "apiClientCredentialExpiryNotification": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for expiring API client credentials.\n"
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "type": "boolean",
                          "description": "Enables email notifications.\n"
                        }
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "The user's city.\n",
                      "minLength": 1
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1
                    },
                    "contactType": {
                      "type": "string",
                      "description": "User's contact type.\n",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "User's country.\n",
                      "minLength": 1
                    },
                    "jobTitle": {
                      "type": "string",
                      "description": "The user's position at the company.\n",
                      "minLength": 1
                    },
                    "lastLoginDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time"
                    },
                    "tfaEnabled": {
                      "type": "boolean",
                      "description": "Whether TFA is enabled.\n"
                    },
                    "tfaConfigured": {
                      "type": "boolean",
                      "description": "Whether TFA is configured.\n"
                    },
                    "additionalAuthentication": {
                      "type": "string",
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "additionalAuthenticationConfigured": {
                      "type": "boolean",
                      "description": "Whether the user has multi-factor authentication configured.\n"
                    },
                    "emailUpdatePending": {
                      "type": "boolean",
                      "description": "Whether there are any pending changes to the email address.\n"
                    },
                    "mobilePhone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "passwordExpiryDate": {
                      "type": "string",
                      "description": "The date a user's password expires.\n",
                      "format": "date-time"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "description": "The user's language.\n",
                      "minLength": 1
                    },
                    "secondaryEmail": {
                      "type": "string",
                      "description": "The user's alternate email address.\n",
                      "format": "email"
                    },
                    "sessionTimeOut": {
                      "type": "integer",
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0
                    },
                    "state": {
                      "type": "string",
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1
                    },
                    "address": {
                      "type": "string",
                      "description": "The user's street address.\n",
                      "minLength": 1
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The user's first name.\n",
                      "minLength": 1
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The user's surname.\n",
                      "minLength": 1
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email address.\n",
                      "format": "email"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1
                    },
                    "authGrants": {
                      "type": "array",
                      "description": "A user's role assignments, per group.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "Descriptive text for the role.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "Indicates whether a user's access is blocked for a group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether the user is deletable.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether the user is editable.\n"
                        },
                        "resetPassword": {
                          "type": "boolean",
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                        },
                        "isCloneable": {
                          "type": "boolean",
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                        },
                        "thirdPartyAccess": {
                          "type": "boolean",
                          "description": "Enables the administrator to manage extended access.\n"
                        },
                        "apiClient": {
                          "type": "boolean",
                          "description": "Enables the administrator to create an API client.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-profile/basic-info": {
      "x-akamai": {
        "path-info": "/user-profile/basic-info"
      },
      "put": {
        "operationId": "put-user-profile-info",
        "summary": "Edit your profile",
        "tags": [
          "Profile"
        ],
        "description": "Update your basic profile information. You can update simple items like your name or phone number, but you can't update your group or role assignments through this operation.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "firstName": "John",
                "lastName": "Smith",
                "tfaEnabled": true,
                "country": "USA",
                "phone": "3456788765",
                "contactType": "Billing",
                "timeZone": "GMT",
                "preferredLanguage": "English",
                "sessionTimeOut": 30,
                "secondaryEmail": "john.smith@mycompany.com",
                "mobilePhone": "3456787657",
                "address": "first Street",
                "city": "Santa Clara",
                "state": "CA",
                "zipCode": "34567",
                "jobTitle": "Engineer"
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "firstName",
                  "lastName",
                  "country",
                  "preferredLanguage",
                  "sessionTimeOut",
                  "timeZone"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The user's street address.\n",
                    "minLength": 1
                  },
                  "city": {
                    "type": "string",
                    "description": "The user's city.\n",
                    "minLength": 1
                  },
                  "contactType": {
                    "type": "string",
                    "description": "User's contact type. To get the available values, run the [View contact types](ref:get-common-contact-types) operation.\n",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "description": "User's country. To get the available values, run the [View supported countries](ref:get-common-countries) operation.\n",
                    "minLength": 1
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).\n",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "jobTitle": {
                    "type": "string",
                    "description": "The user's position at the company.\n",
                    "minLength": 1,
                    "maxLength": 75
                  },
                  "lastName": {
                    "type": "string",
                    "description": "The user's surname.\n",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "mobilePhone": {
                    "type": "string",
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
                    "minLength": 1
                  },
                  "preferredLanguage": {
                    "type": "string",
                    "description": "The user's language. To get the available values, run the [View languages](ref:get-common-languages) operation.\n",
                    "minLength": 1
                  },
                  "secondaryEmail": {
                    "type": "string",
                    "description": "The user's alternate email address.\n",
                    "format": "email"
                  },
                  "sessionTimeOut": {
                    "type": "integer",
                    "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](ref:get-common-timeout-policies) operation if you're an administrator or [View timeout policies for a user profile](ref:get-user-timeout-policies) operation if you're the account's user. Make sure to select a value that's equal or smaller to the **Max session timeout** value, set for your account in the Identity and Access Management interface's [Settings](https://techdocs.akamai.com/iam/docs/account-settings) tab.\n",
                    "minimum": 0
                  },
                  "state": {
                    "type": "string",
                    "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](ref:get-user-states) operation.\n",
                    "minLength": 1
                  },
                  "additionalAuthentication": {
                    "type": "string",
                    "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                    "enum": [
                      "TFA",
                      "MFA",
                      "NONE"
                    ]
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                    "minLength": 1
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "The user's five-digit postal code, represented as a string.\n",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated profile.\n",
            "content": {
              "application/json": {
                "example": {
                  "city": "Santa Clara",
                  "contactType": "Billing",
                  "country": "USA",
                  "email": "jsmith@example.com",
                  "firstName": "John",
                  "isLocked": false,
                  "jobTitle": "Engineer",
                  "lastLoginDate": "2016-04-12T20:54:24.000Z",
                  "lastName": "Smith",
                  "mobilePhone": "3456787657",
                  "passwordExpiryDate": "2023-04-12T20:54:24.000Z",
                  "phone": "3456788765",
                  "preferredLanguage": "English",
                  "secondaryEmail": "john-smith@example.com",
                  "sessionTimeOut": 30,
                  "state": "CA",
                  "address": "first Street",
                  "timeZone": "GMT",
                  "zipCode": "34567",
                  "additionalAuthentication": "TFA",
                  "uiIdentityId": "1-ABCDE",
                  "uiUserName": "jsmith",
                  "additionalAuthenticationConfigured": false
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates information about each user.\n",
                  "additionalProperties": false,
                  "required": [
                    "uiIdentityId",
                    "firstName",
                    "lastName",
                    "email",
                    "additionalAuthentication",
                    "country",
                    "address",
                    "timeZone",
                    "additionalAuthenticationConfigured"
                  ],
                  "properties": {
                    "notifications": {
                      "type": "object",
                      "description": "Specifies email notifications the user receives for products.\n",
                      "additionalProperties": false,
                      "required": [
                        "options",
                        "enableEmailNotifications"
                      ],
                      "properties": {
                        "options": {
                          "type": "object",
                          "description": "Specifies email notifications settings.\n",
                          "additionalProperties": false,
                          "required": [
                            "upgrade",
                            "proactive",
                            "passwordExpiry",
                            "newUserNotification",
                            "apiClientCredentialExpiryNotification"
                          ],
                          "properties": {
                            "upgrade": {
                              "type": "array",
                              "description": "Products for which the user receives notifications for upgrades.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "proactive": {
                              "type": "array",
                              "description": "Products for which the user gets notifications for service issues.\n",
                              "minItems": 0,
                              "items": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "passwordExpiry": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for password expiration.\n"
                            },
                            "newUserNotification": {
                              "type": "boolean",
                              "description": "Whether group administrators get notifications when the user creates other new users.\n"
                            },
                            "apiClientCredentialExpiryNotification": {
                              "type": "boolean",
                              "description": "Whether the user gets notifications for expiring API client credentials.\n"
                            }
                          }
                        },
                        "enableEmailNotifications": {
                          "type": "boolean",
                          "description": "Enables email notifications.\n"
                        }
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "The user's city.\n",
                      "minLength": 1
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique identifier for each account.\n",
                      "minLength": 1
                    },
                    "contactType": {
                      "type": "string",
                      "description": "User's contact type.\n",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "User's country.\n",
                      "minLength": 1
                    },
                    "jobTitle": {
                      "type": "string",
                      "description": "The user's position at the company.\n",
                      "minLength": 1
                    },
                    "lastLoginDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
                      "format": "date-time"
                    },
                    "tfaEnabled": {
                      "type": "boolean",
                      "description": "Whether TFA is enabled.\n"
                    },
                    "tfaConfigured": {
                      "type": "boolean",
                      "description": "Whether TFA is configured.\n"
                    },
                    "additionalAuthentication": {
                      "type": "string",
                      "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
                      "enum": [
                        "TFA",
                        "MFA",
                        "NONE"
                      ]
                    },
                    "additionalAuthenticationConfigured": {
                      "type": "boolean",
                      "description": "Whether the user has multi-factor authentication configured.\n"
                    },
                    "emailUpdatePending": {
                      "type": "boolean",
                      "description": "Whether there are any pending changes to the email address.\n"
                    },
                    "mobilePhone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "passwordExpiryDate": {
                      "type": "string",
                      "description": "The date a user's password expires.\n",
                      "format": "date-time"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "description": "The user's language.\n",
                      "minLength": 1
                    },
                    "secondaryEmail": {
                      "type": "string",
                      "description": "The user's alternate email address.\n",
                      "format": "email"
                    },
                    "sessionTimeOut": {
                      "type": "integer",
                      "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
                      "minimum": 0
                    },
                    "state": {
                      "type": "string",
                      "description": "The user's state or province if user's country is USA or Canada.\n",
                      "minLength": 1
                    },
                    "address": {
                      "type": "string",
                      "description": "The user's street address.\n",
                      "minLength": 1
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "The user's five-digit postal code, represented as a string.\n",
                      "minLength": 1
                    },
                    "uiIdentityId": {
                      "type": "string",
                      "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
                      "minLength": 1
                    },
                    "firstName": {
                      "type": "string",
                      "description": "The user's first name.\n",
                      "minLength": 1
                    },
                    "lastName": {
                      "type": "string",
                      "description": "The user's surname.\n",
                      "minLength": 1
                    },
                    "uiUserName": {
                      "type": "string",
                      "description": "The user's username in Control Center.\n",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "description": "The user's email address.\n",
                      "format": "email"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
                    },
                    "phone": {
                      "type": "string",
                      "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
                      "minLength": 1
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
                      "minLength": 1
                    },
                    "authGrants": {
                      "type": "array",
                      "description": "A user's role assignments, per group.\n",
                      "minItems": 0,
                      "items": {
                        "type": "object",
                        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
                        "additionalProperties": false,
                        "properties": {
                          "groupId": {
                            "type": "integer",
                            "description": "A unique identifier for each group.\n"
                          },
                          "roleId": {
                            "type": "integer",
                            "description": "A unique identifier for each role.\n"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "A group's name.\n"
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role's name.\n"
                          },
                          "roleDescription": {
                            "type": "string",
                            "description": "Descriptive text for the role.\n"
                          },
                          "isBlocked": {
                            "type": "boolean",
                            "description": "Indicates whether a user's access is blocked for a group.\n"
                          },
                          "subGroups": {
                            "type": "array",
                            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                            "items": {
                              "type": "object",
                              "description": "A further-nested group.\n"
                            }
                          }
                        }
                      }
                    },
                    "actions": {
                      "type": "object",
                      "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
                      "additionalProperties": false,
                      "required": [
                        "delete",
                        "edit",
                        "resetPassword",
                        "isCloneable",
                        "thirdPartyAccess",
                        "apiClient"
                      ],
                      "properties": {
                        "delete": {
                          "type": "boolean",
                          "description": "Whether the user is deletable.\n"
                        },
                        "edit": {
                          "type": "boolean",
                          "description": "Whether the user is editable.\n"
                        },
                        "resetPassword": {
                          "type": "boolean",
                          "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
                        },
                        "isCloneable": {
                          "type": "boolean",
                          "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
                        },
                        "thirdPartyAccess": {
                          "type": "boolean",
                          "description": "Enables the administrator to manage extended access.\n"
                        },
                        "apiClient": {
                          "type": "boolean",
                          "description": "Enables the administrator to create an API client.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-profile/change-password": {
      "x-akamai": {
        "path-info": "/user-profile/change-password"
      },
      "post": {
        "operationId": "post-profile-change-password",
        "summary": "Rotate your password",
        "tags": [
          "Access"
        ],
        "description": "To update or change your password, include your old password and your new password in the request body. Run the [View password policy](ref:get-common-password-policy) operation before you create your new password to ensure it adheres to your policy. If you pass your existing password incorrectly and make too many login attempts, your account locks.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "currentPassword": "abcbd",
                "newPassword": "abcdg"
              },
              "schema": {
                "type": "object",
                "description": "Uses the old password to authenticate you are who you say you are when you update your password. Includes the new password.\n",
                "additionalProperties": false,
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "description": "Your existing password.\n"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "The new password.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password rotated.\n"
          }
        }
      }
    },
    "/user-profile/notifications": {
      "x-akamai": {
        "path-info": "/user-profile/notifications"
      },
      "put": {
        "operationId": "put-user-profile-notifications",
        "summary": "Update notifications",
        "tags": [
          "Notifications"
        ],
        "description": "Subscribe to notifications emails for password expiration reminders, proactive maintenance emails, and upgrade notification emails. Make a PUT request with a notification object.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enableEmailNotifications": true,
                "options": {
                  "passwordExpiry": true,
                  "newUserNotification": true,
                  "upgrade": [
                    "NetStorage",
                    "Other Upgrade Notifications (Planned)"
                  ],
                  "proactive": [
                    "EdgeScape",
                    "EdgeSuite (HTTP Content Delivery)"
                  ]
                }
              },
              "schema": {
                "description": "Encapsulates the types of email notifications you can receive.\n",
                "additionalProperties": false,
                "required": [
                  "enableEmailNotifications",
                  "options"
                ],
                "properties": {
                  "options": {
                    "type": "object",
                    "description": "Specifies email notifications settings.\n",
                    "additionalProperties": false,
                    "required": [
                      "passwordExpiry",
                      "proactive",
                      "upgrade"
                    ],
                    "properties": {
                      "newUserNotification": {
                        "type": "boolean",
                        "description": "Enables notifications for group administrators when the user creates other new users.\n"
                      },
                      "passwordExpiry": {
                        "type": "boolean",
                        "description": "Enables notifications for expiring passwords.\n"
                      },
                      "proactive": {
                        "type": "array",
                        "description": "Products for which the user gets notifications for service issues.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "upgrade": {
                        "type": "array",
                        "description": "Products for which the user receives notifications for upgrades.\n",
                        "minItems": 0,
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "apiClientCredentialExpiryNotification": {
                        "type": "boolean",
                        "description": "Enables notifications for expiring API client credentials.\n"
                      }
                    }
                  },
                  "enableEmailNotifications": {
                    "type": "boolean",
                    "description": "Enables email notifications.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns updated notifications.\n",
            "content": {
              "application/json": {
                "example": {
                  "enableEmailNotifications": true,
                  "options": {
                    "passwordExpiry": true,
                    "newUserNotification": true,
                    "upgrade": [
                      "NetStorage",
                      "Other Upgrade Notifications (Planned)"
                    ],
                    "proactive": [
                      "EdgeScape",
                      "EdgeSuite (HTTP Content Delivery)"
                    ]
                  }
                },
                "schema": {
                  "type": "object",
                  "description": "Encapsulates the types of email notifications you can receive.\n",
                  "additionalProperties": false,
                  "required": [
                    "options",
                    "enableEmailNotifications"
                  ],
                  "properties": {
                    "options": {
                      "type": "object",
                      "description": "Specifies email notifications settings.\n",
                      "additionalProperties": false,
                      "required": [
                        "newUserNotification",
                        "passwordExpiry",
                        "proactive",
                        "upgrade",
                        "apiClientCredentialExpiryNotification"
                      ],
                      "properties": {
                        "newUserNotification": {
                          "type": "boolean",
                          "description": "Whether group administrators get notifications when the user creates other new users.\n"
                        },
                        "apiClientCredentialExpiryNotification": {
                          "type": "boolean",
                          "description": "Whether the user gets notifications for expiring API client credentials.\n"
                        },
                        "passwordExpiry": {
                          "type": "boolean",
                          "description": "Whether the user gets notifications for password expiration.\n"
                        },
                        "proactive": {
                          "type": "array",
                          "description": "Products for which the user gets notifications for service issues.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "upgrade": {
                          "type": "array",
                          "description": "Products for which the user receives notifications for upgrades.\n",
                          "minItems": 0,
                          "items": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    },
                    "enableEmailNotifications": {
                      "type": "boolean",
                      "description": "Enables email notifications.\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-profile/tfa": {
      "x-akamai": {
        "path-info": "/user-profile/tfa"
      },
      "put": {
        "operationId": "put-user-profile-tfa",
        "summary": "Set two-factor authentication",
        "tags": [
          "Access"
        ],
        "description": "Enable or disable TFA on your profile. An account administrator needs to disable TFA for you if the account is set to `enable`. If the account doesn't specify a TFA setting, you can `disable` TFA on your profile yourself. You can always set TFA to `enable` regardless of account-level settings. If you have TFA enabled, `reset` TFA clears your TFA settings and you'll be asked to set up TFA the next time you log in to Control Center.\n",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "Includes actions you can perform for 2FA on your profile, either `enable`, `disable`, or `reset`. Don't confuse this with the `actions` parameter, which applies to the various operations that get user data.\n",
            "required": true,
            "schema": {
              "type": "string",
              "example": "enable",
              "enum": [
                "enable",
                "disable",
                "reset"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Authentication updated.\n"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "auth-grants-query": {
        "name": "authGrants",
        "in": "query",
        "description": "Includes the list of your group and role assignments, `false` by default.\n",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "notifications-query": {
        "name": "notifications",
        "in": "query",
        "description": "Includes product notifications you subscribe to, `false` by default.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "q-params-actions-actions": {
        "name": "actions",
        "in": "query",
        "description": "Includes information about actions such as `edit` or `delete` that you can take for the object, `false` by default. Don't confuse this with the `action` parameter, which applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "action-query": {
        "name": "action",
        "in": "query",
        "description": "Includes actions you can perform for 2FA on your profile, either `enable`, `disable`, or `reset`. Don't confuse this with the `actions` parameter, which applies to the various operations that get user data.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "enable",
          "enum": [
            "enable",
            "disable",
            "reset"
          ]
        }
      }
    },
    "schemas": {
      "groups-nested": {
        "type": "object",
        "description": "A further-nested group.\n"
      },
      "auth-grant-response": {
        "type": "object",
        "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
        "additionalProperties": false,
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "A unique identifier for each group.\n"
          },
          "roleId": {
            "type": "integer",
            "description": "A unique identifier for each role.\n"
          },
          "groupName": {
            "type": "string",
            "description": "A group's name.\n"
          },
          "roleName": {
            "type": "string",
            "description": "The role's name.\n"
          },
          "roleDescription": {
            "type": "string",
            "description": "Descriptive text for the role.\n"
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Indicates whether a user's access is blocked for a group.\n"
          },
          "subGroups": {
            "type": "array",
            "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
            "items": {
              "type": "object",
              "description": "A further-nested group.\n"
            }
          }
        }
      },
      "user-response": {
        "type": "object",
        "description": "Encapsulates information about each user.\n",
        "additionalProperties": false,
        "required": [
          "uiIdentityId",
          "firstName",
          "lastName",
          "email",
          "additionalAuthentication",
          "country",
          "address",
          "timeZone",
          "additionalAuthenticationConfigured"
        ],
        "properties": {
          "notifications": {
            "type": "object",
            "description": "Specifies email notifications the user receives for products.\n",
            "additionalProperties": false,
            "required": [
              "options",
              "enableEmailNotifications"
            ],
            "properties": {
              "options": {
                "type": "object",
                "description": "Specifies email notifications settings.\n",
                "additionalProperties": false,
                "required": [
                  "upgrade",
                  "proactive",
                  "passwordExpiry",
                  "newUserNotification",
                  "apiClientCredentialExpiryNotification"
                ],
                "properties": {
                  "upgrade": {
                    "type": "array",
                    "description": "Products for which the user receives notifications for upgrades.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "proactive": {
                    "type": "array",
                    "description": "Products for which the user gets notifications for service issues.\n",
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "passwordExpiry": {
                    "type": "boolean",
                    "description": "Whether the user gets notifications for password expiration.\n"
                  },
                  "newUserNotification": {
                    "type": "boolean",
                    "description": "Whether group administrators get notifications when the user creates other new users.\n"
                  },
                  "apiClientCredentialExpiryNotification": {
                    "type": "boolean",
                    "description": "Whether the user gets notifications for expiring API client credentials.\n"
                  }
                }
              },
              "enableEmailNotifications": {
                "type": "boolean",
                "description": "Enables email notifications.\n"
              }
            }
          },
          "city": {
            "type": "string",
            "description": "The user's city.\n",
            "minLength": 1
          },
          "accountId": {
            "type": "string",
            "description": "Unique identifier for each account.\n",
            "minLength": 1
          },
          "contactType": {
            "type": "string",
            "description": "User's contact type.\n",
            "minLength": 1
          },
          "country": {
            "type": "string",
            "description": "User's country.\n",
            "minLength": 1
          },
          "jobTitle": {
            "type": "string",
            "description": "The user's position at the company.\n",
            "minLength": 1
          },
          "lastLoginDate": {
            "type": "string",
            "description": "ISO 8601 timestamp indicating when the user last logged in.\n",
            "format": "date-time"
          },
          "tfaEnabled": {
            "type": "boolean",
            "description": "Whether TFA is enabled.\n"
          },
          "tfaConfigured": {
            "type": "boolean",
            "description": "Whether TFA is configured.\n"
          },
          "additionalAuthentication": {
            "type": "string",
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ]
          },
          "additionalAuthenticationConfigured": {
            "type": "boolean",
            "description": "Whether the user has multi-factor authentication configured.\n"
          },
          "emailUpdatePending": {
            "type": "boolean",
            "description": "Whether there are any pending changes to the email address.\n"
          },
          "mobilePhone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
            "minLength": 1
          },
          "passwordExpiryDate": {
            "type": "string",
            "description": "The date a user's password expires.\n",
            "format": "date-time"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The user's language.\n",
            "minLength": 1
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The user's alternate email address.\n",
            "format": "email"
          },
          "sessionTimeOut": {
            "type": "integer",
            "description": "The number of seconds it takes for the user's Control Center session to time out after no activity.\n",
            "minimum": 0
          },
          "state": {
            "type": "string",
            "description": "The user's state or province if user's country is USA or Canada.\n",
            "minLength": 1
          },
          "address": {
            "type": "string",
            "description": "The user's street address.\n",
            "minLength": 1
          },
          "zipCode": {
            "type": "string",
            "description": "The user's five-digit postal code, represented as a string.\n",
            "minLength": 1
          },
          "uiIdentityId": {
            "type": "string",
            "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a `contactId` in other APIs.\n",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname.\n",
            "minLength": 1
          },
          "uiUserName": {
            "type": "string",
            "description": "The user's username in Control Center.\n",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The user's email address.\n",
            "format": "email"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the user's account is locked. To learn more, see [Temporary account lockout](https://techdocs.akamai.com/iam/docs/tmp-account-lockout).\n"
          },
          "phone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`.\n",
            "minLength": 1
          },
          "timeZone": {
            "type": "string",
            "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
            "minLength": 1
          },
          "authGrants": {
            "type": "array",
            "description": "A user's role assignments, per group.\n",
            "minItems": 0,
            "items": {
              "type": "object",
              "description": "A user's role assignments, per group. If you provide this member in a POST request, don't include the `cloneFrom` member in the request too.\n",
              "additionalProperties": false,
              "properties": {
                "groupId": {
                  "type": "integer",
                  "description": "A unique identifier for each group.\n"
                },
                "roleId": {
                  "type": "integer",
                  "description": "A unique identifier for each role.\n"
                },
                "groupName": {
                  "type": "string",
                  "description": "A group's name.\n"
                },
                "roleName": {
                  "type": "string",
                  "description": "The role's name.\n"
                },
                "roleDescription": {
                  "type": "string",
                  "description": "Descriptive text for the role.\n"
                },
                "isBlocked": {
                  "type": "boolean",
                  "description": "Indicates whether a user's access is blocked for a group.\n"
                },
                "subGroups": {
                  "type": "array",
                  "description": "Children of the parent group, represented as an array of groups. Permissions cascade downward from parent to child unless the child group's `isBlocked` is `true`.\n",
                  "items": {
                    "type": "object",
                    "description": "A further-nested group.\n"
                  }
                }
              }
            }
          },
          "actions": {
            "type": "object",
            "description": "Specifies permissions available to the user for this group. This data is available when you specify the `actions` parameter of the same name, not to be confused with the `action` parameter that applies to the [Set two-factor authentication](ref:put-user-profile-tfa) operation.\n",
            "additionalProperties": false,
            "required": [
              "delete",
              "edit",
              "resetPassword",
              "isCloneable",
              "thirdPartyAccess",
              "apiClient"
            ],
            "properties": {
              "delete": {
                "type": "boolean",
                "description": "Whether the user is deletable.\n"
              },
              "edit": {
                "type": "boolean",
                "description": "Whether the user is editable.\n"
              },
              "resetPassword": {
                "type": "boolean",
                "description": "Enables an administrator to send a user a password by email or see a one-time token.\n"
              },
              "isCloneable": {
                "type": "boolean",
                "description": "Enables an administrator to create a new user with permissions cloned from this user.\n"
              },
              "thirdPartyAccess": {
                "type": "boolean",
                "description": "Enables the administrator to manage extended access.\n"
              },
              "apiClient": {
                "type": "boolean",
                "description": "Enables the administrator to create an API client.\n"
              }
            }
          }
        }
      },
      "update-user-basic-info-request": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "country",
          "preferredLanguage",
          "sessionTimeOut",
          "timeZone"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "The user's street address.\n",
            "minLength": 1
          },
          "city": {
            "type": "string",
            "description": "The user's city.\n",
            "minLength": 1
          },
          "contactType": {
            "type": "string",
            "description": "User's contact type. To get the available values, run the [View contact types](ref:get-common-contact-types) operation.\n",
            "minLength": 1
          },
          "country": {
            "type": "string",
            "description": "User's country. To get the available values, run the [View supported countries](ref:get-common-countries) operation.\n",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "description": "The user's email address. It needs to be a valid email address users can access, as they'll be sent a OTP to enter while logging in for the first time. To learn more, see [Frequently asked questions](https://techdocs.akamai.com/iam/docs/frequently-asked-questions-gss#why-am-i-asked-to-enter-a-code-while-logging-in).\n",
            "format": "email"
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name.\n",
            "minLength": 1,
            "maxLength": 50
          },
          "jobTitle": {
            "type": "string",
            "description": "The user's position at the company.\n",
            "minLength": 1,
            "maxLength": 75
          },
          "lastName": {
            "type": "string",
            "description": "The user's surname.\n",
            "minLength": 1,
            "maxLength": 50
          },
          "mobilePhone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
            "minLength": 1
          },
          "phone": {
            "type": "string",
            "description": "The user's mobile phone number in ITU-T E.164 format, that is, `+country code-area code-subscriber number`. For example, `+3551234567891` or `+441234567891`. For Canadian and US phone numbers, you can provide them with a country code (for example, `+11234567891`) or without it as a ten-digit integer within a string (for example, `1234567891`).\n",
            "minLength": 1
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The user's language. To get the available values, run the [View languages](ref:get-common-languages) operation.\n",
            "minLength": 1
          },
          "secondaryEmail": {
            "type": "string",
            "description": "The user's alternate email address.\n",
            "format": "email"
          },
          "sessionTimeOut": {
            "type": "integer",
            "description": "The number of seconds it takes for the user's Control Center session to time out after no activity. To get the available values, run the [View timeout policies](ref:get-common-timeout-policies) operation if you're an administrator or [View timeout policies for a user profile](ref:get-user-timeout-policies) operation if you're the account's user. Make sure to select a value that's equal or smaller to the **Max session timeout** value, set for your account in the Identity and Access Management interface's [Settings](https://techdocs.akamai.com/iam/docs/account-settings) tab.\n",
            "minimum": 0
          },
          "state": {
            "type": "string",
            "description": "The user's state or province if user's country is USA or Canada. To get the available values, run the [View states for a user profile](ref:get-user-states) operation.\n",
            "minLength": 1
          },
          "additionalAuthentication": {
            "type": "string",
            "description": "Specifies the user's multi-factor authentication method, confirming their identity. Either `TFA`, `MFA`, or `NONE`, which offers no additional authentication.\n",
            "enum": [
              "TFA",
              "MFA",
              "NONE"
            ]
          },
          "timeZone": {
            "type": "string",
            "description": "The user's time zone. To get the available values, run the [View time zones](ref:get-common-timezones) operation.\n",
            "minLength": 1
          },
          "zipCode": {
            "type": "string",
            "description": "The user's five-digit postal code, represented as a string.\n",
            "minLength": 1
          }
        }
      },
      "change-password-request": {
        "type": "object",
        "description": "Uses the old password to authenticate you are who you say you are when you update your password. Includes the new password.\n",
        "additionalProperties": false,
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "Your existing password.\n"
          },
          "newPassword": {
            "type": "string",
            "description": "The new password.\n"
          }
        }
      },
      "notifications-request": {
        "description": "Encapsulates the types of email notifications you can receive.\n",
        "additionalProperties": false,
        "required": [
          "enableEmailNotifications",
          "options"
        ],
        "properties": {
          "options": {
            "type": "object",
            "description": "Specifies email notifications settings.\n",
            "additionalProperties": false,
            "required": [
              "passwordExpiry",
              "proactive",
              "upgrade"
            ],
            "properties": {
              "newUserNotification": {
                "type": "boolean",
                "description": "Enables notifications for group administrators when the user creates other new users.\n"
              },
              "passwordExpiry": {
                "type": "boolean",
                "description": "Enables notifications for expiring passwords.\n"
              },
              "proactive": {
                "type": "array",
                "description": "Products for which the user gets notifications for service issues.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "upgrade": {
                "type": "array",
                "description": "Products for which the user receives notifications for upgrades.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "apiClientCredentialExpiryNotification": {
                "type": "boolean",
                "description": "Enables notifications for expiring API client credentials.\n"
              }
            }
          },
          "enableEmailNotifications": {
            "type": "boolean",
            "description": "Enables email notifications.\n"
          }
        }
      },
      "notifications-response": {
        "type": "object",
        "description": "Encapsulates the types of email notifications you can receive.\n",
        "additionalProperties": false,
        "required": [
          "options",
          "enableEmailNotifications"
        ],
        "properties": {
          "options": {
            "type": "object",
            "description": "Specifies email notifications settings.\n",
            "additionalProperties": false,
            "required": [
              "newUserNotification",
              "passwordExpiry",
              "proactive",
              "upgrade",
              "apiClientCredentialExpiryNotification"
            ],
            "properties": {
              "newUserNotification": {
                "type": "boolean",
                "description": "Whether group administrators get notifications when the user creates other new users.\n"
              },
              "apiClientCredentialExpiryNotification": {
                "type": "boolean",
                "description": "Whether the user gets notifications for expiring API client credentials.\n"
              },
              "passwordExpiry": {
                "type": "boolean",
                "description": "Whether the user gets notifications for password expiration.\n"
              },
              "proactive": {
                "type": "array",
                "description": "Products for which the user gets notifications for service issues.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "upgrade": {
                "type": "array",
                "description": "Products for which the user receives notifications for upgrades.\n",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          "enableEmailNotifications": {
            "type": "boolean",
            "description": "Enables email notifications.\n"
          }
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID"
  }
}