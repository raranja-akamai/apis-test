type: object
description: |-
  You can view the current and previous certificates as part of the certificate history. You retrieve each iteration in the history of your certificate by certificate type, and also view the status, expiration date, and certificate authority for the certificate. You can take actions on each activity of the certificate, including, view the certificate and view the trust chain for the certificate.
  
x-akamai:
  file-path: schemas/certificate-history.v2.yaml
additionalProperties: false
required:
- certificates
properties:
  certificates:
    type: array
    description: |
      The type of certificate. This could be a single certificate, which associates a property hostname with a single name. It could be a wildcard certificate, which secures an entire property hostname. It could be a SAN certificate, in which case you can use Subject Alternative Names to secure up to 100 property hostnames with one certificate. It could also be a wildcard SAN certificate, which is a SAN certificate that can have up to 100 SANs with 25 wildcard entries in the SAN list. Or you can have a third-party certificate, a signed certificate you obtain from an external certificate authority.
    minItems: 0
    items:
      type: object
      additionalProperties: false
      required:
      - deploymentStatus
      - multiStackedCertificates
      - primaryCertificate
      - slots
      - stagingStatus
      - type
      properties:
        type:
          type: string
          description: |
            Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.
          enum:
          - san
          - single
          - wildcard
          - wildcard-san
          - third-party
        deploymentStatus:
          type: string
          description: |
            The current status of the certificate on the network. This is either `active` or `inactive`.
          enum:
          - active
          - inactive
        geography:
          type: string
          description: |
            Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.
          enum:
          - core
          - china+core
          - russia+core
        multiStackedCertificates:
          type: array
          description: |
            Enables an ECDSA certificate in addition to an RSA certificate. CPS automatically performs all certificate operations on both certificates, and uses the best certificate for each client connection to your secure properties. Customers pinning certificates need to pin both the RSA and the ECDSA certificate. You should enable this feature. If its Third Party Dual Stack Certificate, fallback RSA certificate information is present in this.
          minItems: 0
          items:
            type: object
            additionalProperties: false
            required:
            - certificate
            - expiry
            - keyAlgorithm
            - trustChain
            properties:
              certificate:
                type: string
                description: |
                  The certificate text for the multi-stacked certificate.
                nullable: true
                minLength: 1
              expiry:
                type: string
                description: |
                  The expiration date for the multi-stacked certificate.
                minLength: 1
              keyAlgorithm:
                type: string
                description: |
                  The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.
                enum:
                - ECDSA
                - RSA
              trustChain:
                type: string
                description: |
                  The trust chain for the multi-stacked certificate.
                nullable: true
                minLength: 1
        primaryCertificate:
          type: object
          description: |
            Primary certificate for Enrollment.
          additionalProperties: false
          required:
          - certificate
          - expiry
          - keyAlgorithm
          - trustChain
          nullable: true
          properties:
            certificate:
              type: string
              description: |
                The primary certificate in the multi-stacked certificate.
              nullable: true
              minLength: 1
            expiry:
              type: string
              description: |
                The expiration date for the primary certificate.
              minLength: 1
            keyAlgorithm:
              type: string
              description: |
                The key algorithm for the primary certificate. This is either `ECDSA` or `RSA`.
              enum:
              - ECDSA
              - RSA
            trustChain:
              type: string
              description: |
                The trust chain for the primary certificate.
              nullable: true
              minLength: 1
        ra:
          type: string
          description: |
            The certificate registration authority of the primary certificate.
          minLength: 1
        slots:
          type: array
          description: |
            The slot numbers of the primary certificate.
          minItems: 0
          items:
            type: integer
            minimum: 0
        stagingStatus:
          type: string
          description: |
            The staging status of the primary certificate, either `active` or `inactive`.
          enum:
          - active
          - inactive
