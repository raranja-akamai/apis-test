{
  "components": {
    "parameters": {
      "Accept-header-change": {
        "description": "Specifies the response type.",
        "in": "header",
        "name": "Accept",
        "required": true,
        "schema": {
          "enum": [
            "application/vnd.akamai.cps.csr.v2+json",
            "application/vnd.akamai.cps.csr.v1+json",
            "application/vnd.akamai.cps.change-management-info.v5+json",
            "application/vnd.akamai.cps.change-management-info.v4+json",
            "application/vnd.akamai.cps.change-management-info.v2+json",
            "application/vnd.akamai.cps.change-management-info.v1+json",
            "application/vnd.akamai.cps.deployment.v7+json",
            "application/vnd.akamai.cps.deployment.v6+json",
            "application/vnd.akamai.cps.deployment.v3+json",
            "application/vnd.akamai.cps.dv-challenges.v2+json",
            "application/vnd.akamai.cps.dv-challenges.v1+json",
            "application/vnd.akamai.cps.warnings.v1+json"
          ],
          "example": "application/vnd.akamai.cps.csr.v2+json",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "headers/Accept-header-change.yaml"
        }
      },
      "Accept-header-changeId": {
        "description": "Specifies the response type.",
        "in": "header",
        "name": "Accept",
        "required": true,
        "schema": {
          "enum": [
            "application/vnd.akamai.cps.change-id.v1+json"
          ],
          "example": "application/vnd.akamai.cps.change-id.v1+json",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "headers/Accept-header-changeId.yaml"
        }
      },
      "allow-cancel-pending-changes-query": {
        "description": "Cancels all pending changes when updating an enrollment.",
        "in": "query",
        "name": "allow-cancel-pending-changes",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/allow-cancel-pending-changes-query.yaml"
        }
      },
      "allow-missing-certificate-addition-query": {
        "description": "Applicable for Third Party Dual Stack Enrollments, allows to update missing certificate. Option supported from v10.",
        "in": "query",
        "name": "allow-missing-certificate-addition",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/allow-missing-certificate-addition-query.yaml"
        }
      },
      "allow-staging-bypass-query": {
        "description": "Bypass staging and push metadata updates directly to the production network. The current change also updates with the same changes.",
        "in": "query",
        "name": "allow-staging-bypass",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/allow-staging-bypass-query.yaml"
        }
      },
      "allowedInputTypeParam-path": {
        "description": "Found as the last part of `Change.allowedInput[].update` hypermedia URL. See [Change Input Content Type Mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping) for details. Currently supported values include `change-management-info`, `lets-encrypt-challenges`, `post-verification-warnings`, `pre-verification-warnings`, `third-party-csr`.",
        "in": "path",
        "name": "allowedInputTypeParam",
        "required": true,
        "schema": {
          "enum": [
            "change-management-info",
            "lets-encrypt-challenges",
            "post-verification-warnings",
            "pre-verification-warnings",
            "third-party-csr"
          ],
          "example": "third-party-csr",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/allowedInputTypeParam-path.yaml"
        }
      },
      "allowedInputUpdateTypeParam-path": {
        "description": "Found as the last part of `Change.allowedInput[].update` hypermedia URL. See [Change Input Content Type Mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping) for details. Currently supported values include `change-management-ack`, `lets-encrypt-challenges-completed`, `post-verification-warnings-ack`, `pre-verification-warnings-ack`, `third-party-cert-and-trust-chain`.",
        "in": "path",
        "name": "allowedInputTypeParam",
        "required": true,
        "schema": {
          "enum": [
            "change-management-ack",
            "lets-encrypt-challenges-completed",
            "post-verification-warnings-ack",
            "pre-verification-warnings-ack",
            "third-party-cert-and-trust-chain"
          ],
          "example": "third-party-cert-and-trust-chain",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/allowedInputUpdateTypeParam-path.yaml"
        }
      },
      "changeId-path": {
        "description": "The change for this enrollment on which to perform the desired operation.",
        "in": "path",
        "name": "changeId",
        "required": true,
        "schema": {
          "example": 10000,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/changeId-path.yaml"
        }
      },
      "content-type-header-change": {
        "description": "Must be used to specify a request type.",
        "in": "header",
        "name": "Content-Type",
        "required": true,
        "schema": {
          "enum": [
            "application/vnd.akamai.cps.certificate-and-trust-chain.v2+json",
            "application/vnd.akamai.cps.certificate-and-trust-chain.v1+json",
            "application/vnd.akamai.cps.acknowledgement-with-hash.v1+json",
            "application/vnd.akamai.cps.acknowledgement.v1+json"
          ],
          "example": "application/vnd.akamai.cps.certificate-and-trust-chain.v2+json",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "headers/content-type-header-change.yaml"
        }
      },
      "contractId-query": {
        "description": "Specify the contract on which to operate or view.",
        "in": "query",
        "name": "contractId",
        "required": true,
        "schema": {
          "example": "K-0N7RAK7",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/contractId-query.yaml"
        }
      },
      "deploy-not-after-query": {
        "description": "Don't deploy after this date (UTC).",
        "in": "query",
        "name": "deploy-not-after",
        "schema": {
          "example": "2021-01-31",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/deploy-not-after-query.yaml"
        }
      },
      "deploy-not-before-query": {
        "description": "Don't deploy before this date (UTC).",
        "in": "query",
        "name": "deploy-not-before",
        "schema": {
          "example": "2021-01-31",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/deploy-not-before-query.yaml"
        }
      },
      "enrollmentId-path": {
        "description": "Enrollment on which to perform the desired operation.",
        "in": "path",
        "name": "enrollmentId",
        "required": true,
        "schema": {
          "example": 10000,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/enrollmentId-path.yaml"
        }
      },
      "force-renewal-query": {
        "description": "Force certificate renewal for Enrollment.",
        "in": "query",
        "name": "force-renewal",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/force-renewal-query.yaml"
        }
      },
      "includeAll-query": {
        "description": "Retrieve all changes or certificates.",
        "in": "query",
        "name": "includeAll",
        "required": false,
        "schema": {
          "default": false,
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/includeAll-query.yaml"
        }
      },
      "renewal-date-check-override-query": {
        "description": "CPS automatically starts a change to renew certificates in time before they expire. This automatic change starts when the certificate's expiration is within a renewal window. CPS prevents other changes from starting during this renewal window. Setting `renewal-date-check-override=true` allows changes during the renewal window, potentially running the risk of an expired certificate on the network.",
        "in": "query",
        "name": "renewal-date-check-override",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/renewal-date-check-override-query.yaml"
        }
      }
    },
    "schemas": {
      "acknowledgement-with-hash.v1": {
        "additionalProperties": false,
        "description": "Encapsulates information needed to acknowledge an enrollment change.",
        "properties": {
          "acknowledgement": {
            "description": "The state for which this Acknowledgment is submitted, either `acknowledge`, `deny`.",
            "enum": [
              "acknowledge",
              "deny"
            ],
            "type": "string"
          },
          "hash": {
            "description": "A hash is the state that this request acknowledges. You use this when you want to be explicit about what state you're acknowledging in order to prevent race conditions, such as when the state changes while the acknowledgment POST operation is in progress.",
            "type": "string"
          }
        },
        "required": [
          "acknowledgement",
          "hash"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/acknowledgement-with-hash.v1.yaml"
        }
      },
      "acknowledgement.v1": {
        "additionalProperties": false,
        "description": "Encapsulates information needed to acknowledge an enrollment change.",
        "properties": {
          "acknowledgement": {
            "description": "The state for which this Acknowledgment is submitted, either `acknowledge`, `deny`.",
            "enum": [
              "acknowledge",
              "deny"
            ],
            "type": "string"
          }
        },
        "required": [
          "acknowledgement"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/acknowledgement.v1.yaml"
        }
      },
      "active-certificate.v1": {
        "additionalProperties": false,
        "description": "An enrollment with the information about your certificates. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
        "properties": {
          "assignedSlots": {
            "description": "Slots where the certificate is either deployed or is already deployed.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "certificateType": {
            "description": "Specifies the kind of certificate in the enrollment. Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. For details, see `validationType` in the [Enrollment object's versioned schema members](https://techdocs.akamai.com/cps/reference/enrollment#versioned-schema-members).",
            "enum": [
              "san",
              "single",
              "wildcard",
              "wildcard-san",
              "third-party"
            ],
            "type": "string"
          },
          "csr": {
            "additionalProperties": false,
            "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
            "properties": {
              "cn": {
                "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                "minLength": 1,
                "type": "string"
              },
              "sans": {
                "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              }
            },
            "type": "object"
          },
          "enableMultiStackedCertificates": {
            "description": "Enable dual-stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of the enrollment.",
            "minimum": 1,
            "nullable": false,
            "type": "integer"
          },
          "location": {
            "description": "The URL path where you can GET the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "pendingChanges": {
            "description": "Currently pending changes. The last item in the array is the most recent change.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "changeType": {
                  "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                  "enum": [
                    "new-certificate",
                    "modify-certificate",
                    "modify-san",
                    "renewal"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "location": {
                  "description": "URL to fetch related change information.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "production": {
            "additionalProperties": false,
            "description": "Production deployment information.",
            "properties": {
              "location": {
                "description": "The URL path where you can GET the production deployment.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "multiStackedCertificates": {
                "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "expiry": {
                      "description": "The expiration date for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "serial": {
                      "description": "Serial number that uniquely identifies each certificate.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "sha256Fingerprint": {
                      "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "signatureAlgorithm": {
                      "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              },
              "networkConfiguration": {
                "additionalProperties": false,
                "description": "Network configuration properties.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "geography": {
                    "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                    "enum": [
                      "core",
                      "china+core",
                      "russia+core"
                    ],
                    "type": "string"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                    "enum": [
                      "on",
                      "off",
                      "not-set"
                    ],
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "secureNetwork": {
                    "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                    "enum": [
                      "enhanced-tls",
                      "standard-tls"
                    ],
                    "type": "string"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "primaryCertificate": {
                "additionalProperties": false,
                "description": "Primary certificate for Enrollment.",
                "properties": {
                  "expiry": {
                    "description": "The expiration date for the certificate.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "keyAlgorithm": {
                    "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                    "enum": [
                      "ECDSA",
                      "RSA"
                    ],
                    "type": "string"
                  },
                  "serial": {
                    "description": "Serial number that uniquely identifies each certificate.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "sha256Fingerprint": {
                    "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "productionSlots": {
            "description": "Slots where the certificate is deployed on the production network.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "staging": {
            "additionalProperties": false,
            "description": "Staging deployment information.",
            "properties": {
              "location": {
                "description": "The URL path where you can GET the staging deployment.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "multiStackedCertificates": {
                "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "expiry": {
                      "description": "The expiration date for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "serial": {
                      "description": "Serial number that uniquely identifies each certificate.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "sha256Fingerprint": {
                      "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "signatureAlgorithm": {
                      "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              },
              "networkConfiguration": {
                "additionalProperties": false,
                "description": "Network configuration properties.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "geography": {
                    "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                    "enum": [
                      "core",
                      "china+core",
                      "russia+core"
                    ],
                    "type": "string"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                    "enum": [
                      "on",
                      "off",
                      "not-set"
                    ],
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "secureNetwork": {
                    "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                    "enum": [
                      "enhanced-tls",
                      "standard-tls"
                    ],
                    "type": "string"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "primaryCertificate": {
                "additionalProperties": false,
                "description": "Primary certificate for the enrollment.",
                "properties": {
                  "expiry": {
                    "description": "The expiration date for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "keyAlgorithm": {
                    "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                    "enum": [
                      "ECDSA",
                      "RSA"
                    ],
                    "type": "string"
                  },
                  "serial": {
                    "description": "Serial number that uniquely identifies each certificate.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "sha256Fingerprint": {
                    "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "stagingSlots": {
            "description": "Slots where the certificate is deployed on the staging network.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/active-certificate.v1.yaml"
        }
      },
      "active-certificates.v1": {
        "additionalProperties": false,
        "description": "Lists enrollments with details on active certificates.",
        "properties": {
          "enrollments": {
            "description": "Enrollments with active certificates.",
            "items": {
              "additionalProperties": false,
              "description": "An enrollment with the information about your certificates. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
              "properties": {
                "assignedSlots": {
                  "description": "Slots where the certificate is either deployed or is already deployed.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "certificateType": {
                  "description": "Specifies the kind of certificate in the enrollment. Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. For details, see `validationType` in the [Enrollment object's versioned schema members](https://techdocs.akamai.com/cps/reference/enrollment#versioned-schema-members).",
                  "enum": [
                    "san",
                    "single",
                    "wildcard",
                    "wildcard-san",
                    "third-party"
                  ],
                  "type": "string"
                },
                "csr": {
                  "additionalProperties": false,
                  "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                  "properties": {
                    "cn": {
                      "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sans": {
                      "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "enableMultiStackedCertificates": {
                  "description": "Enable dual-stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                  "type": "boolean"
                },
                "id": {
                  "description": "The unique identifier of the enrollment.",
                  "minimum": 1,
                  "nullable": false,
                  "type": "integer"
                },
                "location": {
                  "description": "The URL path where you can GET the enrollment.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "pendingChanges": {
                  "description": "Currently pending changes. The last item in the array is the most recent change.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "changeType": {
                        "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                        "enum": [
                          "new-certificate",
                          "modify-certificate",
                          "modify-san",
                          "renewal"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "URL to fetch related change information.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "production": {
                  "additionalProperties": false,
                  "description": "Production deployment information.",
                  "properties": {
                    "location": {
                      "description": "The URL path where you can GET the production deployment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          },
                          "serial": {
                            "description": "Serial number that uniquely identifies each certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "sha256Fingerprint": {
                            "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocols.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate for Enrollment.",
                      "properties": {
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "serial": {
                          "description": "Serial number that uniquely identifies each certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "sha256Fingerprint": {
                          "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "productionSlots": {
                  "description": "Slots where the certificate is deployed on the production network.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "staging": {
                  "additionalProperties": false,
                  "description": "Staging deployment information.",
                  "properties": {
                    "location": {
                      "description": "The URL path where you can GET the staging deployment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          },
                          "serial": {
                            "description": "Serial number that uniquely identifies each certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "sha256Fingerprint": {
                            "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocols.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate for the enrollment.",
                      "properties": {
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "serial": {
                          "description": "Serial number that uniquely identifies each certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "sha256Fingerprint": {
                          "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "stagingSlots": {
                  "description": "Slots where the certificate is deployed on the staging network.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/active-certificate.v1.yaml"
              }
            },
            "type": "array"
          }
        },
        "required": [
          "enrollments"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/active-certificates.v1.yaml"
        }
      },
      "certificate-and-trust-chain.v1": {
        "additionalProperties": false,
        "description": "A digital certificate containing an electronic document that includes company information, a public key, and a CA's digital signature based on its private key. A chain of trust verifies a digital certificate, whereby a certificate hierarchy lets individuals verify the validity of a certificate's issuer. ",
        "properties": {
          "certificate": {
            "description": "The certificate text. Appears as `null` in responses until you specify it.",
            "nullable": true,
            "type": "string"
          },
          "trustChain": {
            "description": "The trust chain text. You may have many trust chains or none. Appears as `null` when no trust chains exist.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "certificate"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/certificate-and-trust-chain.v1.yaml"
        }
      },
      "certificate-and-trust-chain.v2": {
        "additionalProperties": false,
        "description": "A digital certificate containing an electronic document that includes company information, a public key, and a CA's digital signature based on its private key. A chain of trust verifies a digital certificate, whereby a certificate hierarchy lets individuals verify the validity of a certificate's issuer. ",
        "properties": {
          "certificatesAndTrustChains": {
            "description": "Certificate and trust chains.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "certificate": {
                  "description": "The certificate text. Appears as `null` in responses until you specify it.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "keyAlgorithm": {
                  "description": "The key algorithm of the certificate, either `ECDSA` or `RSA`. Appears as `null` in responses until you specify it.",
                  "enum": [
                    "ECDSA",
                    "RSA"
                  ],
                  "type": "string"
                },
                "trustChain": {
                  "description": "The trust chain text. You may have many trust chains or none. Appears as `null` when no trust chains exist. ",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "certificate",
                "keyAlgorithm"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "certificatesAndTrustChains"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/certificate-and-trust-chain.v2.yaml"
        }
      },
      "certificate-history.v2": {
        "additionalProperties": false,
        "description": "You can view the current and previous certificates as part of the certificate history. You retrieve each iteration in the history of your certificate by certificate type, and also view the status, expiration date, and certificate authority for the certificate. You can take actions on each activity of the certificate, including, view the certificate and view the trust chain for the certificate.",
        "properties": {
          "certificates": {
            "description": "The type of certificate. This could be a single certificate, which associates a property hostname with a single name. It could be a wildcard certificate, which secures an entire property hostname. It could be a SAN certificate, in which case you can use Subject Alternative Names to secure up to 100 property hostnames with one certificate. It could also be a wildcard SAN certificate, which is a SAN certificate that can have up to 100 SANs with 25 wildcard entries in the SAN list. Or you can have a third-party certificate, a signed certificate you obtain from an external certificate authority.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "deploymentStatus": {
                  "description": "The current status of the certificate on the network. This is either `active` or `inactive`.",
                  "enum": [
                    "active",
                    "inactive"
                  ],
                  "type": "string"
                },
                "geography": {
                  "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                  "enum": [
                    "core",
                    "china+core",
                    "russia+core"
                  ],
                  "type": "string"
                },
                "multiStackedCertificates": {
                  "description": "Enables an ECDSA certificate in addition to an RSA certificate. CPS automatically performs all certificate operations on both certificates, and uses the best certificate for each client connection to your secure properties. Customers pinning certificates need to pin both the RSA and the ECDSA certificate. You should enable this feature. If its Third Party Dual Stack Certificate, fallback RSA certificate information is present in this.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "certificate": {
                        "description": "The certificate text for the multi-stacked certificate.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "expiry": {
                        "description": "The expiration date for the multi-stacked certificate.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "keyAlgorithm": {
                        "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                        "enum": [
                          "ECDSA",
                          "RSA"
                        ],
                        "type": "string"
                      },
                      "trustChain": {
                        "description": "The trust chain for the multi-stacked certificate.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "certificate",
                      "expiry",
                      "keyAlgorithm",
                      "trustChain"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array"
                },
                "primaryCertificate": {
                  "additionalProperties": false,
                  "description": "Primary certificate for Enrollment.",
                  "nullable": true,
                  "properties": {
                    "certificate": {
                      "description": "The primary certificate in the multi-stacked certificate.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "expiry": {
                      "description": "The expiration date for the primary certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "The key algorithm for the primary certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "trustChain": {
                      "description": "The trust chain for the primary certificate.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificate",
                    "expiry",
                    "keyAlgorithm",
                    "trustChain"
                  ],
                  "type": "object"
                },
                "ra": {
                  "description": "The certificate registration authority of the primary certificate.",
                  "minLength": 1,
                  "type": "string"
                },
                "slots": {
                  "description": "The slot numbers of the primary certificate.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "type": "array"
                },
                "stagingStatus": {
                  "description": "The staging status of the primary certificate, either `active` or `inactive`.",
                  "enum": [
                    "active",
                    "inactive"
                  ],
                  "type": "string"
                },
                "type": {
                  "description": "Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                  "enum": [
                    "san",
                    "single",
                    "wildcard",
                    "wildcard-san",
                    "third-party"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "deploymentStatus",
                "multiStackedCertificates",
                "primaryCertificate",
                "slots",
                "stagingStatus",
                "type"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "certificates"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/certificate-history.v2.yaml"
        }
      },
      "change-history.v5": {
        "additionalProperties": false,
        "description": "The change history includes all changes to a certificate. This is the equivalent of viewing the certificate activity in the CPS UI. You can view each change to your certificate, the status of your change, the last updated date, the date the change was created, and who created the change. You can also take actions on each change of the certificate, including viewing the CSR for the certificate, viewing the certificate, and viewing the trust chain for the certificate.",
        "properties": {
          "changes": {
            "description": "Change history items.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "action": {
                  "description": "Show every change on the certificate. The possible changes are `import-certificate`, `renew`, `new-certificate`, `modify-san`, `update-network-configuration`.",
                  "enum": [
                    "import-certificate",
                    "renew",
                    "new-certificate",
                    "modify-san",
                    "update-network-configuration"
                  ],
                  "type": "string"
                },
                "actionDescription": {
                  "description": "A description of each change.",
                  "minLength": 1,
                  "type": "string"
                },
                "businessCaseId": {
                  "description": "The company name appears to be **Salesforce**.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "createdBy": {
                  "description": "The username of the user who initiated the change.",
                  "minLength": 1,
                  "type": "string"
                },
                "createdOn": {
                  "description": "A date and timestamp when the change started.",
                  "format": "date-time",
                  "type": "string"
                },
                "lastUpdated": {
                  "description": "A date and timestamp when the change was last updated.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "multiStackedCertificates": {
                  "description": "Dual-stacked certificates.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "certificate": {
                        "description": "Certificate text.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "csr": {
                        "description": "Certificate CSR.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "keyAlgorithm": {
                        "description": "Key algorithm of the certificate.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "trustChain": {
                        "description": "Certificate trust chain.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "certificate",
                      "csr",
                      "keyAlgorithm",
                      "trustChain"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array"
                },
                "primaryCertificate": {
                  "additionalProperties": false,
                  "description": "Primary Certificate.",
                  "nullable": true,
                  "properties": {
                    "certificate": {
                      "description": "Certificate text.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "csr": {
                      "description": "Certificate CSR.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "Key algorithm of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "trustChain": {
                      "description": "Certificate trust chain.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificate",
                    "csr",
                    "keyAlgorithm",
                    "trustChain"
                  ],
                  "type": "object"
                },
                "primaryCertificateOrderDetails": {
                  "additionalProperties": false,
                  "description": "CA order details for this Change.",
                  "nullable": true,
                  "properties": {
                    "orderId": {
                      "description": "Order ID.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "orderId"
                  ],
                  "type": "object"
                },
                "ra": {
                  "description": "The certificate authority that issued the certificate.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The status of the change. The possible changes are `incomplete`, `cancelled`, `completed`.",
                  "enum": [
                    "incomplete",
                    "cancelled",
                    "completed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "action",
                "actionDescription",
                "createdBy",
                "createdOn",
                "multiStackedCertificates",
                "ra",
                "status"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "changes"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-history.v5.yaml"
        }
      },
      "change-id.v1": {
        "additionalProperties": false,
        "description": "The change for this enrollment on which to perform the desired operation.",
        "properties": {
          "change": {
            "description": "Identifies the change to the enrollment.",
            "type": "string"
          }
        },
        "required": [
          "change"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-id.v1.yaml"
        }
      },
      "change-management-info.v1": {
        "additionalProperties": false,
        "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate. A version label indicates this member is introduced in that version. A pre-version label indicates this member is removed in that version. No version label indicates this member is present in all versions.",
        "properties": {
          "acknowledgementDeadline": {
            "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS deploys the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "pendingState": {
            "additionalProperties": false,
            "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
            "properties": {
              "pendingCertificate": {
                "additionalProperties": false,
                "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                "properties": {
                  "certificateType": {
                    "description": "The kind of certificate created.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "fullCertificate": {
                    "description": "Displays the contents of the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Displays the signature algorithm.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "certificateType",
                  "fullCertificate",
                  "signatureAlgorithm"
                ],
                "type": "object"
              },
              "pendingNetworkConfiguration": {
                "additionalProperties": false,
                "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                "properties": {
                  "mustHaveCiphers": {
                    "description": "Ciphers that you want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "networkType": {
                    "description": "The kind of enrollment network.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "default": "ak-akamai-default",
                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "sni": {
                    "additionalProperties": false,
                    "description": "Server Name Indication (SNI) setting for this Enrollment.",
                    "nullable": true,
                    "properties": {
                      "cloneDnsNames": {
                        "description": "Descriptive text for the cloned DNS.",
                        "type": "boolean"
                      },
                      "dnsNames": {
                        "description": "Descriptive text for the DNS served by SNI-only enabled enrollments.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "required": [
                      "cloneDnsNames"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "mustHaveCiphers",
                  "preferredCiphers"
                ],
                "type": "object"
              }
            },
            "required": [
              "pendingNetworkConfiguration"
            ],
            "type": "object"
          },
          "validationResult": {
            "additionalProperties": false,
            "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
            "properties": {
              "errors": {
                "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "Descriptive text for the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "Unique code for the error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "warnings": {
                "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "Descriptive text for the warning.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "Unique code for the warning.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "errors",
              "warnings"
            ],
            "type": "object"
          },
          "validationResultHash": {
            "description": "The hash of the validation result.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "pendingState",
          "validationResultHash"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-management-info.v1.yaml"
        }
      },
      "change-management-info.v2": {
        "additionalProperties": false,
        "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
        "properties": {
          "acknowledgementDeadline": {
            "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "pendingState": {
            "additionalProperties": false,
            "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
            "properties": {
              "pendingCertificate": {
                "additionalProperties": false,
                "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                "properties": {
                  "certificateType": {
                    "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                    "enum": [
                      "san",
                      "single",
                      "wildcard",
                      "wildcard-san",
                      "third-party"
                    ],
                    "type": "string"
                  },
                  "fullCertificate": {
                    "description": "Displays the contents of the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "certificateType",
                  "fullCertificate",
                  "signatureAlgorithm"
                ],
                "type": "object"
              },
              "pendingNetworkConfiguration": {
                "additionalProperties": false,
                "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "mustHaveCiphers": {
                    "default": "ak-akamai-default",
                    "description": "Ciphers that you want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "networkType": {
                    "description": "Enrollment network type.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "default": "ak-akamai-default",
                    "description": "Ciphers you want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "sni": {
                    "additionalProperties": false,
                    "description": "Server Name Indication (SNI) setting for this enrollment.",
                    "nullable": true,
                    "properties": {
                      "cloneDnsNames": {
                        "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                        "type": "boolean"
                      },
                      "dnsNames": {
                        "description": "Names served by SNI-only enabled enrollments.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "required": [
                      "cloneDnsNames"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "mustHaveCiphers",
                  "preferredCiphers"
                ],
                "type": "object"
              }
            },
            "required": [
              "pendingNetworkConfiguration"
            ],
            "type": "object"
          },
          "validationResult": {
            "additionalProperties": false,
            "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
            "properties": {
              "errors": {
                "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "warnings": {
                "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "errors",
              "warnings"
            ],
            "type": "object"
          },
          "validationResultHash": {
            "description": "The hash of `validationResult`.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "pendingState",
          "validationResultHash"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-management-info.v2.yaml"
        }
      },
      "change-management-info.v4": {
        "additionalProperties": false,
        "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
        "properties": {
          "acknowledgementDeadline": {
            "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "pendingState": {
            "additionalProperties": false,
            "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
            "properties": {
              "pendingCertificate": {
                "additionalProperties": false,
                "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                "properties": {
                  "certificateType": {
                    "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                    "enum": [
                      "san",
                      "single",
                      "wildcard",
                      "wildcard-san",
                      "third-party"
                    ],
                    "type": "string"
                  },
                  "fullCertificate": {
                    "description": "Displays the contents of the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspStapled": {
                    "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                    "type": "boolean"
                  },
                  "ocspUris": {
                    "description": "URI used for OCSP stapling validation.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "signatureAlgorithm": {
                    "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "certificateType",
                  "fullCertificate",
                  "signatureAlgorithm"
                ],
                "type": "object"
              },
              "pendingNetworkConfiguration": {
                "additionalProperties": false,
                "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNameSettings": {
                    "additionalProperties": false,
                    "description": "DNS name settings.",
                    "nullable": true,
                    "properties": {
                      "cloneDnsNames": {
                        "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                        "type": "boolean"
                      },
                      "dnsNames": {
                        "description": "Names served by SNI-only enabled enrollments.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "required": [
                      "cloneDnsNames"
                    ],
                    "type": "object"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers included for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "networkType": {
                    "description": "Enrollment network type.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "OCSP stapling setting for the deployment.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers included for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) setting for this Enrollment.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "mustHaveCiphers",
                  "preferredCiphers",
                  "quicEnabled",
                  "sniOnly"
                ],
                "type": "object"
              }
            },
            "required": [
              "pendingNetworkConfiguration"
            ],
            "type": "object"
          },
          "validationResult": {
            "additionalProperties": false,
            "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
            "properties": {
              "errors": {
                "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "warnings": {
                "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "errors",
              "warnings"
            ],
            "type": "object"
          },
          "validationResultHash": {
            "description": "The hash of `validationResult`.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "pendingState",
          "validationResultHash"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-management-info.v4.yaml"
        }
      },
      "change-management-info.v5": {
        "additionalProperties": false,
        "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
        "properties": {
          "acknowledgementDeadline": {
            "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "pendingState": {
            "additionalProperties": false,
            "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
            "properties": {
              "pendingCertificates": {
                "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "certificateType": {
                      "description": "Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                      "enum": [
                        "san",
                        "single",
                        "wildcard",
                        "wildcard-san",
                        "third-party"
                      ],
                      "type": "string"
                    },
                    "fullCertificate": {
                      "description": "Displays the contents of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "Displays the key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "signatureAlgorithm": {
                      "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificateType",
                    "fullCertificate",
                    "signatureAlgorithm"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              },
              "pendingNetworkConfiguration": {
                "additionalProperties": false,
                "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNameSettings": {
                    "additionalProperties": false,
                    "description": "DNS name settings.",
                    "nullable": true,
                    "properties": {
                      "cloneDnsNames": {
                        "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                        "type": "boolean"
                      },
                      "dnsNames": {
                        "description": "Names served by SNI-only enabled enrollments.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "required": [
                      "cloneDnsNames"
                    ],
                    "type": "object"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers included for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "networkType": {
                    "description": "Enrollment network type.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                    "enum": [
                      "on",
                      "off",
                      "not-set"
                    ],
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers included for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) setting for this Enrollment.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "mustHaveCiphers",
                  "preferredCiphers",
                  "quicEnabled",
                  "sniOnly"
                ],
                "type": "object"
              }
            },
            "required": [
              "pendingCertificates",
              "pendingNetworkConfiguration"
            ],
            "type": "object"
          },
          "validationResult": {
            "additionalProperties": false,
            "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
            "properties": {
              "errors": {
                "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "warnings": {
                "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "errors",
              "warnings"
            ],
            "type": "object"
          },
          "validationResultHash": {
            "description": "The hash of `validationResult`.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "pendingState",
          "validationResultHash"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-management-info.v5.yaml"
        }
      },
      "change-management-info.v6": {
        "additionalProperties": false,
        "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
        "properties": {
          "acknowledgementDeadline": {
            "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "pendingState": {
            "additionalProperties": false,
            "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
            "properties": {
              "pendingCertificates": {
                "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "certificateType": {
                      "description": "Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                      "enum": [
                        "san",
                        "single",
                        "wildcard",
                        "wildcard-san",
                        "third-party"
                      ],
                      "type": "string"
                    },
                    "fullCertificate": {
                      "description": "Displays the contents of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "Displays the key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "signatureAlgorithm": {
                      "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificateType",
                    "fullCertificate",
                    "signatureAlgorithm"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              },
              "pendingNetworkConfiguration": {
                "additionalProperties": false,
                "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNameSettings": {
                    "additionalProperties": false,
                    "description": "DNS name settings.",
                    "nullable": true,
                    "properties": {
                      "cloneDnsNames": {
                        "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                        "type": "boolean"
                      },
                      "dnsNames": {
                        "description": "Names served by SNI-only enabled enrollments.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      }
                    },
                    "required": [
                      "cloneDnsNames"
                    ],
                    "type": "object"
                  },
                  "fipsMode": {
                    "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.",
                    "nullable": true,
                    "type": "boolean"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers included for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "networkType": {
                    "description": "Enrollment network type.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                    "enum": [
                      "on",
                      "off",
                      "not-set"
                    ],
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers included for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) setting for this Enrollment.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "mustHaveCiphers",
                  "preferredCiphers",
                  "quicEnabled",
                  "sniOnly"
                ],
                "type": "object"
              }
            },
            "required": [
              "pendingCertificates",
              "pendingNetworkConfiguration"
            ],
            "type": "object"
          },
          "validationResult": {
            "additionalProperties": false,
            "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
            "properties": {
              "errors": {
                "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "warnings": {
                "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "description": "The description of the message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "messageCode": {
                      "description": "The unique code of the message.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "messageCode"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              }
            },
            "required": [
              "errors",
              "warnings"
            ],
            "type": "object"
          },
          "validationResultHash": {
            "description": "The hash of `validationResult`.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "pendingState",
          "validationResultHash"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change-management-info.v6.yaml"
        }
      },
      "change.v2": {
        "additionalProperties": false,
        "description": "Any change that you want to make to the network deployment of an enrollment.",
        "properties": {
          "allowedInput": {
            "description": "The resource path locations of data inputs allowed by this change. These could be required or optional for this change to proceed.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "info": {
                  "description": "The resource location for the allowed input's description.",
                  "minLength": 1,
                  "type": "string"
                },
                "requiredToProceed": {
                  "description": "If `true`, this input is required for the change to proceed.",
                  "type": "boolean"
                },
                "type": {
                  "description": "The type input. For more information, see the [Change input content type mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping).",
                  "minLength": 1,
                  "type": "string"
                },
                "update": {
                  "description": "The resource path location that you can use to make a call for this input.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "info",
                "requiredToProceed",
                "type",
                "update"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "statusInfo": {
            "additionalProperties": false,
            "description": "The status for this change at this time.",
            "properties": {
              "deploymentSchedule": {
                "additionalProperties": false,
                "description": "The schedule for when you want this change to deploy.",
                "properties": {
                  "notAfter": {
                    "description": "Don't deploy the certificate after this date.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "notBefore": {
                    "description": "Don't deploy the certificate before this date.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "notAfter",
                  "notBefore"
                ],
                "type": "object"
              },
              "description": {
                "description": "A description of the change's current status.",
                "minLength": 1,
                "type": "string"
              },
              "error": {
                "additionalProperties": false,
                "description": "Error information for this change.",
                "nullable": true,
                "properties": {
                  "code": {
                    "description": "The unique identifier code for this error.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "description": {
                    "description": "The detailed description for this error.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "Indicates when this error occurred.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "description",
                  "timestamp"
                ],
                "type": "object"
              },
              "state": {
                "description": "The change request's state. A value of `new` means the certificate is processed but the renewal process is not started. A `running` value means CPS is preparing to send your certificate to Let's Encrypt. An `awaiting-input` value means the process is waiting on a user input, for example the approval or denial of a change management item. A `suspended` value indicates the process didn't complete. A value of `cancelled` means the process has been cancelled permanently, A `completed` value means the change request is finished. An `error` value means there's an issue with the domain. ",
                "enum": [
                  "new",
                  "running",
                  "awaiting-input",
                  "suspended",
                  "cancelled",
                  "completed",
                  "error"
                ],
                "type": "string"
              },
              "status": {
                "description": "The general status of the change. This is a high level of description of the status for the change. See [Status values and descriptions](https://techdocs.akamai.com/cps/reference/status-values-and-descriptions) for the list of possible status values this operation may return.",
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "deploymentSchedule",
              "description",
              "state",
              "status"
            ],
            "type": "object"
          }
        },
        "required": [
          "allowedInput",
          "statusInfo"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/change.v2.yaml"
        }
      },
      "csr.v1": {
        "additionalProperties": false,
        "description": "Certificate Signing Request (CSR).",
        "properties": {
          "csr": {
            "description": "String with PEM formatted CSR.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "csr"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/csr.v1.yaml"
        }
      },
      "csr.v2": {
        "additionalProperties": false,
        "description": "Certificate Signing Request (CSR).",
        "properties": {
          "csrs": {
            "description": "Certificate Signing Request (CSR) objects.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "csr": {
                  "description": "String with PEM formatted CSR.",
                  "minLength": 1,
                  "type": "string"
                },
                "keyAlgorithm": {
                  "description": "Key algorithm of the certificate, either `ECDSA` or `RSA`.",
                  "enum": [
                    "ECDSA",
                    "RSA"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "csr"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "csrs"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/csr.v2.yaml"
        }
      },
      "deployment-schedule.v1": {
        "additionalProperties": false,
        "description": "If you want CPS to automatically deploy your certificate, but you don't want the deployment to occur before a certain date and time, you can set a deploy after date. You can only set a deploy after date and time for the renewal of a certificate or for a certificate that's active on the network. The certificate may not deploy at the exact time and date you specify, but it won't deploy before that time and date.",
        "properties": {
          "notAfter": {
            "description": "The time when the change is no longer in effect. This value is an ISO 8601 timestamp.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "notBefore": {
            "description": "The time when you want the change to take effect. If you don't set this, the change occurs immediately, although most changes take some time to take effect even when they're immediately effective. This value is an ISO 8601 timestamp.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "notAfter",
          "notBefore"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/deployment-schedule.v1.yaml"
        }
      },
      "deployment.v3": {
        "additionalProperties": false,
        "description": "Deploys your certificate to a network.",
        "properties": {
          "certificate": {
            "description": "The certificate text.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "networkConfiguration": {
            "additionalProperties": false,
            "description": "Information about how you want to deploy your certificate.",
            "properties": {
              "disallowedTlsVersions": {
                "description": "Disallowed TLS versions.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "geography": {
                "description": "Specifies the type of network where you want to deploy your certificate. Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                "enum": [
                  "core",
                  "china+core",
                  "russia+core"
                ],
                "type": "string"
              },
              "mustHaveCiphers": {
                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                "minLength": 1,
                "type": "string"
              },
              "preferredCiphers": {
                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                "minLength": 1,
                "type": "string"
              },
              "secureNetwork": {
                "description": "The type of deployment network you want to use. Specify Standard TLS as the enum `standard-tls` to deploy your certificate to Akamai's standard secure network. It is not PCI compliant. Specify Enhanced TLS as the enum `enhanced-tls` to deploy your certificate to Akamai's more secure network with PCI compliance capability.",
                "minLength": 1,
                "type": "string"
              },
              "sni": {
                "additionalProperties": false,
                "description": "SNI settings for your enrollment. When set to `null`, the enrollment becomes non-SNI. When it is non-null, enrollment is SNI-only. This setting cannot be changed once an enrollment is created.",
                "nullable": true,
                "properties": {
                  "cloneDnsNames": {
                    "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                    "type": "boolean"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "cloneDnsNames"
                ],
                "type": "object"
              }
            },
            "required": [
              "disallowedTlsVersions",
              "geography",
              "mustHaveCiphers",
              "preferredCiphers",
              "secureNetwork",
              "sni"
            ],
            "type": "object"
          },
          "signatureAlgorithm": {
            "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
            "enum": [
              "SHA-1",
              "SHA-256"
            ],
            "nullable": true,
            "type": "string"
          },
          "trustChain": {
            "description": "The trust chain text. You may have any number of trust chains.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "certificate",
          "networkConfiguration",
          "trustChain"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/deployment.v3.yaml"
        }
      },
      "deployment.v6": {
        "additionalProperties": false,
        "description": "Deploys your certificate to a network.",
        "properties": {
          "multiStackedCertificates": {
            "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "certificate": {
                  "description": "The certificate text.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "expiry": {
                  "description": "The expiration date for the certificate.",
                  "minLength": 1,
                  "type": "string"
                },
                "signatureAlgorithm": {
                  "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                  "enum": [
                    "SHA-1",
                    "SHA-256"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "trustChain": {
                  "description": "The trust chain for the certificate.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "certificate",
                "trustChain"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "networkConfiguration": {
            "additionalProperties": false,
            "description": "Network configuration properties.",
            "properties": {
              "disallowedTlsVersions": {
                "description": "Disallowed TLS protocol.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "dnsNames": {
                "description": "Names served by SNI-only enabled enrollments.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "geography": {
                "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                "enum": [
                  "core",
                  "china+core",
                  "russia+core"
                ],
                "type": "string"
              },
              "mustHaveCiphers": {
                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "minLength": 1,
                "type": "string"
              },
              "ocspStapling": {
                "description": "OCSP stapling setting for the deployment.",
                "minLength": 1,
                "type": "string"
              },
              "preferredCiphers": {
                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "minLength": 1,
                "type": "string"
              },
              "quicEnabled": {
                "description": "QUIC transport layer network protocol.",
                "type": "boolean"
              },
              "secureNetwork": {
                "description": "The type of deployment network. A value of `standard-tls` means Akamai's standard secure network, while `enhanced-tls` means Akamai's more secure network with PCI compliance capability.",
                "minLength": 1,
                "type": "string"
              },
              "sniOnly": {
                "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                "type": "boolean"
              }
            },
            "required": [
              "quicEnabled",
              "sniOnly"
            ],
            "type": "object"
          },
          "ocspStapled": {
            "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
            "type": "boolean"
          },
          "ocspUris": {
            "description": "URI used for OCSP stapling validation.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "primaryCertificate": {
            "additionalProperties": false,
            "description": "Primary certificate of the enrollment.",
            "nullable": true,
            "properties": {
              "certificate": {
                "description": "The certificate text.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "expiry": {
                "description": "The expiration date for the certificate.",
                "minLength": 1,
                "type": "string"
              },
              "signatureAlgorithm": {
                "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                "enum": [
                  "SHA-1",
                  "SHA-256"
                ],
                "nullable": true,
                "type": "string"
              },
              "trustChain": {
                "description": "The trust chain for the certificate.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "certificate",
              "trustChain"
            ],
            "type": "object"
          }
        },
        "required": [
          "multiStackedCertificates",
          "networkConfiguration",
          "primaryCertificate"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/deployment.v6.yaml"
        }
      },
      "deployment.v7": {
        "additionalProperties": false,
        "description": "Deploys your certificate to a network.",
        "properties": {
          "multiStackedCertificates": {
            "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "certificate": {
                  "description": "The certificate text.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "expiry": {
                  "description": "The expiration date for the certificate.",
                  "minLength": 1,
                  "type": "string"
                },
                "keyAlgorithm": {
                  "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                  "enum": [
                    "ECDSA",
                    "RSA"
                  ],
                  "type": "string"
                },
                "signatureAlgorithm": {
                  "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                  "enum": [
                    "SHA-1",
                    "SHA-256"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "trustChain": {
                  "description": "The trust chain for the certificate.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "certificate",
                "trustChain"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "networkConfiguration": {
            "additionalProperties": false,
            "description": "Network configuration properties.",
            "properties": {
              "disallowedTlsVersions": {
                "description": "Disallowed TLS protocol.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "dnsNames": {
                "description": "Names served by SNI-only enabled enrollments.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "geography": {
                "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                "enum": [
                  "core",
                  "china+core",
                  "russia+core"
                ],
                "type": "string"
              },
              "mustHaveCiphers": {
                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "minLength": 1,
                "type": "string"
              },
              "ocspStapling": {
                "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                "enum": [
                  "on",
                  "off",
                  "not-set"
                ],
                "type": "string"
              },
              "preferredCiphers": {
                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "minLength": 1,
                "type": "string"
              },
              "quicEnabled": {
                "description": "QUIC transport layer network protocol.",
                "type": "boolean"
              },
              "secureNetwork": {
                "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                "enum": [
                  "enhanced-tls",
                  "standard-tls"
                ],
                "type": "string"
              },
              "sniOnly": {
                "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                "type": "boolean"
              }
            },
            "required": [
              "quicEnabled",
              "sniOnly"
            ],
            "type": "object"
          },
          "ocspStapled": {
            "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
            "type": "boolean"
          },
          "ocspUris": {
            "description": "URI used for OCSP stapling validation.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "primaryCertificate": {
            "additionalProperties": false,
            "description": "Primary certificate of the enrollment.",
            "nullable": true,
            "properties": {
              "certificate": {
                "description": "The certificate text.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "expiry": {
                "description": "The expiration date for the certificate.",
                "minLength": 1,
                "type": "string"
              },
              "keyAlgorithm": {
                "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                "enum": [
                  "ECDSA",
                  "RSA"
                ],
                "type": "string"
              },
              "signatureAlgorithm": {
                "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                "enum": [
                  "SHA-1",
                  "SHA-256"
                ],
                "nullable": true,
                "type": "string"
              },
              "trustChain": {
                "description": "The trust chain for the certificate.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "certificate",
              "trustChain"
            ],
            "type": "object"
          }
        },
        "required": [
          "multiStackedCertificates",
          "networkConfiguration",
          "primaryCertificate"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/deployment.v7.yaml"
        }
      },
      "deployment.v8": {
        "additionalProperties": false,
        "description": "Deploys your certificate to a network.",
        "properties": {
          "multiStackedCertificates": {
            "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "certificate": {
                  "description": "The certificate text.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "expiry": {
                  "description": "The expiration date for the certificate.",
                  "minLength": 1,
                  "type": "string"
                },
                "keyAlgorithm": {
                  "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                  "enum": [
                    "ECDSA",
                    "RSA"
                  ],
                  "type": "string"
                },
                "signatureAlgorithm": {
                  "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                  "enum": [
                    "SHA-1",
                    "SHA-256"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "trustChain": {
                  "description": "The trust chain for the certificate.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                }
              },
              "required": [
                "certificate",
                "trustChain"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          },
          "networkConfiguration": {
            "additionalProperties": false,
            "description": "Network configuration properties.",
            "properties": {
              "disallowedTlsVersions": {
                "description": "Disallowed TLS protocol.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "dnsNames": {
                "description": "Names served by SNI-only enabled enrollments.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "type": "array"
              },
              "fipsMode": {
                "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.      ",
                "type": "boolean"
              },
              "geography": {
                "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                "enum": [
                  "core",
                  "china+core",
                  "russia+core"
                ],
                "type": "string"
              },
              "mustHaveCiphers": {
                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "minLength": 1,
                "type": "string"
              },
              "ocspStapling": {
                "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                "enum": [
                  "on",
                  "off",
                  "not-set"
                ],
                "type": "string"
              },
              "preferredCiphers": {
                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "minLength": 1,
                "type": "string"
              },
              "quicEnabled": {
                "description": "QUIC transport layer network protocol.",
                "type": "boolean"
              },
              "secureNetwork": {
                "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                "enum": [
                  "enhanced-tls",
                  "standard-tls"
                ],
                "type": "string"
              },
              "sniOnly": {
                "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                "type": "boolean"
              }
            },
            "required": [
              "quicEnabled",
              "sniOnly"
            ],
            "type": "object"
          },
          "ocspStapled": {
            "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
            "type": "boolean"
          },
          "ocspUris": {
            "description": "URI used for OCSP stapling validation.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "primaryCertificate": {
            "additionalProperties": false,
            "description": "Primary certificate of the enrollment.",
            "nullable": true,
            "properties": {
              "certificate": {
                "description": "The certificate text.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "expiry": {
                "description": "The expiration date for the certificate.",
                "minLength": 1,
                "type": "string"
              },
              "keyAlgorithm": {
                "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                "enum": [
                  "ECDSA",
                  "RSA"
                ],
                "type": "string"
              },
              "signatureAlgorithm": {
                "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                "enum": [
                  "SHA-1",
                  "SHA-256"
                ],
                "nullable": true,
                "type": "string"
              },
              "trustChain": {
                "description": "The trust chain for the certificate.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "certificate",
              "trustChain"
            ],
            "type": "object"
          }
        },
        "required": [
          "multiStackedCertificates",
          "networkConfiguration",
          "primaryCertificate"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/deployment.v8.yaml"
        }
      },
      "deployments.v8": {
        "additionalProperties": false,
        "description": "Deploys your certificate to a network.",
        "properties": {
          "production": {
            "additionalProperties": false,
            "description": "Encapsulates information about your certificate's deployment on the production network.",
            "properties": {
              "multiStackedCertificates": {
                "description": "Dual-stacked certificates include an ECDSA certificate in addition to an RSA certificate.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "certificate": {
                      "description": "The certificate text.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "expiry": {
                      "description": "The expiration date for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "signatureAlgorithm": {
                      "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "trustChain": {
                      "description": "The trust chain for the certificate.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificate",
                    "trustChain"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              },
              "networkConfiguration": {
                "additionalProperties": false,
                "description": "Your certificate's deployment configuration settings on production.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "fipsMode": {
                    "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.          ",
                    "type": "boolean"
                  },
                  "geography": {
                    "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                    "enum": [
                      "core",
                      "china+core",
                      "russia+core"
                    ],
                    "type": "string"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                    "enum": [
                      "on",
                      "off",
                      "not-set"
                    ],
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "secureNetwork": {
                    "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                    "enum": [
                      "enhanced-tls",
                      "standard-tls"
                    ],
                    "type": "string"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "quicEnabled",
                  "sniOnly"
                ],
                "type": "object"
              },
              "ocspStapled": {
                "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. We recommend all customers enable this feature.",
                "type": "boolean"
              },
              "ocspUris": {
                "description": "URI used for OCSP stapling validation.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "primaryCertificate": {
                "additionalProperties": false,
                "description": "Primary certificate of the enrollment.",
                "nullable": true,
                "properties": {
                  "certificate": {
                    "description": "The certificate text.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "expiry": {
                    "description": "The expiration date for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "keyAlgorithm": {
                    "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                    "enum": [
                      "ECDSA",
                      "RSA"
                    ],
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "trustChain": {
                    "description": "The trust chain for the certificate.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "certificate",
                  "trustChain"
                ],
                "type": "object"
              }
            },
            "required": [
              "multiStackedCertificates",
              "networkConfiguration",
              "primaryCertificate"
            ],
            "type": "object"
          },
          "staging": {
            "additionalProperties": false,
            "description": "Encapsulates information about your certificate's deployment on the staging network.",
            "properties": {
              "multiStackedCertificates": {
                "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "certificate": {
                      "description": "The certificate text.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "expiry": {
                      "description": "The expiration date for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "keyAlgorithm": {
                      "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                      "enum": [
                        "ECDSA",
                        "RSA"
                      ],
                      "type": "string"
                    },
                    "signatureAlgorithm": {
                      "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "trustChain": {
                      "description": "The trust chain for the certificate.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificate",
                    "trustChain"
                  ],
                  "type": "object"
                },
                "minItems": 0,
                "type": "array"
              },
              "networkConfiguration": {
                "additionalProperties": false,
                "description": "Encapsulates information about your certificate's deployment configuration settings on staging.",
                "properties": {
                  "disallowedTlsVersions": {
                    "description": "Disallowed TLS protocols.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "type": "array"
                  },
                  "fipsMode": {
                    "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.              ",
                    "type": "boolean"
                  },
                  "geography": {
                    "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                    "enum": [
                      "core",
                      "china+core",
                      "russia+core"
                    ],
                    "type": "string"
                  },
                  "mustHaveCiphers": {
                    "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspStapling": {
                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                    "enum": [
                      "on",
                      "off",
                      "not-set"
                    ],
                    "type": "string"
                  },
                  "preferredCiphers": {
                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "quicEnabled": {
                    "description": "QUIC transport layer network protocol.",
                    "type": "boolean"
                  },
                  "secureNetwork": {
                    "description": "The type of deployment network. A value of `standard-tls` means Akamai's standard secure network, while `enhanced-tls` means Akamai's more secure network with PCI compliance capability.",
                    "enum": [
                      "enhanced-tls",
                      "standard-tls"
                    ],
                    "type": "string"
                  },
                  "sniOnly": {
                    "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "quicEnabled",
                  "sniOnly"
                ],
                "type": "object"
              },
              "ocspStapled": {
                "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                "type": "boolean"
              },
              "ocspUris": {
                "description": "URI used for OCSP stapling validation.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "primaryCertificate": {
                "additionalProperties": false,
                "description": "The primary certificate of the enrollment.",
                "nullable": true,
                "properties": {
                  "certificate": {
                    "description": "The certificate text.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "expiry": {
                    "description": "The expiration date for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "keyAlgorithm": {
                    "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                    "enum": [
                      "ECDSA",
                      "RSA"
                    ],
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "trustChain": {
                    "description": "The trust chain for the certificate.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "certificate",
                  "trustChain"
                ],
                "type": "object"
              }
            },
            "required": [
              "multiStackedCertificates",
              "networkConfiguration",
              "primaryCertificate"
            ],
            "type": "object"
          }
        },
        "required": [
          "production",
          "staging"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/deployments.v8.yaml"
        }
      },
      "dv-challenges.v1": {
        "additionalProperties": false,
        "description": "When using certificates with domain validation, you prove that you have control over each of the domains listed in the certificate. When you create a new DV enrollment that generates a certificate signing request (CSR), CPS automatically sends it to Let's Encrypt for signing. Let's Encrypt sends back a challenge for each domain listed on your certificate. You prove that you have control over the domains listed in the CSR by redirecting your traffic to Akamai. This allows Akamai to complete the challenge process for you by detecting the redirect and answering Let's Encrypt's challenge. You need to configure your web server to redirect your traffic to Akamai. If you aren't able to redirect traffic on your web server, you need to instruct the person who can redirect traffic to do so. Let's Encrypt automatically verifies the domain after it receives an answer to the challenge, and marks the domain as validated. A version label indicates this member is introduced in that version. A pre-version label indicates this member is removed in that version. No version label indicates this member is present in all versions.",
        "properties": {
          "challenges": {
            "description": "Domains that need to be validated for this Enrollment. V1 only supports and displays http-01 challenge.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "domain": {
                  "description": "Domain which is being validated.",
                  "minLength": 1,
                  "type": "string"
                },
                "error": {
                  "description": "Current validation status for domains not yet validated.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "expires": {
                  "description": "Timestamp when this token or validation expires. Sample 2014-08-12T18:57:07z.",
                  "minLength": 1,
                  "type": "string"
                },
                "fullPath": {
                  "description": "URL where Let's Encrypt requests and expects to find 'token' as content.",
                  "minLength": 1,
                  "type": "string"
                },
                "redirectFullPath": {
                  "description": "The URL where Akamai publishes `responseBody` for Let's Encrypt to validate. The client can configure a redirect at `fullPath` to redirect requests to this URL, keeping in mind that the token may change over time.",
                  "minLength": 1,
                  "type": "string"
                },
                "requestTimestamp": {
                  "description": "Timestamp Akamai received validation token from Let's Encrypt. Sample `2014-08-12T18:57:07z`.",
                  "minLength": 1,
                  "type": "string"
                },
                "responseBody": {
                  "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "The domain validation status.",
                  "minLength": 1,
                  "type": "string"
                },
                "token": {
                  "description": "The validation token issued by Let's Encrypt.",
                  "minLength": 1,
                  "type": "string"
                },
                "validatedTimestamp": {
                  "description": "Timestamp when domain was successfully validated. Sample 2014-08-12T18:57:07z.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "domain",
                "error",
                "expires",
                "fullPath",
                "redirectFullPath",
                "requestTimestamp",
                "responseBody",
                "status",
                "token",
                "validatedTimestamp"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "challenges"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/dv-challenges.v1.yaml"
        }
      },
      "dv-challenges.v2": {
        "additionalProperties": false,
        "description": "When using certificates with domain validation, you prove that you have control over each of the domains listed in the certificate. When you create a new DV enrollment that generates a certificate signing request (CSR), CPS automatically sends it to Let's Encrypt for signing. Let's Encrypt sends back a challenge for each domain listed on your certificate. You prove that you have control over the domains listed in the CSR by redirecting your traffic to Akamai, or placing a token in the domain's DNS zone. This allows Akamai to complete the challenge process for you by detecting the redirect or DNS token, and answering Let's Encrypt's challenge. You need to complete one of the challenges for each domain to validate the certificate. To validate a domain, only one challenge for each domain needs to be complete. Let's Encrypt automatically verifies the domain after it receives an answer to the challenge, and marks the domain as validated.",
        "properties": {
          "dv": {
            "description": "Domain validation entities returned in query parameters.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "challenges": {
                  "description": "Domains that need to be validated for this Enrollment. V1 only supports and displays http-01 challenge. V2 allows HTTP and DNS challenge types. Each domain in the enrollment can have many challenges and can use a different challenge types. To validate a domain, only one challenge for each domain needs to be complete.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "error": {
                        "description": "Error message describing failure to validate domain control.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "fullPath": {
                        "description": "URL where Let's Encrypt requests and expects to find 'token' as content.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "redirectFullPath": {
                        "description": "The URL where Akamai publishes `responseBody` for Let's Encrypt to validate. The client can configure a redirect at `fullPath` to redirect requests to this URL, keeping in mind that the token may change over time.",
                        "type": "string"
                      },
                      "responseBody": {
                        "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The domain validation status. Current values include `Preparing`, `Pending`, `Awaiting user`, `Valid`, `Invalid`, `Error` & `Ready for Validation`.",
                        "enum": [
                          "Preparing",
                          "Pending",
                          "Awaiting user",
                          "Valid",
                          "Invalid",
                          "Error",
                          "Ready for Validation"
                        ],
                        "type": "string"
                      },
                      "token": {
                        "description": "The validation token issued by Let's Encrypt.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Validation type. Either `dns-01` or `http-01`.",
                        "enum": [
                          "dns-01",
                          "http-01"
                        ],
                        "type": "string"
                      },
                      "validationRecords": {
                        "description": "Validation attempts and status.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "authorities": {
                              "description": "Validation authorities.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "hostname": {
                              "description": "Domain name being validated.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "port": {
                              "description": "Port used for validation.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "resolvedIp": {
                              "description": "IPs resolved for name being validated.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "triedIp": {
                              "description": "IP from `resolvedIp` tried for this validation.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "url": {
                              "description": "URL attempted validated.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "usedIp": {
                              "description": "IP from `resolvedIp` used for this validation.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "authorities",
                            "hostname",
                            "port",
                            "resolvedIp",
                            "triedIp",
                            "url",
                            "usedIp"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "validationRecords"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array"
                },
                "domain": {
                  "description": "Domain which is being validated.",
                  "minLength": 1,
                  "type": "string"
                },
                "error": {
                  "description": "Current validation status for domains not yet validated.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "expires": {
                  "description": "Timestamp when this token or validation expires. Sample 2017-12-05T18:57:07z.",
                  "minLength": 1,
                  "type": "string"
                },
                "requestTimestamp": {
                  "description": "Timestamp Akamai received validation token from Let's Encrypt. Sample `2017-12-12T18:57:07z`.",
                  "minLength": 1,
                  "type": "string"
                },
                "status": {
                  "description": "Let's Encrypt validation status. Required `Valid` for certificate generation.",
                  "minLength": 1,
                  "type": "string"
                },
                "validatedTimestamp": {
                  "description": "Timestamp when domain was successfully validated. Sample 2017-12-12T18:57:07z.",
                  "minLength": 1,
                  "type": "string"
                },
                "validationStatus": {
                  "description": "Status of the domain validation process.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "challenges"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "dv"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/dv-challenges.v2.yaml"
        }
      },
      "dv-history.v1": {
        "additionalProperties": false,
        "description": "If you use domain validation, the CA that issued the certificate validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, an automated, and open CA, run for public benefit. Use the domain validation history to view your Akamai managed DV certificates' history and errors. These certificates expire in 90 days.",
        "properties": {
          "results": {
            "description": "Domain Validation (DV) challenges are used by Let's Encrypt to verify domain control.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "domain": {
                  "description": "The domain being validated.",
                  "minLength": 1,
                  "type": "string"
                },
                "domainHistory": {
                  "description": "A history record for a single domain.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "challenges": {
                        "description": "Challenges used for validation.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "error": {
                              "description": "Validation status for this challenge.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "fullPath": {
                              "description": "Path where Let's Encrypt respects and expects to find `token` as content.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "redirectFullPath": {
                              "description": "The URL where Akamai publishes `responseBody` for Let's Encrypt to validate `http-01` challenges. The client can configure a redirect at `fullPath` to redirect requests to this URL, keeping in mind that the token may change over time.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "responseBody": {
                              "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "status": {
                              "description": "The domain validation status. Status include `valid` and `pending`.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "token": {
                              "description": "The validation token issued by Let's Encrypt.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "type": {
                              "description": "Challenge type. Current types include `http-01` and `dns-01`.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "validationRecords": {
                              "description": "The records that you send to Let's Encrypt to validate your domain.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "authorities": {
                                    "description": "Validation authorities.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  },
                                  "hostname": {
                                    "description": "The name being validated.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Port used for validation.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "resolvedIp": {
                                    "description": "IPs resolved for name being validated.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  },
                                  "triedIp": {
                                    "description": "IP from `resolvedIp` tried for this validation.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL attempted validated.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "usedIp": {
                                    "description": "IP from `resolvedIp` used for this validation.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "authorities",
                                  "hostname",
                                  "port",
                                  "resolvedIp",
                                  "triedIp",
                                  "url",
                                  "usedIp"
                                ],
                                "type": "object"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validationRecords"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "domain": {
                        "description": "Domain which is being validated.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "error": {
                        "description": "Current validation status for domains not yet validated.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "expires": {
                        "description": "Timestamp when this token or validation expires. Sample 2017-12-05T18:57:07z.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "fullPath": {
                        "description": "The URL that Let's Encrypt returns for the `token`.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "redirectFullPath": {
                        "description": "The URL that Let's Encrypt returns. This is the path to the server to which you want to redirect and find the token.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "requestTimestamp": {
                        "description": "The timestamp when the domain was successfully requested. Sample 2014-08-12T18:57:07z.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "responseBody": {
                        "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "status": {
                        "description": "The domain validation status.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "token": {
                        "description": "The validation token issued by Let's Encrypt.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "validatedTimestamp": {
                        "description": "The timestamp when the domain was successfully validated. Sample 2014-08-12T18:57:07z.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "validationRecords": {
                        "description": "Validation attempts and status.",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "hostname": {
                              "description": "The records that Let's Encrypt returns to you to validate your domain.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "port": {
                              "description": "Port used for validation.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "resolvedIp": {
                              "description": "IPs resolved for name being validated.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "url": {
                              "description": "URL attempted validated.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "usedIp": {
                              "description": "IP from `resolvedIp` used for this validation.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "hostname",
                            "port",
                            "resolvedIp",
                            "url",
                            "usedIp"
                          ],
                          "type": "object"
                        },
                        "minItems": 0,
                        "type": "array"
                      },
                      "validationStatus": {
                        "description": "Status of the domain validation process.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "challenges",
                      "validationRecords"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "domain",
                "domainHistory"
              ],
              "type": "object"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "results"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/dv-history.v1.yaml"
        }
      },
      "enrollment-status.v1": {
        "additionalProperties": false,
        "description": "Encapsulates information for enrollment status. ",
        "properties": {
          "changes": {
            "description": "Identifies the modification taken on the enrollment.",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "minItems": 0,
            "type": "array"
          },
          "enrollment": {
            "description": "Identifies the enrollment modified.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "changes",
          "enrollment"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/enrollment-status.v1.yaml"
        }
      },
      "enrollment.v11": {
        "additionalProperties": false,
        "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
        "properties": {
          "adminContact": {
            "additionalProperties": false,
            "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
            "nullable": true,
            "properties": {
              "addressLineOne": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "addressLineTwo": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "city": {
                "description": "The city where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "The country where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "email": {
                "description": "The email address of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "firstName": {
                "description": "The first name of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "lastName": {
                "description": "The last name of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "organizationName": {
                "description": "The name of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "phone": {
                "description": "The phone number of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "The postal code of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "region": {
                "description": "The region of your organization, typically a state or province.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "title": {
                "description": "The title of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "title",
              "addressLineOne",
              "addressLineTwo",
              "city",
              "country",
              "email",
              "firstName",
              "lastName",
              "organizationName",
              "phone",
              "postalCode",
              "region"
            ],
            "type": "object"
          },
          "assignedSlots": {
            "description": "Slots where the certificate is either deployed or is already deployed.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "autoRenewalStartTime": {
            "description": "The specific date on which the renewal automatically starts for the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "certificateChainType": {
            "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
            "enum": [
              "default",
              "symantec1kroot"
            ],
            "nullable": true,
            "type": "string"
          },
          "certificateType": {
            "description": "Specifies the kind of certificate in the enrollment. Either san`, `single`, `wildcard`, `wildcard-san`, or `third-party. For details, see `validationType` in the [Enrollment object's versioned schema members](https://techdocs.akamai.com/cps/reference/enrollment#versioned-schema-members).",
            "enum": [
              "san",
              "single",
              "wildcard",
              "wildcard-san",
              "third-party"
            ],
            "type": "string"
          },
          "changeManagement": {
            "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
            "type": "boolean"
          },
          "csr": {
            "additionalProperties": false,
            "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
            "properties": {
              "c": {
                "description": "The country code for the country where your organization is located.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "cn": {
                "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                "minLength": 1,
                "type": "string"
              },
              "l": {
                "description": "Your city in the locality (city).",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "o": {
                "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "ou": {
                "description": "Your organizational unit.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "preferredTrustChain": {
                "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                "minLength": 0,
                "nullable": true,
                "type": "string"
              },
              "sans": {
                "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "st": {
                "description": "Your state or province.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "cn"
            ],
            "type": "object"
          },
          "enableMultiStackedCertificates": {
            "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "maxAllowedSanNames": {
            "description": "Maximum number of SAN names supported for this enrollment type.",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "maxAllowedWildcardSanNames": {
            "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "networkConfiguration": {
            "additionalProperties": false,
            "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
            "properties": {
              "clientMutualAuthentication": {
                "additionalProperties": false,
                "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                "nullable": true,
                "properties": {
                  "authenticationOptions": {
                    "additionalProperties": false,
                    "description": "Contains the configuration options for the selected trust chain.",
                    "nullable": true,
                    "properties": {
                      "ocsp": {
                        "additionalProperties": false,
                        "description": "Whether you want to enable OCSP stapling for client certificates.",
                        "nullable": true,
                        "properties": {
                          "enabled": {
                            "description": "Whether the OCSP stapling is enabled.",
                            "nullable": true,
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "type": "object"
                      },
                      "sendCaListToClient": {
                        "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ocsp",
                      "sendCaListToClient"
                    ],
                    "type": "object"
                  },
                  "setId": {
                    "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "authenticationOptions"
                ],
                "type": "object"
              },
              "disallowedTlsVersions": {
                "description": "Specify the TLS protocol versions you want to disallow.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "dnsNameSettings": {
                "additionalProperties": false,
                "description": "DNS name settings.",
                "nullable": true,
                "properties": {
                  "cloneDnsNames": {
                    "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                    "type": "boolean"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "cloneDnsNames"
                ],
                "type": "object"
              },
              "geography": {
                "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                "enum": [
                  "core",
                  "china+core",
                  "russia+core"
                ],
                "type": "string"
              },
              "mustHaveCiphers": {
                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "ocspStapling": {
                "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                "enum": [
                  "on",
                  "off",
                  "not-set"
                ],
                "nullable": true,
                "type": "string"
              },
              "preferredCiphers": {
                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "quicEnabled": {
                "description": "Set to `true` to enable QUIC protocol.",
                "type": "boolean"
              },
              "secureNetwork": {
                "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                "enum": [
                  "enhanced-tls",
                  "standard-tls"
                ],
                "type": "string"
              },
              "sniOnly": {
                "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                "type": "boolean"
              }
            },
            "required": [
              "geography",
              "quicEnabled",
              "secureNetwork",
              "sniOnly"
            ],
            "type": "object"
          },
          "org": {
            "additionalProperties": false,
            "description": "Your organization information.",
            "nullable": true,
            "properties": {
              "addressLineOne": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "addressLineTwo": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "city": {
                "description": "The city where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "The country where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "name": {
                "description": "The name of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "phone": {
                "description": "The phone number of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "The postal code of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "region": {
                "description": "The region where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "name",
              "addressLineOne",
              "addressLineTwo",
              "city",
              "country",
              "phone",
              "postalCode",
              "region"
            ],
            "type": "object"
          },
          "orgId": {
            "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "pendingChanges": {
            "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "changeType": {
                  "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                  "enum": [
                    "new-certificate",
                    "modify-certificate",
                    "modify-san",
                    "renewal"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "location": {
                  "description": "Location to fetch related change information.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "type": "object"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "productionSlots": {
            "description": "Slots where the certificate is deployed on the production network.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "ra": {
            "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
            "enum": [
              "symantec",
              "lets-encrypt",
              "third-party"
            ],
            "type": "string"
          },
          "signatureAlgorithm": {
            "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
            "enum": [
              "SHA-1",
              "SHA-256"
            ],
            "nullable": true,
            "type": "string"
          },
          "stagingSlots": {
            "description": "Slots where the certificate is deployed on the staging network.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "techContact": {
            "additionalProperties": false,
            "description": "Contact information for an administrator at Akamai.",
            "nullable": true,
            "properties": {
              "addressLineOne": {
                "description": "The address for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "addressLineTwo": {
                "description": "The address for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "city": {
                "description": "The city for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "The country for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "email": {
                "description": "The email address of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "firstName": {
                "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "lastName": {
                "description": "The last name of the technical contact who you want to use within Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "organizationName": {
                "description": "The name of your organization in Akamai where your technical contact works.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "phone": {
                "description": "The phone number of the technical contact who you want to use within Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "The postal code for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "region": {
                "description": "The region for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "title": {
                "description": "The title for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "title",
              "addressLineOne",
              "addressLineTwo",
              "city",
              "country",
              "email",
              "firstName",
              "lastName",
              "organizationName",
              "phone",
              "postalCode",
              "region"
            ],
            "type": "object"
          },
          "thirdParty": {
            "additionalProperties": false,
            "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
            "nullable": true,
            "properties": {
              "excludeSans": {
                "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                "type": "boolean"
              }
            },
            "required": [
              "excludeSans"
            ],
            "type": "object"
          },
          "validationType": {
            "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
            "enum": [
              "dv",
              "ev",
              "ov",
              "third-party"
            ],
            "type": "string"
          }
        },
        "required": [
          "certificateType",
          "changeManagement",
          "csr",
          "enableMultiStackedCertificates",
          "networkConfiguration",
          "ra",
          "validationType"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/enrollment.v11.yaml"
        }
      },
      "enrollment.v12": {
        "additionalProperties": false,
        "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
        "properties": {
          "adminContact": {
            "additionalProperties": false,
            "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
            "nullable": true,
            "properties": {
              "addressLineOne": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "addressLineTwo": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "city": {
                "description": "The city where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "The country where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "email": {
                "description": "The email address of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "firstName": {
                "description": "The first name of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "lastName": {
                "description": "The last name of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "organizationName": {
                "description": "The name of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "phone": {
                "description": "The phone number of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "The postal code of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "region": {
                "description": "The region of your organization, typically a state or province.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "title": {
                "description": "The title of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "title",
              "addressLineOne",
              "addressLineTwo",
              "city",
              "country",
              "email",
              "firstName",
              "lastName",
              "organizationName",
              "phone",
              "postalCode",
              "region"
            ],
            "type": "object"
          },
          "assignedSlots": {
            "description": "Slots where the certificate is either deployed or is already deployed.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "autoRenewalStartTime": {
            "description": "The specific date on which the renewal automatically starts for the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "certificateChainType": {
            "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
            "enum": [
              "default",
              "symantec1kroot"
            ],
            "nullable": true,
            "type": "string"
          },
          "certificateType": {
            "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. See [Enrollment.validationType Values](#validationtype) for details.",
            "enum": [
              "san",
              "single",
              "wildcard",
              "wildcard-san",
              "third-party"
            ],
            "type": "string"
          },
          "changeManagement": {
            "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
            "type": "boolean"
          },
          "csr": {
            "additionalProperties": false,
            "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
            "properties": {
              "c": {
                "description": "The country code for the country where your organization is located.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "cn": {
                "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                "minLength": 1,
                "type": "string"
              },
              "l": {
                "description": "Your city in the locality (city).",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "o": {
                "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "ou": {
                "description": "Your organizational unit.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "preferredTrustChain": {
                "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                "minLength": 0,
                "nullable": true,
                "type": "string"
              },
              "sans": {
                "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "st": {
                "description": "Your state or province.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "cn"
            ],
            "type": "object"
          },
          "enableMultiStackedCertificates": {
            "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
            "type": "boolean"
          },
          "id": {
            "description": "The unique identifier of the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "maxAllowedSanNames": {
            "description": "Maximum number of SAN names supported for this enrollment type.",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "maxAllowedWildcardSanNames": {
            "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "networkConfiguration": {
            "additionalProperties": false,
            "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
            "properties": {
              "clientMutualAuthentication": {
                "additionalProperties": false,
                "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                "nullable": true,
                "properties": {
                  "authenticationOptions": {
                    "additionalProperties": false,
                    "description": "Contains the configuration options for the selected trust chain.",
                    "nullable": true,
                    "properties": {
                      "ocsp": {
                        "additionalProperties": false,
                        "description": "Whether you want to enable OCSP stapling for client certificates.",
                        "nullable": true,
                        "properties": {
                          "enabled": {
                            "description": "Whether the OCSP stapling is enabled.",
                            "nullable": true,
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enabled"
                        ],
                        "type": "object"
                      },
                      "sendCaListToClient": {
                        "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ocsp",
                      "sendCaListToClient"
                    ],
                    "type": "object"
                  },
                  "setId": {
                    "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "authenticationOptions"
                ],
                "type": "object"
              },
              "disallowedTlsVersions": {
                "description": "Specify the TLS protocol versions you want to disallow.",
                "items": {
                  "minLength": 1,
                  "type": "string"
                },
                "minItems": 0,
                "nullable": true,
                "type": "array"
              },
              "dnsNameSettings": {
                "additionalProperties": false,
                "description": "DNS name settings.",
                "nullable": true,
                "properties": {
                  "cloneDnsNames": {
                    "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                    "type": "boolean"
                  },
                  "dnsNames": {
                    "description": "Names served by SNI-only enabled enrollments.",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "cloneDnsNames"
                ],
                "type": "object"
              },
              "fipsMode": {
                "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment. When enabled, you need to use an active (non-deprecated) cipher profile for both `mustHaveCiphers` and `preferredCiphers`. For details, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                "nullable": true,
                "type": "boolean"
              },
              "geography": {
                "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                "enum": [
                  "core",
                  "china+core",
                  "russia+core"
                ],
                "type": "string"
              },
              "mustHaveCiphers": {
                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "ocspStapling": {
                "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                "enum": [
                  "on",
                  "off",
                  "not-set"
                ],
                "nullable": true,
                "type": "string"
              },
              "preferredCiphers": {
                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "quicEnabled": {
                "description": "Set to `true` to enable QUIC protocol.",
                "type": "boolean"
              },
              "secureNetwork": {
                "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                "enum": [
                  "enhanced-tls",
                  "standard-tls"
                ],
                "type": "string"
              },
              "sniOnly": {
                "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                "type": "boolean"
              }
            },
            "required": [
              "geography",
              "quicEnabled",
              "secureNetwork",
              "sniOnly"
            ],
            "type": "object"
          },
          "org": {
            "additionalProperties": false,
            "description": "Your organization information.",
            "nullable": true,
            "properties": {
              "addressLineOne": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "addressLineTwo": {
                "description": "The address of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "city": {
                "description": "The city where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "The country where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "name": {
                "description": "The name of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "phone": {
                "description": "The phone number of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "The postal code of your organization.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "region": {
                "description": "The region where your organization resides.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "name",
              "addressLineOne",
              "addressLineTwo",
              "city",
              "country",
              "phone",
              "postalCode",
              "region"
            ],
            "type": "object"
          },
          "orgId": {
            "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "pendingChanges": {
            "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "changeType": {
                  "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                  "enum": [
                    "new-certificate",
                    "modify-certificate",
                    "modify-san",
                    "renewal"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "location": {
                  "description": "Location to fetch related change information.",
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "type": "object"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "productionSlots": {
            "description": "Slots where the certificate is deployed on the production network.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "ra": {
            "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
            "enum": [
              "symantec",
              "lets-encrypt",
              "third-party"
            ],
            "type": "string"
          },
          "signatureAlgorithm": {
            "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
            "enum": [
              "SHA-1",
              "SHA-256"
            ],
            "nullable": true,
            "type": "string"
          },
          "stagingSlots": {
            "description": "Slots where the certificate is deployed on the staging network.",
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "minItems": 0,
            "nullable": true,
            "type": "array"
          },
          "techContact": {
            "additionalProperties": false,
            "description": "Contact information for an administrator at Akamai.",
            "nullable": true,
            "properties": {
              "addressLineOne": {
                "description": "The address for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "addressLineTwo": {
                "description": "The address for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "city": {
                "description": "The city for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "country": {
                "description": "The country for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "email": {
                "description": "The email address of the administrator who you want to use as a contact at your company.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "firstName": {
                "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "lastName": {
                "description": "The last name of the technical contact who you want to use within Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "organizationName": {
                "description": "The name of your organization in Akamai where your technical contact works.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "phone": {
                "description": "The phone number of the technical contact who you want to use within Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "postalCode": {
                "description": "The postal code for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "region": {
                "description": "The region for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              },
              "title": {
                "description": "The title for an administrator at Akamai.",
                "minLength": 1,
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "title",
              "addressLineOne",
              "addressLineTwo",
              "city",
              "country",
              "email",
              "firstName",
              "lastName",
              "organizationName",
              "phone",
              "postalCode",
              "region"
            ],
            "type": "object"
          },
          "thirdParty": {
            "additionalProperties": false,
            "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
            "nullable": true,
            "properties": {
              "excludeSans": {
                "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                "type": "boolean"
              }
            },
            "required": [
              "excludeSans"
            ],
            "type": "object"
          },
          "validationType": {
            "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
            "enum": [
              "dv",
              "ev",
              "ov",
              "third-party"
            ],
            "type": "string"
          }
        },
        "required": [
          "certificateType",
          "changeManagement",
          "csr",
          "enableMultiStackedCertificates",
          "networkConfiguration",
          "ra",
          "validationType"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/enrollment.v12.yaml"
        }
      },
      "enrollments.v11": {
        "additionalProperties": false,
        "description": "Provides a list of enrollments.",
        "properties": {
          "enrollments": {
            "description": "The actual list of enrollments.",
            "items": {
              "additionalProperties": false,
              "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
              "properties": {
                "adminContact": {
                  "additionalProperties": false,
                  "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
                  "nullable": true,
                  "properties": {
                    "addressLineOne": {
                      "description": "The address of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "addressLineTwo": {
                      "description": "The address of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "city": {
                      "description": "The city where your organization resides.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "country": {
                      "description": "The country where your organization resides.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "email": {
                      "description": "The email address of the administrator who you want to use as a contact at your company.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The first name of the administrator who you want to use as a contact at your company.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The last name of the administrator who you want to use as a contact at your company.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "organizationName": {
                      "description": "The name of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The phone number of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "postalCode": {
                      "description": "The postal code of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "The region of your organization, typically a state or province.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "title": {
                      "description": "The title of the administrator who you want to use as a contact at your company.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "addressLineOne",
                    "addressLineTwo",
                    "city",
                    "country",
                    "email",
                    "firstName",
                    "lastName",
                    "organizationName",
                    "phone",
                    "postalCode",
                    "region"
                  ],
                  "type": "object"
                },
                "assignedSlots": {
                  "description": "Slots where the certificate is either deployed or is already deployed.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "autoRenewalStartTime": {
                  "description": "The specific date on which the renewal automatically starts for the enrollment.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "certificateChainType": {
                  "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
                  "enum": [
                    "default",
                    "symantec1kroot"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "certificateType": {
                  "description": "Specifies the kind of certificate in the enrollment. Either san`, `single`, `wildcard`, `wildcard-san`, or `third-party. For details, see `validationType` in the [Enrollment object's versioned schema members](https://techdocs.akamai.com/cps/reference/enrollment#versioned-schema-members).",
                  "enum": [
                    "san",
                    "single",
                    "wildcard",
                    "wildcard-san",
                    "third-party"
                  ],
                  "type": "string"
                },
                "changeManagement": {
                  "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
                  "type": "boolean"
                },
                "csr": {
                  "additionalProperties": false,
                  "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                  "properties": {
                    "c": {
                      "description": "The country code for the country where your organization is located.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "cn": {
                      "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "l": {
                      "description": "Your city in the locality (city).",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "o": {
                      "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou": {
                      "description": "Your organizational unit.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "preferredTrustChain": {
                      "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                      "minLength": 0,
                      "nullable": true,
                      "type": "string"
                    },
                    "sans": {
                      "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "st": {
                      "description": "Your state or province.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "cn"
                  ],
                  "type": "object"
                },
                "enableMultiStackedCertificates": {
                  "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                  "type": "boolean"
                },
                "id": {
                  "description": "The unique identifier of the enrollment.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "location": {
                  "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
                  "minLength": 1,
                  "nullable": true,
                  "type": "string"
                },
                "maxAllowedSanNames": {
                  "description": "Maximum number of SAN names supported for this enrollment type.",
                  "minimum": 0,
                  "nullable": true,
                  "type": "integer"
                },
                "maxAllowedWildcardSanNames": {
                  "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
                  "minimum": 0,
                  "nullable": true,
                  "type": "integer"
                },
                "networkConfiguration": {
                  "additionalProperties": false,
                  "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
                  "properties": {
                    "clientMutualAuthentication": {
                      "additionalProperties": false,
                      "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                      "nullable": true,
                      "properties": {
                        "authenticationOptions": {
                          "additionalProperties": false,
                          "description": "Contains the configuration options for the selected trust chain.",
                          "nullable": true,
                          "properties": {
                            "ocsp": {
                              "additionalProperties": false,
                              "description": "Whether you want to enable OCSP stapling for client certificates.",
                              "nullable": true,
                              "properties": {
                                "enabled": {
                                  "description": "Whether the OCSP stapling is enabled.",
                                  "nullable": true,
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "enabled"
                              ],
                              "type": "object"
                            },
                            "sendCaListToClient": {
                              "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                              "nullable": true,
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "ocsp",
                            "sendCaListToClient"
                          ],
                          "type": "object"
                        },
                        "setId": {
                          "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "authenticationOptions"
                      ],
                      "type": "object"
                    },
                    "disallowedTlsVersions": {
                      "description": "Specify the TLS protocol versions you want to disallow.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "dnsNameSettings": {
                      "additionalProperties": false,
                      "description": "DNS name settings.",
                      "nullable": true,
                      "properties": {
                        "cloneDnsNames": {
                          "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                          "type": "boolean"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "cloneDnsNames"
                      ],
                      "type": "object"
                    },
                    "geography": {
                      "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                      "enum": [
                        "core",
                        "china+core",
                        "russia+core"
                      ],
                      "type": "string"
                    },
                    "mustHaveCiphers": {
                      "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "ocspStapling": {
                      "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                      "enum": [
                        "on",
                        "off",
                        "not-set"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "preferredCiphers": {
                      "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "quicEnabled": {
                      "description": "Set to `true` to enable QUIC protocol.",
                      "type": "boolean"
                    },
                    "secureNetwork": {
                      "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                      "enum": [
                        "enhanced-tls",
                        "standard-tls"
                      ],
                      "type": "string"
                    },
                    "sniOnly": {
                      "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "geography",
                    "quicEnabled",
                    "secureNetwork",
                    "sniOnly"
                  ],
                  "type": "object"
                },
                "org": {
                  "additionalProperties": false,
                  "description": "Your organization information.",
                  "nullable": true,
                  "properties": {
                    "addressLineOne": {
                      "description": "The address of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "addressLineTwo": {
                      "description": "The address of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "city": {
                      "description": "The city where your organization resides.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "country": {
                      "description": "The country where your organization resides.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The phone number of the administrator who you want to use as a contact at your company.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "postalCode": {
                      "description": "The postal code of your organization.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "The region where your organization resides.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "addressLineOne",
                    "addressLineTwo",
                    "city",
                    "country",
                    "phone",
                    "postalCode",
                    "region"
                  ],
                  "type": "object"
                },
                "orgId": {
                  "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
                  "minimum": 0,
                  "nullable": true,
                  "type": "integer"
                },
                "pendingChanges": {
                  "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "changeType": {
                        "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                        "enum": [
                          "new-certificate",
                          "modify-certificate",
                          "modify-san",
                          "renewal"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Location to fetch related change information.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "location"
                    ],
                    "type": "object"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "productionSlots": {
                  "description": "Slots where the certificate is deployed on the production network.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "ra": {
                  "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
                  "enum": [
                    "symantec",
                    "lets-encrypt",
                    "third-party"
                  ],
                  "type": "string"
                },
                "signatureAlgorithm": {
                  "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                  "enum": [
                    "SHA-1",
                    "SHA-256"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "stagingSlots": {
                  "description": "Slots where the certificate is deployed on the staging network.",
                  "items": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "minItems": 0,
                  "nullable": true,
                  "type": "array"
                },
                "techContact": {
                  "additionalProperties": false,
                  "description": "Contact information for an administrator at Akamai.",
                  "nullable": true,
                  "properties": {
                    "addressLineOne": {
                      "description": "The address for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "addressLineTwo": {
                      "description": "The address for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "city": {
                      "description": "The city for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "country": {
                      "description": "The country for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "email": {
                      "description": "The email address of the administrator who you want to use as a contact at your company.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The last name of the technical contact who you want to use within Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "organizationName": {
                      "description": "The name of your organization in Akamai where your technical contact works.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "phone": {
                      "description": "The phone number of the technical contact who you want to use within Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "postalCode": {
                      "description": "The postal code for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "The region for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "title": {
                      "description": "The title for an administrator at Akamai.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "addressLineOne",
                    "addressLineTwo",
                    "city",
                    "country",
                    "email",
                    "firstName",
                    "lastName",
                    "organizationName",
                    "phone",
                    "postalCode",
                    "region"
                  ],
                  "type": "object"
                },
                "thirdParty": {
                  "additionalProperties": false,
                  "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
                  "nullable": true,
                  "properties": {
                    "excludeSans": {
                      "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "excludeSans"
                  ],
                  "type": "object"
                },
                "validationType": {
                  "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
                  "enum": [
                    "dv",
                    "ev",
                    "ov",
                    "third-party"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "certificateType",
                "changeManagement",
                "csr",
                "enableMultiStackedCertificates",
                "networkConfiguration",
                "ra",
                "validationType"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/enrollment.v11.yaml"
              }
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "enrollments"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/enrollments.v11.yaml"
        }
      },
      "warnings.v1": {
        "additionalProperties": false,
        "description": "Warnings generated by CPS.",
        "properties": {
          "warnings": {
            "description": "String with comma separated list of warnings.",
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "warnings"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/warnings.v1.yaml"
        }
      }
    }
  },
  "externalDocs": {
    "description": "See documentation for Akamai's Certificate Provisioning System API",
    "url": "https://techdocs.akamai.com/cps/reference"
  },
  "info": {
    "description": "Get full life cycle management of SSL certificates for your\nAkamai CDN applications.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Akamai: Certificate Provisioning System API",
    "version": "v2"
  },
  "openapi": "3.0.0",
  "paths": {
    "/active-certificates": {
      "get": {
        "description": "__Limited availability__ Lists enrollments with active certificates. Note that the rate limit for this operation is 10 requests per minute per account. For details, see [Rate limiting](https://techdocs.akamai.com/cps/reference/rate-limiting).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-active-certificates"
        },
        "operationId": "get-active-certificates",
        "parameters": [
          {
            "description": "Specify the contract on which to operate or view.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.active-certificates.v1+json": {
                "example": {
                  "enrollments": [
                    {
                      "assignedSlots": [
                        38634
                      ],
                      "certificateType": "san",
                      "csr": {
                        "cn": "dv-nplus1.Rel4-14-1.akatest",
                        "sans": [
                          "dv-nplus1.rel4-14-1.akatest",
                          "san-dv-nplus1.rel4-14-1.akatest"
                        ]
                      },
                      "enableMultiStackedCertificates": false,
                      "id": 10000,
                      "location": "/cps/v2/enrollments/10000",
                      "pendingChanges": [
                        {
                          "changeType": "renewal",
                          "location": "/cps/v2/enrollments/10000/changes/10002"
                        }
                      ],
                      "production": {
                        "location": "/cps/v2/enrollments/10000/deployments/production",
                        "multiStackedCertificates": [
                          {
                            "expiry": "2024-10-18T23:59:59Z",
                            "keyAlgorithm": "RSA",
                            "serial": "03:d8:23:ed:83:8c:7b:c7:bd:81:aa:c0:0a:b1:90:9b:fd:17",
                            "sha256Fingerprint": "A4:8B:8A:23:80:FE:BE:56:9D:21:82:8A:56:96:BC:03:FA:63:62:13:1F:E7:36:22:1E:1B:50:E9:1D:7A:2F:F8",
                            "signatureAlgorithm": "SHA-256"
                          }
                        ],
                        "networkConfiguration": {
                          "disallowedTlsVersions": [
                            "TLSv1",
                            "TLSv1_1"
                          ],
                          "dnsNames": null,
                          "geography": "core",
                          "mustHaveCiphers": "ak-akamai-2020q1",
                          "ocspStapling": "on",
                          "preferredCiphers": "ak-akamai-2020q1",
                          "quicEnabled": false,
                          "secureNetwork": "enhanced-tls",
                          "sniOnly": false
                        },
                        "primaryCertificate": {
                          "expiry": "2021-09-12T14:16:59z",
                          "keyAlgorithm": "RSA",
                          "serial": "ff:36:a7:11:7a:91:1a:43:b3:fa:93:05:63:3a:d5:a9:9e:58",
                          "sha256Fingerprint": "E0:EB:A8:BE:F9:92:70:2F:99:46:5E:3E:AC:79:13:E8:FC:00:8A:47:28:83:77:CC:7F:2F:B5:52:89:9C:2E:63",
                          "signatureAlgorithm": "SHA-256"
                        }
                      },
                      "productionSlots": [
                        38634
                      ],
                      "staging": {
                        "location": "/cps/v2/enrollments/10000/deployments/staging",
                        "multiStackedCertificates": [
                          {
                            "expiry": "2024-10-18T23:59:59Z",
                            "keyAlgorithm": "RSA",
                            "serial": "03:d8:23:ed:83:8c:7b:c7:bd:81:aa:c0:0a:b1:90:9b:fd:17",
                            "sha256Fingerprint": "A4:8B:8A:23:80:FE:BE:56:9D:21:82:8A:56:96:BC:03:FA:63:62:13:1F:E7:36:22:1E:1B:50:E9:1D:7A:2F:F8",
                            "signatureAlgorithm": "SHA-256"
                          }
                        ],
                        "networkConfiguration": {
                          "disallowedTlsVersions": [
                            "TLSv1",
                            "TLSv1_1"
                          ],
                          "dnsNames": null,
                          "geography": "core",
                          "mustHaveCiphers": "ak-akamai-2020q1",
                          "ocspStapling": "on",
                          "preferredCiphers": "ak-akamai-2020q1",
                          "quicEnabled": false,
                          "secureNetwork": "enhanced-tls",
                          "sniOnly": false
                        },
                        "primaryCertificate": {
                          "expiry": "2021-09-12T14:16:59z",
                          "keyAlgorithm": "RSA",
                          "serial": "ff:36:a7:11:7a:91:1a:43:b3:fa:93:05:63:3a:d5:a9:9e:58",
                          "sha256Fingerprint": "E0:EB:A8:BE:F9:92:70:2F:99:46:5E:3E:AC:79:13:E8:FC:00:8A:47:28:83:77:CC:7F:2F:B5:52:89:9C:2E:63",
                          "signatureAlgorithm": "SHA-256"
                        }
                      },
                      "stagingSlots": [
                        38634
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists enrollments with details on active certificates.",
                  "properties": {
                    "enrollments": {
                      "description": "Enrollments with active certificates.",
                      "items": {
                        "additionalProperties": false,
                        "description": "An enrollment with the information about your certificates. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
                        "properties": {
                          "assignedSlots": {
                            "description": "Slots where the certificate is either deployed or is already deployed.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "certificateType": {
                            "description": "Specifies the kind of certificate in the enrollment. Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. For details, see `validationType` in the [Enrollment object's versioned schema members](https://techdocs.akamai.com/cps/reference/enrollment#versioned-schema-members).",
                            "enum": [
                              "san",
                              "single",
                              "wildcard",
                              "wildcard-san",
                              "third-party"
                            ],
                            "type": "string"
                          },
                          "csr": {
                            "additionalProperties": false,
                            "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                            "properties": {
                              "cn": {
                                "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sans": {
                                "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 0,
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "enableMultiStackedCertificates": {
                            "description": "Enable dual-stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                            "type": "boolean"
                          },
                          "id": {
                            "description": "The unique identifier of the enrollment.",
                            "minimum": 1,
                            "nullable": false,
                            "type": "integer"
                          },
                          "location": {
                            "description": "The URL path where you can GET the enrollment.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "pendingChanges": {
                            "description": "Currently pending changes. The last item in the array is the most recent change.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "changeType": {
                                  "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                                  "enum": [
                                    "new-certificate",
                                    "modify-certificate",
                                    "modify-san",
                                    "renewal"
                                  ],
                                  "nullable": true,
                                  "type": "string"
                                },
                                "location": {
                                  "description": "URL to fetch related change information.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "production": {
                            "additionalProperties": false,
                            "description": "Production deployment information.",
                            "properties": {
                              "location": {
                                "description": "The URL path where you can GET the production deployment.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "multiStackedCertificates": {
                                "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "expiry": {
                                      "description": "The expiration date for the certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "keyAlgorithm": {
                                      "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                                      "enum": [
                                        "ECDSA",
                                        "RSA"
                                      ],
                                      "type": "string"
                                    },
                                    "serial": {
                                      "description": "Serial number that uniquely identifies each certificate.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "sha256Fingerprint": {
                                      "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "signatureAlgorithm": {
                                      "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                                      "enum": [
                                        "SHA-1",
                                        "SHA-256"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "minItems": 0,
                                "type": "array"
                              },
                              "networkConfiguration": {
                                "additionalProperties": false,
                                "description": "Network configuration properties.",
                                "properties": {
                                  "disallowedTlsVersions": {
                                    "description": "Disallowed TLS protocols.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  },
                                  "dnsNames": {
                                    "description": "Names served by SNI-only enabled enrollments.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "geography": {
                                    "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                                    "enum": [
                                      "core",
                                      "china+core",
                                      "russia+core"
                                    ],
                                    "type": "string"
                                  },
                                  "mustHaveCiphers": {
                                    "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "ocspStapling": {
                                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                                    "enum": [
                                      "on",
                                      "off",
                                      "not-set"
                                    ],
                                    "type": "string"
                                  },
                                  "preferredCiphers": {
                                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "quicEnabled": {
                                    "description": "QUIC transport layer network protocol.",
                                    "type": "boolean"
                                  },
                                  "secureNetwork": {
                                    "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                                    "enum": [
                                      "enhanced-tls",
                                      "standard-tls"
                                    ],
                                    "type": "string"
                                  },
                                  "sniOnly": {
                                    "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "primaryCertificate": {
                                "additionalProperties": false,
                                "description": "Primary certificate for Enrollment.",
                                "properties": {
                                  "expiry": {
                                    "description": "The expiration date for the certificate.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "keyAlgorithm": {
                                    "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                                    "enum": [
                                      "ECDSA",
                                      "RSA"
                                    ],
                                    "type": "string"
                                  },
                                  "serial": {
                                    "description": "Serial number that uniquely identifies each certificate.",
                                    "minLength": 1,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "sha256Fingerprint": {
                                    "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "signatureAlgorithm": {
                                    "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                                    "enum": [
                                      "SHA-1",
                                      "SHA-256"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "productionSlots": {
                            "description": "Slots where the certificate is deployed on the production network.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "staging": {
                            "additionalProperties": false,
                            "description": "Staging deployment information.",
                            "properties": {
                              "location": {
                                "description": "The URL path where you can GET the staging deployment.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "multiStackedCertificates": {
                                "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "expiry": {
                                      "description": "The expiration date for the certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "keyAlgorithm": {
                                      "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                                      "enum": [
                                        "ECDSA",
                                        "RSA"
                                      ],
                                      "type": "string"
                                    },
                                    "serial": {
                                      "description": "Serial number that uniquely identifies each certificate.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "sha256Fingerprint": {
                                      "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "signatureAlgorithm": {
                                      "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                                      "enum": [
                                        "SHA-1",
                                        "SHA-256"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "minItems": 0,
                                "type": "array"
                              },
                              "networkConfiguration": {
                                "additionalProperties": false,
                                "description": "Network configuration properties.",
                                "properties": {
                                  "disallowedTlsVersions": {
                                    "description": "Disallowed TLS protocols.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "type": "array"
                                  },
                                  "dnsNames": {
                                    "description": "Names served by SNI-only enabled enrollments.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "geography": {
                                    "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                                    "enum": [
                                      "core",
                                      "china+core",
                                      "russia+core"
                                    ],
                                    "type": "string"
                                  },
                                  "mustHaveCiphers": {
                                    "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "ocspStapling": {
                                    "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                                    "enum": [
                                      "on",
                                      "off",
                                      "not-set"
                                    ],
                                    "type": "string"
                                  },
                                  "preferredCiphers": {
                                    "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "quicEnabled": {
                                    "description": "QUIC transport layer network protocol.",
                                    "type": "boolean"
                                  },
                                  "secureNetwork": {
                                    "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                                    "enum": [
                                      "enhanced-tls",
                                      "standard-tls"
                                    ],
                                    "type": "string"
                                  },
                                  "sniOnly": {
                                    "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "primaryCertificate": {
                                "additionalProperties": false,
                                "description": "Primary certificate for the enrollment.",
                                "properties": {
                                  "expiry": {
                                    "description": "The expiration date for the certificate.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "keyAlgorithm": {
                                    "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                                    "enum": [
                                      "ECDSA",
                                      "RSA"
                                    ],
                                    "type": "string"
                                  },
                                  "serial": {
                                    "description": "Serial number that uniquely identifies each certificate.",
                                    "minLength": 1,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "sha256Fingerprint": {
                                    "description": "A digital fingerprint, formatted as 32 pairs of hexadecimal digits separated by ':'.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "signatureAlgorithm": {
                                    "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                                    "enum": [
                                      "SHA-1",
                                      "SHA-256"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "stagingSlots": {
                            "description": "Slots where the certificate is deployed on the staging network.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/active-certificate.v1.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "enrollments"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/active-certificates.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the set of enrollments with active certificates."
          }
        },
        "summary": "List active certificates",
        "tags": [
          "Certificates"
        ],
        "x-akamai": {
          "status": "LA"
        }
      },
      "x-akamai": {
        "file-path": "paths/active-certificates.yaml",
        "path-info": "/active-certificates"
      }
    },
    "/enrollments": {
      "post": {
        "description": "Creates an enrollment that contains all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/post-enrollment"
        },
        "operationId": "post-enrollment",
        "parameters": [
          {
            "description": "Specify the contract on which to operate or view.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "Don't deploy after this date (UTC).",
            "example": "{{deploy-not-after}}",
            "in": "query",
            "name": "deploy-not-after",
            "schema": {
              "example": "2021-01-31",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/deploy-not-after-query.yaml"
            }
          },
          {
            "description": "Don't deploy before this date (UTC).",
            "example": "{{deploy-not-before}}",
            "in": "query",
            "name": "deploy-not-before",
            "schema": {
              "example": "2021-01-31",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/deploy-not-before-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.akamai.cps.enrollment.v12+json": {
              "example": {
                "adminContact": {
                  "addressLineOne": "150 Broadway",
                  "addressLineTwo": null,
                  "city": "Cambridge",
                  "country": "US",
                  "email": "afero@akamai.com",
                  "firstName": "R1",
                  "lastName": "D1",
                  "organizationName": "Akamai",
                  "phone": "617-555-0111",
                  "postalCode": "02142",
                  "region": "MA",
                  "title": "Adminstrator"
                },
                "assignedSlots": [
                  1234
                ],
                "autoRenewalStartTime": null,
                "certificateChainType": "default",
                "certificateType": "third-party",
                "changeManagement": true,
                "csr": {
                  "c": "US",
                  "cn": "www.example.com",
                  "l": "Cambridge",
                  "o": "Akamai",
                  "ou": "WebEx",
                  "preferredTrustChain": null,
                  "sans": [
                    "san1.example.com",
                    "san2.example.com",
                    "san3.example.com",
                    "www.example.com"
                  ],
                  "st": "MA"
                },
                "enableMultiStackedCertificates": false,
                "id": "10001",
                "location": "/cps-api/enrollments/10001",
                "maxAllowedSanNames": 100,
                "maxAllowedWildcardSanNames": 100,
                "networkConfiguration": {
                  "clientMutualAuthentication": {
                    "authenticationOptions": {
                      "ocsp": {
                        "enabled": false
                      },
                      "sendCaListToClient": false
                    },
                    "setId": "Custom_CPS-6134b_B-3-1AHBENT.xml"
                  },
                  "disallowedTlsVersions": [
                    "TLSv1",
                    "TLSv1_1"
                  ],
                  "dnsNameSettings": {
                    "cloneDnsNames": false,
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ]
                  },
                  "fipsMode": true,
                  "geography": "core",
                  "mustHaveCiphers": "ak-akamai-2020q1",
                  "ocspStapling": "on",
                  "preferredCiphers": "ak-akamai-2020q1",
                  "quicEnabled": false,
                  "secureNetwork": "enhanced-tls",
                  "sniOnly": true
                },
                "org": {
                  "addressLineOne": "150 Broadway",
                  "addressLineTwo": null,
                  "city": "Cambridge",
                  "country": "US",
                  "name": "Akamai Technologies",
                  "phone": "617-555-0111",
                  "postalCode": "02142",
                  "region": "MA"
                },
                "orgId": 645263546,
                "pendingChanges": [
                  {
                    "changeType": "new-certificate",
                    "location": "/cps-api/enrollments/10001/changes/10002"
                  }
                ],
                "productionSlots": [
                  1234
                ],
                "ra": "third-party",
                "signatureAlgorithm": null,
                "stagingSlots": [
                  1234
                ],
                "techContact": {
                  "addressLineOne": "150 Broadway",
                  "addressLineTwo": null,
                  "city": "Cambridge",
                  "country": "US",
                  "email": "jsmith@akamai.com",
                  "firstName": "R2",
                  "lastName": "D2",
                  "organizationName": "Akamai",
                  "phone": "617-555-0111",
                  "postalCode": "02142",
                  "region": "MA",
                  "title": "Technical Engineer"
                },
                "thirdParty": {
                  "excludeSans": false
                },
                "validationType": "third-party"
              },
              "schema": {
                "additionalProperties": false,
                "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
                "properties": {
                  "adminContact": {
                    "additionalProperties": false,
                    "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
                    "nullable": true,
                    "properties": {
                      "addressLineOne": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "addressLineTwo": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "city": {
                        "description": "The city where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "country": {
                        "description": "The country where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The first name of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The last name of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "organizationName": {
                        "description": "The name of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "phone": {
                        "description": "The phone number of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "postalCode": {
                        "description": "The postal code of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "region": {
                        "description": "The region of your organization, typically a state or province.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "title": {
                        "description": "The title of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "addressLineOne",
                      "addressLineTwo",
                      "city",
                      "country",
                      "email",
                      "firstName",
                      "lastName",
                      "organizationName",
                      "phone",
                      "postalCode",
                      "region"
                    ],
                    "type": "object"
                  },
                  "assignedSlots": {
                    "description": "Slots where the certificate is either deployed or is already deployed.",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "autoRenewalStartTime": {
                    "description": "The specific date on which the renewal automatically starts for the enrollment.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "certificateChainType": {
                    "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
                    "enum": [
                      "default",
                      "symantec1kroot"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "certificateType": {
                    "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. See [Enrollment.validationType Values](#validationtype) for details.",
                    "enum": [
                      "san",
                      "single",
                      "wildcard",
                      "wildcard-san",
                      "third-party"
                    ],
                    "type": "string"
                  },
                  "changeManagement": {
                    "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
                    "type": "boolean"
                  },
                  "csr": {
                    "additionalProperties": false,
                    "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                    "properties": {
                      "c": {
                        "description": "The country code for the country where your organization is located.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "cn": {
                        "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "l": {
                        "description": "Your city in the locality (city).",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "o": {
                        "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "ou": {
                        "description": "Your organizational unit.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "preferredTrustChain": {
                        "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                      },
                      "sans": {
                        "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      },
                      "st": {
                        "description": "Your state or province.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "cn"
                    ],
                    "type": "object"
                  },
                  "enableMultiStackedCertificates": {
                    "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The unique identifier of the enrollment.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "location": {
                    "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "maxAllowedSanNames": {
                    "description": "Maximum number of SAN names supported for this enrollment type.",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "maxAllowedWildcardSanNames": {
                    "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "networkConfiguration": {
                    "additionalProperties": false,
                    "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
                    "properties": {
                      "clientMutualAuthentication": {
                        "additionalProperties": false,
                        "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                        "nullable": true,
                        "properties": {
                          "authenticationOptions": {
                            "additionalProperties": false,
                            "description": "Contains the configuration options for the selected trust chain.",
                            "nullable": true,
                            "properties": {
                              "ocsp": {
                                "additionalProperties": false,
                                "description": "Whether you want to enable OCSP stapling for client certificates.",
                                "nullable": true,
                                "properties": {
                                  "enabled": {
                                    "description": "Whether the OCSP stapling is enabled.",
                                    "nullable": true,
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "enabled"
                                ],
                                "type": "object"
                              },
                              "sendCaListToClient": {
                                "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                                "nullable": true,
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "ocsp",
                              "sendCaListToClient"
                            ],
                            "type": "object"
                          },
                          "setId": {
                            "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "authenticationOptions"
                        ],
                        "type": "object"
                      },
                      "disallowedTlsVersions": {
                        "description": "Specify the TLS protocol versions you want to disallow.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      },
                      "dnsNameSettings": {
                        "additionalProperties": false,
                        "description": "DNS name settings.",
                        "nullable": true,
                        "properties": {
                          "cloneDnsNames": {
                            "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                            "type": "boolean"
                          },
                          "dnsNames": {
                            "description": "Names served by SNI-only enabled enrollments.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneDnsNames"
                        ],
                        "type": "object"
                      },
                      "fipsMode": {
                        "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment. When enabled, you need to use an active (non-deprecated) cipher profile for both `mustHaveCiphers` and `preferredCiphers`. For details, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                        "nullable": true,
                        "type": "boolean"
                      },
                      "geography": {
                        "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                        "enum": [
                          "core",
                          "china+core",
                          "russia+core"
                        ],
                        "type": "string"
                      },
                      "mustHaveCiphers": {
                        "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "ocspStapling": {
                        "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                        "enum": [
                          "on",
                          "off",
                          "not-set"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "preferredCiphers": {
                        "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "quicEnabled": {
                        "description": "Set to `true` to enable QUIC protocol.",
                        "type": "boolean"
                      },
                      "secureNetwork": {
                        "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                        "enum": [
                          "enhanced-tls",
                          "standard-tls"
                        ],
                        "type": "string"
                      },
                      "sniOnly": {
                        "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "geography",
                      "quicEnabled",
                      "secureNetwork",
                      "sniOnly"
                    ],
                    "type": "object"
                  },
                  "org": {
                    "additionalProperties": false,
                    "description": "Your organization information.",
                    "nullable": true,
                    "properties": {
                      "addressLineOne": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "addressLineTwo": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "city": {
                        "description": "The city where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "country": {
                        "description": "The country where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "phone": {
                        "description": "The phone number of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "postalCode": {
                        "description": "The postal code of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "region": {
                        "description": "The region where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "addressLineOne",
                      "addressLineTwo",
                      "city",
                      "country",
                      "phone",
                      "postalCode",
                      "region"
                    ],
                    "type": "object"
                  },
                  "orgId": {
                    "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "pendingChanges": {
                    "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "changeType": {
                          "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                          "enum": [
                            "new-certificate",
                            "modify-certificate",
                            "modify-san",
                            "renewal"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "location": {
                          "description": "Location to fetch related change information.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "location"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "productionSlots": {
                    "description": "Slots where the certificate is deployed on the production network.",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "ra": {
                    "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
                    "enum": [
                      "symantec",
                      "lets-encrypt",
                      "third-party"
                    ],
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "stagingSlots": {
                    "description": "Slots where the certificate is deployed on the staging network.",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "techContact": {
                    "additionalProperties": false,
                    "description": "Contact information for an administrator at Akamai.",
                    "nullable": true,
                    "properties": {
                      "addressLineOne": {
                        "description": "The address for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "addressLineTwo": {
                        "description": "The address for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "city": {
                        "description": "The city for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "country": {
                        "description": "The country for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The last name of the technical contact who you want to use within Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "organizationName": {
                        "description": "The name of your organization in Akamai where your technical contact works.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "phone": {
                        "description": "The phone number of the technical contact who you want to use within Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "postalCode": {
                        "description": "The postal code for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "region": {
                        "description": "The region for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "title": {
                        "description": "The title for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "addressLineOne",
                      "addressLineTwo",
                      "city",
                      "country",
                      "email",
                      "firstName",
                      "lastName",
                      "organizationName",
                      "phone",
                      "postalCode",
                      "region"
                    ],
                    "type": "object"
                  },
                  "thirdParty": {
                    "additionalProperties": false,
                    "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
                    "nullable": true,
                    "properties": {
                      "excludeSans": {
                        "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "excludeSans"
                    ],
                    "type": "object"
                  },
                  "validationType": {
                    "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
                    "enum": [
                      "dv",
                      "ev",
                      "ov",
                      "third-party"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "certificateType",
                  "changeManagement",
                  "csr",
                  "enableMultiStackedCertificates",
                  "networkConfiguration",
                  "ra",
                  "validationType"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/enrollment.v12.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.akamai.cps.enrollment-status.v1+json": {
                "example": {
                  "changes": [
                    "/cps/v2/enrollments/10002/changes/10002"
                  ],
                  "enrollment": "/cps/v2/enrollments/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information for enrollment status. ",
                  "properties": {
                    "changes": {
                      "description": "Identifies the modification taken on the enrollment.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "enrollment": {
                      "description": "Identifies the enrollment modified.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "changes",
                    "enrollment"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollment-status.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the enrollment and pending changes."
          }
        },
        "summary": "Create an enrollment",
        "tags": [
          "Enrollments"
        ]
      },
      "get": {
        "description": "A list of the names of each enrollment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-enrollments"
        },
        "operationId": "get-enrollments",
        "parameters": [
          {
            "description": "Specify the contract on which to operate or view.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "K-0N7RAK7",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.enrollments.v11+json": {
                "example": {
                  "enrollments": [
                    {
                      "adminContact": {
                        "addressLineOne": "150 Broadway",
                        "addressLineTwo": null,
                        "city": "Cambridge",
                        "country": "US",
                        "email": "hgildong@akamai.com",
                        "firstName": "R1",
                        "lastName": "D1",
                        "organizationName": "Akamai",
                        "phone": "617-555-0111",
                        "postalCode": "02142",
                        "region": "MA",
                        "title": "Adminstrator"
                      },
                      "assignedSlots": [
                        1234
                      ],
                      "autoRenewalStartTime": null,
                      "certificateChainType": "default",
                      "certificateType": "third-party",
                      "changeManagement": true,
                      "csr": {
                        "c": "US",
                        "cn": "www.example.com",
                        "l": "Cambridge",
                        "o": "Akamai",
                        "ou": "WebEx",
                        "preferredTrustChain": null,
                        "sans": [
                          "san1.example.com",
                          "san2.example.com",
                          "san3.example.com",
                          "www.example.com"
                        ],
                        "st": "MA"
                      },
                      "enableMultiStackedCertificates": false,
                      "id": "10001",
                      "location": "/cps-api/enrollments/10001",
                      "maxAllowedSanNames": 100,
                      "maxAllowedWildcardSanNames": 100,
                      "networkConfiguration": {
                        "clientMutualAuthentication": {
                          "authenticationOptions": {
                            "ocsp": {
                              "enabled": false
                            },
                            "sendCaListToClient": false
                          },
                          "setId": "Custom_CPS-6134b_B-3-1AHBENT.xml"
                        },
                        "disallowedTlsVersions": [
                          "TLSv1",
                          "TLSv1_1"
                        ],
                        "dnsNameSettings": {
                          "cloneDnsNames": false,
                          "dnsNames": [
                            "san2.example.com",
                            "san1.example.com"
                          ]
                        },
                        "geography": "core",
                        "mustHaveCiphers": "ak-akamai-2020q1",
                        "ocspStapling": "on",
                        "preferredCiphers": "ak-akamai-2020q1",
                        "quicEnabled": false,
                        "secureNetwork": "enhanced-tls",
                        "sniOnly": true
                      },
                      "org": {
                        "addressLineOne": "150 Broadway",
                        "addressLineTwo": null,
                        "city": "Cambridge",
                        "country": "US",
                        "name": "Akamai Technologies",
                        "phone": "617-555-0111",
                        "postalCode": "02142",
                        "region": "MA"
                      },
                      "orgId": 645263546,
                      "pendingChanges": [
                        {
                          "changeType": "new-certificate",
                          "location": "/cps-api/enrollments/10001/changes/10002"
                        }
                      ],
                      "productionSlots": [
                        1234
                      ],
                      "ra": "third-party",
                      "signatureAlgorithm": null,
                      "stagingSlots": [
                        1234
                      ],
                      "techContact": {
                        "addressLineOne": "150 Broadway",
                        "addressLineTwo": null,
                        "city": "Cambridge",
                        "country": "US",
                        "email": "jperez@akamai.com",
                        "firstName": "R2",
                        "lastName": "D2",
                        "organizationName": "Akamai",
                        "phone": "617-555-0111",
                        "postalCode": "02142",
                        "region": "MA",
                        "title": "Technical Engineer"
                      },
                      "thirdParty": {
                        "excludeSans": false
                      },
                      "validationType": "third-party"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides a list of enrollments.",
                  "properties": {
                    "enrollments": {
                      "description": "The actual list of enrollments.",
                      "items": {
                        "additionalProperties": false,
                        "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
                        "properties": {
                          "adminContact": {
                            "additionalProperties": false,
                            "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
                            "nullable": true,
                            "properties": {
                              "addressLineOne": {
                                "description": "The address of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "addressLineTwo": {
                                "description": "The address of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "city": {
                                "description": "The city where your organization resides.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "country": {
                                "description": "The country where your organization resides.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "email": {
                                "description": "The email address of the administrator who you want to use as a contact at your company.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "firstName": {
                                "description": "The first name of the administrator who you want to use as a contact at your company.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "lastName": {
                                "description": "The last name of the administrator who you want to use as a contact at your company.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "organizationName": {
                                "description": "The name of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "phone": {
                                "description": "The phone number of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "postalCode": {
                                "description": "The postal code of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "region": {
                                "description": "The region of your organization, typically a state or province.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "title": {
                                "description": "The title of the administrator who you want to use as a contact at your company.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "addressLineOne",
                              "addressLineTwo",
                              "city",
                              "country",
                              "email",
                              "firstName",
                              "lastName",
                              "organizationName",
                              "phone",
                              "postalCode",
                              "region"
                            ],
                            "type": "object"
                          },
                          "assignedSlots": {
                            "description": "Slots where the certificate is either deployed or is already deployed.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "autoRenewalStartTime": {
                            "description": "The specific date on which the renewal automatically starts for the enrollment.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "certificateChainType": {
                            "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
                            "enum": [
                              "default",
                              "symantec1kroot"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "certificateType": {
                            "description": "Specifies the kind of certificate in the enrollment. Either san`, `single`, `wildcard`, `wildcard-san`, or `third-party. For details, see `validationType` in the [Enrollment object's versioned schema members](https://techdocs.akamai.com/cps/reference/enrollment#versioned-schema-members).",
                            "enum": [
                              "san",
                              "single",
                              "wildcard",
                              "wildcard-san",
                              "third-party"
                            ],
                            "type": "string"
                          },
                          "changeManagement": {
                            "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
                            "type": "boolean"
                          },
                          "csr": {
                            "additionalProperties": false,
                            "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                            "properties": {
                              "c": {
                                "description": "The country code for the country where your organization is located.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "cn": {
                                "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "l": {
                                "description": "Your city in the locality (city).",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "o": {
                                "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "ou": {
                                "description": "Your organizational unit.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "preferredTrustChain": {
                                "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                                "minLength": 0,
                                "nullable": true,
                                "type": "string"
                              },
                              "sans": {
                                "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 0,
                                "nullable": true,
                                "type": "array"
                              },
                              "st": {
                                "description": "Your state or province.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "cn"
                            ],
                            "type": "object"
                          },
                          "enableMultiStackedCertificates": {
                            "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                            "type": "boolean"
                          },
                          "id": {
                            "description": "The unique identifier of the enrollment.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "location": {
                            "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "maxAllowedSanNames": {
                            "description": "Maximum number of SAN names supported for this enrollment type.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "maxAllowedWildcardSanNames": {
                            "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "networkConfiguration": {
                            "additionalProperties": false,
                            "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
                            "properties": {
                              "clientMutualAuthentication": {
                                "additionalProperties": false,
                                "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                                "nullable": true,
                                "properties": {
                                  "authenticationOptions": {
                                    "additionalProperties": false,
                                    "description": "Contains the configuration options for the selected trust chain.",
                                    "nullable": true,
                                    "properties": {
                                      "ocsp": {
                                        "additionalProperties": false,
                                        "description": "Whether you want to enable OCSP stapling for client certificates.",
                                        "nullable": true,
                                        "properties": {
                                          "enabled": {
                                            "description": "Whether the OCSP stapling is enabled.",
                                            "nullable": true,
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "enabled"
                                        ],
                                        "type": "object"
                                      },
                                      "sendCaListToClient": {
                                        "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                                        "nullable": true,
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "ocsp",
                                      "sendCaListToClient"
                                    ],
                                    "type": "object"
                                  },
                                  "setId": {
                                    "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "authenticationOptions"
                                ],
                                "type": "object"
                              },
                              "disallowedTlsVersions": {
                                "description": "Specify the TLS protocol versions you want to disallow.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 0,
                                "nullable": true,
                                "type": "array"
                              },
                              "dnsNameSettings": {
                                "additionalProperties": false,
                                "description": "DNS name settings.",
                                "nullable": true,
                                "properties": {
                                  "cloneDnsNames": {
                                    "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                                    "type": "boolean"
                                  },
                                  "dnsNames": {
                                    "description": "Names served by SNI-only enabled enrollments.",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "minItems": 0,
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "cloneDnsNames"
                                ],
                                "type": "object"
                              },
                              "geography": {
                                "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                                "enum": [
                                  "core",
                                  "china+core",
                                  "russia+core"
                                ],
                                "type": "string"
                              },
                              "mustHaveCiphers": {
                                "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "ocspStapling": {
                                "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                                "enum": [
                                  "on",
                                  "off",
                                  "not-set"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "preferredCiphers": {
                                "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "quicEnabled": {
                                "description": "Set to `true` to enable QUIC protocol.",
                                "type": "boolean"
                              },
                              "secureNetwork": {
                                "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                                "enum": [
                                  "enhanced-tls",
                                  "standard-tls"
                                ],
                                "type": "string"
                              },
                              "sniOnly": {
                                "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "geography",
                              "quicEnabled",
                              "secureNetwork",
                              "sniOnly"
                            ],
                            "type": "object"
                          },
                          "org": {
                            "additionalProperties": false,
                            "description": "Your organization information.",
                            "nullable": true,
                            "properties": {
                              "addressLineOne": {
                                "description": "The address of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "addressLineTwo": {
                                "description": "The address of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "city": {
                                "description": "The city where your organization resides.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "country": {
                                "description": "The country where your organization resides.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "phone": {
                                "description": "The phone number of the administrator who you want to use as a contact at your company.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "postalCode": {
                                "description": "The postal code of your organization.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "region": {
                                "description": "The region where your organization resides.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "addressLineOne",
                              "addressLineTwo",
                              "city",
                              "country",
                              "phone",
                              "postalCode",
                              "region"
                            ],
                            "type": "object"
                          },
                          "orgId": {
                            "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
                            "minimum": 0,
                            "nullable": true,
                            "type": "integer"
                          },
                          "pendingChanges": {
                            "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "changeType": {
                                  "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                                  "enum": [
                                    "new-certificate",
                                    "modify-certificate",
                                    "modify-san",
                                    "renewal"
                                  ],
                                  "nullable": true,
                                  "type": "string"
                                },
                                "location": {
                                  "description": "Location to fetch related change information.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "location"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "productionSlots": {
                            "description": "Slots where the certificate is deployed on the production network.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "ra": {
                            "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
                            "enum": [
                              "symantec",
                              "lets-encrypt",
                              "third-party"
                            ],
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "stagingSlots": {
                            "description": "Slots where the certificate is deployed on the staging network.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          },
                          "techContact": {
                            "additionalProperties": false,
                            "description": "Contact information for an administrator at Akamai.",
                            "nullable": true,
                            "properties": {
                              "addressLineOne": {
                                "description": "The address for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "addressLineTwo": {
                                "description": "The address for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "city": {
                                "description": "The city for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "country": {
                                "description": "The country for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "email": {
                                "description": "The email address of the administrator who you want to use as a contact at your company.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "firstName": {
                                "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "lastName": {
                                "description": "The last name of the technical contact who you want to use within Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "organizationName": {
                                "description": "The name of your organization in Akamai where your technical contact works.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "phone": {
                                "description": "The phone number of the technical contact who you want to use within Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "postalCode": {
                                "description": "The postal code for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "region": {
                                "description": "The region for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "title": {
                                "description": "The title for an administrator at Akamai.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "title",
                              "addressLineOne",
                              "addressLineTwo",
                              "city",
                              "country",
                              "email",
                              "firstName",
                              "lastName",
                              "organizationName",
                              "phone",
                              "postalCode",
                              "region"
                            ],
                            "type": "object"
                          },
                          "thirdParty": {
                            "additionalProperties": false,
                            "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
                            "nullable": true,
                            "properties": {
                              "excludeSans": {
                                "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "excludeSans"
                            ],
                            "type": "object"
                          },
                          "validationType": {
                            "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
                            "enum": [
                              "dv",
                              "ev",
                              "ov",
                              "third-party"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificateType",
                          "changeManagement",
                          "csr",
                          "enableMultiStackedCertificates",
                          "networkConfiguration",
                          "ra",
                          "validationType"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/enrollment.v11.yaml"
                        }
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "enrollments"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollments.v11.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the enrollments."
          }
        },
        "summary": "List enrollments",
        "tags": [
          "Enrollments"
        ]
      },
      "x-akamai": {
        "file-path": "paths/enrollments.yaml",
        "path-info": "/enrollments"
      }
    },
    "/enrollments/{enrollmentId}": {
      "get": {
        "description": "Gets an enrollment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-enrollment"
        },
        "operationId": "get-enrollment",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.enrollment.v12+json": {
                "example": {
                  "adminContact": {
                    "addressLineOne": "150 Broadway",
                    "addressLineTwo": null,
                    "city": "Cambridge",
                    "country": "US",
                    "email": "afero@akamai.com",
                    "firstName": "R1",
                    "lastName": "D1",
                    "organizationName": "Akamai",
                    "phone": "617-555-0111",
                    "postalCode": "02142",
                    "region": "MA",
                    "title": "Adminstrator"
                  },
                  "assignedSlots": [
                    1234
                  ],
                  "autoRenewalStartTime": null,
                  "certificateChainType": "default",
                  "certificateType": "third-party",
                  "changeManagement": true,
                  "csr": {
                    "c": "US",
                    "cn": "www.example.com",
                    "l": "Cambridge",
                    "o": "Akamai",
                    "ou": "WebEx",
                    "preferredTrustChain": null,
                    "sans": [
                      "san1.example.com",
                      "san2.example.com",
                      "san3.example.com",
                      "www.example.com"
                    ],
                    "st": "MA"
                  },
                  "enableMultiStackedCertificates": false,
                  "id": "10001",
                  "location": "/cps-api/enrollments/10001",
                  "maxAllowedSanNames": 100,
                  "maxAllowedWildcardSanNames": 100,
                  "networkConfiguration": {
                    "clientMutualAuthentication": {
                      "authenticationOptions": {
                        "ocsp": {
                          "enabled": false
                        },
                        "sendCaListToClient": false
                      },
                      "setId": "Custom_CPS-6134b_B-3-1AHBENT.xml"
                    },
                    "disallowedTlsVersions": [
                      "TLSv1",
                      "TLSv1_1"
                    ],
                    "dnsNameSettings": {
                      "cloneDnsNames": false,
                      "dnsNames": [
                        "san2.example.com",
                        "san1.example.com"
                      ]
                    },
                    "fipsMode": true,
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "ocspStapling": "on",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "quicEnabled": false,
                    "secureNetwork": "enhanced-tls",
                    "sniOnly": true
                  },
                  "org": {
                    "addressLineOne": "150 Broadway",
                    "addressLineTwo": null,
                    "city": "Cambridge",
                    "country": "US",
                    "name": "Akamai Technologies",
                    "phone": "617-555-0111",
                    "postalCode": "02142",
                    "region": "MA"
                  },
                  "orgId": 645263546,
                  "pendingChanges": [
                    {
                      "changeType": "new-certificate",
                      "location": "/cps-api/enrollments/10001/changes/10002"
                    }
                  ],
                  "productionSlots": [
                    1234
                  ],
                  "ra": "third-party",
                  "signatureAlgorithm": null,
                  "stagingSlots": [
                    1234
                  ],
                  "techContact": {
                    "addressLineOne": "150 Broadway",
                    "addressLineTwo": null,
                    "city": "Cambridge",
                    "country": "US",
                    "email": "jsmith@akamai.com",
                    "firstName": "R2",
                    "lastName": "D2",
                    "organizationName": "Akamai",
                    "phone": "617-555-0111",
                    "postalCode": "02142",
                    "region": "MA",
                    "title": "Technical Engineer"
                  },
                  "thirdParty": {
                    "excludeSans": false
                  },
                  "validationType": "third-party"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
                  "properties": {
                    "adminContact": {
                      "additionalProperties": false,
                      "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
                      "nullable": true,
                      "properties": {
                        "addressLineOne": {
                          "description": "The address of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "addressLineTwo": {
                          "description": "The address of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "city": {
                          "description": "The city where your organization resides.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "country": {
                          "description": "The country where your organization resides.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "email": {
                          "description": "The email address of the administrator who you want to use as a contact at your company.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The first name of the administrator who you want to use as a contact at your company.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "lastName": {
                          "description": "The last name of the administrator who you want to use as a contact at your company.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "organizationName": {
                          "description": "The name of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "phone": {
                          "description": "The phone number of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "postalCode": {
                          "description": "The postal code of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "region": {
                          "description": "The region of your organization, typically a state or province.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "title": {
                          "description": "The title of the administrator who you want to use as a contact at your company.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "addressLineOne",
                        "addressLineTwo",
                        "city",
                        "country",
                        "email",
                        "firstName",
                        "lastName",
                        "organizationName",
                        "phone",
                        "postalCode",
                        "region"
                      ],
                      "type": "object"
                    },
                    "assignedSlots": {
                      "description": "Slots where the certificate is either deployed or is already deployed.",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "autoRenewalStartTime": {
                      "description": "The specific date on which the renewal automatically starts for the enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "certificateChainType": {
                      "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
                      "enum": [
                        "default",
                        "symantec1kroot"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "certificateType": {
                      "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. See [Enrollment.validationType Values](#validationtype) for details.",
                      "enum": [
                        "san",
                        "single",
                        "wildcard",
                        "wildcard-san",
                        "third-party"
                      ],
                      "type": "string"
                    },
                    "changeManagement": {
                      "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
                      "type": "boolean"
                    },
                    "csr": {
                      "additionalProperties": false,
                      "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                      "properties": {
                        "c": {
                          "description": "The country code for the country where your organization is located.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "cn": {
                          "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "l": {
                          "description": "Your city in the locality (city).",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "o": {
                          "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "ou": {
                          "description": "Your organizational unit.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "preferredTrustChain": {
                          "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                          "minLength": 0,
                          "nullable": true,
                          "type": "string"
                        },
                        "sans": {
                          "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "st": {
                          "description": "Your state or province.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "cn"
                      ],
                      "type": "object"
                    },
                    "enableMultiStackedCertificates": {
                      "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                      "type": "boolean"
                    },
                    "id": {
                      "description": "The unique identifier of the enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "location": {
                      "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "maxAllowedSanNames": {
                      "description": "Maximum number of SAN names supported for this enrollment type.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "maxAllowedWildcardSanNames": {
                      "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
                      "properties": {
                        "clientMutualAuthentication": {
                          "additionalProperties": false,
                          "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                          "nullable": true,
                          "properties": {
                            "authenticationOptions": {
                              "additionalProperties": false,
                              "description": "Contains the configuration options for the selected trust chain.",
                              "nullable": true,
                              "properties": {
                                "ocsp": {
                                  "additionalProperties": false,
                                  "description": "Whether you want to enable OCSP stapling for client certificates.",
                                  "nullable": true,
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the OCSP stapling is enabled.",
                                      "nullable": true,
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "enabled"
                                  ],
                                  "type": "object"
                                },
                                "sendCaListToClient": {
                                  "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                                  "nullable": true,
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "ocsp",
                                "sendCaListToClient"
                              ],
                              "type": "object"
                            },
                            "setId": {
                              "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "authenticationOptions"
                          ],
                          "type": "object"
                        },
                        "disallowedTlsVersions": {
                          "description": "Specify the TLS protocol versions you want to disallow.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "dnsNameSettings": {
                          "additionalProperties": false,
                          "description": "DNS name settings.",
                          "nullable": true,
                          "properties": {
                            "cloneDnsNames": {
                              "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                              "type": "boolean"
                            },
                            "dnsNames": {
                              "description": "Names served by SNI-only enabled enrollments.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "cloneDnsNames"
                          ],
                          "type": "object"
                        },
                        "fipsMode": {
                          "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment. When enabled, you need to use an active (non-deprecated) cipher profile for both `mustHaveCiphers` and `preferredCiphers`. For details, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "nullable": true,
                          "type": "boolean"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "Set to `true` to enable QUIC protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "geography",
                        "quicEnabled",
                        "secureNetwork",
                        "sniOnly"
                      ],
                      "type": "object"
                    },
                    "org": {
                      "additionalProperties": false,
                      "description": "Your organization information.",
                      "nullable": true,
                      "properties": {
                        "addressLineOne": {
                          "description": "The address of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "addressLineTwo": {
                          "description": "The address of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "city": {
                          "description": "The city where your organization resides.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "country": {
                          "description": "The country where your organization resides.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "phone": {
                          "description": "The phone number of the administrator who you want to use as a contact at your company.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "postalCode": {
                          "description": "The postal code of your organization.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "region": {
                          "description": "The region where your organization resides.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "addressLineOne",
                        "addressLineTwo",
                        "city",
                        "country",
                        "phone",
                        "postalCode",
                        "region"
                      ],
                      "type": "object"
                    },
                    "orgId": {
                      "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "pendingChanges": {
                      "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "changeType": {
                            "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                            "enum": [
                              "new-certificate",
                              "modify-certificate",
                              "modify-san",
                              "renewal"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "location": {
                            "description": "Location to fetch related change information.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "location"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "productionSlots": {
                      "description": "Slots where the certificate is deployed on the production network.",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "ra": {
                      "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
                      "enum": [
                        "symantec",
                        "lets-encrypt",
                        "third-party"
                      ],
                      "type": "string"
                    },
                    "signatureAlgorithm": {
                      "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "stagingSlots": {
                      "description": "Slots where the certificate is deployed on the staging network.",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "techContact": {
                      "additionalProperties": false,
                      "description": "Contact information for an administrator at Akamai.",
                      "nullable": true,
                      "properties": {
                        "addressLineOne": {
                          "description": "The address for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "addressLineTwo": {
                          "description": "The address for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "city": {
                          "description": "The city for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "country": {
                          "description": "The country for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "email": {
                          "description": "The email address of the administrator who you want to use as a contact at your company.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "lastName": {
                          "description": "The last name of the technical contact who you want to use within Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "organizationName": {
                          "description": "The name of your organization in Akamai where your technical contact works.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "phone": {
                          "description": "The phone number of the technical contact who you want to use within Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "postalCode": {
                          "description": "The postal code for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "region": {
                          "description": "The region for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "title": {
                          "description": "The title for an administrator at Akamai.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "title",
                        "addressLineOne",
                        "addressLineTwo",
                        "city",
                        "country",
                        "email",
                        "firstName",
                        "lastName",
                        "organizationName",
                        "phone",
                        "postalCode",
                        "region"
                      ],
                      "type": "object"
                    },
                    "thirdParty": {
                      "additionalProperties": false,
                      "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
                      "nullable": true,
                      "properties": {
                        "excludeSans": {
                          "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "excludeSans"
                      ],
                      "type": "object"
                    },
                    "validationType": {
                      "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
                      "enum": [
                        "dv",
                        "ev",
                        "ov",
                        "third-party"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificateType",
                    "changeManagement",
                    "csr",
                    "enableMultiStackedCertificates",
                    "networkConfiguration",
                    "ra",
                    "validationType"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollment.v12.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the enrollment's details."
          }
        },
        "summary": "Get an enrollment",
        "tags": [
          "Enrollments"
        ]
      },
      "put": {
        "description": "Updates an enrollment with changes. Response type varies depending on the type and impact of change. For example, changing SANs list may return HTTP 202 Accepted since the operation requires a new certificate and network deployment operations, and thus can't be completed without a change. On the contrary, for example a Technical Contact name change may return HTTP 200 OK assuming there are no active change and when the operation does not require a new certificate.\n\nNote that `fipsMode` requires that TLS 1.2, TLS 1.3, or both are enabled on the certificate. You can\u2019t list these TLS versions as disabled in the `disallowedTlsVersions` deployment object. When `fipsMode` is enabled, you need to use an active (non-deprecated) cipher profile for both `mustHaveCiphers` and `preferredCiphers`. For details, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/put-enrollment"
        },
        "operationId": "put-enrollment",
        "parameters": [
          {
            "description": "Cancels all pending changes when updating an enrollment.",
            "example": "{{allow-cancel-pending-changes}}",
            "in": "query",
            "name": "allow-cancel-pending-changes",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/allow-cancel-pending-changes-query.yaml"
            }
          },
          {
            "description": "Bypass staging and push metadata updates directly to the production network. The current change also updates with the same changes.",
            "example": "{{allow-staging-bypass}}",
            "in": "query",
            "name": "allow-staging-bypass",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/allow-staging-bypass-query.yaml"
            }
          },
          {
            "description": "Don't deploy after this date (UTC).",
            "example": "{{deploy-not-after}}",
            "in": "query",
            "name": "deploy-not-after",
            "schema": {
              "example": "2021-01-31",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/deploy-not-after-query.yaml"
            }
          },
          {
            "description": "Don't deploy before this date (UTC).",
            "example": "{{deploy-not-before}}",
            "in": "query",
            "name": "deploy-not-before",
            "schema": {
              "example": "2021-01-31",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/deploy-not-before-query.yaml"
            }
          },
          {
            "description": "Force certificate renewal for Enrollment.",
            "example": "{{force-renewal}}",
            "in": "query",
            "name": "force-renewal",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/force-renewal-query.yaml"
            }
          },
          {
            "description": "CPS automatically starts a change to renew certificates in time before they expire. This automatic change starts when the certificate's expiration is within a renewal window. CPS prevents other changes from starting during this renewal window. Setting `renewal-date-check-override=true` allows changes during the renewal window, potentially running the risk of an expired certificate on the network.",
            "example": "{{renewal-date-check-override}}",
            "in": "query",
            "name": "renewal-date-check-override",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/renewal-date-check-override-query.yaml"
            }
          },
          {
            "description": "Applicable for Third Party Dual Stack Enrollments, allows to update missing certificate. Option supported from v10.",
            "example": "{{allow-missing-certificate-addition}}",
            "in": "query",
            "name": "allow-missing-certificate-addition",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/allow-missing-certificate-addition-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.akamai.cps.enrollment.v12+json": {
              "example": {
                "adminContact": {
                  "addressLineOne": "150 Broadway",
                  "addressLineTwo": null,
                  "city": "Cambridge",
                  "country": "US",
                  "email": "afero@akamai.com",
                  "firstName": "R1",
                  "lastName": "D1",
                  "organizationName": "Akamai",
                  "phone": "617-555-0111",
                  "postalCode": "02142",
                  "region": "MA",
                  "title": "Adminstrator"
                },
                "assignedSlots": [
                  1234
                ],
                "autoRenewalStartTime": null,
                "certificateChainType": "default",
                "certificateType": "third-party",
                "changeManagement": true,
                "csr": {
                  "c": "US",
                  "cn": "www.example.com",
                  "l": "Cambridge",
                  "o": "Akamai",
                  "ou": "WebEx",
                  "preferredTrustChain": null,
                  "sans": [
                    "san1.example.com",
                    "san2.example.com",
                    "san3.example.com",
                    "www.example.com"
                  ],
                  "st": "MA"
                },
                "enableMultiStackedCertificates": false,
                "id": "10001",
                "location": "/cps-api/enrollments/10001",
                "maxAllowedSanNames": 100,
                "maxAllowedWildcardSanNames": 100,
                "networkConfiguration": {
                  "clientMutualAuthentication": {
                    "authenticationOptions": {
                      "ocsp": {
                        "enabled": false
                      },
                      "sendCaListToClient": false
                    },
                    "setId": "Custom_CPS-6134b_B-3-1AHBENT.xml"
                  },
                  "disallowedTlsVersions": [
                    "TLSv1",
                    "TLSv1_1"
                  ],
                  "dnsNameSettings": {
                    "cloneDnsNames": false,
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ]
                  },
                  "fipsMode": true,
                  "geography": "core",
                  "mustHaveCiphers": "ak-akamai-2020q1",
                  "ocspStapling": "on",
                  "preferredCiphers": "ak-akamai-2020q1",
                  "quicEnabled": false,
                  "secureNetwork": "enhanced-tls",
                  "sniOnly": true
                },
                "org": {
                  "addressLineOne": "150 Broadway",
                  "addressLineTwo": null,
                  "city": "Cambridge",
                  "country": "US",
                  "name": "Akamai Technologies",
                  "phone": "617-555-0111",
                  "postalCode": "02142",
                  "region": "MA"
                },
                "orgId": 645263546,
                "pendingChanges": [
                  {
                    "changeType": "new-certificate",
                    "location": "/cps-api/enrollments/10001/changes/10002"
                  }
                ],
                "productionSlots": [
                  1234
                ],
                "ra": "third-party",
                "signatureAlgorithm": null,
                "stagingSlots": [
                  1234
                ],
                "techContact": {
                  "addressLineOne": "150 Broadway",
                  "addressLineTwo": null,
                  "city": "Cambridge",
                  "country": "US",
                  "email": "jsmith@akamai.com",
                  "firstName": "R2",
                  "lastName": "D2",
                  "organizationName": "Akamai",
                  "phone": "617-555-0111",
                  "postalCode": "02142",
                  "region": "MA",
                  "title": "Technical Engineer"
                },
                "thirdParty": {
                  "excludeSans": false
                },
                "validationType": "third-party"
              },
              "schema": {
                "additionalProperties": false,
                "description": "An enrollment displays all the information about the process that your certificate goes through from the time you request it, through renewal, and as you obtain subsequent versions. CPS is a certificate life cycle management tool. Once you obtain a certificate, you use it until it expires, in most cases a year from the date the CA issued the certificate. CPS automatically starts the renewal process 90 days before the old certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA.",
                "properties": {
                  "adminContact": {
                    "additionalProperties": false,
                    "description": "Contact information for the certificate administrator that you want to use as a contact at your company.",
                    "nullable": true,
                    "properties": {
                      "addressLineOne": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "addressLineTwo": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "city": {
                        "description": "The city where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "country": {
                        "description": "The country where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The first name of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The last name of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "organizationName": {
                        "description": "The name of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "phone": {
                        "description": "The phone number of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "postalCode": {
                        "description": "The postal code of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "region": {
                        "description": "The region of your organization, typically a state or province.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "title": {
                        "description": "The title of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "addressLineOne",
                      "addressLineTwo",
                      "city",
                      "country",
                      "email",
                      "firstName",
                      "lastName",
                      "organizationName",
                      "phone",
                      "postalCode",
                      "region"
                    ],
                    "type": "object"
                  },
                  "assignedSlots": {
                    "description": "Slots where the certificate is either deployed or is already deployed.",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "autoRenewalStartTime": {
                    "description": "The specific date on which the renewal automatically starts for the enrollment.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "certificateChainType": {
                    "description": "The kind of certificate trust chain. This is either `default` or `symantec1kroot`.",
                    "enum": [
                      "default",
                      "symantec1kroot"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "certificateType": {
                    "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`. See [Enrollment.validationType Values](#validationtype) for details.",
                    "enum": [
                      "san",
                      "single",
                      "wildcard",
                      "wildcard-san",
                      "third-party"
                    ],
                    "type": "string"
                  },
                  "changeManagement": {
                    "description": "Setting this to `true` for an enrollment stops CPS from deploying the certificate to the network until you acknowledge you're ready to deploy the certificate. You can test the certificate outside of CPS, on the Edge Staging Network (ESN), to make sure it works in your environment, and then deploy the certificate. The ESN is a small network of Akamai edge servers built to simulate Akamai's production network to test most of your site or application functionality with current production version configuration options and functions. For more information on the ESN, see the [Edge Staging Network User Guide](https://control.akamai.com/dl/customers/other/EDGESERV/ESN-User-Guide.pdf). You can also contact your account representative with questions or issues with your service on the ESN.",
                    "type": "boolean"
                  },
                  "csr": {
                    "additionalProperties": false,
                    "description": "When you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.",
                    "properties": {
                      "c": {
                        "description": "The country code for the country where your organization is located.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "cn": {
                        "description": "The domain name to use for the certificate, also known as the _common name_. Note that the organization specified as the `o` needs to own or have legal rights to this domain name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "l": {
                        "description": "Your city in the locality (city).",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "o": {
                        "description": "The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "ou": {
                        "description": "Your organizational unit.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "preferredTrustChain": {
                        "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, a preferred trust chain isn't needed. The default value is `null`.",
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                      },
                      "sans": {
                        "description": "Additional `cn` values to create a Subject Alternative Names (SAN) list. If there are no SANs, the response shows an empty list. Removing a SAN list from an enrollment may disrupt your service for TLS connections.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      },
                      "st": {
                        "description": "Your state or province.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "cn"
                    ],
                    "type": "object"
                  },
                  "enableMultiStackedCertificates": {
                    "description": "Enable Dual-Stacked certificate deployment for this enrollment. The next renewal includes the change. Note that this value is only returned for third-party certificates. Otherwise it's omitted from the response.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The unique identifier of the enrollment.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "location": {
                    "description": "The URI path to the enrollment. The last segment of the URI path serves as a unique identifier for the enrollment.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "maxAllowedSanNames": {
                    "description": "Maximum number of SAN names supported for this enrollment type.",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "maxAllowedWildcardSanNames": {
                    "description": "Maximum number of Wildcard SAN names supported for this enrollment type.",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "networkConfiguration": {
                    "additionalProperties": false,
                    "description": "Settings that specify any network information and TLS Metadata you want CPS to use to push the completed certificate to the network.",
                    "properties": {
                      "clientMutualAuthentication": {
                        "additionalProperties": false,
                        "description": "The configuration for client mutual authentication. Specifies the trust chain that verifies client certificates and some configuration options.",
                        "nullable": true,
                        "properties": {
                          "authenticationOptions": {
                            "additionalProperties": false,
                            "description": "Contains the configuration options for the selected trust chain.",
                            "nullable": true,
                            "properties": {
                              "ocsp": {
                                "additionalProperties": false,
                                "description": "Whether you want to enable OCSP stapling for client certificates.",
                                "nullable": true,
                                "properties": {
                                  "enabled": {
                                    "description": "Whether the OCSP stapling is enabled.",
                                    "nullable": true,
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "enabled"
                                ],
                                "type": "object"
                              },
                              "sendCaListToClient": {
                                "description": "Whether you want to enable the server to send the certificate authority (CA) list to the client.",
                                "nullable": true,
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "ocsp",
                              "sendCaListToClient"
                            ],
                            "type": "object"
                          },
                          "setId": {
                            "description": "The identifier of the set of trust chains, created in the [Mutual TLS Edge Truststore](https://techdocs.akamai.com/mtls-edge-truststore/docs).",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "authenticationOptions"
                        ],
                        "type": "object"
                      },
                      "disallowedTlsVersions": {
                        "description": "Specify the TLS protocol versions you want to disallow.",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "minItems": 0,
                        "nullable": true,
                        "type": "array"
                      },
                      "dnsNameSettings": {
                        "additionalProperties": false,
                        "description": "DNS name settings.",
                        "nullable": true,
                        "properties": {
                          "cloneDnsNames": {
                            "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                            "type": "boolean"
                          },
                          "dnsNames": {
                            "description": "Names served by SNI-only enabled enrollments.",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "minItems": 0,
                            "nullable": true,
                            "type": "array"
                          }
                        },
                        "required": [
                          "cloneDnsNames"
                        ],
                        "type": "object"
                      },
                      "fipsMode": {
                        "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment. When enabled, you need to use an active (non-deprecated) cipher profile for both `mustHaveCiphers` and `preferredCiphers`. For details, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                        "nullable": true,
                        "type": "boolean"
                      },
                      "geography": {
                        "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                        "enum": [
                          "core",
                          "china+core",
                          "russia+core"
                        ],
                        "type": "string"
                      },
                      "mustHaveCiphers": {
                        "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "ocspStapling": {
                        "description": "Enable OCSP stapling for the enrollment. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. Specify OCSP Stapling if you want to improve performance by allowing your site's visitors to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response needs to be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want your site's visitors to contact the CA directly for an OSCP response. You can use OCSP to obtain a certificate's revocation status. You should enable this feature. Use `on` to enable OSCP Stapling, `off` to disable it, or `not-set` to ignore it.",
                        "enum": [
                          "on",
                          "off",
                          "not-set"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "preferredCiphers": {
                        "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "quicEnabled": {
                        "description": "Set to `true` to enable QUIC protocol.",
                        "type": "boolean"
                      },
                      "secureNetwork": {
                        "description": "Identifies the type of deployment network. `enhanced-tls` means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                        "enum": [
                          "enhanced-tls",
                          "standard-tls"
                        ],
                        "type": "string"
                      },
                      "sniOnly": {
                        "description": "SNI settings for your enrollment. Set to `true` to enable SNI-only for the enrollment. This setting cannot be changed once an enrollment is created.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "geography",
                      "quicEnabled",
                      "secureNetwork",
                      "sniOnly"
                    ],
                    "type": "object"
                  },
                  "org": {
                    "additionalProperties": false,
                    "description": "Your organization information.",
                    "nullable": true,
                    "properties": {
                      "addressLineOne": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "addressLineTwo": {
                        "description": "The address of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "city": {
                        "description": "The city where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "country": {
                        "description": "The country where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "phone": {
                        "description": "The phone number of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "postalCode": {
                        "description": "The postal code of your organization.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "region": {
                        "description": "The region where your organization resides.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "addressLineOne",
                      "addressLineTwo",
                      "city",
                      "country",
                      "phone",
                      "postalCode",
                      "region"
                    ],
                    "type": "object"
                  },
                  "orgId": {
                    "description": "The Digicert unique identifier for the organization. If you use this value in a PUT or POST request, you can set the `org`, `techContact`, and `adminContact` values to `null`.",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "pendingChanges": {
                    "description": "Returns the Changes currently pending in CPS. The last item in the array is the most recent change.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "changeType": {
                          "description": "Indicates the certificate's pending change action. This is either `new-certificate`, `modify-certificate`, `modify-san`, or `renewal`.",
                          "enum": [
                            "new-certificate",
                            "modify-certificate",
                            "modify-san",
                            "renewal"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "location": {
                          "description": "Location to fetch related change information.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "location"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "productionSlots": {
                    "description": "Slots where the certificate is deployed on the production network.",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "ra": {
                    "description": "The registration authority or certificate authority (CA) you want to use to obtain a certificate. A CA is a trusted entity that signs certificates and can vouch for the identity of a website. This is either `symantec`,  `lets-encrypt`, or `third-party`.",
                    "enum": [
                      "symantec",
                      "lets-encrypt",
                      "third-party"
                    ],
                    "type": "string"
                  },
                  "signatureAlgorithm": {
                    "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                    "enum": [
                      "SHA-1",
                      "SHA-256"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "stagingSlots": {
                    "description": "Slots where the certificate is deployed on the staging network.",
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "minItems": 0,
                    "nullable": true,
                    "type": "array"
                  },
                  "techContact": {
                    "additionalProperties": false,
                    "description": "Contact information for an administrator at Akamai.",
                    "nullable": true,
                    "properties": {
                      "addressLineOne": {
                        "description": "The address for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "addressLineTwo": {
                        "description": "The address for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "city": {
                        "description": "The city for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "country": {
                        "description": "The country for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address of the administrator who you want to use as a contact at your company.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The first name of the technical contact who you want to use within Akamai. This is the person you work closest with at Akamai who can verify the certificate request. This is the person the CA calls if there are any issues with the certificate and they cannot reach the administrator.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "lastName": {
                        "description": "The last name of the technical contact who you want to use within Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "organizationName": {
                        "description": "The name of your organization in Akamai where your technical contact works.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "phone": {
                        "description": "The phone number of the technical contact who you want to use within Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "postalCode": {
                        "description": "The postal code for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "region": {
                        "description": "The region for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "title": {
                        "description": "The title for an administrator at Akamai.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "addressLineOne",
                      "addressLineTwo",
                      "city",
                      "country",
                      "email",
                      "firstName",
                      "lastName",
                      "organizationName",
                      "phone",
                      "postalCode",
                      "region"
                    ],
                    "type": "object"
                  },
                  "thirdParty": {
                    "additionalProperties": false,
                    "description": "Specifies that you want to use a third party certificate. This is any certificate that is not issued through CPS.",
                    "nullable": true,
                    "properties": {
                      "excludeSans": {
                        "description": "If this is `true`, then the SANs in the enrollment don't appear in the CSR that CPS submits to the CA.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "excludeSans"
                    ],
                    "type": "object"
                  },
                  "validationType": {
                    "description": "CPS supports several types of validation: `dv`, `ev`, `ov`, or `third-party`. Domain Validation (`dv`) offers the lowest level of validation. The CA validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, a free, automated, and open CA, run for public benefit. Organization Validation (`ov`) offers the next level of validation. The CA validates that you have control of the domain. Extended Validation (`ev`) offers the highest level of validation, in which you need to have signed letters and notaries sent to the CA before signing. You can also specify `third-party` if you want to use a signed certificate you obtain from a CA that CPS doesn't directly support.",
                    "enum": [
                      "dv",
                      "ev",
                      "ov",
                      "third-party"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "certificateType",
                  "changeManagement",
                  "csr",
                  "enableMultiStackedCertificates",
                  "networkConfiguration",
                  "ra",
                  "validationType"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/enrollment.v12.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.enrollment-status.v1+json": {
                "example": {
                  "changes": [
                    "/cps/v2/enrollments/10002/changes/10002"
                  ],
                  "enrollment": "/cps/v2/enrollments/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information for enrollment status. ",
                  "properties": {
                    "changes": {
                      "description": "Identifies the modification taken on the enrollment.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "enrollment": {
                      "description": "Identifies the enrollment modified.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "changes",
                    "enrollment"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollment-status.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified enrollment."
          },
          "202": {
            "content": {
              "application/vnd.akamai.cps.enrollment-status.v1+json": {
                "example": {
                  "changes": [
                    "/cps/v2/enrollments/10002/changes/10002"
                  ],
                  "enrollment": "/cps/v2/enrollments/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information for enrollment status. ",
                  "properties": {
                    "changes": {
                      "description": "Identifies the modification taken on the enrollment.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "enrollment": {
                      "description": "Identifies the enrollment modified.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "changes",
                    "enrollment"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollment-status.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the resource was accepted."
          }
        },
        "summary": "Update an enrollment",
        "tags": [
          "Enrollments"
        ]
      },
      "delete": {
        "description": "Removes an enrollment from CPS. The response code varies depending on the state of the enrollment. Deleting an enrollment in the future, or deleting when the enrollment has a certificate deployed to the network, may result in a 202 response. Deleting an enrollment that hasn't yet deployed any certificate to the network responds immediately with a 200 code.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/delete-enrollment"
        },
        "operationId": "delete-enrollment",
        "parameters": [
          {
            "description": "Cancels all pending changes when updating an enrollment.",
            "example": "{{allow-cancel-pending-changes}}",
            "in": "query",
            "name": "allow-cancel-pending-changes",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/allow-cancel-pending-changes-query.yaml"
            }
          },
          {
            "description": "Don't deploy after this date (UTC).",
            "example": "{{deploy-not-after}}",
            "in": "query",
            "name": "deploy-not-after",
            "schema": {
              "example": "2021-01-31",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/deploy-not-after-query.yaml"
            }
          },
          {
            "description": "Don't deploy before this date (UTC).",
            "example": "{{deploy-not-before}}",
            "in": "query",
            "name": "deploy-not-before",
            "schema": {
              "example": "2021-01-31",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/deploy-not-before-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.enrollment-status.v1+json": {
                "example": {
                  "changes": [
                    "/cps/v2/enrollments/10002/changes/10002"
                  ],
                  "enrollment": "/cps/v2/enrollments/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information for enrollment status. ",
                  "properties": {
                    "changes": {
                      "description": "Identifies the modification taken on the enrollment.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "enrollment": {
                      "description": "Identifies the enrollment modified.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "changes",
                    "enrollment"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollment-status.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the enrollment was removed from CPS."
          },
          "202": {
            "content": {
              "application/vnd.akamai.cps.enrollment-status.v1+json": {
                "example": {
                  "changes": [
                    "/cps/v2/enrollments/10002/changes/10002"
                  ],
                  "enrollment": "/cps/v2/enrollments/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates information for enrollment status. ",
                  "properties": {
                    "changes": {
                      "description": "Identifies the modification taken on the enrollment.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "enrollment": {
                      "description": "Identifies the enrollment modified.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "changes",
                    "enrollment"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/enrollment-status.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the resource was accepted."
          }
        },
        "summary": "Remove an enrollment",
        "tags": [
          "Enrollments"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/enrollment.yaml",
        "path-info": "/enrollments/{enrollmentId}"
      }
    },
    "/enrollments/{enrollmentId}/changes/{changeId}": {
      "get": {
        "description": "Gets the status of a pending change.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-enrollment-change"
        },
        "operationId": "get-enrollment-change",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.change.v2+json": {
                "example": {
                  "allowedInput": [
                    {
                      "info": "/cps/v2/enrollments/10002/changes/10002/input/info/third-party-csr",
                      "requiredToProceed": true,
                      "type": "third-party-certificate",
                      "update": "/cps/v2/enrollments/10002/changes/10002/input/update/third-party-cert-and-trust-chain"
                    }
                  ],
                  "statusInfo": {
                    "deploymentSchedule": {
                      "notAfter": null,
                      "notBefore": null
                    },
                    "description": "Waiting for you to upload and submit your third party certificate and trust chain.",
                    "error": null,
                    "state": "awaiting-input",
                    "status": "wait-upload-third-party"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Any change that you want to make to the network deployment of an enrollment.",
                  "properties": {
                    "allowedInput": {
                      "description": "The resource path locations of data inputs allowed by this change. These could be required or optional for this change to proceed.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "info": {
                            "description": "The resource location for the allowed input's description.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requiredToProceed": {
                            "description": "If `true`, this input is required for the change to proceed.",
                            "type": "boolean"
                          },
                          "type": {
                            "description": "The type input. For more information, see the [Change input content type mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping).",
                            "minLength": 1,
                            "type": "string"
                          },
                          "update": {
                            "description": "The resource path location that you can use to make a call for this input.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "info",
                          "requiredToProceed",
                          "type",
                          "update"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "statusInfo": {
                      "additionalProperties": false,
                      "description": "The status for this change at this time.",
                      "properties": {
                        "deploymentSchedule": {
                          "additionalProperties": false,
                          "description": "The schedule for when you want this change to deploy.",
                          "properties": {
                            "notAfter": {
                              "description": "Don't deploy the certificate after this date.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "notBefore": {
                              "description": "Don't deploy the certificate before this date.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "notAfter",
                            "notBefore"
                          ],
                          "type": "object"
                        },
                        "description": {
                          "description": "A description of the change's current status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "error": {
                          "additionalProperties": false,
                          "description": "Error information for this change.",
                          "nullable": true,
                          "properties": {
                            "code": {
                              "description": "The unique identifier code for this error.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "description": {
                              "description": "The detailed description for this error.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "Indicates when this error occurred.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "description",
                            "timestamp"
                          ],
                          "type": "object"
                        },
                        "state": {
                          "description": "The change request's state. A value of `new` means the certificate is processed but the renewal process is not started. A `running` value means CPS is preparing to send your certificate to Let's Encrypt. An `awaiting-input` value means the process is waiting on a user input, for example the approval or denial of a change management item. A `suspended` value indicates the process didn't complete. A value of `cancelled` means the process has been cancelled permanently, A `completed` value means the change request is finished. An `error` value means there's an issue with the domain. ",
                          "enum": [
                            "new",
                            "running",
                            "awaiting-input",
                            "suspended",
                            "cancelled",
                            "completed",
                            "error"
                          ],
                          "type": "string"
                        },
                        "status": {
                          "description": "The general status of the change. This is a high level of description of the status for the change. See [Status values and descriptions](https://techdocs.akamai.com/cps/reference/status-values-and-descriptions) for the list of possible status values this operation may return.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "deploymentSchedule",
                        "description",
                        "state",
                        "status"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "allowedInput",
                    "statusInfo"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change.v2.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the change object's details."
          }
        },
        "summary": "Get change status",
        "tags": [
          "Changes"
        ]
      },
      "delete": {
        "description": "Cancels a pending change.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/delete-enrollment-change"
        },
        "operationId": "delete-enrollment-change",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.change-id.v1+json": {
                "example": {
                  "change": "/cps/v2/enrollments/10002/changes/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The change for this enrollment on which to perform the desired operation.",
                  "properties": {
                    "change": {
                      "description": "Identifies the change to the enrollment.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "change"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-id.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the URL of the change."
          }
        },
        "summary": "Cancel a change",
        "tags": [
          "Changes"
        ]
      },
      "parameters": [
        {
          "description": "The change for this enrollment on which to perform the desired operation.",
          "example": "{{changeId}}",
          "in": "path",
          "name": "changeId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/changeId-path.yaml"
          }
        },
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/change.yaml",
        "path-info": "/enrollments/{enrollmentId}/changes/{changeId}"
      }
    },
    "/enrollments/{enrollmentId}/changes/{changeId}/deployment-schedule": {
      "get": {
        "description": "Gets the current deployment schedule settings describing when a change deploys to the network.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-change-deployment-schedule"
        },
        "operationId": "get-change-deployment-schedule",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.deployment-schedule.v1+json": {
                "example": {
                  "notAfter": null,
                  "notBefore": "2017-05-19T16:00:00Z"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "If you want CPS to automatically deploy your certificate, but you don't want the deployment to occur before a certain date and time, you can set a deploy after date. You can only set a deploy after date and time for the renewal of a certificate or for a certificate that's active on the network. The certificate may not deploy at the exact time and date you specify, but it won't deploy before that time and date.",
                  "properties": {
                    "notAfter": {
                      "description": "The time when the change is no longer in effect. This value is an ISO 8601 timestamp.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "notBefore": {
                      "description": "The time when you want the change to take effect. If you don't set this, the change occurs immediately, although most changes take some time to take effect even when they're immediately effective. This value is an ISO 8601 timestamp.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "notAfter",
                    "notBefore"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment-schedule.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the deployment schedule's details."
          }
        },
        "summary": "Get a deployment schedule",
        "tags": [
          "Changes"
        ]
      },
      "put": {
        "description": "Updates the current deployment schedule.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/put-change-deployment-schedule"
        },
        "operationId": "put-change-deployment-schedule",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.akamai.cps.deployment-schedule.v1+json": {
              "example": {
                "notAfter": null,
                "notBefore": "2017-05-19T16:00:00Z"
              },
              "schema": {
                "additionalProperties": false,
                "description": "If you want CPS to automatically deploy your certificate, but you don't want the deployment to occur before a certain date and time, you can set a deploy after date. You can only set a deploy after date and time for the renewal of a certificate or for a certificate that's active on the network. The certificate may not deploy at the exact time and date you specify, but it won't deploy before that time and date.",
                "properties": {
                  "notAfter": {
                    "description": "The time when the change is no longer in effect. This value is an ISO 8601 timestamp.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "notBefore": {
                    "description": "The time when you want the change to take effect. If you don't set this, the change occurs immediately, although most changes take some time to take effect even when they're immediately effective. This value is an ISO 8601 timestamp.",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "notAfter",
                  "notBefore"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/deployment-schedule.v1.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.change-id.v1+json": {
                "example": {
                  "change": "/cps/v2/enrollments/10002/changes/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The change for this enrollment on which to perform the desired operation.",
                  "properties": {
                    "change": {
                      "description": "Identifies the change to the enrollment.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "change"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-id.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the modified deployment schedule's details."
          }
        },
        "summary": "Update a deployment schedule",
        "tags": [
          "Deployments"
        ]
      },
      "parameters": [
        {
          "description": "The change for this enrollment on which to perform the desired operation.",
          "example": "{{changeId}}",
          "in": "path",
          "name": "changeId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/changeId-path.yaml"
          }
        },
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/deployment-schedule.yaml",
        "path-info": "/enrollments/{enrollmentId}/changes/{changeId}/deployment-schedule"
      }
    },
    "/enrollments/{enrollmentId}/changes/{changeId}/input/info/{allowedInputTypeParam}": {
      "get": {
        "description": "Get detailed information of a pending change. Below is a sample where `allowedInput[].type` has the value `third-party-csr`. The acceptable `Accept` header depends on the value of the `allowedInput.type` for the Change instance. See [Change Input Content Type Mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping) for details.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-change-allowed-input-param"
        },
        "operationId": "get-change-allowed-input-param",
        "parameters": [
          {
            "description": "__Enum__ Specifies the response type.",
            "example": "{{Accept}}",
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "enum": [
                "application/vnd.akamai.cps.csr.v2+json",
                "application/vnd.akamai.cps.csr.v1+json",
                "application/vnd.akamai.cps.change-management-info.v5+json",
                "application/vnd.akamai.cps.change-management-info.v4+json",
                "application/vnd.akamai.cps.change-management-info.v2+json",
                "application/vnd.akamai.cps.change-management-info.v1+json",
                "application/vnd.akamai.cps.deployment.v7+json",
                "application/vnd.akamai.cps.deployment.v6+json",
                "application/vnd.akamai.cps.deployment.v3+json",
                "application/vnd.akamai.cps.dv-challenges.v2+json",
                "application/vnd.akamai.cps.dv-challenges.v1+json",
                "application/vnd.akamai.cps.warnings.v1+json"
              ],
              "example": "application/vnd.akamai.cps.csr.v2+json",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "headers/Accept-header-change.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.change-management-info.v1+json": {
                "example": {
                  "acknowledgementDeadline": null,
                  "pendingState": {
                    "pendingCertificate": {
                      "certificateType": "third-party",
                      "fullCertificate": "-----BEGIN CERTIFICATE-----\nMIID2DCCAsCgAwIBAgIQ661T ... qsdFdLrZlpsIQwpLqdgKZlSw==\n-----END CERTIFICATE-----",
                      "signatureAlgorithm": "SHA-256"
                    },
                    "pendingNetworkConfiguration": {
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "networkType": null,
                      "preferredCiphers": "ak-akamai-2020q1",
                      "sni": null
                    }
                  },
                  "validationResult": {
                    "errors": null,
                    "warnings": [
                      {
                        "message": "[SAN name [san9.example.com] removed from certificate is still live on the network., SAN name [san8.example.com] removed from certificate is still live on the network.]",
                        "messageCode": "no-code"
                      }
                    ]
                  },
                  "validationResultHash": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate. A version label indicates this member is introduced in that version. A pre-version label indicates this member is removed in that version. No version label indicates this member is present in all versions.",
                  "properties": {
                    "acknowledgementDeadline": {
                      "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS deploys the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "pendingState": {
                      "additionalProperties": false,
                      "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
                      "properties": {
                        "pendingCertificate": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                          "properties": {
                            "certificateType": {
                              "description": "The kind of certificate created.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "fullCertificate": {
                              "description": "Displays the contents of the certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "signatureAlgorithm": {
                              "description": "Displays the signature algorithm.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "certificateType",
                            "fullCertificate",
                            "signatureAlgorithm"
                          ],
                          "type": "object"
                        },
                        "pendingNetworkConfiguration": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                          "properties": {
                            "mustHaveCiphers": {
                              "description": "Ciphers that you want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "networkType": {
                              "description": "The kind of enrollment network.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "default": "ak-akamai-default",
                              "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sni": {
                              "additionalProperties": false,
                              "description": "Server Name Indication (SNI) setting for this Enrollment.",
                              "nullable": true,
                              "properties": {
                                "cloneDnsNames": {
                                  "description": "Descriptive text for the cloned DNS.",
                                  "type": "boolean"
                                },
                                "dnsNames": {
                                  "description": "Descriptive text for the DNS served by SNI-only enabled enrollments.",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "minItems": 0,
                                  "nullable": true,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "cloneDnsNames"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "mustHaveCiphers",
                            "preferredCiphers"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "pendingNetworkConfiguration"
                      ],
                      "type": "object"
                    },
                    "validationResult": {
                      "additionalProperties": false,
                      "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
                      "properties": {
                        "errors": {
                          "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "Descriptive text for the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "Unique code for the error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "warnings": {
                          "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "Descriptive text for the warning.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "Unique code for the warning.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "errors",
                        "warnings"
                      ],
                      "type": "object"
                    },
                    "validationResultHash": {
                      "description": "The hash of the validation result.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "pendingState",
                    "validationResultHash"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-management-info.v1.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.change-management-info.v2+json": {
                "example": {
                  "acknowledgementDeadline": null,
                  "pendingState": {
                    "pendingCertificate": {
                      "certificateType": "third-party",
                      "fullCertificate": "-----BEGIN CERTIFICATE-----\nMIID2DCCAsCgAwIBAgIQ661T ... yqsdFdLrZlpsIQwpLqdgKZlSw==\n-----END CERTIFICATE-----",
                      "signatureAlgorithm": "SHA-256"
                    },
                    "pendingNetworkConfiguration": {
                      "disallowedTlsVersions": [
                        "TLSv1_2"
                      ],
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "networkType": null,
                      "preferredCiphers": "ak-akamai-2020q1",
                      "sni": null
                    }
                  },
                  "validationResult": {
                    "errors": null,
                    "warnings": [
                      {
                        "message": "[SAN name [san9.example.com] removed from certificate is still live on the network., SAN name [san8.example.com] removed from certificate is still live on the network.]",
                        "messageCode": "no-code"
                      }
                    ]
                  },
                  "validationResultHash": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
                  "properties": {
                    "acknowledgementDeadline": {
                      "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "pendingState": {
                      "additionalProperties": false,
                      "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
                      "properties": {
                        "pendingCertificate": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                          "properties": {
                            "certificateType": {
                              "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                              "enum": [
                                "san",
                                "single",
                                "wildcard",
                                "wildcard-san",
                                "third-party"
                              ],
                              "type": "string"
                            },
                            "fullCertificate": {
                              "description": "Displays the contents of the certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "signatureAlgorithm": {
                              "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                              "enum": [
                                "SHA-1",
                                "SHA-256"
                              ],
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "certificateType",
                            "fullCertificate",
                            "signatureAlgorithm"
                          ],
                          "type": "object"
                        },
                        "pendingNetworkConfiguration": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                          "properties": {
                            "disallowedTlsVersions": {
                              "description": "Disallowed TLS protocols.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "mustHaveCiphers": {
                              "default": "ak-akamai-default",
                              "description": "Ciphers that you want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "networkType": {
                              "description": "Enrollment network type.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "default": "ak-akamai-default",
                              "description": "Ciphers you want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default`.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sni": {
                              "additionalProperties": false,
                              "description": "Server Name Indication (SNI) setting for this enrollment.",
                              "nullable": true,
                              "properties": {
                                "cloneDnsNames": {
                                  "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                                  "type": "boolean"
                                },
                                "dnsNames": {
                                  "description": "Names served by SNI-only enabled enrollments.",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "minItems": 0,
                                  "nullable": true,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "cloneDnsNames"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "mustHaveCiphers",
                            "preferredCiphers"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "pendingNetworkConfiguration"
                      ],
                      "type": "object"
                    },
                    "validationResult": {
                      "additionalProperties": false,
                      "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
                      "properties": {
                        "errors": {
                          "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "warnings": {
                          "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "errors",
                        "warnings"
                      ],
                      "type": "object"
                    },
                    "validationResultHash": {
                      "description": "The hash of `validationResult`.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "pendingState",
                    "validationResultHash"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-management-info.v2.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.change-management-info.v4+json": {
                "example": {
                  "acknowledgementDeadline": null,
                  "pendingState": {
                    "pendingCertificate": {
                      "certificateType": "third-party",
                      "fullCertificate": "-----BEGIN CERTIFICATE-----\nMIID2DCCAsCgAwIBAgIQ661T ... FdLrZlpsIQwpLqdgKZlSw==\n-----END CERTIFICATE-----",
                      "ocspStapled": false,
                      "ocspUris": null,
                      "signatureAlgorithm": "SHA-256"
                    },
                    "pendingNetworkConfiguration": {
                      "disallowedTlsVersions": [
                        "TLSv1_2"
                      ],
                      "dnsNameSettings": null,
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "networkType": null,
                      "ocspStapling": "not-set",
                      "preferredCiphers": "ak-akamai-2020q1",
                      "quicEnabled": false,
                      "sniOnly": false
                    }
                  },
                  "validationResult": {
                    "errors": null,
                    "warnings": [
                      {
                        "message": "[SAN name [san9.example.com] removed from certificate is still live on the network., SAN name [san8.example.com] removed from certificate is still live on the network.]",
                        "messageCode": "no-code"
                      }
                    ]
                  },
                  "validationResultHash": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
                  "properties": {
                    "acknowledgementDeadline": {
                      "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "pendingState": {
                      "additionalProperties": false,
                      "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
                      "properties": {
                        "pendingCertificate": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                          "properties": {
                            "certificateType": {
                              "description": "Either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                              "enum": [
                                "san",
                                "single",
                                "wildcard",
                                "wildcard-san",
                                "third-party"
                              ],
                              "type": "string"
                            },
                            "fullCertificate": {
                              "description": "Displays the contents of the certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "ocspStapled": {
                              "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                              "type": "boolean"
                            },
                            "ocspUris": {
                              "description": "URI used for OCSP stapling validation.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "nullable": true,
                              "type": "array"
                            },
                            "signatureAlgorithm": {
                              "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                              "enum": [
                                "SHA-1",
                                "SHA-256"
                              ],
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "certificateType",
                            "fullCertificate",
                            "signatureAlgorithm"
                          ],
                          "type": "object"
                        },
                        "pendingNetworkConfiguration": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                          "properties": {
                            "disallowedTlsVersions": {
                              "description": "Disallowed TLS protocols.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "dnsNameSettings": {
                              "additionalProperties": false,
                              "description": "DNS name settings.",
                              "nullable": true,
                              "properties": {
                                "cloneDnsNames": {
                                  "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                                  "type": "boolean"
                                },
                                "dnsNames": {
                                  "description": "Names served by SNI-only enabled enrollments.",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "minItems": 0,
                                  "nullable": true,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "cloneDnsNames"
                              ],
                              "type": "object"
                            },
                            "mustHaveCiphers": {
                              "description": "Ciphers included for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "networkType": {
                              "description": "Enrollment network type.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "ocspStapling": {
                              "description": "OCSP stapling setting for the deployment.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "description": "Ciphers included for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "quicEnabled": {
                              "description": "QUIC transport layer network protocol.",
                              "type": "boolean"
                            },
                            "sniOnly": {
                              "description": "Server Name Indication (SNI) setting for this Enrollment.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "mustHaveCiphers",
                            "preferredCiphers",
                            "quicEnabled",
                            "sniOnly"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "pendingNetworkConfiguration"
                      ],
                      "type": "object"
                    },
                    "validationResult": {
                      "additionalProperties": false,
                      "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
                      "properties": {
                        "errors": {
                          "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "warnings": {
                          "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "errors",
                        "warnings"
                      ],
                      "type": "object"
                    },
                    "validationResultHash": {
                      "description": "The hash of `validationResult`.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "pendingState",
                    "validationResultHash"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-management-info.v4.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.change-management-info.v5+json": {
                "example": {
                  "acknowledgementDeadline": null,
                  "pendingState": {
                    "pendingCertificates": [
                      {
                        "certificateType": "third-party",
                        "fullCertificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... KZlSw==\n-----END CERTIFICATE-----",
                        "keyAlgorithm": "RSA",
                        "ocspStapled": false,
                        "ocspUris": null,
                        "signatureAlgorithm": "SHA-256"
                      }
                    ],
                    "pendingNetworkConfiguration": {
                      "disallowedTlsVersions": [
                        "TLSv1_2"
                      ],
                      "dnsNameSettings": null,
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "networkType": null,
                      "ocspStapling": "not-set",
                      "preferredCiphers": "ak-akamai-2020q1",
                      "quicEnabled": false,
                      "sniOnly": false
                    }
                  },
                  "validationResult": {
                    "errors": null,
                    "warnings": [
                      {
                        "message": "[SAN name [san9.example.com] removed from certificate is still live on the network., SAN name [san8.example.com] removed from certificate is still live on the network.]",
                        "messageCode": "no-code"
                      }
                    ]
                  },
                  "validationResultHash": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
                  "properties": {
                    "acknowledgementDeadline": {
                      "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "pendingState": {
                      "additionalProperties": false,
                      "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
                      "properties": {
                        "pendingCertificates": {
                          "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "certificateType": {
                                "description": "Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                                "enum": [
                                  "san",
                                  "single",
                                  "wildcard",
                                  "wildcard-san",
                                  "third-party"
                                ],
                                "type": "string"
                              },
                              "fullCertificate": {
                                "description": "Displays the contents of the certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "keyAlgorithm": {
                                "description": "Displays the key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                                "enum": [
                                  "ECDSA",
                                  "RSA"
                                ],
                                "type": "string"
                              },
                              "ocspStapled": {
                                "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                                "type": "boolean"
                              },
                              "ocspUris": {
                                "description": "URI used for OCSP stapling validation.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 0,
                                "nullable": true,
                                "type": "array"
                              },
                              "signatureAlgorithm": {
                                "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                                "enum": [
                                  "SHA-1",
                                  "SHA-256"
                                ],
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "certificateType",
                              "fullCertificate",
                              "signatureAlgorithm"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "pendingNetworkConfiguration": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                          "properties": {
                            "disallowedTlsVersions": {
                              "description": "Disallowed TLS protocols.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "dnsNameSettings": {
                              "additionalProperties": false,
                              "description": "DNS name settings.",
                              "nullable": true,
                              "properties": {
                                "cloneDnsNames": {
                                  "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                                  "type": "boolean"
                                },
                                "dnsNames": {
                                  "description": "Names served by SNI-only enabled enrollments.",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "minItems": 0,
                                  "nullable": true,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "cloneDnsNames"
                              ],
                              "type": "object"
                            },
                            "mustHaveCiphers": {
                              "description": "Ciphers included for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "networkType": {
                              "description": "Enrollment network type.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "ocspStapling": {
                              "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                              "enum": [
                                "on",
                                "off",
                                "not-set"
                              ],
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "description": "Ciphers included for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "quicEnabled": {
                              "description": "QUIC transport layer network protocol.",
                              "type": "boolean"
                            },
                            "sniOnly": {
                              "description": "Server Name Indication (SNI) setting for this Enrollment.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "mustHaveCiphers",
                            "preferredCiphers",
                            "quicEnabled",
                            "sniOnly"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "pendingCertificates",
                        "pendingNetworkConfiguration"
                      ],
                      "type": "object"
                    },
                    "validationResult": {
                      "additionalProperties": false,
                      "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
                      "properties": {
                        "errors": {
                          "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "warnings": {
                          "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "errors",
                        "warnings"
                      ],
                      "type": "object"
                    },
                    "validationResultHash": {
                      "description": "The hash of `validationResult`.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "pendingState",
                    "validationResultHash"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-management-info.v5.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.change-management-info.v6+json": {
                "example": {
                  "acknowledgementDeadline": null,
                  "pendingState": {
                    "pendingCertificates": [
                      {
                        "certificateType": "third-party",
                        "fullCertificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... KZlSw==\n-----END CERTIFICATE-----",
                        "keyAlgorithm": "RSA",
                        "ocspStapled": false,
                        "ocspUris": null,
                        "signatureAlgorithm": "SHA-256"
                      }
                    ],
                    "pendingNetworkConfiguration": {
                      "disallowedTlsVersions": [
                        "TLSv1_2"
                      ],
                      "dnsNameSettings": null,
                      "fipsMode": true,
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "networkType": null,
                      "ocspStapling": "not-set",
                      "preferredCiphers": "ak-akamai-2020q1",
                      "quicEnabled": false,
                      "sniOnly": false
                    }
                  },
                  "validationResult": {
                    "errors": null,
                    "warnings": [
                      {
                        "message": "[SAN name [san9.example.com] removed from certificate is still live on the network., SAN name [san8.example.com] removed from certificate is still live on the network.]",
                        "messageCode": "no-code"
                      }
                    ]
                  },
                  "validationResultHash": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "After you create an enrollment, you can have CPS halt deployment when the certificate becomes available, so that you can test and view the certificate on a staging server prior to deployment in the production network. If you do not want CPS to automatically deploy the certificate to the production network after it receives the signed certificate from the CA, you can turn change management on for the enrollment. This stops CPS from deploying the certificate to the network until you acknowledge that you are ready to deploy the certificate.",
                  "properties": {
                    "acknowledgementDeadline": {
                      "description": "ISO 8601 timestamp for the user's deadline to acknowledge the change management validation result, before CPS attempts to deploy the pending state to the live network. The value is `null` if there's no existing certificate on the network for the current enrollment.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "pendingState": {
                      "additionalProperties": false,
                      "description": "The snapshot of the pending state for the enrollment when this change takes effect.",
                      "properties": {
                        "pendingCertificates": {
                          "description": "The snapshot of the pending certificate for the enrollment when this change takes effect.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "certificateType": {
                                "description": "Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                                "enum": [
                                  "san",
                                  "single",
                                  "wildcard",
                                  "wildcard-san",
                                  "third-party"
                                ],
                                "type": "string"
                              },
                              "fullCertificate": {
                                "description": "Displays the contents of the certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "keyAlgorithm": {
                                "description": "Displays the key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                                "enum": [
                                  "ECDSA",
                                  "RSA"
                                ],
                                "type": "string"
                              },
                              "ocspStapled": {
                                "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                                "type": "boolean"
                              },
                              "ocspUris": {
                                "description": "URI used for OCSP stapling validation.",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "minItems": 0,
                                "nullable": true,
                                "type": "array"
                              },
                              "signatureAlgorithm": {
                                "description": "Displays the signature algorithm. Either `SHA-1` or `SHA-256`.",
                                "enum": [
                                  "SHA-1",
                                  "SHA-256"
                                ],
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "certificateType",
                              "fullCertificate",
                              "signatureAlgorithm"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "pendingNetworkConfiguration": {
                          "additionalProperties": false,
                          "description": "The snapshot of the pending network configuration for the enrollment when this change takes effect.",
                          "properties": {
                            "disallowedTlsVersions": {
                              "description": "Disallowed TLS protocols.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "dnsNameSettings": {
                              "additionalProperties": false,
                              "description": "DNS name settings.",
                              "nullable": true,
                              "properties": {
                                "cloneDnsNames": {
                                  "description": "When `true`, all certificate SANs are included in `dnsNames`.",
                                  "type": "boolean"
                                },
                                "dnsNames": {
                                  "description": "Names served by SNI-only enabled enrollments.",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "minItems": 0,
                                  "nullable": true,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "cloneDnsNames"
                              ],
                              "type": "object"
                            },
                            "fipsMode": {
                              "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.",
                              "nullable": true,
                              "type": "boolean"
                            },
                            "mustHaveCiphers": {
                              "description": "Ciphers included for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "networkType": {
                              "description": "Enrollment network type.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "ocspStapling": {
                              "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                              "enum": [
                                "on",
                                "off",
                                "not-set"
                              ],
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "description": "Ciphers included for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "quicEnabled": {
                              "description": "QUIC transport layer network protocol.",
                              "type": "boolean"
                            },
                            "sniOnly": {
                              "description": "Server Name Indication (SNI) setting for this Enrollment.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "mustHaveCiphers",
                            "preferredCiphers",
                            "quicEnabled",
                            "sniOnly"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "pendingCertificates",
                        "pendingNetworkConfiguration"
                      ],
                      "type": "object"
                    },
                    "validationResult": {
                      "additionalProperties": false,
                      "description": "Provides information about the hash's most recent validation check, indicating the change's current job state. This object appears in the response, even when its value is `null`. Before you run the [Update a change](https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param) operation, review the change's validation results and resolve any issues.",
                      "properties": {
                        "errors": {
                          "description": "Validation errors of the current job state. Errors prevent a change from proceeding until you resolve them. They are optional and only appear if there are any errors.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "warnings": {
                          "description": "Validation warnings of the current job state. Warnings suspend the execution of a change. You can acknowledge or deny warnings. If you acknowledge them, the change proceeds with its operation. They are optional and only appear if there are any warnings.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "message": {
                                "description": "The description of the message.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "messageCode": {
                                "description": "The unique code of the message.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "message",
                              "messageCode"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        }
                      },
                      "required": [
                        "errors",
                        "warnings"
                      ],
                      "type": "object"
                    },
                    "validationResultHash": {
                      "description": "The hash of `validationResult`.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "pendingState",
                    "validationResultHash"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-management-info.v6.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.csr.v1+json": {
                "example": {
                  "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIDPT ... <sample - removed for readability> .... hA9jc=\n-----END CERTIFICATE REQUEST-----"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Certificate Signing Request (CSR).",
                  "properties": {
                    "csr": {
                      "description": "String with PEM formatted CSR.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "csr"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/csr.v1.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.csr.v2+json": {
                "example": {
                  "csrs": [
                    {
                      "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIDPT ... <sample - removed for readability> .... hA9jc=\n-----END CERTIFICATE REQUEST-----",
                      "keyAlgorithm": "RSA"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Certificate Signing Request (CSR).",
                  "properties": {
                    "csrs": {
                      "description": "Certificate Signing Request (CSR) objects.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "csr": {
                            "description": "String with PEM formatted CSR.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "Key algorithm of the certificate, either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "csr"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "csrs"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/csr.v2.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.deployment.v3+json": {
                "example": {
                  "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                  "networkConfiguration": {
                    "disallowedTlsVersions": [],
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "secureNetwork": "enhanced-tls",
                    "sni": {
                      "cloneDnsNames": true,
                      "dnsNames": [
                        "san2.example.com",
                        "san1.example.com"
                      ]
                    }
                  },
                  "signatureAlgorithm": "SHA-256",
                  "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "certificate": {
                      "description": "The certificate text.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Information about how you want to deploy your certificate.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS versions.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate. Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "secureNetwork": {
                          "description": "The type of deployment network you want to use. Specify Standard TLS as the enum `standard-tls` to deploy your certificate to Akamai's standard secure network. It is not PCI compliant. Specify Enhanced TLS as the enum `enhanced-tls` to deploy your certificate to Akamai's more secure network with PCI compliance capability.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sni": {
                          "additionalProperties": false,
                          "description": "SNI settings for your enrollment. When set to `null`, the enrollment becomes non-SNI. When it is non-null, enrollment is SNI-only. This setting cannot be changed once an enrollment is created.",
                          "nullable": true,
                          "properties": {
                            "cloneDnsNames": {
                              "description": "Enable if you want CPS to direct traffic using all the SANs listed in the SANs parameter when you created your enrollment.",
                              "type": "boolean"
                            },
                            "dnsNames": {
                              "description": "Names served by SNI-only enabled enrollments.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "cloneDnsNames"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "disallowedTlsVersions",
                        "geography",
                        "mustHaveCiphers",
                        "preferredCiphers",
                        "secureNetwork",
                        "sni"
                      ],
                      "type": "object"
                    },
                    "signatureAlgorithm": {
                      "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                      "enum": [
                        "SHA-1",
                        "SHA-256"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "trustChain": {
                      "description": "The trust chain text. You may have any number of trust chains.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "certificate",
                    "networkConfiguration",
                    "trustChain"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment.v3.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.deployment.v6+json": {
                "example": {
                  "multiStackedCertificates": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                      "expiry": "2021-06-10T12:00:00Z",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "networkConfiguration": {
                    "disallowedTlsVersions": [],
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ],
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "ocspStapling": "not-set",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "quicEnabled": false,
                    "secureNetwork": "standard-tls",
                    "sniOnly": true
                  },
                  "ocspStapled": true,
                  "ocspUris": [
                    "http://ocsp.example.com"
                  ],
                  "primaryCertificate": {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                    "expiry": "2021-06-10T12:00:00Z",
                    "signatureAlgorithm": "SHA-256",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "description": "The certificate text.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "trustChain": {
                            "description": "The trust chain for the certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "trustChain"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocol.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "OCSP stapling setting for the deployment.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "The type of deployment network. A value of `standard-tls` means Akamai's standard secure network, while `enhanced-tls` means Akamai's more secure network with PCI compliance capability.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "quicEnabled",
                        "sniOnly"
                      ],
                      "type": "object"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate of the enrollment.",
                      "nullable": true,
                      "properties": {
                        "certificate": {
                          "description": "The certificate text.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, for use in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "trustChain": {
                          "description": "The trust chain for the certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "trustChain"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "multiStackedCertificates",
                    "networkConfiguration",
                    "primaryCertificate"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment.v6.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.deployment.v7+json": {
                "example": {
                  "multiStackedCertificates": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                      "expiry": "2021-06-10T12:00:00Z",
                      "keyAlgorithm": "ECDSA",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "networkConfiguration": {
                    "disallowedTlsVersions": [],
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ],
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "ocspStapling": "not-set",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "quicEnabled": false,
                    "secureNetwork": "standard-tls",
                    "sniOnly": true
                  },
                  "ocspStapled": true,
                  "ocspUris": [
                    "http://ocsp.example.com"
                  ],
                  "primaryCertificate": {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                    "expiry": "2021-06-10T12:00:00Z",
                    "keyAlgorithm": "RSA",
                    "signatureAlgorithm": "SHA-256",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "description": "The certificate text.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "trustChain": {
                            "description": "The trust chain for the certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "trustChain"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocol.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "quicEnabled",
                        "sniOnly"
                      ],
                      "type": "object"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate of the enrollment.",
                      "nullable": true,
                      "properties": {
                        "certificate": {
                          "description": "The certificate text.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "trustChain": {
                          "description": "The trust chain for the certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "trustChain"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "multiStackedCertificates",
                    "networkConfiguration",
                    "primaryCertificate"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment.v7.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.deployment.v8+json": {
                "example": {
                  "multiStackedCertificates": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                      "expiry": "2021-06-10T12:00:00Z",
                      "keyAlgorithm": "ECDSA",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "networkConfiguration": {
                    "disallowedTlsVersions": [],
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ],
                    "fipsMode": false,
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "ocspStapling": "not-set",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "quicEnabled": false,
                    "secureNetwork": "standard-tls",
                    "sniOnly": true
                  },
                  "ocspStapled": true,
                  "ocspUris": [
                    "http://ocsp.example.com"
                  ],
                  "primaryCertificate": {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                    "expiry": "2021-06-10T12:00:00Z",
                    "keyAlgorithm": "RSA",
                    "signatureAlgorithm": "SHA-256",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "description": "The certificate text.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "trustChain": {
                            "description": "The trust chain for the certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "trustChain"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocol.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "fipsMode": {
                          "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.      ",
                          "type": "boolean"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "quicEnabled",
                        "sniOnly"
                      ],
                      "type": "object"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate of the enrollment.",
                      "nullable": true,
                      "properties": {
                        "certificate": {
                          "description": "The certificate text.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "trustChain": {
                          "description": "The trust chain for the certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "trustChain"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "multiStackedCertificates",
                    "networkConfiguration",
                    "primaryCertificate"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment.v8.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.dv-challenges.v1+json": {
                "example": {
                  "challenges": [
                    {
                      "domain": "www.cps-example-dv.com",
                      "error": "The domain is not ready for validation.",
                      "expires": "2017-05-19T18:00:00Z",
                      "fullPath": "http://www.cps-example-dv.com/.well-known/acme-challenge/abcdefghijklmno-KuzBi3q5Dr6TU8ViHSDSf-c9Iyg",
                      "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/abcdefghijklmno-KuzBi3q5Dr6TU8ViHSDSf-c9Iyg",
                      "requestTimestamp": "2017-05-19T17:20:00Z",
                      "responseBody": "12345-...-abcdef",
                      "status": "Awaiting user",
                      "token": "abcdefghijklmno-123453q5Dr6TU8ViHSDSf-c9Iyg",
                      "validatedTimestamp": "2017-05-19T17:35:22Z"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "When using certificates with domain validation, you prove that you have control over each of the domains listed in the certificate. When you create a new DV enrollment that generates a certificate signing request (CSR), CPS automatically sends it to Let's Encrypt for signing. Let's Encrypt sends back a challenge for each domain listed on your certificate. You prove that you have control over the domains listed in the CSR by redirecting your traffic to Akamai. This allows Akamai to complete the challenge process for you by detecting the redirect and answering Let's Encrypt's challenge. You need to configure your web server to redirect your traffic to Akamai. If you aren't able to redirect traffic on your web server, you need to instruct the person who can redirect traffic to do so. Let's Encrypt automatically verifies the domain after it receives an answer to the challenge, and marks the domain as validated. A version label indicates this member is introduced in that version. A pre-version label indicates this member is removed in that version. No version label indicates this member is present in all versions.",
                  "properties": {
                    "challenges": {
                      "description": "Domains that need to be validated for this Enrollment. V1 only supports and displays http-01 challenge.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "domain": {
                            "description": "Domain which is being validated.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "error": {
                            "description": "Current validation status for domains not yet validated.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expires": {
                            "description": "Timestamp when this token or validation expires. Sample 2014-08-12T18:57:07z.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "fullPath": {
                            "description": "URL where Let's Encrypt requests and expects to find 'token' as content.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "redirectFullPath": {
                            "description": "The URL where Akamai publishes `responseBody` for Let's Encrypt to validate. The client can configure a redirect at `fullPath` to redirect requests to this URL, keeping in mind that the token may change over time.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestTimestamp": {
                            "description": "Timestamp Akamai received validation token from Let's Encrypt. Sample `2014-08-12T18:57:07z`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "responseBody": {
                            "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The domain validation status.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "token": {
                            "description": "The validation token issued by Let's Encrypt.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "validatedTimestamp": {
                            "description": "Timestamp when domain was successfully validated. Sample 2014-08-12T18:57:07z.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "domain",
                          "error",
                          "expires",
                          "fullPath",
                          "redirectFullPath",
                          "requestTimestamp",
                          "responseBody",
                          "status",
                          "token",
                          "validatedTimestamp"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "challenges"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/dv-challenges.v1.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.dv-challenges.v2+json": {
                "example": {
                  "dv": [
                    {
                      "challenges": [
                        {
                          "error": null,
                          "fullPath": "http://www.cps-example-dv.com/.well-known/acme-challenge/abcdefghijklmno-123453q5Dr6TU8ViHSDSf-c9Iyg",
                          "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/abcdefghijklmno-123453q5Dr6TU8ViHSDSf-c9Iyg",
                          "responseBody": "AAA-dvq11111CmSWBzwIFpc4G2OCh5YXoHK56VccGmU.-BBBBBD3eQiu1uf5vf4xp-ZJv71AiycGGMuLtf06BnA",
                          "status": "Pending",
                          "token": "abcdefghijklmno-123453q5Dr6TU8ViHSDSf-c9Iyg",
                          "type": "http-01",
                          "validationRecords": []
                        },
                        {
                          "error": null,
                          "fullPath": "_acme-challenge.www.cps-example-dv.com.",
                          "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/abcdefghijklmno-123453q5Dr6TU8ViHSDSf-c9Iyg",
                          "responseBody": "0yVISDJjpXR7BXzR5QgfA51tt-I6aKremGnPwK_lvH4",
                          "status": "Pending",
                          "token": "cGBnw-3YO7rUhq61EuuHqcGrYkaQWALAgi8szTqRoHA",
                          "type": "dns-01",
                          "validationRecords": []
                        }
                      ],
                      "domain": "www.cps-example-dv.com",
                      "error": "The domain is not ready for validation.",
                      "expires": "2021-09-06T17:55:17Z",
                      "requestTimestamp": "2021-09-05T15:55:49Z",
                      "status": "Awaiting user",
                      "validatedTimestamp": "2021-09-05T17:53:22Z",
                      "validationStatus": "RESPONSE_ERROR"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "When using certificates with domain validation, you prove that you have control over each of the domains listed in the certificate. When you create a new DV enrollment that generates a certificate signing request (CSR), CPS automatically sends it to Let's Encrypt for signing. Let's Encrypt sends back a challenge for each domain listed on your certificate. You prove that you have control over the domains listed in the CSR by redirecting your traffic to Akamai, or placing a token in the domain's DNS zone. This allows Akamai to complete the challenge process for you by detecting the redirect or DNS token, and answering Let's Encrypt's challenge. You need to complete one of the challenges for each domain to validate the certificate. To validate a domain, only one challenge for each domain needs to be complete. Let's Encrypt automatically verifies the domain after it receives an answer to the challenge, and marks the domain as validated.",
                  "properties": {
                    "dv": {
                      "description": "Domain validation entities returned in query parameters.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "challenges": {
                            "description": "Domains that need to be validated for this Enrollment. V1 only supports and displays http-01 challenge. V2 allows HTTP and DNS challenge types. Each domain in the enrollment can have many challenges and can use a different challenge types. To validate a domain, only one challenge for each domain needs to be complete.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "error": {
                                  "description": "Error message describing failure to validate domain control.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "fullPath": {
                                  "description": "URL where Let's Encrypt requests and expects to find 'token' as content.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "redirectFullPath": {
                                  "description": "The URL where Akamai publishes `responseBody` for Let's Encrypt to validate. The client can configure a redirect at `fullPath` to redirect requests to this URL, keeping in mind that the token may change over time.",
                                  "type": "string"
                                },
                                "responseBody": {
                                  "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The domain validation status. Current values include `Preparing`, `Pending`, `Awaiting user`, `Valid`, `Invalid`, `Error` & `Ready for Validation`.",
                                  "enum": [
                                    "Preparing",
                                    "Pending",
                                    "Awaiting user",
                                    "Valid",
                                    "Invalid",
                                    "Error",
                                    "Ready for Validation"
                                  ],
                                  "type": "string"
                                },
                                "token": {
                                  "description": "The validation token issued by Let's Encrypt.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Validation type. Either `dns-01` or `http-01`.",
                                  "enum": [
                                    "dns-01",
                                    "http-01"
                                  ],
                                  "type": "string"
                                },
                                "validationRecords": {
                                  "description": "Validation attempts and status.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "authorities": {
                                        "description": "Validation authorities.",
                                        "items": {
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "minItems": 0,
                                        "type": "array"
                                      },
                                      "hostname": {
                                        "description": "Domain name being validated.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Port used for validation.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "resolvedIp": {
                                        "description": "IPs resolved for name being validated.",
                                        "items": {
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "minItems": 0,
                                        "type": "array"
                                      },
                                      "triedIp": {
                                        "description": "IP from `resolvedIp` tried for this validation.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "URL attempted validated.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "usedIp": {
                                        "description": "IP from `resolvedIp` used for this validation.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "authorities",
                                      "hostname",
                                      "port",
                                      "resolvedIp",
                                      "triedIp",
                                      "url",
                                      "usedIp"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 0,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "validationRecords"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "domain": {
                            "description": "Domain which is being validated.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "error": {
                            "description": "Current validation status for domains not yet validated.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expires": {
                            "description": "Timestamp when this token or validation expires. Sample 2017-12-05T18:57:07z.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestTimestamp": {
                            "description": "Timestamp Akamai received validation token from Let's Encrypt. Sample `2017-12-12T18:57:07z`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "Let's Encrypt validation status. Required `Valid` for certificate generation.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "validatedTimestamp": {
                            "description": "Timestamp when domain was successfully validated. Sample 2017-12-12T18:57:07z.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "validationStatus": {
                            "description": "Status of the domain validation process.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "required": [
                          "challenges"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "dv"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/dv-challenges.v2.yaml"
                  }
                }
              },
              "application/vnd.akamai.cps.warnings.v1+json": {
                "example": {
                  "warnings": "Some of the domains being provisioned (%s) exist on another certificate. Akamai recommends against overlapping names on Enhanced TLS and Standard TLS certificates except during digital property migrations. Enhanced TLS traffic could be misdirected in the event of DNS misconfiguration and treated as Standard TLS until the overlap is eliminated."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Warnings generated by CPS.",
                  "properties": {
                    "warnings": {
                      "description": "String with comma separated list of warnings.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": [
                    "warnings"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/warnings.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the change's details requested in the `Accept` header."
          }
        },
        "summary": "Get a change",
        "tags": [
          "Changes"
        ]
      },
      "parameters": [
        {
          "description": "__Enum__ Found as the last part of `Change.allowedInput[].update` hypermedia URL. See [Change Input Content Type Mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping) for details. Currently supported values include `change-management-info`, `lets-encrypt-challenges`, `post-verification-warnings`, `pre-verification-warnings`, `third-party-csr`.",
          "example": "{{allowedInputTypeParam}}",
          "in": "path",
          "name": "allowedInputTypeParam",
          "required": true,
          "schema": {
            "enum": [
              "change-management-info",
              "lets-encrypt-challenges",
              "post-verification-warnings",
              "pre-verification-warnings",
              "third-party-csr"
            ],
            "example": "third-party-csr",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/allowedInputTypeParam-path.yaml"
          }
        },
        {
          "description": "The change for this enrollment on which to perform the desired operation.",
          "example": "{{changeId}}",
          "in": "path",
          "name": "changeId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/changeId-path.yaml"
          }
        },
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/allowed-input-type.yaml",
        "path-info": "/enrollments/{enrollmentId}/changes/{changeId}/input/info/{allowedInputTypeParam}"
      }
    },
    "/enrollments/{enrollmentId}/changes/{changeId}/input/update/{allowedInputTypeParam}": {
      "post": {
        "description": "Updates a pending change. Below is a sample where `allowedInput[].type` has the value `third-party-cert-and-trust-chain`. The acceptable `Content-Type` and `Accept` headers depends on the value of the `allowedInput.type` for the Change instance. See [Change Input Content Type Mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping) for details.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/post-change-allowed-input-param"
        },
        "operationId": "post-change-allowed-input-param",
        "parameters": [
          {
            "description": "__Enum__ Must be used to specify a request type.",
            "example": "{{Content-Type}}",
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "enum": [
                "application/vnd.akamai.cps.certificate-and-trust-chain.v2+json",
                "application/vnd.akamai.cps.certificate-and-trust-chain.v1+json",
                "application/vnd.akamai.cps.acknowledgement-with-hash.v1+json",
                "application/vnd.akamai.cps.acknowledgement.v1+json"
              ],
              "example": "application/vnd.akamai.cps.certificate-and-trust-chain.v2+json",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "headers/content-type-header-change.yaml"
            }
          },
          {
            "description": "__Enum__ Specifies the response type.",
            "example": "{{Accept}}",
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "enum": [
                "application/vnd.akamai.cps.change-id.v1+json"
              ],
              "example": "application/vnd.akamai.cps.change-id.v1+json",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "headers/Accept-header-changeId.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.akamai.cps.acknowledgement-with-hash.v1+json": {
              "example": {
                "acknowledgement": "acknowledge",
                "hash": "24fb6fb91d290370c13a39e76afc1b26"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates information needed to acknowledge an enrollment change.",
                "properties": {
                  "acknowledgement": {
                    "description": "The state for which this Acknowledgment is submitted, either `acknowledge`, `deny`.",
                    "enum": [
                      "acknowledge",
                      "deny"
                    ],
                    "type": "string"
                  },
                  "hash": {
                    "description": "A hash is the state that this request acknowledges. You use this when you want to be explicit about what state you're acknowledging in order to prevent race conditions, such as when the state changes while the acknowledgment POST operation is in progress.",
                    "type": "string"
                  }
                },
                "required": [
                  "acknowledgement",
                  "hash"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/acknowledgement-with-hash.v1.yaml"
                }
              }
            },
            "application/vnd.akamai.cps.acknowledgement.v1+json": {
              "example": {
                "acknowledgement": "acknowledge"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates information needed to acknowledge an enrollment change.",
                "properties": {
                  "acknowledgement": {
                    "description": "The state for which this Acknowledgment is submitted, either `acknowledge`, `deny`.",
                    "enum": [
                      "acknowledge",
                      "deny"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "acknowledgement"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/acknowledgement.v1.yaml"
                }
              }
            },
            "application/vnd.akamai.cps.certificate-and-trust-chain.v1+json": {
              "example": {
                "certificate": "-----BEGIN CERTIFICATE-----\nMIID2DCCAsCgAQsF ... O0+chcHsn6qf+uVKg2u1SKpLqdgKZlSw==\n-----END CERTIFICATE-----",
                "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDTDCCAjQCEB1F ... jutSE218ho23wwDQYJKoZIhvcNAQELBQAQ=\n-----END CERTIFICATE-----"
              },
              "schema": {
                "additionalProperties": false,
                "description": "A digital certificate containing an electronic document that includes company information, a public key, and a CA's digital signature based on its private key. A chain of trust verifies a digital certificate, whereby a certificate hierarchy lets individuals verify the validity of a certificate's issuer. ",
                "properties": {
                  "certificate": {
                    "description": "The certificate text. Appears as `null` in responses until you specify it.",
                    "nullable": true,
                    "type": "string"
                  },
                  "trustChain": {
                    "description": "The trust chain text. You may have many trust chains or none. Appears as `null` when no trust chains exist.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "certificate"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-and-trust-chain.v1.yaml"
                }
              }
            },
            "application/vnd.akamai.cps.certificate-and-trust-chain.v2+json": {
              "example": {
                "certificatesAndTrustChains": [
                  {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID ... KZlSw==\n-----END CERTIFICATE-----",
                    "keyAlgorithm": "ECDSA",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIID ... 4p5mA=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDQ ... JuAIQ=\n-----END CERTIFICATE-----"
                  },
                  {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID ... ZKwSl==\n-----END CERTIFICATE-----",
                    "keyAlgorithm": "RSA",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIID ... mA45p=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDQ ... QuIAJ=\n-----END CERTIFICATE-----"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "A digital certificate containing an electronic document that includes company information, a public key, and a CA's digital signature based on its private key. A chain of trust verifies a digital certificate, whereby a certificate hierarchy lets individuals verify the validity of a certificate's issuer. ",
                "properties": {
                  "certificatesAndTrustChains": {
                    "description": "Certificate and trust chains.",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "certificate": {
                          "description": "The certificate text. Appears as `null` in responses until you specify it.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm of the certificate, either `ECDSA` or `RSA`. Appears as `null` in responses until you specify it.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "trustChain": {
                          "description": "The trust chain text. You may have many trust chains or none. Appears as `null` when no trust chains exist. ",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "keyAlgorithm"
                      ],
                      "type": "object"
                    },
                    "minItems": 0,
                    "type": "array"
                  }
                },
                "required": [
                  "certificatesAndTrustChains"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/certificate-and-trust-chain.v2.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.change-id.v1+json": {
                "example": {
                  "change": "/cps/v2/enrollments/10002/changes/10002"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The change for this enrollment on which to perform the desired operation.",
                  "properties": {
                    "change": {
                      "description": "Identifies the change to the enrollment.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "change"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-id.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the updated change."
          }
        },
        "summary": "Update a change",
        "tags": [
          "Changes"
        ]
      },
      "parameters": [
        {
          "description": "__Enum__ Found as the last part of `Change.allowedInput[].update` hypermedia URL. See [Change Input Content Type Mapping](https://techdocs.akamai.com/cps/reference/change-input-content-type-mapping) for details. Currently supported values include `change-management-ack`, `lets-encrypt-challenges-completed`, `post-verification-warnings-ack`, `pre-verification-warnings-ack`, `third-party-cert-and-trust-chain`.",
          "example": "{{allowedInputTypeParam}}",
          "in": "path",
          "name": "allowedInputTypeParam",
          "required": true,
          "schema": {
            "enum": [
              "change-management-ack",
              "lets-encrypt-challenges-completed",
              "post-verification-warnings-ack",
              "pre-verification-warnings-ack",
              "third-party-cert-and-trust-chain"
            ],
            "example": "third-party-cert-and-trust-chain",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/allowedInputUpdateTypeParam-path.yaml"
          }
        },
        {
          "description": "The change for this enrollment on which to perform the desired operation.",
          "example": "{{changeId}}",
          "in": "path",
          "name": "changeId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/changeId-path.yaml"
          }
        },
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/allowed-input-type-update.yaml",
        "path-info": "/enrollments/{enrollmentId}/changes/{changeId}/input/update/{allowedInputTypeParam}"
      }
    },
    "/enrollments/{enrollmentId}/deployments": {
      "get": {
        "description": "Lists the deployments for an enrollment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-deployments"
        },
        "operationId": "get-deployments",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.deployments.v8+json": {
                "example": {
                  "production": {
                    "multiStackedCertificates": [
                      {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... nMweq/\n-----END CERTIFICATE-----",
                        "expiry": "2022-02-05T13:21:20Z",
                        "keyAlgorithm": "RSA",
                        "signatureAlgorithm": "SHA-256",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... KEUp0=\n-----END CERTIFICATE-----"
                      }
                    ],
                    "networkConfiguration": {
                      "disallowedTlsVersions": [
                        "TLSv1",
                        "TLSv1_1"
                      ],
                      "dnsNames": [
                        "san2.example.com",
                        "san1.example.com"
                      ],
                      "fipsMode": false,
                      "geography": "core",
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "ocspStapling": "on",
                      "preferredCiphers": "ak-akamai-2020q1",
                      "quicEnabled": false,
                      "secureNetwork": "standard-tls",
                      "sniOnly": true
                    },
                    "ocspStapled": false,
                    "ocspUris": [],
                    "primaryCertificate": {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... 93Nvw==\n-----END CERTIFICATE-----",
                      "expiry": "2022-02-05T13:21:21Z",
                      "keyAlgorithm": "ECDSA",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... Qs/v0=\n-----END CERTIFICATE-----"
                    }
                  },
                  "staging": {
                    "multiStackedCertificates": [
                      {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... nMweq/\n-----END CERTIFICATE-----",
                        "expiry": "2022-02-05T13:21:20Z",
                        "keyAlgorithm": "RSA",
                        "signatureAlgorithm": "SHA-256",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... KEUp0=\n-----END CERTIFICATE-----"
                      }
                    ],
                    "networkConfiguration": {
                      "disallowedTlsVersions": [
                        "TLSv1",
                        "TLSv1_1"
                      ],
                      "dnsNames": [
                        "san2.example.com",
                        "san1.example.com"
                      ],
                      "fipsMode": true,
                      "geography": "core",
                      "mustHaveCiphers": "ak-akamai-2020q1",
                      "ocspStapling": "on",
                      "preferredCiphers": "ak-akamai-2020q1",
                      "quicEnabled": false,
                      "secureNetwork": "standard-tls",
                      "sniOnly": true
                    },
                    "ocspStapled": false,
                    "ocspUris": [],
                    "primaryCertificate": {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... 93Nvw==\n-----END CERTIFICATE-----",
                      "expiry": "2022-02-05T13:21:21Z",
                      "keyAlgorithm": "ECDSA",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIID <sample - removed for readability> .... 9JQs/v0=\n-----END CERTIFICATE-----"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "production": {
                      "additionalProperties": false,
                      "description": "Encapsulates information about your certificate's deployment on the production network.",
                      "properties": {
                        "multiStackedCertificates": {
                          "description": "Dual-stacked certificates include an ECDSA certificate in addition to an RSA certificate.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "certificate": {
                                "description": "The certificate text.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "expiry": {
                                "description": "The expiration date for the certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "keyAlgorithm": {
                                "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                                "enum": [
                                  "ECDSA",
                                  "RSA"
                                ],
                                "type": "string"
                              },
                              "signatureAlgorithm": {
                                "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                                "enum": [
                                  "SHA-1",
                                  "SHA-256"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "trustChain": {
                                "description": "The trust chain for the certificate.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "certificate",
                              "trustChain"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "networkConfiguration": {
                          "additionalProperties": false,
                          "description": "Your certificate's deployment configuration settings on production.",
                          "properties": {
                            "disallowedTlsVersions": {
                              "description": "Disallowed TLS protocols.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "dnsNames": {
                              "description": "Names served by SNI-only enabled enrollments.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "fipsMode": {
                              "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.          ",
                              "type": "boolean"
                            },
                            "geography": {
                              "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                              "enum": [
                                "core",
                                "china+core",
                                "russia+core"
                              ],
                              "type": "string"
                            },
                            "mustHaveCiphers": {
                              "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "ocspStapling": {
                              "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                              "enum": [
                                "on",
                                "off",
                                "not-set"
                              ],
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "quicEnabled": {
                              "description": "QUIC transport layer network protocol.",
                              "type": "boolean"
                            },
                            "secureNetwork": {
                              "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                              "enum": [
                                "enhanced-tls",
                                "standard-tls"
                              ],
                              "type": "string"
                            },
                            "sniOnly": {
                              "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate that matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "quicEnabled",
                            "sniOnly"
                          ],
                          "type": "object"
                        },
                        "ocspStapled": {
                          "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. We recommend all customers enable this feature.",
                          "type": "boolean"
                        },
                        "ocspUris": {
                          "description": "URI used for OCSP stapling validation.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "primaryCertificate": {
                          "additionalProperties": false,
                          "description": "Primary certificate of the enrollment.",
                          "nullable": true,
                          "properties": {
                            "certificate": {
                              "description": "The certificate text.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "expiry": {
                              "description": "The expiration date for the certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "keyAlgorithm": {
                              "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                              "enum": [
                                "ECDSA",
                                "RSA"
                              ],
                              "type": "string"
                            },
                            "signatureAlgorithm": {
                              "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                              "enum": [
                                "SHA-1",
                                "SHA-256"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "trustChain": {
                              "description": "The trust chain for the certificate.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "certificate",
                            "trustChain"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "multiStackedCertificates",
                        "networkConfiguration",
                        "primaryCertificate"
                      ],
                      "type": "object"
                    },
                    "staging": {
                      "additionalProperties": false,
                      "description": "Encapsulates information about your certificate's deployment on the staging network.",
                      "properties": {
                        "multiStackedCertificates": {
                          "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate.",
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "certificate": {
                                "description": "The certificate text.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "expiry": {
                                "description": "The expiration date for the certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "keyAlgorithm": {
                                "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                                "enum": [
                                  "ECDSA",
                                  "RSA"
                                ],
                                "type": "string"
                              },
                              "signatureAlgorithm": {
                                "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                                "enum": [
                                  "SHA-1",
                                  "SHA-256"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "trustChain": {
                                "description": "The trust chain for the certificate.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "certificate",
                              "trustChain"
                            ],
                            "type": "object"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "networkConfiguration": {
                          "additionalProperties": false,
                          "description": "Encapsulates information about your certificate's deployment configuration settings on staging.",
                          "properties": {
                            "disallowedTlsVersions": {
                              "description": "Disallowed TLS protocols.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "dnsNames": {
                              "description": "Names served by SNI-only enabled enrollments.",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              },
                              "minItems": 0,
                              "type": "array"
                            },
                            "fipsMode": {
                              "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.              ",
                              "type": "boolean"
                            },
                            "geography": {
                              "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                              "enum": [
                                "core",
                                "china+core",
                                "russia+core"
                              ],
                              "type": "string"
                            },
                            "mustHaveCiphers": {
                              "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "ocspStapling": {
                              "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                              "enum": [
                                "on",
                                "off",
                                "not-set"
                              ],
                              "type": "string"
                            },
                            "preferredCiphers": {
                              "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "quicEnabled": {
                              "description": "QUIC transport layer network protocol.",
                              "type": "boolean"
                            },
                            "secureNetwork": {
                              "description": "The type of deployment network. A value of `standard-tls` means Akamai's standard secure network, while `enhanced-tls` means Akamai's more secure network with PCI compliance capability.",
                              "enum": [
                                "enhanced-tls",
                                "standard-tls"
                              ],
                              "type": "string"
                            },
                            "sniOnly": {
                              "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "quicEnabled",
                            "sniOnly"
                          ],
                          "type": "object"
                        },
                        "ocspStapled": {
                          "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                          "type": "boolean"
                        },
                        "ocspUris": {
                          "description": "URI used for OCSP stapling validation.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "nullable": true,
                          "type": "array"
                        },
                        "primaryCertificate": {
                          "additionalProperties": false,
                          "description": "The primary certificate of the enrollment.",
                          "nullable": true,
                          "properties": {
                            "certificate": {
                              "description": "The certificate text.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "expiry": {
                              "description": "The expiration date for the certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "keyAlgorithm": {
                              "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                              "enum": [
                                "ECDSA",
                                "RSA"
                              ],
                              "type": "string"
                            },
                            "signatureAlgorithm": {
                              "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                              "enum": [
                                "SHA-1",
                                "SHA-256"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "trustChain": {
                              "description": "The trust chain for the certificate.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "certificate",
                            "trustChain"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "multiStackedCertificates",
                        "networkConfiguration",
                        "primaryCertificate"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "production",
                    "staging"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployments.v8.yaml"
                  }
                }
              }
            },
            "description": "The response reflects an object with each deployment available within top-level production and staging members."
          }
        },
        "summary": "List deployments",
        "tags": [
          "Deployments"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/deployments.yaml",
        "path-info": "/enrollments/{enrollmentId}/deployments"
      }
    },
    "/enrollments/{enrollmentId}/deployments/production": {
      "get": {
        "description": "Gets the enrollments deployed on the production network.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-deployments-production"
        },
        "operationId": "get-deployments-production",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.deployment.v8+json": {
                "example": {
                  "multiStackedCertificates": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                      "expiry": "2021-06-10T12:00:00Z",
                      "keyAlgorithm": "ECDSA",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "networkConfiguration": {
                    "disallowedTlsVersions": [],
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ],
                    "fipsMode": false,
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "ocspStapling": "not-set",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "quicEnabled": false,
                    "secureNetwork": "standard-tls",
                    "sniOnly": true
                  },
                  "ocspStapled": true,
                  "ocspUris": [
                    "http://ocsp.example.com"
                  ],
                  "primaryCertificate": {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                    "expiry": "2021-06-10T12:00:00Z",
                    "keyAlgorithm": "RSA",
                    "signatureAlgorithm": "SHA-256",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "description": "The certificate text.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "trustChain": {
                            "description": "The trust chain for the certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "trustChain"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocol.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "fipsMode": {
                          "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.      ",
                          "type": "boolean"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "quicEnabled",
                        "sniOnly"
                      ],
                      "type": "object"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate of the enrollment.",
                      "nullable": true,
                      "properties": {
                        "certificate": {
                          "description": "The certificate text.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "trustChain": {
                          "description": "The trust chain for the certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "trustChain"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "multiStackedCertificates",
                    "networkConfiguration",
                    "primaryCertificate"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment.v8.yaml"
                  }
                }
              }
            },
            "description": "The response reflects your deployment's details to the production network."
          }
        },
        "summary": "Get production deployment",
        "tags": [
          "Deployments"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/production.yaml",
        "path-info": "/enrollments/{enrollmentId}/deployments/production"
      }
    },
    "/enrollments/{enrollmentId}/deployments/staging": {
      "get": {
        "description": "Gets the enrollments deployed on the staging network.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-deployment-staging"
        },
        "operationId": "get-deployment-staging",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.deployment.v8+json": {
                "example": {
                  "multiStackedCertificates": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                      "expiry": "2021-06-10T12:00:00Z",
                      "keyAlgorithm": "ECDSA",
                      "signatureAlgorithm": "SHA-256",
                      "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                    }
                  ],
                  "networkConfiguration": {
                    "disallowedTlsVersions": [],
                    "dnsNames": [
                      "san2.example.com",
                      "san1.example.com"
                    ],
                    "fipsMode": false,
                    "geography": "core",
                    "mustHaveCiphers": "ak-akamai-2020q1",
                    "ocspStapling": "not-set",
                    "preferredCiphers": "ak-akamai-2020q1",
                    "quicEnabled": false,
                    "secureNetwork": "standard-tls",
                    "sniOnly": true
                  },
                  "ocspStapled": true,
                  "ocspUris": [
                    "http://ocsp.example.com"
                  ],
                  "primaryCertificate": {
                    "certificate": "-----BEGIN CERTIFICATE-----\nMIID2 ... <sample - removed for readability> .... ZlSw==\n-----END CERTIFICATE-----",
                    "expiry": "2021-06-10T12:00:00Z",
                    "keyAlgorithm": "RSA",
                    "signatureAlgorithm": "SHA-256",
                    "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... JuAIQ=\n-----END CERTIFICATE-----"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Deploys your certificate to a network.",
                  "properties": {
                    "multiStackedCertificates": {
                      "description": "Dual-stacked certificates today include an ECDSA certificate in addition to an RSA certificate. Deployment may include many dual-stacked certificates.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "description": "The certificate text.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "expiry": {
                            "description": "The expiration date for the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "keyAlgorithm": {
                            "description": "The key algorithm of the certificate. This is either `ECDSA` or `RSA`.",
                            "enum": [
                              "ECDSA",
                              "RSA"
                            ],
                            "type": "string"
                          },
                          "signatureAlgorithm": {
                            "description": "Indicates the SHA (Secure Hash Algorithm) function. You can use either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash.",
                            "enum": [
                              "SHA-1",
                              "SHA-256"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "trustChain": {
                            "description": "The trust chain for the certificate.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "trustChain"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    },
                    "networkConfiguration": {
                      "additionalProperties": false,
                      "description": "Network configuration properties.",
                      "properties": {
                        "disallowedTlsVersions": {
                          "description": "Disallowed TLS protocol.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "dnsNames": {
                          "description": "Names served by SNI-only enabled enrollments.",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "minItems": 0,
                          "type": "array"
                        },
                        "fipsMode": {
                          "description": "Enables Federal Information Processing Standards (FIPS) for the enrollment.      ",
                          "type": "boolean"
                        },
                        "geography": {
                          "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                          "enum": [
                            "core",
                            "china+core",
                            "russia+core"
                          ],
                          "type": "string"
                        },
                        "mustHaveCiphers": {
                          "description": "Ciphers that you definitely want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "ocspStapling": {
                          "description": "Indicates the OCSP stapling setting for the deployment. Use `on` to enable OCSP stapling, `off` to disable it, or `not-set` to ignore it.",
                          "enum": [
                            "on",
                            "off",
                            "not-set"
                          ],
                          "type": "string"
                        },
                        "preferredCiphers": {
                          "description": "Ciphers that you preferably want to include for your enrollment while deploying it on the network. For more information on cipher profiles, see [Update SSL/TLS cipher profiles](https://techdocs.akamai.com/cps/docs/cipher-profiles).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "quicEnabled": {
                          "description": "QUIC transport layer network protocol.",
                          "type": "boolean"
                        },
                        "secureNetwork": {
                          "description": "Identifies the type of deployment network. An `enhanced-tls` value means Akamai's more secure network with PCI compliance capability, while `standard-tls` means Akamai's standard secure network.",
                          "enum": [
                            "enhanced-tls",
                            "standard-tls"
                          ],
                          "type": "string"
                        },
                        "sniOnly": {
                          "description": "Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present many certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid any certificates with overlapping SAN names when using SNI-only.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "quicEnabled",
                        "sniOnly"
                      ],
                      "type": "object"
                    },
                    "ocspStapled": {
                      "description": "OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. You should enable this feature.",
                      "type": "boolean"
                    },
                    "ocspUris": {
                      "description": "URI used for OCSP stapling validation.",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "minItems": 0,
                      "nullable": true,
                      "type": "array"
                    },
                    "primaryCertificate": {
                      "additionalProperties": false,
                      "description": "Primary certificate of the enrollment.",
                      "nullable": true,
                      "properties": {
                        "certificate": {
                          "description": "The certificate text.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "expiry": {
                          "description": "The expiration date for the certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "keyAlgorithm": {
                          "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                          "enum": [
                            "ECDSA",
                            "RSA"
                          ],
                          "type": "string"
                        },
                        "signatureAlgorithm": {
                          "description": "Identifies the SHA (Secure Hash Algorithm) function. The NSA (National Security Agency) designed this function to produce a hash of certificate contents, which is used in a digital signature. This is either `SHA-1` for a 160-bit (20-byte) hash or `SHA-256` for a 256-bit (32-byte) hash. To ensure a secure hash function, use `SHA-256`.",
                          "enum": [
                            "SHA-1",
                            "SHA-256"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "trustChain": {
                          "description": "The trust chain for the certificate.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "trustChain"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "multiStackedCertificates",
                    "networkConfiguration",
                    "primaryCertificate"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/deployment.v8.yaml"
                  }
                }
              }
            },
            "description": "The response reflects your deployment's details to the staging network."
          }
        },
        "summary": "Get staging deployment",
        "tags": [
          "Deployments"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/staging.yaml",
        "path-info": "/enrollments/{enrollmentId}/deployments/staging"
      }
    },
    "/enrollments/{enrollmentId}/dv-history": {
      "get": {
        "description": "Domain name Validation history for the enrollment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-dv-history"
        },
        "operationId": "get-dv-history",
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.dv-history.v1+json": {
                "example": {
                  "results": [
                    {
                      "domain": "load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com",
                      "domainHistory": [
                        {
                          "challenges": [
                            {
                              "error": null,
                              "fullPath": "http://load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com/.well-known/acme-challenge/DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                              "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                              "responseBody": "DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc.Gxh6YCa7zrFuIYq7Ymx7RwBEDF77-8GxUPf46LF9sQs",
                              "status": "pending",
                              "token": "DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                              "type": "http-01",
                              "validationRecords": []
                            },
                            {
                              "error": null,
                              "fullPath": "_acme-challenge.load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com.",
                              "redirectFullPath": "",
                              "responseBody": "Ac6tRQbPcvwkM8Zs47-sDE_zrH8F3R2tdkLgbKq1RGw",
                              "status": "pending",
                              "token": "DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                              "type": "dns-01",
                              "validationRecords": []
                            }
                          ],
                          "domain": "load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com",
                          "error": "Expired authorization",
                          "expires": "2024-02-28T02:20:37Z",
                          "fullPath": "http://load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com/.well-known/acme-challenge/DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                          "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                          "requestTimestamp": "2024-02-21T02:20:37Z",
                          "responseBody": "DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc.Gxh6YCa7zrFuIYq7Ymx7RwBEDF77-8GxUPf46LF9sQs",
                          "status": "Error",
                          "token": "DFVIgbAW-k177F_BD3V_nKnI3hkfY8l3cGv3szouyPc",
                          "validatedTimestamp": "2024-02-28T02:29:20Z",
                          "validationRecords": [],
                          "validationStatus": "EXPIRED"
                        },
                        {
                          "challenges": [
                            {
                              "error": null,
                              "fullPath": "http://load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com/.well-known/acme-challenge/QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                              "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                              "responseBody": "QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo.Xa62kF3R8ROkMzmxV7d2HkO1MBWFKKRyBN534QSH97I",
                              "status": "pending",
                              "token": "QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                              "type": "http-01",
                              "validationRecords": []
                            },
                            {
                              "error": null,
                              "fullPath": "_acme-challenge.load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com.",
                              "redirectFullPath": "",
                              "responseBody": "F8OGYGQkg_pqjzV67b5Z_kaxl_slctMVAp4D-uS2Jqc",
                              "status": "pending",
                              "token": "QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                              "type": "dns-01",
                              "validationRecords": []
                            }
                          ],
                          "domain": "load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com",
                          "error": "Expired authorization",
                          "expires": "2024-03-06T02:38:15Z",
                          "fullPath": "http://load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com/.well-known/acme-challenge/QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                          "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                          "requestTimestamp": "2024-02-28T02:38:15Z",
                          "responseBody": "QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo.Xa62kF3R8ROkMzmxV7d2HkO1MBWFKKRyBN534QSH97I",
                          "status": "Error",
                          "token": "QrSeuNJD5qp7mvWNk4Rd8dEm3pv8pUw2b-wlYz8fpFo",
                          "validatedTimestamp": "2024-03-06T02:46:04Z",
                          "validationRecords": [],
                          "validationStatus": "EXPIRED"
                        },
                        {
                          "challenges": [
                            {
                              "error": null,
                              "fullPath": "http://load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com/.well-known/acme-challenge/1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                              "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                              "responseBody": "1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU.Xa62kF3R8ROkMzmxV7d2HkO1MBWFKKRyBN534QSH97I",
                              "status": "pending",
                              "token": "1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                              "type": "http-01",
                              "validationRecords": []
                            },
                            {
                              "error": null,
                              "fullPath": "_acme-challenge.load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com.",
                              "redirectFullPath": "",
                              "responseBody": "Zx-FxZnq1VWuty12ClMoG7eYDbyKXpBluqwYkKfzV8U",
                              "status": "pending",
                              "token": "1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                              "type": "dns-01",
                              "validationRecords": []
                            }
                          ],
                          "domain": "load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com",
                          "error": "The domain load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com is not ready for HTTP validation.",
                          "expires": "2024-03-13T02:59:56Z",
                          "fullPath": "http://load-open-dvl3c-3-wnng9g.121223-130905.shared.webexp-ipqa1.com/.well-known/acme-challenge/1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                          "redirectFullPath": "http://dcv.akamai.com/.well-known/acme-challenge/1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                          "requestTimestamp": "2024-03-06T02:59:56Z",
                          "responseBody": "1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU.Xa62kF3R8ROkMzmxV7d2HkO1MBWFKKRyBN534QSH97I",
                          "status": "Awaiting user",
                          "token": "1ScEp1q2HFk81UbWFX2I1FRym851gRzyXYUUL8DjSSU",
                          "validatedTimestamp": "2024-03-07T15:33:49Z",
                          "validationRecords": [],
                          "validationStatus": "DATA_NOT_READY"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "If you use domain validation, the CA that issued the certificate validates that you have control of the domain. CPS supports DV certificates issued by Let's Encrypt, an automated, and open CA, run for public benefit. Use the domain validation history to view your Akamai managed DV certificates' history and errors. These certificates expire in 90 days.",
                  "properties": {
                    "results": {
                      "description": "Domain Validation (DV) challenges are used by Let's Encrypt to verify domain control.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "domain": {
                            "description": "The domain being validated.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "domainHistory": {
                            "description": "A history record for a single domain.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "challenges": {
                                  "description": "Challenges used for validation.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "error": {
                                        "description": "Validation status for this challenge.",
                                        "minLength": 1,
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "fullPath": {
                                        "description": "Path where Let's Encrypt respects and expects to find `token` as content.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "redirectFullPath": {
                                        "description": "The URL where Akamai publishes `responseBody` for Let's Encrypt to validate `http-01` challenges. The client can configure a redirect at `fullPath` to redirect requests to this URL, keeping in mind that the token may change over time.",
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "responseBody": {
                                        "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "status": {
                                        "description": "The domain validation status. Status include `valid` and `pending`.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "token": {
                                        "description": "The validation token issued by Let's Encrypt.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Challenge type. Current types include `http-01` and `dns-01`.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "validationRecords": {
                                        "description": "The records that you send to Let's Encrypt to validate your domain.",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "authorities": {
                                              "description": "Validation authorities.",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "minItems": 0,
                                              "type": "array"
                                            },
                                            "hostname": {
                                              "description": "The name being validated.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Port used for validation.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "resolvedIp": {
                                              "description": "IPs resolved for name being validated.",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "minItems": 0,
                                              "type": "array"
                                            },
                                            "triedIp": {
                                              "description": "IP from `resolvedIp` tried for this validation.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "URL attempted validated.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "usedIp": {
                                              "description": "IP from `resolvedIp` used for this validation.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "authorities",
                                            "hostname",
                                            "port",
                                            "resolvedIp",
                                            "triedIp",
                                            "url",
                                            "usedIp"
                                          ],
                                          "type": "object"
                                        },
                                        "minItems": 0,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "validationRecords"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "domain": {
                                  "description": "Domain which is being validated.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "error": {
                                  "description": "Current validation status for domains not yet validated.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "expires": {
                                  "description": "Timestamp when this token or validation expires. Sample 2017-12-05T18:57:07z.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fullPath": {
                                  "description": "The URL that Let's Encrypt returns for the `token`.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "redirectFullPath": {
                                  "description": "The URL that Let's Encrypt returns. This is the path to the server to which you want to redirect and find the token.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestTimestamp": {
                                  "description": "The timestamp when the domain was successfully requested. Sample 2014-08-12T18:57:07z.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "responseBody": {
                                  "description": "The data Let's Encrypt expects to find served at `fullPath` URL.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The domain validation status.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "token": {
                                  "description": "The validation token issued by Let's Encrypt.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "validatedTimestamp": {
                                  "description": "The timestamp when the domain was successfully validated. Sample 2014-08-12T18:57:07z.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "validationRecords": {
                                  "description": "Validation attempts and status.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "hostname": {
                                        "description": "The records that Let's Encrypt returns to you to validate your domain.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Port used for validation.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "resolvedIp": {
                                        "description": "IPs resolved for name being validated.",
                                        "items": {
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "minItems": 0,
                                        "type": "array"
                                      },
                                      "url": {
                                        "description": "URL attempted validated.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "usedIp": {
                                        "description": "IP from `resolvedIp` used for this validation.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "hostname",
                                      "port",
                                      "resolvedIp",
                                      "url",
                                      "usedIp"
                                    ],
                                    "type": "object"
                                  },
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "validationStatus": {
                                  "description": "Status of the domain validation process.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "challenges",
                                "validationRecords"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "domain",
                          "domainHistory"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "results"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/dv-history.v1.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the enrollment's domain name validation history."
          }
        },
        "summary": "Get DV history",
        "tags": [
          "Enrollments"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/dv-history.yaml",
        "path-info": "/enrollments/{enrollmentId}/dv-history"
      }
    },
    "/enrollments/{enrollmentId}/history/certificates": {
      "get": {
        "description": "View the certificate history. To view deployed certificates and their expiration dates, run the [Get production deployment](https://techdocs.akamai.com/cps/reference/get-deployments-production) operation. Note that for enrollments with six certificates or fewer, the response yields up to twelve years of data per certificate. If there are more than six certificates in the enrollment, the response shows a truncated set. To view all changes or certificates, use the `includeAll=true` query parameter in the request.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-history-certificates"
        },
        "operationId": "get-history-certificates",
        "parameters": [
          {
            "description": "Retrieve all changes or certificates.",
            "example": "{{includeAll}}",
            "in": "query",
            "name": "includeAll",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeAll-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.certificate-history.v2+json": {
                "example": {
                  "certificates": [
                    {
                      "deploymentStatus": "inactive",
                      "geography": "core",
                      "multiStackedCertificates": [
                        {
                          "certificate": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... Bp52w=\n-----END CERTIFICATE-----",
                          "expiry": "2022-02-15T06:05:33Z",
                          "keyAlgorithm": "RSA",
                          "trustChain": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... 7gf0=\n-----END CERTIFICATE-----"
                        }
                      ],
                      "primaryCertificate": {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... 9t0G\n-----END CERTIFICATE-----",
                        "expiry": "2022-02-15T06:05:32Z",
                        "keyAlgorithm": "ECDSA",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDT ... <sample - removed for readability> .... okCk=\n-----END CERTIFICATE-----"
                      },
                      "ra": "third-party",
                      "slots": [],
                      "stagingStatus": "inactive",
                      "type": "third-party"
                    },
                    {
                      "deploymentStatus": "active",
                      "geography": "core",
                      "multiStackedCertificates": [
                        {
                          "certificate": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... Mweq/\n-----END CERTIFICATE-----",
                          "expiry": "2022-02-05T13:21:20Z",
                          "keyAlgorithm": "RSA",
                          "trustChain": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... KEUp0=\n-----END CERTIFICATE-----"
                        }
                      ],
                      "primaryCertificate": {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... J9JQs/v0=\n-----END CERTIFICATE-----",
                        "expiry": "2022-02-05T13:21:21Z",
                        "keyAlgorithm": "ECDSA",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIID ... <sample - removed for readability> .... KEUp0=\n-----END CERTIFICATE-----"
                      },
                      "ra": "third-party",
                      "slots": [
                        19598
                      ],
                      "stagingStatus": "active",
                      "type": "third-party"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "You can view the current and previous certificates as part of the certificate history. You retrieve each iteration in the history of your certificate by certificate type, and also view the status, expiration date, and certificate authority for the certificate. You can take actions on each activity of the certificate, including, view the certificate and view the trust chain for the certificate.",
                  "properties": {
                    "certificates": {
                      "description": "The type of certificate. This could be a single certificate, which associates a property hostname with a single name. It could be a wildcard certificate, which secures an entire property hostname. It could be a SAN certificate, in which case you can use Subject Alternative Names to secure up to 100 property hostnames with one certificate. It could also be a wildcard SAN certificate, which is a SAN certificate that can have up to 100 SANs with 25 wildcard entries in the SAN list. Or you can have a third-party certificate, a signed certificate you obtain from an external certificate authority.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "deploymentStatus": {
                            "description": "The current status of the certificate on the network. This is either `active` or `inactive`.",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "type": "string"
                          },
                          "geography": {
                            "description": "Specifies the type of network where you want to deploy your certificate.  Use `core` to deploy across most of the world except for specially licensed areas.  Use `china+core` to include China, or `russia+core` to include Russia. Any non-`core` deployment needs to be enabled on your contract based on approval from the Chinese or Russian governments.",
                            "enum": [
                              "core",
                              "china+core",
                              "russia+core"
                            ],
                            "type": "string"
                          },
                          "multiStackedCertificates": {
                            "description": "Enables an ECDSA certificate in addition to an RSA certificate. CPS automatically performs all certificate operations on both certificates, and uses the best certificate for each client connection to your secure properties. Customers pinning certificates need to pin both the RSA and the ECDSA certificate. You should enable this feature. If its Third Party Dual Stack Certificate, fallback RSA certificate information is present in this.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "certificate": {
                                  "description": "The certificate text for the multi-stacked certificate.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "expiry": {
                                  "description": "The expiration date for the multi-stacked certificate.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "keyAlgorithm": {
                                  "description": "The key algorithm for the multi-stacked certificate. This is either `ECDSA` or `RSA`.",
                                  "enum": [
                                    "ECDSA",
                                    "RSA"
                                  ],
                                  "type": "string"
                                },
                                "trustChain": {
                                  "description": "The trust chain for the multi-stacked certificate.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "certificate",
                                "expiry",
                                "keyAlgorithm",
                                "trustChain"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "primaryCertificate": {
                            "additionalProperties": false,
                            "description": "Primary certificate for Enrollment.",
                            "nullable": true,
                            "properties": {
                              "certificate": {
                                "description": "The primary certificate in the multi-stacked certificate.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "expiry": {
                                "description": "The expiration date for the primary certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "keyAlgorithm": {
                                "description": "The key algorithm for the primary certificate. This is either `ECDSA` or `RSA`.",
                                "enum": [
                                  "ECDSA",
                                  "RSA"
                                ],
                                "type": "string"
                              },
                              "trustChain": {
                                "description": "The trust chain for the primary certificate.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "certificate",
                              "expiry",
                              "keyAlgorithm",
                              "trustChain"
                            ],
                            "type": "object"
                          },
                          "ra": {
                            "description": "The certificate registration authority of the primary certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "slots": {
                            "description": "The slot numbers of the primary certificate.",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "stagingStatus": {
                            "description": "The staging status of the primary certificate, either `active` or `inactive`.",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "description": "Determines the certificate's validation type and number of domains the certificate supports. This is either `san`, `single`, `wildcard`, `wildcard-san`, or `third-party`.",
                            "enum": [
                              "san",
                              "single",
                              "wildcard",
                              "wildcard-san",
                              "third-party"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "deploymentStatus",
                          "multiStackedCertificates",
                          "primaryCertificate",
                          "slots",
                          "stagingStatus",
                          "type"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "certificates"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/certificate-history.v2.yaml"
                  }
                }
              }
            },
            "description": "The response reflects details of the certificate's history."
          }
        },
        "summary": "Get certificate history",
        "tags": [
          "Enrollments"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/certificates.yaml",
        "path-info": "/enrollments/{enrollmentId}/history/certificates"
      }
    },
    "/enrollments/{enrollmentId}/history/changes": {
      "get": {
        "description": "Change history of an enrollment.",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Certificate Provisioning System API",
          "url": "https://techdocs.akamai.com/cps/reference/get-history-changes"
        },
        "operationId": "get-history-changes",
        "parameters": [
          {
            "description": "Retrieve all changes or certificates.",
            "example": "{{includeAll}}",
            "in": "query",
            "name": "includeAll",
            "required": false,
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeAll-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.akamai.cps.change-history.v5+json": {
                "example": {
                  "changes": [
                    {
                      "action": "renew",
                      "actionDescription": "Renew Certificate",
                      "businessCaseId": "5005B00000XYZA1234",
                      "createdBy": "mrossi",
                      "createdOn": "2021-05-09T19:26:59Z",
                      "lastUpdated": "2021-06-12T12:56:55Z",
                      "multiStackedCertificates": [
                        {
                          "certificate": "-----BEGIN CERTIFICATE-----\nMIIDu ... <sample - removed for readability> .... 3JpAg==\n-----END CERTIFICATE-----",
                          "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2 ... <sample - removed for readability> .... mdnsaw=\n-----END CERTIFICATE REQUEST-----",
                          "keyAlgorithm": "ECDSA",
                          "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDzD ... <sample - removed for readability> .... F3+fA==\n-----END CERTIFICATE-----"
                        }
                      ],
                      "primaryCertificate": {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIIFH ... <sample - removed for readability> .... b+kIw==\n-----END CERTIFICATE-----",
                        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2 ... <sample - removed for readability> .... mdnsaw=\n-----END CERTIFICATE REQUEST-----",
                        "keyAlgorithm": "RSA",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIIEdj ... <sample - removed for readability> .... oqzb5Ct\n-----END CERTIFICATE-----"
                      },
                      "primaryCertificateOrderDetails": {
                        "orderId": "abcdefM6Gw3WvN2p12345"
                      },
                      "ra": "symantec",
                      "status": "completed"
                    },
                    {
                      "action": "renew",
                      "actionDescription": "Renew Certificate",
                      "businessCaseId": "5005B00000DEFG1234",
                      "createdBy": "szhang",
                      "createdOn": "2021-02-02T18:21:17Z",
                      "lastUpdated": "2021-02-05T19:57:14Z",
                      "multiStackedCertificates": [
                        {
                          "certificate": null,
                          "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2 ... <sample - removed for readability> .... mdnsaw=\n-----END CERTIFICATE REQUEST-----",
                          "keyAlgorithm": "ECDSA",
                          "trustChain": null
                        }
                      ],
                      "primaryCertificate": {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIIFH ... <sample - removed for readability> .... b+kIw==\n-----END CERTIFICATE-----",
                        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2 ... <sample - removed for readability> .... mdnsaw=\n-----END CERTIFICATE REQUEST-----",
                        "keyAlgorithm": "RSA",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIIEdj ... <sample - removed for readability> .... oqzb5Ct\n-----END CERTIFICATE-----"
                      },
                      "primaryCertificateOrderDetails": {
                        "orderId": "abcdeHvg8F7caXW312345"
                      },
                      "ra": "symantec",
                      "status": "cancelled"
                    },
                    {
                      "action": "renew",
                      "actionDescription": "Renew Certificate",
                      "businessCaseId": null,
                      "createdBy": "jperez",
                      "createdOn": "2021-02-01T17:16:35Z",
                      "lastUpdated": null,
                      "multiStackedCertificates": [],
                      "primaryCertificate": null,
                      "primaryCertificateOrderDetails": null,
                      "ra": "symantec",
                      "status": "cancelled"
                    },
                    {
                      "action": "new-certificate",
                      "actionDescription": "Create New Certificate",
                      "businessCaseId": "5005B00000ABCD1234",
                      "createdBy": "szhang",
                      "createdOn": "2021-02-01T16:30:58Z",
                      "lastUpdated": "2021-02-01T17:16:37Z",
                      "multiStackedCertificates": [
                        {
                          "certificate": "-----BEGIN CERTIFICATE-----\nMIIDu ... <sample - removed for readability> .... 3JpAg==\n-----END CERTIFICATE-----",
                          "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2 ... <sample - removed for readability> .... mdnsaw=\n-----END CERTIFICATE REQUEST-----",
                          "keyAlgorithm": "ECDSA",
                          "trustChain": "-----BEGIN CERTIFICATE-----\nMIIDzD ... <sample - removed for readability> .... F3+fA==\n-----END CERTIFICATE-----"
                        }
                      ],
                      "primaryCertificate": {
                        "certificate": "-----BEGIN CERTIFICATE-----\nMIIFH ... <sample - removed for readability> .... b+kIw==\n-----END CERTIFICATE-----",
                        "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2 ... <sample - removed for readability> .... mdnsaw=\n-----END CERTIFICATE REQUEST-----",
                        "keyAlgorithm": "RSA",
                        "trustChain": "-----BEGIN CERTIFICATE-----\nMIIEdj ... <sample - removed for readability> .... oqzb5Ct\n-----END CERTIFICATE-----"
                      },
                      "primaryCertificateOrderDetails": {
                        "orderId": "abcdex7zh8wspr4m12345"
                      },
                      "ra": "symantec",
                      "status": "completed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The change history includes all changes to a certificate. This is the equivalent of viewing the certificate activity in the CPS UI. You can view each change to your certificate, the status of your change, the last updated date, the date the change was created, and who created the change. You can also take actions on each change of the certificate, including viewing the CSR for the certificate, viewing the certificate, and viewing the trust chain for the certificate.",
                  "properties": {
                    "changes": {
                      "description": "Change history items.",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "action": {
                            "description": "Show every change on the certificate. The possible changes are `import-certificate`, `renew`, `new-certificate`, `modify-san`, `update-network-configuration`.",
                            "enum": [
                              "import-certificate",
                              "renew",
                              "new-certificate",
                              "modify-san",
                              "update-network-configuration"
                            ],
                            "type": "string"
                          },
                          "actionDescription": {
                            "description": "A description of each change.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "businessCaseId": {
                            "description": "The company name appears to be **Salesforce**.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "The username of the user who initiated the change.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdOn": {
                            "description": "A date and timestamp when the change started.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "A date and timestamp when the change was last updated.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "multiStackedCertificates": {
                            "description": "Dual-stacked certificates.",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "certificate": {
                                  "description": "Certificate text.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "csr": {
                                  "description": "Certificate CSR.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "keyAlgorithm": {
                                  "description": "Key algorithm of the certificate.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "trustChain": {
                                  "description": "Certificate trust chain.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "certificate",
                                "csr",
                                "keyAlgorithm",
                                "trustChain"
                              ],
                              "type": "object"
                            },
                            "minItems": 0,
                            "type": "array"
                          },
                          "primaryCertificate": {
                            "additionalProperties": false,
                            "description": "Primary Certificate.",
                            "nullable": true,
                            "properties": {
                              "certificate": {
                                "description": "Certificate text.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "csr": {
                                "description": "Certificate CSR.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "keyAlgorithm": {
                                "description": "Key algorithm of the certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "trustChain": {
                                "description": "Certificate trust chain.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "certificate",
                              "csr",
                              "keyAlgorithm",
                              "trustChain"
                            ],
                            "type": "object"
                          },
                          "primaryCertificateOrderDetails": {
                            "additionalProperties": false,
                            "description": "CA order details for this Change.",
                            "nullable": true,
                            "properties": {
                              "orderId": {
                                "description": "Order ID.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "orderId"
                            ],
                            "type": "object"
                          },
                          "ra": {
                            "description": "The certificate authority that issued the certificate.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The status of the change. The possible changes are `incomplete`, `cancelled`, `completed`.",
                            "enum": [
                              "incomplete",
                              "cancelled",
                              "completed"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "action",
                          "actionDescription",
                          "createdBy",
                          "createdOn",
                          "multiStackedCertificates",
                          "ra",
                          "status"
                        ],
                        "type": "object"
                      },
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "changes"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/change-history.v5.yaml"
                  }
                }
              }
            },
            "description": "The response reflects details of the changed made to the certificate's history."
          }
        },
        "summary": "Get change history",
        "tags": [
          "Changes"
        ]
      },
      "parameters": [
        {
          "description": "Enrollment on which to perform the desired operation.",
          "example": "{{enrollmentId}}",
          "in": "path",
          "name": "enrollmentId",
          "required": true,
          "schema": {
            "example": 10000,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/enrollmentId-path.yaml"
          }
        }
      ],
      "x-akamai": {
        "file-path": "paths/changes.yaml",
        "path-info": "/enrollments/{enrollmentId}/history/changes"
      }
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/cps/v2"
    }
  ],
  "tags": [
    {
      "description": "Manage your certificate enrollments.",
      "name": "Enrollments"
    },
    {
      "description": "Manage your certificate deployments.",
      "name": "Deployments"
    },
    {
      "description": "Manage changes to an enrollment's network deployment.",
      "name": "Changes"
    },
    {
      "description": "Get information on your certificates.",
      "name": "Certificates"
    }
  ],
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  }
}