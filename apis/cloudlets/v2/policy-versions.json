{
  "openapi": "3.0.0",
  "info": {
    "title": "Policy versions",
    "version": "v3",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://{hostname}/cloudlets/v3"
    }
  ],
  "x-akamai": {
    "auth-type": "EDGE_GRID",
    "file-path": "policy-versions.yaml"
  },
  "paths": {
    "/policies/{policyId}/versions": {
      "parameters": [
        {
          "name": "policyId",
          "in": "path",
          "description": "Identifies the shared policy.",
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "integer",
            "example": 1001
          }
        }
      ],
      "post": {
        "operationId": "post-policy-version",
        "summary": "Create a policy version",
        "tags": [
          "Versions"
        ],
        "description": "Creates a policy version, including match rules for a Cloudlet that you're using. If you don't already have the `policyId`, run the [List shared policies](ref:get-policies) operation and store the relevant `id` value.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Initial version",
                "matchRules": [
                  {
                    "end": 0,
                    "name": "Redirect images",
                    "matchURL": "/images/*",
                    "redirectURL": "/static/images/*",
                    "start": 0,
                    "statusCode": 302,
                    "type": "erMatchRule",
                    "useIncomingQueryString": true,
                    "useRelativeUrl": "relative_url"
                  }
                ]
              },
              "schema": {
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/post-policy-versions-request.yaml"
                },
                "additionalProperties": false,
                "required": [
                  "matchRules"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A human-readable label for the policy version.\n"
                  },
                  "matchRules": {
                    "description": "A list of Cloudlet-specific match rules for this shared policy. Currently, you can only create match rules only for the Edge Redirector, Forward Rewrite, and Audience Segmentation Cloudlets.",
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    },
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "Contains match rule information for API Prioritization.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          },
                          "title": "API Prioritization",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                              "enum": [
                                "apMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "passThroughPercent": {
                              "type": "number",
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.\n",
                              "minimum": -1,
                              "maximum": 100
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Audience Segmentation.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          },
                          "title": "Audience Segmentation",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                              "enum": [
                                "asMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "pathAndQS": {
                                  "type": "string",
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "minLength": 1,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                }
                              }
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "description": "The match rule criteria.\n",
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.\n",
                                        "title": "Range",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `range`.\n",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "type": "integer",
                                            "description": "An inclusive range comprised of two numbers to match on.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Edge Redirector.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          },
                          "title": "Edge Redirector",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                              "enum": [
                                "erMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "description": "The match rule criteria.\n",
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "redirectURL": {
                              "type": "string",
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` isn't used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "statusCode": {
                              "type": "integer",
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ]
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                            },
                            "useIncomingSchemeAndHost": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n"
                            },
                            "useRelativeUrl": {
                              "type": "string",
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                              "enum": [
                                "none",
                                "copy_scheme_hostname",
                                "relative_url"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Forward Rewrite.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          },
                          "title": "Forward Rewrite",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                              "enum": [
                                "frMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "pathAndQS": {
                                  "type": "string",
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "minLength": 1,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                }
                              }
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "description": "The match rule criteria.\n",
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Phased Release.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          },
                          "title": "Phased Release",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                              "enum": [
                                "cdMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "percent": {
                                  "type": "number",
                                  "description": "The percentage of visitors directed to a different origin.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Request Control.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          },
                          "title": "Request Control",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                              "enum": [
                                "igMatchRule"
                              ]
                            },
                            "allowDeny": {
                              "type": "string",
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contains detailed information about a shared policy version.\n",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-02T13:48:27.018Z",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-02T13:48:27.018Z",
                  "description": "Initial version",
                  "id": 2002,
                  "immutable": false,
                  "policyId": 1001,
                  "version": 1,
                  "matchRulesWarnings": [],
                  "matchRules": [
                    {
                      "type": "erMatchRule",
                      "id": 0,
                      "name": "Redirect images",
                      "start": 0,
                      "end": 0,
                      "matchURL": "/images/*",
                      "akaRuleId": "ac0ca0af44f57683",
                      "statusCode": 302,
                      "redirectURL": "/static/images/*",
                      "useIncomingQueryString": true,
                      "useRelativeUrl": "relative_url"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Contains detailed information about a shared policy version.",
                  "x-akamai": {
                    "file-path": "schemas/policy-version.yaml"
                  },
                  "additionalProperties": false,
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "immutable",
                    "matchRulesWarnings",
                    "modifiedBy",
                    "modifiedDate",
                    "policyId",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifies the policy version. You don't use this identifier to refer to a policy version in any operation. Use the `version` member for this purpose.\n"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable label for the policy version.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "The number of the policy version.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The username who created the policy version.\n"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the policy version was created.\n",
                      "format": "date-time"
                    },
                    "immutable": {
                      "type": "boolean",
                      "description": "If `true`, this policy version is active or in the process of being activated, and you can't modify it.\n"
                    },
                    "matchRules": {
                      "type": "array",
                      "description": "A list of Cloudlet-specific match rules for this shared policy.",
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      },
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Contains match rule information for API Prioritization.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            },
                            "title": "API Prioritization",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "passThroughPercent": {
                                "type": "number",
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.\n",
                                "minimum": -1,
                                "maximum": 100
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Audience Segmentation.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            },
                            "title": "Audience Segmentation",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                "enum": [
                                  "asMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.\n",
                                          "title": "Range",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `range`.\n",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "type": "integer",
                                              "description": "An inclusive range comprised of two numbers to match on.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Edge Redirector.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            },
                            "title": "Edge Redirector",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "redirectURL": {
                                "type": "string",
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` isn't used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "statusCode": {
                                "type": "integer",
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "useIncomingQueryString": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                              },
                              "useIncomingSchemeAndHost": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n"
                              },
                              "useRelativeUrl": {
                                "type": "string",
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Forward Rewrite.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            },
                            "title": "Forward Rewrite",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                "enum": [
                                  "frMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Phased Release.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            },
                            "title": "Phased Release",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "percent": {
                                    "type": "number",
                                    "description": "The percentage of visitors directed to a different origin.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Request Control.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            },
                            "title": "Request Control",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                "enum": [
                                  "igMatchRule"
                                ]
                              },
                              "allowDeny": {
                                "type": "string",
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          }
                        ]
                      }
                    },
                    "matchRulesWarnings": {
                      "type": "array",
                      "description": "A list of warnings about the version's match rules.\n",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A link to detailed information about the warning type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the warning.\n"
                          },
                          "detail": {
                            "type": "string",
                            "description": "A detailed description of the warning.\n"
                          },
                          "jsonPointer": {
                            "type": "string",
                            "description": "A JSON pointer to the warned data.\n"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "type": "string",
                      "description": "The username who last modified the policy version.\n"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the policy version was last modified.\n",
                      "format": "date-time"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "Identifies the shared policy.\n"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](ref:400)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "d07eaa5b-3f21-47e2-9182-9b5010f54564",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Invalid `matchRules` property type. Expected array, but got `NULL` instead.",
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](ref:403)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "title": "Access Denied",
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120."
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](ref:404)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-policy-versions",
        "summary": "List policy versions",
        "tags": [
          "Versions"
        ],
        "description": "Returns information about all versions of a shared policy.\n",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies a page number for batched results, starting at zero.",
            "x-akamai": {
              "file-path": "parameters/page-query.yaml"
            },
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3,
              "minimum": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Specifies the number of objects on a page, at least `10` objects.",
            "x-akamai": {
              "file-path": "parameters/size-query.yaml"
            },
            "required": true,
            "schema": {
              "type": "integer",
              "example": 100,
              "minimum": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of versions for a shared policy.\n",
            "content": {
              "application/json": {
                "example": {
                  "page": {
                    "number": 0,
                    "size": 1000,
                    "totalElements": 1,
                    "totalPages": 1
                  },
                  "content": [
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2020-10-01T12:35:22.500Z",
                      "description": "Initial version",
                      "id": 2001,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2020-10-01T12:35:22.500Z",
                      "policyId": 101,
                      "version": 1,
                      "links": [
                        {
                          "href": "/cloudlets/v3/policies/101/versions/1",
                          "rel": "self"
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/101/versions?page=0&size=1000",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "A list of versions for a shared policy.",
                  "x-akamai": {
                    "file-path": "schemas/get-policy-versions-response.yaml"
                  },
                  "additionalProperties": false,
                  "required": [
                    "content",
                    "page"
                  ],
                  "properties": {
                    "content": {
                      "type": "array",
                      "description": "Lists the results of the request.\n",
                      "items": {
                        "type": "object",
                        "description": "A list of versions for a shared policy.",
                        "x-akamai": {
                          "file-path": "schemas/policy-version-summary.yaml"
                        },
                        "additionalProperties": false,
                        "required": [
                          "links",
                          "createdBy",
                          "createdDate",
                          "id",
                          "modifiedBy",
                          "modifiedDate",
                          "policyId",
                          "version"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Identifies the policy version.\n"
                          },
                          "description": {
                            "type": "string",
                            "description": "A human-readable label for the policy version.\n"
                          },
                          "version": {
                            "type": "integer",
                            "description": "The number of the policy version.\n"
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "The username who created the policy version.\n"
                          },
                          "createdDate": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the policy version was created.\n",
                            "format": "date-time"
                          },
                          "links": {
                            "type": "array",
                            "description": "Hypermedia links to help navigate through the result set.",
                            "x-akamai": {
                              "file-path": "schemas/links.yaml"
                            },
                            "items": {
                              "type": "object",
                              "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.\n",
                              "additionalProperties": false,
                              "required": [
                                "href",
                                "rel"
                              ],
                              "properties": {
                                "href": {
                                  "type": "string",
                                  "description": "A relative path to the currently requested object or a specific page of the result set.\n"
                                },
                                "rel": {
                                  "type": "string",
                                  "description": "The relationship between the current and linked result sets. A value of `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.\n"
                                }
                              }
                            }
                          },
                          "modifiedBy": {
                            "type": "string",
                            "description": "The username who last modified the policy version.\n"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "description": "ISO 8601 timestamp indicating when the policy version was last modified.\n",
                            "format": "date-time"
                          },
                          "policyId": {
                            "type": "integer",
                            "description": "Identifies the shared policy.\n"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "array",
                      "description": "Hypermedia links to help navigate through the result set.",
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      },
                      "items": {
                        "type": "object",
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.\n",
                        "additionalProperties": false,
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "type": "string",
                            "description": "A relative path to the currently requested object or a specific page of the result set.\n"
                          },
                          "rel": {
                            "type": "string",
                            "description": "The relationship between the current and linked result sets. A value of `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.\n"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "description": "Contains informational data about pagination.",
                      "x-akamai": {
                        "file-path": "schemas/page-head.yaml"
                      },
                      "additionalProperties": false,
                      "required": [
                        "totalPages",
                        "totalElements",
                        "number",
                        "size"
                      ],
                      "properties": {
                        "number": {
                          "type": "integer",
                          "description": "Specifies the number of the returned page.\n"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Specifies the number of objects on a page, at least `10` objects.\n"
                        },
                        "totalElements": {
                          "type": "integer",
                          "description": "Specifies the total number of the available objects.\n"
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "Specifies the total number of the available pages.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](ref:403)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "title": "Access Denied",
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120."
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](ref:404)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policies/{policyId}/versions/{version}": {
      "parameters": [
        {
          "name": "version",
          "in": "path",
          "description": "The number of the version.",
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "integer",
            "example": 2001
          }
        },
        {
          "name": "policyId",
          "in": "path",
          "description": "Identifies the shared policy.",
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          },
          "required": true,
          "schema": {
            "type": "integer",
            "example": 1001
          }
        }
      ],
      "get": {
        "operationId": "get-policy-version",
        "summary": "Get a policy version",
        "tags": [
          "Versions"
        ],
        "description": "Returns information about a shared policy version, including match rules for a Cloudlet that you're using and whether its locked for changes.\n",
        "responses": {
          "200": {
            "description": "Contains detailed information about a shared policy version.\n",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-02T13:48:27.018Z",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-02T13:48:27.018Z",
                  "description": "Initial version",
                  "id": 2002,
                  "immutable": false,
                  "policyId": 1001,
                  "version": 1,
                  "matchRulesWarnings": [],
                  "matchRules": [
                    {
                      "type": "erMatchRule",
                      "id": 0,
                      "name": "Redirect images",
                      "start": 0,
                      "end": 0,
                      "matchURL": "/images/*",
                      "akaRuleId": "ac0ca0af44f57683",
                      "statusCode": 302,
                      "redirectURL": "/static/images/*",
                      "useIncomingQueryString": true,
                      "useRelativeUrl": "relative_url"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Contains detailed information about a shared policy version.",
                  "x-akamai": {
                    "file-path": "schemas/policy-version.yaml"
                  },
                  "additionalProperties": false,
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "immutable",
                    "matchRulesWarnings",
                    "modifiedBy",
                    "modifiedDate",
                    "policyId",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifies the policy version. You don't use this identifier to refer to a policy version in any operation. Use the `version` member for this purpose.\n"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable label for the policy version.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "The number of the policy version.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The username who created the policy version.\n"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the policy version was created.\n",
                      "format": "date-time"
                    },
                    "immutable": {
                      "type": "boolean",
                      "description": "If `true`, this policy version is active or in the process of being activated, and you can't modify it.\n"
                    },
                    "matchRules": {
                      "type": "array",
                      "description": "A list of Cloudlet-specific match rules for this shared policy.",
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      },
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Contains match rule information for API Prioritization.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            },
                            "title": "API Prioritization",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "passThroughPercent": {
                                "type": "number",
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.\n",
                                "minimum": -1,
                                "maximum": 100
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Audience Segmentation.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            },
                            "title": "Audience Segmentation",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                "enum": [
                                  "asMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.\n",
                                          "title": "Range",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `range`.\n",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "type": "integer",
                                              "description": "An inclusive range comprised of two numbers to match on.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Edge Redirector.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            },
                            "title": "Edge Redirector",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "redirectURL": {
                                "type": "string",
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` isn't used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "statusCode": {
                                "type": "integer",
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "useIncomingQueryString": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                              },
                              "useIncomingSchemeAndHost": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n"
                              },
                              "useRelativeUrl": {
                                "type": "string",
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Forward Rewrite.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            },
                            "title": "Forward Rewrite",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                "enum": [
                                  "frMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Phased Release.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            },
                            "title": "Phased Release",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "percent": {
                                    "type": "number",
                                    "description": "The percentage of visitors directed to a different origin.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Request Control.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            },
                            "title": "Request Control",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                "enum": [
                                  "igMatchRule"
                                ]
                              },
                              "allowDeny": {
                                "type": "string",
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          }
                        ]
                      }
                    },
                    "matchRulesWarnings": {
                      "type": "array",
                      "description": "A list of warnings about the version's match rules.\n",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A link to detailed information about the warning type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the warning.\n"
                          },
                          "detail": {
                            "type": "string",
                            "description": "A detailed description of the warning.\n"
                          },
                          "jsonPointer": {
                            "type": "string",
                            "description": "A JSON pointer to the warned data.\n"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "type": "string",
                      "description": "The username who last modified the policy version.\n"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the policy version was last modified.\n",
                      "format": "date-time"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "Identifies the shared policy.\n"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](ref:403)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "title": "Access Denied",
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120."
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](ref:404)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-policy-version",
        "summary": "Update a policy version",
        "tags": [
          "Versions"
        ],
        "description": "Updates the description and match rules for a policy version.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Initial version",
                "matchRules": [
                  {
                    "end": 0,
                    "name": "Redirect images",
                    "matchURL": "/images/*",
                    "redirectURL": "/static/images/*",
                    "start": 0,
                    "statusCode": 302,
                    "type": "erMatchRule",
                    "useIncomingQueryString": true,
                    "useRelativeUrl": "relative_url"
                  }
                ]
              },
              "schema": {
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/put-policy-version-request.yaml"
                },
                "additionalProperties": false,
                "required": [
                  "description"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A human-readable label for the version.\n"
                  },
                  "matchRules": {
                    "description": "A list of Cloudlet-specific match rules for this shared policy.",
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    },
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "Contains match rule information for API Prioritization.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          },
                          "title": "API Prioritization",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                              "enum": [
                                "apMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "passThroughPercent": {
                              "type": "number",
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.\n",
                              "minimum": -1,
                              "maximum": 100
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Audience Segmentation.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          },
                          "title": "Audience Segmentation",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                              "enum": [
                                "asMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "pathAndQS": {
                                  "type": "string",
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "minLength": 1,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                }
                              }
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "description": "The match rule criteria.\n",
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.\n",
                                        "title": "Range",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `range`.\n",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "type": "integer",
                                            "description": "An inclusive range comprised of two numbers to match on.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Edge Redirector.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          },
                          "title": "Edge Redirector",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                              "enum": [
                                "erMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "description": "The match rule criteria.\n",
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "redirectURL": {
                              "type": "string",
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` isn't used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "statusCode": {
                              "type": "integer",
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ]
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                            },
                            "useIncomingSchemeAndHost": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n"
                            },
                            "useRelativeUrl": {
                              "type": "string",
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                              "enum": [
                                "none",
                                "copy_scheme_hostname",
                                "relative_url"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Forward Rewrite.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          },
                          "title": "Forward Rewrite",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                              "enum": [
                                "frMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "pathAndQS": {
                                  "type": "string",
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "minLength": 1,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                }
                              }
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "description": "The match rule criteria.\n",
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Phased Release.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          },
                          "title": "Phased Release",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                              "enum": [
                                "cdMatchRule"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "percent": {
                                  "type": "number",
                                  "description": "The percentage of visitors directed to a different origin.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Request Control.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          },
                          "title": "Request Control",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                              "enum": [
                                "igMatchRule"
                              ]
                            },
                            "allowDeny": {
                              "type": "string",
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ]
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` type, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contains detailed information about a shared policy version.\n",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-02T13:48:27.018Z",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-02T13:48:27.018Z",
                  "description": "Initial version",
                  "id": 2002,
                  "immutable": false,
                  "policyId": 1001,
                  "version": 1,
                  "matchRulesWarnings": [],
                  "matchRules": [
                    {
                      "type": "erMatchRule",
                      "id": 0,
                      "name": "Redirect images",
                      "start": 0,
                      "end": 0,
                      "matchURL": "/images/*",
                      "akaRuleId": "ac0ca0af44f57683",
                      "statusCode": 302,
                      "redirectURL": "/static/images/*",
                      "useIncomingQueryString": true,
                      "useRelativeUrl": "relative_url"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "description": "Contains detailed information about a shared policy version.",
                  "x-akamai": {
                    "file-path": "schemas/policy-version.yaml"
                  },
                  "additionalProperties": false,
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "immutable",
                    "matchRulesWarnings",
                    "modifiedBy",
                    "modifiedDate",
                    "policyId",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifies the policy version. You don't use this identifier to refer to a policy version in any operation. Use the `version` member for this purpose.\n"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable label for the policy version.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "The number of the policy version.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The username who created the policy version.\n"
                    },
                    "createdDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the policy version was created.\n",
                      "format": "date-time"
                    },
                    "immutable": {
                      "type": "boolean",
                      "description": "If `true`, this policy version is active or in the process of being activated, and you can't modify it.\n"
                    },
                    "matchRules": {
                      "type": "array",
                      "description": "A list of Cloudlet-specific match rules for this shared policy.",
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      },
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Contains match rule information for API Prioritization.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            },
                            "title": "API Prioritization",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "passThroughPercent": {
                                "type": "number",
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.\n",
                                "minimum": -1,
                                "maximum": 100
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Audience Segmentation.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            },
                            "title": "Audience Segmentation",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                "enum": [
                                  "asMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.\n",
                                          "title": "Range",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `range`.\n",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "type": "integer",
                                              "description": "An inclusive range comprised of two numbers to match on.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Edge Redirector.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            },
                            "title": "Edge Redirector",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "redirectURL": {
                                "type": "string",
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` isn't used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "statusCode": {
                                "type": "integer",
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "useIncomingQueryString": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                              },
                              "useIncomingSchemeAndHost": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n"
                              },
                              "useRelativeUrl": {
                                "type": "string",
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Forward Rewrite.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            },
                            "title": "Forward Rewrite",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                "enum": [
                                  "frMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "description": "The match rule criteria.\n",
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Phased Release.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            },
                            "title": "Phased Release",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  },
                                  "percent": {
                                    "type": "number",
                                    "description": "The percentage of visitors directed to a different origin.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Request Control.",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            },
                            "title": "Request Control",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                "enum": [
                                  "igMatchRule"
                                ]
                              },
                              "allowDeny": {
                                "type": "string",
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` type, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              }
                            }
                          }
                        ]
                      }
                    },
                    "matchRulesWarnings": {
                      "type": "array",
                      "description": "A list of warnings about the version's match rules.\n",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A link to detailed information about the warning type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the warning.\n"
                          },
                          "detail": {
                            "type": "string",
                            "description": "A detailed description of the warning.\n"
                          },
                          "jsonPointer": {
                            "type": "string",
                            "description": "A JSON pointer to the warned data.\n"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "type": "string",
                      "description": "The username who last modified the policy version.\n"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "description": "ISO 8601 timestamp indicating when the policy version was last modified.\n",
                      "format": "date-time"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "Identifies the shared policy.\n"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](ref:400)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "d07eaa5b-3f21-47e2-9182-9b5010f54564",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Invalid `matchRules` property type. Expected array, but got `NULL` instead.",
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](ref:403)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "title": "Access Denied",
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120."
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](ref:404)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-policy-version",
        "summary": "Remove a policy version",
        "tags": [
          "Versions"
        ],
        "description": "Deletes a version of a shared policy. You can't delete a policy if it's active on the staging or production network. When you remove a policy version, version numbers aren't reallocated. For example, a policy has 15 versions, and you delete versions 14 and 15. The next version created would be 16, not 14.\n",
        "responses": {
          "204": {
            "description": "The policy version is deleted.\n"
          },
          "403": {
            "description": "[No permission to access this resource.](ref:403)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "title": "Access Denied",
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120."
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](ref:404)\n",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  },
                  "additionalProperties": true,
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "A URI path that identifies the problem type.\n"
                    },
                    "title": {
                      "type": "string",
                      "description": "Short descriptive title of the problem response.\n"
                    },
                    "errors": {
                      "type": "array",
                      "description": "A nested error object.\n",
                      "items": {
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        },
                        "additionalProperties": true,
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "A URI path that identifies the problem type.\n"
                          },
                          "title": {
                            "type": "string",
                            "description": "Short descriptive title of the problem response.\n"
                          },
                          "instance": {
                            "type": "string",
                            "description": "A URI path that identifies the specific occurrence of the problem.\n"
                          },
                          "status": {
                            "type": "integer",
                            "description": "HTTP response status code.\n"
                          }
                        }
                      }
                    },
                    "instance": {
                      "type": "string",
                      "description": "A URI path that identifies the specific occurrence of the problem.\n"
                    },
                    "status": {
                      "type": "integer",
                      "description": "HTTP response status code.\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
